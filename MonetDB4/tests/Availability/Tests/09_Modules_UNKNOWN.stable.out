stdout of test '09_Modules_UNKNOWN` in directory 'tests/Availability` itself:


# 15:30:12 >  
# 15:30:12 >  Mtimeout -timeout 60 Mserver "--config=/ufs/boncz/MonetDB/linux/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log" --set mapi_port=55437 --set sql_port=50559 --set monet_prompt= --trace --dbname=mTests_tests_Availability  < 09_Modules_UNKNOWN.milS
# 15:30:12 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(20000000));

var MODULES:=bat("MODULES");
var Static_fcn:=monet_fcntbl.reverse().copy();

var Fname:=new(oid,str);Fname.col_name("function");
var FnameS:=new(oid,str);FnameS.col_name("function");
var Ftype:=new(oid,str);Ftype.col_name("type");
var Fsig:=new(oid,str);Fsig.col_name("signature");
var Fhelp:=new(oid,str);Fhelp.col_name("help");
var Fnts:=new(oid,str);

var Unknown_mods:=MODULES.select("UNKNOWN").sort().copy();
table(Unknown_mods.reverse().col_name(sprintf("%i modules",Unknown_mods.count())));
#-----------------#
# 0 modules	  #
#-----------------#
[ "backup"	  ]
[ "geom"	  ]
[ "pathfinder"	  ]
[ "pf_standoff"	  ]
[ "pf_support"	  ]
[ "pftijah"	  ]
[ "probxml"	  ]
[ "restore"	  ]
[ "xrpc_client"	  ]
[ "xrpc_server"	  ]
Unknown_mods@batloop() {
	var The_mod:=$h;
	printf("\nModule: \"%s\"\n\n",The_mod);
	module($h);

	var Mod_fcn:=sdiff(monet_fcntbl.reverse(),Static_fcn).reverse();
	Mod_fcn.sort()@batloop() {
	    var addThis:=false;
	    if (not(monet_fcn_mid.exist($t))) {
		addThis:=true;
	    } else {
		var m:=monet_mod_nme.find(monet_fcn_mid.find($t));
		if (m.startsWith("_")) {
		    m:=string(m,1);
		}
		if (m = The_mod) {
		    addThis:=true;
		}
	    }
	    if (addThis) {
		var Tname:=$h;
		var Ttype:=help_tpe(monet_fcn_tpe.find($t));
		var Tsig:=format_fcn_sig($t);
		var Thelp:="";
		if (monet_fcn_dsc.exist($t)) {
			Thelp:=monet_fcn_dsc.find($t);
		} else {
			Thelp:="not available";
		}
		Fname.insert($t,Tname);
		Ftype.insert($t,Ttype);
		Fsig.insert($t,Tsig);
		Fhelp.insert($t,Thelp);
		Fnts.insert($t,sprintf("%s %s %s",Tname,Ttype,Tsig));
	    }
	}

	drop($h);
	Static_fcn:=sunion(Static_fcn,monet_fcntbl.reverse());

	Fnts.count().print();
	Fnts.reverse().sort().reverse()@batloop() {
		FnameS.insert($h,Fname.find($h));
	}
	FnameS.count().print(); table(1,FnameS,Ftype,Fsig,Fhelp);

	Fname.delete();
	FnameS.delete();
	Ftype.delete();
	Fsig.delete();
	Fhelp.delete();
	Fnts.delete();
}

Module: "backup"

[ 27 ]
[ 27 ]
#-----------------------------------------------------------------------------------------------------------------------------------------#
# function			type		signature								help			  # name
# str			str		str									str			  # type
#-----------------------------------------------------------------------------------------------------------------------------------------#
[ "CTderive",		  "PROC:      ",  "CTderive(BAT[oid,any], BAT[oid,any]) : grp",				  "not available"	  ]
[ "CTgroup",		  "PROC:      ",  "CTgroup(BAT[oid,any], BAT[oid,any]) : grp",				  "not available"	  ]
[ "CTorderby",		  "PROC:      ",  "CTorderby(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",		  "not available"	  ]
[ "CTorderby_rev",	  "PROC:      ",  "CTorderby_rev(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",		  "not available"	  ]
[ "CTsubgroup",		  "PROC:      ",  "CTsubgroup(BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",  "not available"	  ]
[ "backup",		  "PROC:      ",  "backup(str) : void",							  "not available"	  ]
[ "bat_ttype",		  "PROC:      ",  "bat_ttype(BAT[any,any]) : str",					  "not available"	  ]
[ "dump_data",		  "PROC:      ",  "dump_data(BAT[str,BAT], BAT[str,BAT], str, int) : void",		  "not available"	  ]
[ "dump_data",		  "PROC:      ",  "dump_data(BAT[str,BAT], str, int) : void",				  "not available"	  ]
[ "dump_format",	  "PROC:      ",  "dump_format(BAT[void,BAT], str) : BAT[str,BAT]",			  "not available"	  ]
[ "dump_seps",		  "PROC:      ",  "dump_seps(BAT[void,BAT]) : BAT[void,str]",				  "not available"	  ]
[ "export",		  "PROC:      ",  "export(BAT[any,any], str) : void",					  "not available"	  ]
[ "extend",		  "PROC:      ",  "extend(grp) : BAT[any,int]",						  "not available"	  ]
[ "fclose",		  "PROC:      ",  "fclose(Stream) : void",						  "not available"	  ]
[ "fflush",		  "PROC:      ",  "fflush(Stream) : void",						  "not available"	  ]
[ "fopen",		  "PROC:      ",  "fopen(str, str) : Stream",						  "not available"	  ]
[ "fputs",		  "PROC:      ",  "fputs(str, Stream) : void",						  "not available"	  ]
[ "grp_dump",		  "PROC:      ",  "grp_dump(BAT[any,any]) : str",					  "not available"	  ]
[ "histogram",		  "PROC:      ",  "histogram(grp) : BAT[any,int]",					  "not available"	  ]
[ "import",		  "PROC:      ",  "import(BAT[any,any], str) : BAT[any,any]",				  "not available"	  ]
[ "map",		  "PROC:      ",  "map(grp) : BAT[oid,oid]",						  "not available"	  ]
[ "orderby_table",	  "PROC:      ",  "orderby_table(str, str, ..BAT[any::1,any]..) : void",		  "not available"	  ]
[ "print",		  "PROC:      ",  "print(str, BAT[any::1,any], ..BAT[any::1,any]..) : void",		  "not available"	  ]
[ "seqinfo",		  "PROC:      ",  "seqinfo(BAT[any,any]) : str",					  "not available"	  ]
[ "table",		  "PROC:      ",  "table(str, BAT[any::1,any], ..BAT[any::1,any]..) : void",		  "not available"	  ]
[ "{count}",		  "PROC:      ",  "{count}(BAT[oid,bit], BAT[oid,oid], BAT[oid,int]) : BAT[oid,int]",	  "not available"	  ]
[ "{count}",		  "PROC:      ",  "{count}(BAT[void,bit], BAT[void,oid], BAT[oid,int]) : BAT[oid,int]",	  "not available"	  ]

Module: "geom"

# MonetDB/GIS module v11.1.0 loaded
[ 66 ]
[ 66 ]
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# function				type		signature					help																																				  # name
# str				str		str						str																																				  # type
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "Area",			  "COMMAND:   ",  "Area(wkb) : dbl",				  "Returns the area of the geometry."																																  ]
[ "AsText",			  "PROC:      ",  "AsText(wkb) : str",				  "As specified by OGC's SFA standard:\nReturns the 'well known text' representation of the given geometry."																							  ]
[ "Boundary",			  "COMMAND:   ",  "Boundary(wkb) : wkb",			  "Returns the closure of the combinatorial boundary of this Geometry."																												  ]
[ "Buffer",			  "COMMAND:   ",  "Buffer(wkb, dbl) : wkb",			  "Returns a geometry that represents all points whose distance from this geometry is less than\n\tor equal to distance. Calculations are in the Spatial Reference System of this Geometry."													  ]
[ "Contains",			  "COMMAND:   ",  "Contains(wkb, wkb) : bit",			  "Returns true if the Geometry a 'spatially contains' Geometry b"																												  ]
[ "ConvexHull",			  "COMMAND:   ",  "ConvexHull(wkb) : wkb",			  "Returns a geometry that represents the convex hull of this geometry."																											  ]
[ "Crosses",			  "COMMAND:   ",  "Crosses(wkb, wkb) : bit",			  "Returns true if the Geometry a 'spatially crosses' Geometry b"																												  ]
[ "CurveFromText",		  "PROC:      ",  "CurveFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Curve from its 'well known text' representation."																								  ]
[ "Difference",			  "COMMAND:   ",  "Difference(wkb, wkb) : wkb",			  "Returns a geometry that represents the point set difference of Geometry a with b."																										  ]
[ "Dimension",			  "COMMAND:   ",  "Dimension(wkb) : int",			  "The inherent dimension of this geometry object, which must be less than or equal\n    to the coordinate dimension. \n    This specification is restricted to geometries in two-dimensional coordinate space."										  ]
[ "Disjoint",			  "COMMAND:   ",  "Disjoint(wkb, wkb) : bit",			  "Returns true if these Geometries are 'spatially disjoint'"																													  ]
[ "Distance",			  "COMMAND:   ",  "Distance(wkb, wkb) : dbl",			  "Returns the shortest distance between any two points in the two geometries\n         as calculated in the spatial reference system of this Geometries."																	  ]
[ "Envelope",			  "COMMAND:   ",  "Envelope(wkb) : wkb",			  "The minimum bounding box for this Geometry, returned as a Geometry. The\n    polygon is defined by the corner points of the bounding box \n    ((MINX,MINY),(MAXX,MINY),(MAXX,MAXY),(MINX,MAXY))."												  ]
[ "Equals",			  "COMMAND:   ",  "Equals(wkb, wkb) : bit",			  "Returns true if these Geometries are 'spatially equal'"																													  ]
[ "GeomCollectionFromText",	  "PROC:      ",  "GeomCollectionFromText(str, sht) : wkb",	  "As specified by OGC's SFA standard:\nCreates a GeomCollection from its 'well known text' representation."																							  ]
[ "GeomFromText",		  "PROC:      ",  "GeomFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Geom from its 'well known text' representation."																								  ]
[ "GeometryTypeId",		  "COMMAND:   ",  "GeometryTypeId(wkb) : int",			  "Returns the name of the instantiable subtype of Geometry of which this \n    Geometry instance is a member. The name of the instantiable subtype of Geometry is returned as string."														  ]
[ "Intersect",			  "COMMAND:   ",  "Intersect(wkb, wkb) : bit",			  "Returns true if these Geometries 'spatially intersect'"																													  ]
[ "Intersection",		  "COMMAND:   ",  "Intersection(wkb, wkb) : wkb",		  "Returns a geometry that represents the point set intersection of Geometry a with b."																										  ]
[ "IsEmpty",			  "COMMAND:   ",  "IsEmpty(wkb) : bit",				  "Returns true if this Geometry is the empty geometry. If true, then this \n    Geometry represents the empty point set, for the coordinate space."																		  ]
[ "IsSimple",			  "COMMAND:   ",  "IsSimple(wkb) : bit",			  "Returns true if this Geometry has no anomalous geometric points, such as self\n    intersection or self tangency. The description of each instantiable geometric class will include the specific\n    conditions that cause an instance of that class to be classified as not simple."	  ]
[ "Length",			  "COMMAND:   ",  "Length(wkb) : dbl",				  "Returns the length of the geometry."																																  ]
[ "LineFromText",		  "PROC:      ",  "LineFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Line from its 'well known text' representation."																								  ]
[ "MultiCurveFromText",		  "PROC:      ",  "MultiCurveFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a MultiCurve from its 'well known text' representation."																							  ]
[ "MultiLineFromText",		  "PROC:      ",  "MultiLineFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a MultiLine from its 'well known text' representation."																								  ]
[ "MultiPointFromText",		  "PROC:      ",  "MultiPointFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a MultiPoint from its 'well known text' representation."																							  ]
[ "MultiPolyFromText",		  "PROC:      ",  "MultiPolyFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a MultiPoly from its 'well known text' representation."																								  ]
[ "MultiSurfaceFromText",	  "PROC:      ",  "MultiSurfaceFromText(str, sht) : wkb",	  "As specified by OGC's SFA standard:\nCreates a MultiSurface from its 'well known text' representation."																							  ]
[ "Overlaps",			  "COMMAND:   ",  "Overlaps(wkb, wkb) : bit",			  "Returns true if the Geometry a 'spatially overlaps' Geometry b"																												  ]
[ "PointFromText",		  "PROC:      ",  "PointFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Point from its 'well known text' representation."																								  ]
[ "PolyFromText",		  "PROC:      ",  "PolyFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Poly from its 'well known text' representation."																								  ]
[ "Relate",			  "COMMAND:   ",  "Relate(wkb, wkb, str) : bit",		  "Returns true if the Geometry a 'spatially related' to Geometry b, by testing for intersection between the\n         Interior, Boundary and Exterior of the two geometries as specified by the values in the intersectionPatternMatrix."							  ]
[ "SRID",			  "COMMAND:   ",  "SRID(wkb) : int",				  "Returns the Spatial Reference System ID for this Geometry."																													  ]
[ "SurfaceFromText",		  "PROC:      ",  "SurfaceFromText(str, sht) : wkb",		  "As specified by OGC's SFA standard:\nCreates a Surface from its 'well known text' representation."																								  ]
[ "SymDifference",		  "COMMAND:   ",  "SymDifference(wkb, wkb) : wkb",		  "Returns a geometry that represents the point set semmetric difference of Geometry a with b."																									  ]
[ "Touches",			  "COMMAND:   ",  "Touches(wkb, wkb) : bit",			  "Returns true if these Geometries 'spatially touch' each other"																												  ]
[ "Union",			  "COMMAND:   ",  "Union(wkb, wkb) : wkb",			  "Returns a geometry that represents the point set union of Geometry a with b."																										  ]
[ "Within",			  "COMMAND:   ",  "Within(wkb, wkb) : bit",			  "Returns true if the Geometry a 'spatially within' Geometry b"																												  ]
[ "curve",			  "PROC:      ",  "curve(str) : wkb",				  "not available"																																		  ]
[ "curve",			  "PROC:      ",  "curve(wkb) : wkb",				  "not available"																																		  ]
[ "geo_wkb_from_text",		  "COMMAND:   ",  "geo_wkb_from_text(str) : wkb",		  "Pathfinder:geoxml:JF:creates the a wkb of type, tpe, from the given wkt."																											  ]
[ "geomcollection",		  "PROC:      ",  "geomcollection(str) : wkb",			  "not available"																																		  ]
[ "geomcollection",		  "PROC:      ",  "geomcollection(wkb) : wkb",			  "not available"																																		  ]
[ "geometry",			  "PROC:      ",  "geometry(str) : wkb",			  "not available"																																		  ]
[ "geometry",			  "PROC:      ",  "geometry(wkb) : wkb",			  "not available"																																		  ]
[ "linestring",			  "PROC:      ",  "linestring(str) : wkb",			  "not available"																																		  ]
[ "linestring",			  "PROC:      ",  "linestring(wkb) : wkb",			  "not available"																																		  ]
[ "mbr",			  "COMMAND:   ",  "mbr(flt, flt, flt, flt) : mbr",		  "Creates the mbr for the given (xmin,ymin) and (xmax,ymax)."																													  ]
[ "mbr",			  "COMMAND:   ",  "mbr(wkb) : mbr",				  "Creates the mbr for the given wkb."																																  ]
[ "multicurve",			  "PROC:      ",  "multicurve(str) : wkb",			  "not available"																																		  ]
[ "multicurve",			  "PROC:      ",  "multicurve(wkb) : wkb",			  "not available"																																		  ]
[ "multilinestring",		  "PROC:      ",  "multilinestring(str) : wkb",			  "not available"																																		  ]
[ "multilinestring",		  "PROC:      ",  "multilinestring(wkb) : wkb",			  "not available"																																		  ]
[ "multipoint",			  "PROC:      ",  "multipoint(str) : wkb",			  "not available"																																		  ]
[ "multipoint",			  "PROC:      ",  "multipoint(wkb) : wkb",			  "not available"																																		  ]
[ "multipolygon",		  "PROC:      ",  "multipolygon(str) : wkb",			  "not available"																																		  ]
[ "multipolygon",		  "PROC:      ",  "multipolygon(wkb) : wkb",			  "not available"																																		  ]
[ "multisurface",		  "PROC:      ",  "multisurface(str) : wkb",			  "not available"																																		  ]
[ "multisurface",		  "PROC:      ",  "multisurface(wkb) : wkb",			  "not available"																																		  ]
[ "point",			  "PROC:      ",  "point(str) : wkb",				  "not available"																																		  ]
[ "point",			  "PROC:      ",  "point(wkb) : wkb",				  "not available"																																		  ]
[ "polygon",			  "PROC:      ",  "polygon(str) : wkb",				  "not available"																																		  ]
[ "polygon",			  "PROC:      ",  "polygon(wkb) : wkb",				  "not available"																																		  ]
[ "surface",			  "PROC:      ",  "surface(str) : wkb",				  "not available"																																		  ]
[ "surface",			  "PROC:      ",  "surface(wkb) : wkb",				  "not available"																																		  ]
[ "wkb_from_text",		  "COMMAND:   ",  "wkb_from_text(str, int) : wkb",		  "Try to creates the a wkb of type, tpe, from the given wkt."																													  ]

Module: "pathfinder"

# PF/Tijah module v0.13.0 loaded. http://dbappl.cs.utwente.nl/pftijah
# MonetDB/XQuery module v11.1.0 loaded (default back-end is 'algebra')
# XRPC administrative console at http://127.0.0.1:41391/admin
[ 710 ]
[ 710 ]

# function							type		signature																													help																																																																																																																																																		  # name
# str							str		str																														str																																																																																																																																																		  # type

[ "ALG_tj_add_fti_tape",				  "PROC:      ",  "ALG_tj_add_fti_tape(str, BAT[oid,BAT], BAT[oid,BAT], BAT[void,any], BAT[oid,BAT], BAT[str,BAT]) : BAT[str,BAT]",																  "not available"																																																																																																																																																  ]
[ "ALG_tj_docmgmt_tape",				  "PROC:      ",  "ALG_tj_docmgmt_tape(BAT[str,BAT], BAT[void,BAT], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng]) : bit",																  "not available"																																																																																																																																																  ]
[ "ALG_tj_docmgmt_tape2",				  "PROC:      ",  "ALG_tj_docmgmt_tape2(BAT[str,BAT], BAT[void,BAT], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng]) : bit",															  "not available"																																																																																																																																																  ]
[ "ALG_tj_fbterms",					  "PROC:      ",  "ALG_tj_fbterms(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "ALG_tj_ft_index_info",				  "PROC:      ",  "ALG_tj_ft_index_info(BAT[oid,BAT], BAT[void,any], BAT[oid,BAT]) : BAT[void,BAT]",																				  "not available"																																																																																																																																																  ]
[ "ALG_tj_ftfun_handler",				  "PROC:      ",  "ALG_tj_ftfun_handler(bit, BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[void,any], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",												  "not available"																																																																																																																																																  ]
[ "ALG_tj_pfop",					  "PROC:      ",  "ALG_tj_pfop(BAT[oid,oid], BAT[oid,any], BAT[oid,any], BAT[oid,oid]) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "ALG_tj_pfop",					  "PROC:      ",  "ALG_tj_pfop(BAT[oid,oid], BAT[oid,any], BAT[oid,any], BAT[oid,oid], BAT[oid,dbl]) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "ALG_tj_pfop",					  "PROC:      ",  "ALG_tj_pfop(BAT[oid,oid], BAT[oid,any], int, BAT[oid,oid]) : BAT[void,BAT]",																					  "not available"																																																																																																																																																  ]
[ "ALG_tj_query_handler",				  "PROC:      ",  "ALG_tj_query_handler(bit, BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[void,any], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "ALG_tj_query_handler2",				  "PROC:      ",  "ALG_tj_query_handler2(bit, BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[void,any], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "ALG_tj_query_nodes",					  "PROC:      ",  "ALG_tj_query_nodes(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																				  "not available"																																																																																																																																																  ]
[ "ALG_tj_query_score",					  "PROC:      ",  "ALG_tj_query_score(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "ALG_tj_terms",					  "PROC:      ",  "ALG_tj_terms(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "ALG_tj_tf",						  "PROC:      ",  "ALG_tj_tf(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "ALG_tj_tfall",					  "PROC:      ",  "ALG_tj_tfall(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT]) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "CTderive",						  "PROC:      ",  "CTderive(BAT[oid,any], BAT[oid,any]) : grp",																									  "not available"																																																																																																																																																  ]
[ "CTgroup",						  "PROC:      ",  "CTgroup(BAT[oid,any], BAT[oid,any]) : grp",																									  "not available"																																																																																																																																																  ]
[ "CTorderby",						  "PROC:      ",  "CTorderby(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "CTorderby_rev",					  "PROC:      ",  "CTorderby_rev(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "CTsubgroup",						  "PROC:      ",  "CTsubgroup(BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",																					  "not available"																																																																																																																																																  ]
[ "DocmgmTape",						  "PROC:      ",  "DocmgmTape(BAT[void,BAT], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng]) : void",																		  "not available"																																																																																																																																																  ]
[ "TIMEZONE",						  "PROC:      ",  "TIMEZONE(str) : tzone",																											  "not available"																																																																																																																																																  ]
[ "UpdateTape",						  "PROC:      ",  "UpdateTape(BAT[void,BAT], BAT[void,lng], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void",	  "not available"																																																																																																																																																  ]
[ "[:rotate_xor_hash=]",				  "PROC:      ",  "[:rotate_xor_hash=](BAT[any::1,int], int, BAT[any::1,any]) : BAT[any::1,int]",																				  "not available"																																																																																																																																																  ]
[ "[date]",						  "PROC:      ",  "[date](BAT[any::1,timestamp]) : BAT[any::1,date]",																								  "not available"																																																																																																																																																  ]
[ "[daytime]",						  "PROC:      ",  "[daytime](BAT[any::1,int]) : BAT[any::1,daytime]",																								  "not available"																																																																																																																																																  ]
[ "[daytime]",						  "PROC:      ",  "[daytime](BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,daytime]",																						  "not available"																																																																																																																																																  ]
[ "[daytime]",						  "PROC:      ",  "[daytime](BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,daytime]",																				  "not available"																																																																																																																																																  ]
[ "[daytime]",						  "PROC:      ",  "[daytime](BAT[any::1,timestamp]) : BAT[any::1,daytime]",																							  "not available"																																																																																																																																																  ]
[ "[epoch]",						  "PROC:      ",  "[epoch](BAT[any::1,timestamp]) : BAT[any::1,int]",																								  "not available"																																																																																																																																																  ]
[ "[rule]",						  "PROC:      ",  "[rule](BAT[any::1,int], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]",																  "not available"																																																																																																																																																  ]
[ "[rule]",						  "PROC:      ",  "[rule](BAT[any::1,int], BAT[any::1,str], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]",																		  "not available"																																																																																																																																																  ]
[ "[rule]",						  "PROC:      ",  "[rule](BAT[any::1,int], BAT[any::1,str], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]",																  "not available"																																																																																																																																																  ]
[ "[timestamp]",					  "PROC:      ",  "[timestamp](BAT[any::1,date], BAT[any::1,daytime]) : BAT[any::1,timestamp]",																					  "not available"																																																																																																																																																  ]
[ "[timestamp]",					  "PROC:      ",  "[timestamp](BAT[any::1,int]) : BAT[any::1,timestamp]",																							  "not available"																																																																																																																																																  ]
[ "__regionindex_get",					  "PROC:      ",  "__regionindex_get(BAT[void,BAT], oid) : void",																								  "not available"																																																																																																																																																  ]
[ "__regionindex_set",					  "PROC:      ",  "__regionindex_set(BAT[void,BAT], oid) : void",																								  "not available"																																																																																																																																																  ]
[ "__runtime_addchunk",					  "PROC:      ",  "__runtime_addchunk(lng, str, oid, BAT[lock,BAT], BAT[void,int], BAT[void,oid], BAT[void,chr], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,str], BAT[void,str], BAT[void,oid], oid, oid, bit) : str",	  "not available"																																																																																																																																																  ]
[ "__runtime_index",					  "PROC:      ",  "__runtime_index(oid, BAT[void,int], BAT[void,oid], BAT[void,chr], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,str], BAT[void,str], BAT[void,oid], oid, oid, bit) : BAT[void,BAT]",	  "not available"																																																																																																																																																  ]
[ "__runtime_maintain",					  "PROC:      ",  "__runtime_maintain(lng, str, BAT[lock,BAT], BAT[int,oid], BAT[int,oid], BAT[oid,oid], BAT[oid,oid], BAT[void,oid], BAT[void,oid]) : void",													  "not available"																																																																																																																																																  ]
[ "__runtime_newnids",					  "PROC:      ",  "__runtime_newnids(BAT[lock,BAT], int) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "__runtime_newpage",					  "PROC:      ",  "__runtime_newpage(BAT[lock,BAT]) : oid",																									  "not available"																																																																																																																																																  ]
[ "__shred_into_docBAT",				  "PROC:      ",  "__shred_into_docBAT(BAT[str,BAT], str, oid, oid, BAT[lock,BAT], oid, oid, bit, lng) : void",																			  "not available"																																																																																																																																																  ]
[ "__ws_indexcoll",					  "PROC:      ",  "__ws_indexcoll(BAT[void,BAT], BAT[lock,BAT], BAT[oid,any], str, oid, oid) : void",																				  "not available"																																																																																																																																																  ]
[ "__ws_isolate",					  "PROC:      ",  "__ws_isolate(BAT[void,BAT], oid, BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void",																	  "not available"																																																																																																																																																  ]
[ "__ws_newnids",					  "PROC:      ",  "__ws_newnids(BAT[void,oid], int) : int",																									  "not available"																																																																																																																																																  ]
[ "__ws_newpage",					  "PROC:      ",  "__ws_newpage(BAT[void,int], BAT[void,chr], BAT[void,oid], BAT[void,chr], BAT[void,oid], BAT[void,oid], int) : int",																  "not available"																																																																																																																																																  ]
[ "__ws_opencoll",					  "PROC:      ",  "__ws_opencoll(BAT[void,BAT], BAT[str,BAT], str, oid, oid) : BAT[oid,oid]",																					  "not available"																																																																																																																																																  ]
[ "__ws_postcommit",					  "PROC:      ",  "__ws_postcommit(BAT[void,BAT], oid, BAT[int,oid], BAT[int,oid], BAT[int,oid], BAT[int,oid], BAT[oid,oid], BAT[oid,oid], BAT[void,oid], BAT[void,oid]) : void",										  "not available"																																																																																																																																																  ]
[ "_buildIRindex",					  "PROC:      ",  "_buildIRindex(str, BAT[str,BAT]) : void",																									  "not available"																																																																																																																																																  ]
[ "_collection_cleanup",				  "PROC:      ",  "_collection_cleanup() : BAT[str,str]",																									  "not available"																																																																																																																																																  ]
[ "_del_doc",						  "PROC:      ",  "_del_doc(bit, BAT[any,str], BAT[oid,str], BAT[oid,str]) : bit",																						  "not available"																																																																																																																																																  ]
[ "_del_doc_replace",					  "PROC:      ",  "_del_doc_replace(BAT[oid,str], BAT[oid,str]) : void",																							  "not available"																																																																																																																																																  ]
[ "_getConceptDocScr_nest_nid",				  "PROC:      ",  "_getConceptDocScr_nest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getConceptDocScr_nest_pre",				  "PROC:      ",  "_getConceptDocScr_nest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getConceptDocScr_unnest_nid",			  "PROC:      ",  "_getConceptDocScr_unnest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getConceptDocScr_unnest_pre",			  "PROC:      ",  "_getConceptDocScr_unnest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getConceptPositions",				  "PROC:      ",  "_getConceptPositions(oid) : BAT[void,oid]",																									  "not available"																																																																																																																																																  ]
[ "_getTagPositions",					  "PROC:      ",  "_getTagPositions(oid, str) : BAT[void,oid]",																									  "not available"																																																																																																																																																  ]
[ "_getTermColCnt",					  "PROC:      ",  "_getTermColCnt(oid, BAT[oid,str]) : int",																									  "not available"																																																																																																																																																  ]
[ "_getTermDocCnt",					  "PROC:      ",  "_getTermDocCnt(oid, BAT[oid,oid], BAT[void,int], BAT[oid,str]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDocCnt_nest_nid",				  "PROC:      ",  "_getTermDocCnt_nest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDocCnt_nest_pre",				  "PROC:      ",  "_getTermDocCnt_nest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDocCnt_unnest_nid",				  "PROC:      ",  "_getTermDocCnt_unnest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getTermDocCnt_unnest_pre",				  "PROC:      ",  "_getTermDocCnt_unnest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																			  "not available"																																																																																																																																																  ]
[ "_getTermDoc_nest_nid",				  "PROC:      ",  "_getTermDoc_nest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDoc_nest_pre",				  "PROC:      ",  "_getTermDoc_nest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDoc_unnest_nid",				  "PROC:      ",  "_getTermDoc_unnest_nid(BAT[oid,oid], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermDoc_unnest_pre",				  "PROC:      ",  "_getTermDoc_unnest_pre(BAT[oid,any], BAT[void,int], BAT[oid,oid]) : BAT[oid,int]",																				  "not available"																																																																																																																																																  ]
[ "_getTermPositions",					  "PROC:      ",  "_getTermPositions(oid) : BAT[void,oid]",																									  "not available"																																																																																																																																																  ]
[ "_getTermPositions",					  "PROC:      ",  "_getTermPositions(oid, BAT[oid,str]) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "_runtime_create",					  "PROC:      ",  "_runtime_create(str, lock, lock) : BAT[lock,BAT]",																								  "not available"																																																																																																																																																  ]
[ "_runtime_flush",					  "PROC:      ",  "_runtime_flush() : void",																											  "not available"																																																																																																																																																  ]
[ "_runtime_get",					  "PROC:      ",  "_runtime_get(str) : BAT[lock,BAT]",																										  "not available"																																																																																																																																																  ]
[ "_score_LM",						  "PROC:      ",  "_score_LM(dbl, wrd, wrd, BAT[oid,int], BAT[void,int]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "_score_LM",						  "PROC:      ",  "_score_LM(int, wrd, wrd, wrd, BAT[oid,int], BAT[void,int], dbl) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "_score_LMs",						  "PROC:      ",  "_score_LMs(dbl, wrd, wrd, BAT[oid,int], BAT[void,int]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "_score_LMs",						  "PROC:      ",  "_score_LMs(int, wrd, wrd, wrd, BAT[oid,int], BAT[void,int], dbl) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "_score_LogSum",					  "PROC:      ",  "_score_LogSum(dbl, BAT[oid,dbl]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "_score_NLLR",					  "PROC:      ",  "_score_NLLR(dbl, dbl, wrd, wrd, BAT[oid,int], BAT[void,int]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "_score_NLLR",					  "PROC:      ",  "_score_NLLR(int, wrd, wrd, wrd, BAT[oid,int], BAT[void,int], dbl) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "_score_OKAPI",					  "PROC:      ",  "_score_OKAPI(dbl, BAT[oid,int], BAT[void,int], wrd, dbl) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "_score_OKAPI",					  "PROC:      ",  "_score_OKAPI(int, BAT[oid,int], BAT[void,int], wrd, dbl, dbl, dbl) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "_selectPhrase",					  "PROC:      ",  "_selectPhrase(BAT[oid,dbl]) : BAT[oid,oid]",																									  "not available"																																																																																																																																																  ]
[ "_shred_doc_base",					  "PROC:      ",  "_shred_doc_base(BAT[oid,str], BAT[void,str], BAT[void,str], lng) : BAT[oid,BAT]",																				  "not available"																																																																																																																																																  ]
[ "_shred_doc_cleanup",					  "PROC:      ",  "_shred_doc_cleanup(lng, bit) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "_shred_into_docBAT",					  "PROC:      ",  "_shred_into_docBAT(BAT[str,BAT], BAT[void,str], BAT[void,str], BAT[void,timestamp], str, oid, lng) : oid",																	  "not available"																																																																																																																																																  ]
[ "_shredlock_set",					  "PROC:      ",  "_shredlock_set(str, lng) : void",																										  "not available"																																																																																																																																																  ]
[ "_shredlock_unset",					  "PROC:      ",  "_shredlock_unset(str, lng) : void",																										  "not available"																																																																																																																																																  ]
[ "_terms2void_tid",					  "PROC:      ",  "_terms2void_tid(BAT[void,str], str) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "_tj_RTagBat",					  "PROC:      ",  "_tj_RTagBat(str) : str",																											  "not available"																																																																																																																																																  ]
[ "_tj_TagBat",						  "PROC:      ",  "_tj_TagBat(str) : str",																											  "not available"																																																																																																																																																  ]
[ "_tj_TermBat",					  "PROC:      ",  "_tj_TermBat(str) : str",																											  "not available"																																																																																																																																																  ]
[ "_tj_add2collection",					  "PROC:      ",  "_tj_add2collection(str, BAT[oid,BAT], BAT[str,BAT], str, str, bit) : void",																					  "not available"																																																																																																																																																  ]
[ "_tj_build_inverted_index_frag",			  "PROC:      ",  "_tj_build_inverted_index_frag(str, BAT[str,BAT], BAT[str,BAT]) : void",																					  "not available"																																																																																																																																																  ]
[ "_tj_chk_modified_fragments",				  "PROC:      ",  "_tj_chk_modified_fragments(str, BAT[str,BAT]) : BAT[void,str]",																						  "not available"																																																																																																																																																  ]
[ "_tj_collection",					  "PROC:      ",  "_tj_collection(str) : BAT[str,BAT]",																										  "not available"																																																																																																																																																  ]
[ "_tj_collection_str",					  "PROC:      ",  "_tj_collection_str(str) : BAT[void,BAT]",																									  "not available"																																																																																																																																																  ]
[ "_tj_commit",						  "PROC:      ",  "_tj_commit(BAT[str,BAT]) : void",																										  "not available"																																																																																																																																																  ]
[ "_tj_commit_frag",					  "PROC:      ",  "_tj_commit_frag(BAT[str,BAT], BAT[str,BAT]) : void",																								  "not available"																																																																																																																																																  ]
[ "_tj_create_commitBats",				  "PROC:      ",  "_tj_create_commitBats() : BAT[str,BAT]",																									  "not available"																																																																																																																																																  ]
[ "_tj_finalize_collection",				  "PROC:      ",  "_tj_finalize_collection(str, BAT[str,BAT], bit) : void",																							  "not available"																																																																																																																																																  ]
[ "_tj_finalize_collection_frag",			  "PROC:      ",  "_tj_finalize_collection_frag(str, BAT[str,BAT], BAT[str,BAT], bit) : void",																					  "not available"																																																																																																																																																  ]
[ "_tj_get_collection_frag",				  "PROC:      ",  "_tj_get_collection_frag(str, BAT[str,BAT]) : void",																								  "not available"																																																																																																																																																  ]
[ "_tj_get_parameter",					  "PROC:      ",  "_tj_get_parameter(BAT[str,BAT], str) : str",																									  "not available"																																																																																																																																																  ]
[ "_tj_get_parameter2",					  "PROC:      ",  "_tj_get_parameter2(BAT[str,BAT], str) : str",																								  "not available"																																																																																																																																																  ]
[ "_tj_init_collection",				  "PROC:      ",  "_tj_init_collection(str, BAT[str,str], BAT[void,str], bit) : void",																						  "not available"																																																																																																																																																  ]
[ "_tj_init_collection_base",				  "PROC:      ",  "_tj_init_collection_base(str, BAT[str,str], BAT[str,BAT]) : void",																						  "not available"																																																																																																																																																  ]
[ "_tj_init_collection_frag",				  "PROC:      ",  "_tj_init_collection_frag(str, int, BAT[str,BAT]) : void",																							  "not available"																																																																																																																																																  ]
[ "_tj_safe_remove",					  "PROC:      ",  "_tj_safe_remove(str) : void",																										  "not available"																																																																																																																																																  ]
[ "_tj_set_forwardindex_access",			  "PROC:      ",  "_tj_set_forwardindex_access(BAT[str,BAT], int) : void",																							  "not available"																																																																																																																																																  ]
[ "_tj_set_parameter",					  "PROC:      ",  "_tj_set_parameter(BAT[str,BAT], str, str) : void",																								  "not available"																																																																																																																																																  ]
[ "_tj_set_parameter2",					  "PROC:      ",  "_tj_set_parameter2(BAT[str,BAT], str, str) : void",																								  "not available"																																																																																																																																																  ]
[ "_ws_coll_isolate",					  "PROC:      ",  "_ws_coll_isolate(lng, BAT[void,BAT], str, BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void",																  "not available"																																																																																																																																																  ]
[ "_ws_free",						  "PROC:      ",  "_ws_free(lng) : BAT[void,any]",																										  "not available"																																																																																																																																																  ]
[ "_ws_new",						  "PROC:      ",  "_ws_new(int, oid, int) : BAT[void,BAT]",																									  "not available"																																																																																																																																																  ]
[ "_ws_open",						  "PROC:      ",  "_ws_open(lng, BAT[void,str], BAT[void,str], BAT[void,timestamp], BAT[void,str], BAT[void,oid], BAT[void,oid]) : void",															  "not available"																																																																																																																																																  ]
[ "_ws_opencoll",					  "PROC:      ",  "_ws_opencoll(lng, oid) : BAT[lock,BAT]",																									  "not available"																																																																																																																																																  ]
[ "_ws_pinnedcoll",					  "PROC:      ",  "_ws_pinnedcoll(lng, str) : BAT[lng,lng]",																									  "not available"																																																																																																																																																  ]
[ "_ws_precommit",					  "PROC:      ",  "_ws_precommit(BAT[void,BAT], oid, BAT[void,oid], BAT[void,oid], bit) : void",																				  "not available"																																																																																																																																																  ]
[ "_ws_xrpc_abort",					  "PROC:      ",  "_ws_xrpc_abort(oid, str) : void",																										  "not available"																																																																																																																																																  ]
[ "_ws_xrpc_end",					  "PROC:      ",  "_ws_xrpc_end(str, str) : void",																										  "not available"																																																																																																																																																  ]
[ "_ws_xrpc_prune",					  "PROC:      ",  "_ws_xrpc_prune() : void",																											  "not available"																																																																																																																																																  ]
[ "_ws_xrpcget",					  "PROC:      ",  "_ws_xrpcget() : int",																											  "not available"																																																																																																																																																  ]
[ "acos",						  "PROC:      ",  "acos(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "addValues",						  "PROC:      ",  "addValues(BAT[void,any::1], BAT[oid,any::1]) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "addValues",						  "PROC:      ",  "addValues(BAT[void,any::1], any::1) : oid",																									  "not available"																																																																																																																																																  ]
[ "add_attr_bulk",					  "PROC:      ",  "add_attr_bulk(BAT[void,BAT], oid, BAT[oid,oid]) : oid",																							  "not available"																																																																																																																																																  ]
[ "add_content",					  "PROC:      ",  "add_content(BAT[void,str], BAT[void,BAT], int) : BAT[void,oid]",																						  "not available"																																																																																																																																																  ]
[ "add_pi_bulk",					  "PROC:      ",  "add_pi_bulk(BAT[void,BAT], oid, BAT[oid,str], BAT[oid,str]) : BAT[oid,oid]",																					  "not available"																																																																																																																																																  ]
[ "add_string_bulk",					  "PROC:      ",  "add_string_bulk(BAT[void,BAT], oid, int, int, BAT[oid,str], bit) : BAT[oid,oid]",																				  "not available"																																																																																																																																																  ]
[ "add_xrpc_trusted",					  "PROC:      ",  "add_xrpc_trusted(BAT[str,void]) : void",																									  "not available"																																																																																																																																																  ]
[ "add_xrpc_trusted",					  "PROC:      ",  "add_xrpc_trusted(BAT[void,str]) : void",																									  "not available"																																																																																																																																																  ]
[ "add_xrpc_trusted",					  "PROC:      ",  "add_xrpc_trusted(str) : void",																										  "not available"																																																																																																																																																  ]
[ "addmonths",						  "PROC:      ",  "addmonths(timestamp, int) : timestamp",																									  "not available"																																																																																																																																																  ]
[ "anc_desc",						  "PROC:      ",  "anc_desc(BAT[oid,any], BAT[oid,any], BAT[oid,str]) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "ancestor",						  "PROC:      ",  "ancestor(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]",																				  "not available"																																																																																																																																																  ]
[ "ancestor_or_self",					  "PROC:      ",  "ancestor_or_self(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "and_exp",						  "PROC:      ",  "and_exp(BAT[any,any], BAT[any,any], int) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "and_max",						  "PROC:      ",  "and_max(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "and_min",						  "PROC:      ",  "and_min(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "and_prob",						  "PROC:      ",  "and_prob(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "and_prod",						  "PROC:      ",  "and_prod(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "and_sum",						  "PROC:      ",  "and_sum(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "antiswizzle",					  "PROC:      ",  "antiswizzle(oid, BAT[oid,oid]) : oid",																									  "not available"																																																																																																																																																  ]
[ "asin",						  "PROC:      ",  "asin(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "atan",						  "PROC:      ",  "atan(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "card",						  "PROC:      ",  "card(BAT[any,any]) : wrd",																											  "not available"																																																																																																																																																  ]
[ "ceil",						  "PROC:      ",  "ceil(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "checkpoint_protect",					  "PROC:      ",  "checkpoint_protect(BAT[void,BAT]) : void",																									  "not available"																																																																																																																																																  ]
[ "checkpoint_unprotect",				  "PROC:      ",  "checkpoint_unprotect(BAT[void,BAT]) : void",																									  "not available"																																																																																																																																																  ]
[ "coll_lock_set",					  "PROC:      ",  "coll_lock_set(BAT[void,BAT], oid, int, str) : void",																								  "not available"																																																																																																																																																  ]
[ "coll_lock_unset",					  "PROC:      ",  "coll_lock_unset(BAT[void,BAT], oid, int, str, lng) : void",																							  "not available"																																																																																																																																																  ]
[ "collect_update_tape",				  "PROC:      ",  "collect_update_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : bit",																	  "not available"																																																																																																																																																  ]
[ "collection_cleanup",					  "PROC:      ",  "collection_cleanup(BAT[str,str]) : void",																									  "not available"																																																																																																																																																  ]
[ "combine_node_info",					  "PROC:      ",  "combine_node_info(any, BAT[void,oid], any, any, BAT[void,oid], any) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "commit",						  "PROC:      ",  "commit() : void",																												  "not available"																																																																																																																																																  ]
[ "contained_by",					  "PROC:      ",  "contained_by(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "contained_by",					  "PROC:      ",  "contained_by(BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																							  "not available"																																																																																																																																																  ]
[ "containing",						  "PROC:      ",  "containing(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "correct_sizes",					  "PROC:      ",  "correct_sizes(oid, BAT[void,oid], BAT[void,int]) : BAT[void,int]",																						  "not available"																																																																																																																																																  ]
[ "cos",						  "PROC:      ",  "cos(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "cosh",						  "PROC:      ",  "cosh(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "cot",						  "PROC:      ",  "cot(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "count_wrd",						  "PROC:      ",  "count_wrd(BAT[any,any]) : wrd",																										  "not available"																																																																																																																																																  ]
[ "create_qenv",					  "PROC:      ",  "create_qenv() : BAT[oid,str]",																										  "not available"																																																																																																																																																  ]
[ "current_date",					  "PROC:      ",  "current_date() : date",																											  "not available"																																																																																																																																																  ]
[ "current_time",					  "PROC:      ",  "current_time() : daytime",																											  "not available"																																																																																																																																																  ]
[ "current_timestamp",					  "PROC:      ",  "current_timestamp() : timestamp",																										  "not available"																																																																																																																																																  ]
[ "date_add_sec_interval",				  "PROC:      ",  "date_add_sec_interval(date, lng) : date",																									  "not available"																																																																																																																																																  ]
[ "date_sub_sec_interval",				  "PROC:      ",  "date_sub_sec_interval(date, lng) : date",																									  "not available"																																																																																																																																																  ]
[ "day",						  "PROC:      ",  "day(lng) : lng",																												  "not available"																																																																																																																																																  ]
[ "day",						  "PROC:      ",  "day(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "daytime",						  "PROC:      ",  "daytime(int) : daytime",																											  "not available"																																																																																																																																																  ]
[ "daytime",						  "PROC:      ",  "daytime(int, int) : daytime",																										  "not available"																																																																																																																																																  ]
[ "daytime",						  "PROC:      ",  "daytime(int, int, int) : daytime",																										  "not available"																																																																																																																																																  ]
[ "del_doc",						  "PROC:      ",  "del_doc(bit, BAT[any,str], bit) : bit",																									  "not available"																																																																																																																																																  ]
[ "del_doc_base",					  "PROC:      ",  "del_doc_base(bit, BAT[any,str], bit) : void",																								  "not available"																																																																																																																																																  ]
[ "delete_all_docs",					  "PROC:      ",  "delete_all_docs(bit) : void",																										  "DESCRIPTION:\ndeletes all persistent document BATs that store xml documents;\nwith parameter TRUE, only the (implicitely) cached documents are deleted,\nwith parameter FALSE, also the (explicitely) shredded documents are deleted."																																																																																																																					  ]
[ "delete_doc",						  "PROC:      ",  "delete_doc(BAT[void,str]) : void",																										  "PARAMETERS:\nstr document name\nDESCRIPTION:\ndelete the persistent BATS that store the document."																																																																																																																																						  ]
[ "delete_doc",						  "PROC:      ",  "delete_doc(str) : void",																											  "not available"																																																																																																																																																  ]
[ "delete_pfc_fti",					  "PROC:      ",  "delete_pfc_fti(str) : void",																											  "not available"																																																																																																																																																  ]
[ "doRPC",						  "PROC:      ",  "doRPC(str, str, str, bit, lng, lng, BAT[void,BAT], BAT[oid,str], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]",					  "not available"																																																																																																																																																  ]
[ "do_commit_updates",					  "PROC:      ",  "do_commit_updates(BAT[void,BAT], oid, bit) : void",																								  "not available"																																																																																																																																																  ]
[ "do_delete_nodes",					  "PROC:      ",  "do_delete_nodes(BAT[void,BAT], oid, oid, int) : void",																							  "not available"																																																																																																																																																  ]
[ "do_log_updates",					  "PROC:      ",  "do_log_updates(BAT[void,BAT], BAT[any,any], BAT[oid,bit]) : void",																						  "not available"																																																																																																																																																  ]
[ "do_update_delete",					  "PROC:      ",  "do_update_delete(BAT[void,BAT], BAT[void,oid], BAT[void,int]) : void",																					  "not available"																																																																																																																																																  ]
[ "do_update_delete_attributes",			  "PROC:      ",  "do_update_delete_attributes(BAT[void,BAT], BAT[void,oid], BAT[void,oid]) : void",																				  "not available"																																																																																																																																																  ]
[ "do_update_delete_elements",				  "PROC:      ",  "do_update_delete_elements(BAT[void,BAT], BAT[void,oid], BAT[void,oid]) : void",																				  "not available"																																																																																																																																																  ]
[ "do_update_end",					  "PROC:      ",  "do_update_end(BAT[void,BAT], BAT[void,oid]) : void",																								  "not available"																																																																																																																																																  ]
[ "do_update_insert",					  "PROC:      ",  "do_update_insert(BAT[void,BAT], BAT[void,lng], BAT[void,oid], BAT[void,int], BAT[void,oid], BAT[void,int]) : void",																  "not available"																																																																																																																																																  ]
[ "do_update_insert_attributes",			  "PROC:      ",  "do_update_insert_attributes(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void",																  "not available"																																																																																																																																																  ]
[ "do_update_insert_elements",				  "PROC:      ",  "do_update_insert_elements(BAT[void,BAT], BAT[void,lng], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void",															  "not available"																																																																																																																																																  ]
[ "do_update_rename",					  "PROC:      ",  "do_update_rename(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,str]) : void",																			  "not available"																																																																																																																																																  ]
[ "do_update_rename_attributes",			  "PROC:      ",  "do_update_rename_attributes(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,str], BAT[void,str], BAT[void,str]) : void",														  "not available"																																																																																																																																																  ]
[ "do_update_rename_elements",				  "PROC:      ",  "do_update_rename_elements(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,str], BAT[void,str], BAT[void,str]) : void",															  "not available"																																																																																																																																																  ]
[ "do_update_replace",					  "PROC:      ",  "do_update_replace(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,str]) : void",																			  "not available"																																																																																																																																																  ]
[ "do_update_replace_attributes",			  "PROC:      ",  "do_update_replace_attributes(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,str]) : void",																		  "not available"																																																																																																																																																  ]
[ "do_update_replace_elements",				  "PROC:      ",  "do_update_replace_elements(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,str]) : void",																		  "not available"																																																																																																																																																  ]
[ "do_update_start",					  "PROC:      ",  "do_update_start(BAT[void,BAT], BAT[void,oid]) : void",																							  "not available"																																																																																																																																																  ]
[ "ds_eq",						  "PROC:      ",  "ds_eq(BAT[void,oid], BAT[any,any], BAT[void,oid], BAT[any,any]) : BAT[void,bit]",																				  "not available"																																																																																																																																																  ]
[ "ds_hash",						  "PROC:      ",  "ds_hash(BAT[BAT,any]) : BAT[oid,int]",																									  "not available"																																																																																																																																																  ]
[ "ds_link",						  "PROC:      ",  "ds_link(BAT[BAT,BAT]) : BAT[oid,oid]",																									  "not available"																																																																																																																																																  ]
[ "ds_link",						  "PROC:      ",  "ds_link(BAT[oid,any::1], BAT[oid,any::1], ..BAT[oid,any]..) : BAT[oid,oid]",																					  "not available"																																																																																																																																																  ]
[ "ds_sort",						  "PROC:      ",  "ds_sort(BAT[any::1,any::2], bit) : BAT[any::1,any::2]",																							  "not available"																																																																																																																																																  ]
[ "epoch",						  "PROC:      ",  "epoch(int) : timestamp",																											  "not available"																																																																																																																																																  ]
[ "epoch",						  "PROC:      ",  "epoch(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "execute_update_tape",				  "PROC:      ",  "execute_update_tape(BAT[void,BAT]) : void",																									  "not available"																																																																																																																																																  ]
[ "exit",						  "PROC:      ",  "exit() : void",																												  "not available"																																																																																																																																																  ]
[ "exp",						  "PROC:      ",  "exp(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "extend",						  "PROC:      ",  "extend(grp) : BAT[any,int]",																											  "not available"																																																																																																																																																  ]
[ "extend_protect",					  "PROC:      ",  "extend_protect(BAT[void,BAT], oid) : void",																									  "not available"																																																																																																																																																  ]
[ "extend_unprotect",					  "PROC:      ",  "extend_unprotect(BAT[void,BAT], oid) : void",																								  "not available"																																																																																																																																																  ]
[ "fclose",						  "PROC:      ",  "fclose(Stream) : void",																											  "not available"																																																																																																																																																  ]
[ "fflush",						  "PROC:      ",  "fflush(Stream) : void",																											  "not available"																																																																																																																																																  ]
[ "find_qn_bulk",					  "PROC:      ",  "find_qn_bulk(BAT[void,BAT], oid, BAT[oid,str], bit) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "findupdate",						  "PROC:      ",  "findupdate(BAT[any::1,any::2], BAT[any::1,any::2], any::1) : any::2",																					  "not available"																																																																																																																																																  ]
[ "fix_consecutive_texts",				  "PROC:      ",  "fix_consecutive_texts(BAT[void,BAT], BAT[oid,oid]) : void",																							  "not available"																																																																																																																																																  ]
[ "floor",						  "PROC:      ",  "floor(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "fn_put",						  "PROC:      ",  "fn_put(BAT[oid,BAT], BAT[void,str], BAT[void,oid], any, BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : void",															  "not available"																																																																																																																																																  ]
[ "following",						  "PROC:      ",  "following(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int, chr) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "following_sibling",					  "PROC:      ",  "following_sibling(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int, chr) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "fopen",						  "PROC:      ",  "fopen(str, str) : Stream",																											  "not available"																																																																																																																																																  ]
[ "fputs",						  "PROC:      ",  "fputs(str, Stream) : void",																											  "not available"																																																																																																																																																  ]
[ "get_attr_own",					  "PROC:      ",  "get_attr_own(BAT[oid,BAT], BAT[oid,oid], any) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "get_attr_own",					  "PROC:      ",  "get_attr_own(BAT[oid,BAT], oid, any) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "get_container",					  "PROC:      ",  "get_container(BAT[oid,int]) : BAT[oid,oid]",																									  "not available"																																																																																																																																																  ]
[ "get_container",					  "PROC:      ",  "get_container(BAT[void,int]) : BAT[void,oid]",																								  "not available"																																																																																																																																																  ]
[ "get_container",					  "PROC:      ",  "get_container(int) : oid",																											  "not available"																																																																																																																																																  ]
[ "get_mapi_open",					  "PROC:      ",  "get_mapi_open() : bit",																											  "not available"																																																																																																																																																  ]
[ "get_mapi_port",					  "PROC:      ",  "get_mapi_port() : int",																											  "not available"																																																																																																																																																  ]
[ "get_root",						  "PROC:      ",  "get_root(BAT[oid,BAT], BAT[void,oid], BAT[void,int], BAT[void,oid]) : BAT[void,oid]",																			  "not available"																																																																																																																																																  ]
[ "get_root",						  "PROC:      ",  "get_root(BAT[oid,BAT], BAT[void,oid], int, oid) : BAT[void,oid]",																						  "not available"																																																																																																																																																  ]
[ "get_root",						  "PROC:      ",  "get_root(BAT[oid,BAT], oid, int, oid) : oid",																								  "not available"																																																																																																																																																  ]
[ "get_type",						  "PROC:      ",  "get_type(BAT[void,int], int) : BAT[oid,void]",																								  "not available"																																																																																																																																																  ]
[ "get_type_atomic",					  "PROC:      ",  "get_type_atomic(BAT[void,int]) : BAT[oid,void]",																								  "not available"																																																																																																																																																  ]
[ "get_type_node",					  "PROC:      ",  "get_type_node(BAT[void,int]) : BAT[oid,void]",																								  "not available"																																																																																																																																																  ]
[ "get_types",						  "PROC:      ",  "get_types(BAT[void,int]) : BAT[void,int]",																									  "not available"																																																																																																																																																  ]
[ "histogram",						  "PROC:      ",  "histogram(grp) : BAT[any,int]",																										  "not available"																																																																																																																																																  ]
[ "hours",						  "PROC:      ",  "hours(lng) : int",																												  "not available"																																																																																																																																																  ]
[ "hours",						  "PROC:      ",  "hours(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "htordered_sunique",					  "PROC:      ",  "htordered_sunique(BAT[oid,any::1]) : BAT[oid,any::1]",																							  "not available"																																																																																																																																																  ]
[ "htordered_unique_thetajoin",				  "PROC:      ",  "htordered_unique_thetajoin(int, BAT[oid,any::1], BAT[oid,any::1], any, any) : BAT[any,any]",																			  "not available"																																																																																																																																																  ]
[ "impl_attr_own",					  "PROC:      ",  "impl_attr_own(BAT[oid,BAT], any, any) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "is_type",						  "PROC:      ",  "is_type(int, int) : bit",																											  "not available"																																																																																																																																																  ]
[ "join_test",						  "PROC:      ",  "join_test(int, BAT[void,any::1], BAT[void,any::2]) : BAT[void,bit]",																						  "not available"																																																																																																																																																  ]
[ "ksymmdiff",						  "PROC:      ",  "ksymmdiff(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "leftthetajoin",					  "PROC:      ",  "leftthetajoin(BAT[any::1,any::2], BAT[any::2,any::3], int) : BAT[any::1,any::3]",																				  "not available"																																																																																																																																																  ]
[ "ll_htordered_unique_thetajoin",			  "PROC:      ",  "ll_htordered_unique_thetajoin(int, BAT[oid,any::2], BAT[oid,any::2], BAT[void,oid], BAT[void,oid], any, any) : BAT[any,any]",														  "not available"																																																																																																																																																  ]
[ "ll_standoff_select_narrow",				  "PROC:      ",  "ll_standoff_select_narrow(BAT[void,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",														  "not available"																																																																																																																																																  ]
[ "ll_standoff_select_wide",				  "PROC:      ",  "ll_standoff_select_wide(BAT[void,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",														  "not available"																																																																																																																																																  ]
[ "local_timezone",					  "PROC:      ",  "local_timezone() : lng",																											  "not available"																																																																																																																																																  ]
[ "log",						  "PROC:      ",  "log(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "log10",						  "PROC:      ",  "log10(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "log2",						  "PROC:      ",  "log2(any) : int",																												  "not available"																																																																																																																																																  ]
[ "logger_start",					  "PROC:      ",  "logger_start() : void",																											  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step",			  "PROC:      ",  "loop_lifted_ancestor_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step",			  "PROC:      ",  "loop_lifted_ancestor_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_kind_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_kind_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_loc_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_loc_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_ns_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_ns_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",												  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_target_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_or_self_step_with_target_test",	  "PROC:      ",  "loop_lifted_ancestor_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step",				  "PROC:      ",  "loop_lifted_ancestor_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step",				  "PROC:      ",  "loop_lifted_ancestor_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_kind_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_kind_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_loc_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_loc_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_ns_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_ns_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_target_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_ancestor_step_with_target_test",		  "PROC:      ",  "loop_lifted_ancestor_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step",				  "PROC:      ",  "loop_lifted_child_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step",				  "PROC:      ",  "loop_lifted_child_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_kind_test",		  "PROC:      ",  "loop_lifted_child_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_kind_test",		  "PROC:      ",  "loop_lifted_child_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_loc_test",		  "PROC:      ",  "loop_lifted_child_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_loc_test",		  "PROC:      ",  "loop_lifted_child_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_ns_test",		  "PROC:      ",  "loop_lifted_child_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_ns_test",		  "PROC:      ",  "loop_lifted_child_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_child_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_child_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_target_test",		  "PROC:      ",  "loop_lifted_child_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_child_step_with_target_test",		  "PROC:      ",  "loop_lifted_child_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step",		  "PROC:      ",  "loop_lifted_descendant_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step",		  "PROC:      ",  "loop_lifted_descendant_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_kind_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_kind_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_loc_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_loc_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_ns_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_ns_test",	  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_nsloc_test",  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",												  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_nsloc_test",  "PROC:      ",  "loop_lifted_descendant_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_target_test", "PROC:      ",  "loop_lifted_descendant_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_or_self_step_with_target_test", "PROC:      ",  "loop_lifted_descendant_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step",			  "PROC:      ",  "loop_lifted_descendant_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step",			  "PROC:      ",  "loop_lifted_descendant_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_kind_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_kind_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_loc_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_loc_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_ns_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_ns_test",		  "PROC:      ",  "loop_lifted_descendant_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_descendant_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_descendant_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_target_test",	  "PROC:      ",  "loop_lifted_descendant_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_descendant_step_with_target_test",	  "PROC:      ",  "loop_lifted_descendant_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step",			  "PROC:      ",  "loop_lifted_following_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step",			  "PROC:      ",  "loop_lifted_following_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_kind_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_kind_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_loc_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_loc_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_ns_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_ns_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",												  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_following_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_target_test",  "PROC:      ",  "loop_lifted_following_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_sibling_step_with_target_test",  "PROC:      ",  "loop_lifted_following_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step",				  "PROC:      ",  "loop_lifted_following_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step",				  "PROC:      ",  "loop_lifted_following_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_kind_test",		  "PROC:      ",  "loop_lifted_following_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_kind_test",		  "PROC:      ",  "loop_lifted_following_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_loc_test",		  "PROC:      ",  "loop_lifted_following_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_loc_test",		  "PROC:      ",  "loop_lifted_following_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_ns_test",		  "PROC:      ",  "loop_lifted_following_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_ns_test",		  "PROC:      ",  "loop_lifted_following_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_following_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_following_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_target_test",	  "PROC:      ",  "loop_lifted_following_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_following_step_with_target_test",	  "PROC:      ",  "loop_lifted_following_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step",				  "PROC:      ",  "loop_lifted_parent_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step",				  "PROC:      ",  "loop_lifted_parent_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_kind_test",		  "PROC:      ",  "loop_lifted_parent_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_kind_test",		  "PROC:      ",  "loop_lifted_parent_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_loc_test",		  "PROC:      ",  "loop_lifted_parent_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_loc_test",		  "PROC:      ",  "loop_lifted_parent_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_ns_test",		  "PROC:      ",  "loop_lifted_parent_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_ns_test",		  "PROC:      ",  "loop_lifted_parent_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_parent_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_parent_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_target_test",		  "PROC:      ",  "loop_lifted_parent_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_parent_step_with_target_test",		  "PROC:      ",  "loop_lifted_parent_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step",			  "PROC:      ",  "loop_lifted_preceding_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step",			  "PROC:      ",  "loop_lifted_preceding_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_kind_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_kind_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_loc_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_loc_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_ns_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_ns_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",												  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_target_test",  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_sibling_step_with_target_test",  "PROC:      ",  "loop_lifted_preceding_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step",				  "PROC:      ",  "loop_lifted_preceding_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step",				  "PROC:      ",  "loop_lifted_preceding_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_kind_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_kind_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_loc_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_loc_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_ns_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_ns_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_nsloc_test",		  "PROC:      ",  "loop_lifted_preceding_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_target_test",	  "PROC:      ",  "loop_lifted_preceding_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_preceding_step_with_target_test",	  "PROC:      ",  "loop_lifted_preceding_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step",			  "PROC:      ",  "loop_lifted_select_narrow_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step",			  "PROC:      ",  "loop_lifted_select_narrow_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_kind_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_kind_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_loc_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_loc_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_ns_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_ns_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_target_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_narrow_step_with_target_test",	  "PROC:      ",  "loop_lifted_select_narrow_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step",			  "PROC:      ",  "loop_lifted_select_wide_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]",																	  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step",			  "PROC:      ",  "loop_lifted_select_wide_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]",																  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_kind_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_kind_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_loc_test",		  "PROC:      ",  "loop_lifted_select_wide_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_loc_test",		  "PROC:      ",  "loop_lifted_select_wide_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_ns_test",		  "PROC:      ",  "loop_lifted_select_wide_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_ns_test",		  "PROC:      ",  "loop_lifted_select_wide_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_nsloc_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_target_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]",													  "not available"																																																																																																																																																  ]
[ "loop_lifted_select_wide_step_with_target_test",	  "PROC:      ",  "loop_lifted_select_wide_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]",														  "not available"																																																																																																																																																  ]
[ "map",						  "PROC:      ",  "map(grp) : BAT[oid,oid]",																											  "not available"																																																																																																																																																  ]
[ "mapi_server",					  "PROC:      ",  "mapi_server() : void",																											  "not available"																																																																																																																																																  ]
[ "mil_ancestor",					  "PROC:      ",  "mil_ancestor(BAT[void,BAT], oid, oid) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "mil_start",						  "PROC:      ",  "mil_start() : void",																												  "not available"																																																																																																																																																  ]
[ "milliseconds",					  "PROC:      ",  "milliseconds(timestamp) : int",																										  "not available"																																																																																																																																																  ]
[ "minutes",						  "PROC:      ",  "minutes(lng) : int",																												  "not available"																																																																																																																																																  ]
[ "minutes",						  "PROC:      ",  "minutes(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "modify_pfc_fti",					  "PROC:      ",  "modify_pfc_fti(str, BAT[void,str]) : BAT[str,str]",																								  "not available"																																																																																																																																																  ]
[ "modify_qenv",					  "PROC:      ",  "modify_qenv(BAT[oid,str], oid, str) : void",																									  "not available"																																																																																																																																																  ]
[ "month",						  "PROC:      ",  "month(int) : int",																												  "not available"																																																																																																																																																  ]
[ "month",						  "PROC:      ",  "month(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "mposjoin",						  "PROC:      ",  "mposjoin(any, oid, BAT[oid,BAT]) : BAT[void,any]",																								  "not available"																																																																																																																																																  ]
[ "msecs",						  "PROC:      ",  "msecs(int, int, int, int, int) : lng",																									  "not available"																																																																																																																																																  ]
[ "mvaljoin",						  "PROC:      ",  "mvaljoin(any, oid, BAT[oid,BAT]) : BAT[oid,oid]",																								  "not available"																																																																																																																																																  ]
[ "mylog_delta",					  "PROC:      ",  "mylog_delta(logger, BAT[any,any], str) : void",																								  "not available"																																																																																																																																																  ]
[ "nodes",						  "PROC:      ",  "nodes(BAT[oid,any], BAT[oid,str]) : BAT[oid,any]",																								  "not available"																																																																																																																																																  ]
[ "old_sum",						  "PROC:      ",  "old_sum(BAT[any,lng]) : lng",																										  "not available"																																																																																																																																																  ]
[ "or_exp",						  "PROC:      ",  "or_exp(BAT[any,any], BAT[any,any], int) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "or_max",						  "PROC:      ",  "or_max(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "or_min",						  "PROC:      ",  "or_min(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "or_prob",						  "PROC:      ",  "or_prob(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "or_prod",						  "PROC:      ",  "or_prod(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "or_sum",						  "PROC:      ",  "or_sum(BAT[any,any], BAT[any,any]) : BAT[any,any]",																								  "not available"																																																																																																																																																  ]
[ "order_regions",					  "PROC:      ",  "order_regions(BAT[any,any]) : BAT[any,any]",																									  "not available"																																																																																																																																																  ]
[ "orderby_table",					  "PROC:      ",  "orderby_table(str, str, ..BAT[any::1,any]..) : void",																							  "not available"																																																																																																																																																  ]
[ "p_contained_by_max",					  "PROC:      ",  "p_contained_by_max(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_contained_by_max",					  "PROC:      ",  "p_contained_by_max(BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																						  "not available"																																																																																																																																																  ]
[ "p_contained_by_sum",					  "PROC:      ",  "p_contained_by_sum(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_contained_by_sum",					  "PROC:      ",  "p_contained_by_sum(BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																						  "not available"																																																																																																																																																  ]
[ "p_containing_max",					  "PROC:      ",  "p_containing_max(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "p_containing_q_LM",					  "PROC:      ",  "p_containing_q_LM(BAT[oid,dbl], BAT[void,str], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_containing_q_LMs",					  "PROC:      ",  "p_containing_q_LMs(BAT[oid,dbl], BAT[void,str], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_containing_q_NLLR",				  "PROC:      ",  "p_containing_q_NLLR(BAT[oid,dbl], BAT[void,str], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_containing_q_OKAPI",				  "PROC:      ",  "p_containing_q_OKAPI(BAT[oid,dbl], BAT[void,str], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_containing_q_PRF",					  "PROC:      ",  "p_containing_q_PRF(BAT[oid,dbl], BAT[void,str], BAT[oid,str]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "p_containing_sum",					  "PROC:      ",  "p_containing_sum(BAT[oid,dbl], BAT[oid,dbl], BAT[oid,str]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "parent",						  "PROC:      ",  "parent(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]",																				  "not available"																																																																																																																																																  ]
[ "pf_assert",						  "PROC:      ",  "pf_assert(str, str) : void",																											  "not available"																																																																																																																																																  ]
[ "pf_checkpoint",					  "PROC:      ",  "pf_checkpoint(BAT[void,str], bit) : bit",																									  "not available"																																																																																																																																																  ]
[ "pf_logflush",					  "PROC:      ",  "pf_logflush(lng) : bit",																											  "not available"																																																																																																																																																  ]
[ "pf_logmanager",					  "PROC:      ",  "pf_logmanager() : void",																											  "not available"																																																																																																																																																  ]
[ "pf_ttype",						  "PROC:      ",  "pf_ttype(BAT[any,any]) : int",																										  "not available"																																																																																																																																																  ]
[ "pi",							  "PROC:      ",  "pi() : dbl",																													  "not available"																																																																																																																																																  ]
[ "play_doc_tape",					  "PROC:      ",  "play_doc_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : void",																		  "not available"																																																																																																																																																  ]
[ "play_update_tape",					  "PROC:      ",  "play_update_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : void",																		  "not available"																																																																																																																																																  ]
[ "preceding",						  "PROC:      ",  "preceding(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int, chr) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "preceding_sibling",					  "PROC:      ",  "preceding_sibling(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int, chr) : BAT[void,BAT]",																		  "not available"																																																																																																																																																  ]
[ "print",						  "PROC:      ",  "print(str, BAT[any::1,any], ..BAT[any::1,any]..) : void",																							  "not available"																																																																																																																																																  ]
[ "prior_ls",						  "PROC:      ",  "prior_ls(BAT[oid,dbl], BAT[oid,str]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "pws",						  "PROC:      ",  "pws(int) : void",																												  "not available"																																																																																																																																																  ]
[ "replace_root",					  "PROC:      ",  "replace_root(BAT[void,oid], BAT[oid,oid], BAT[oid,oid]) : void",																						  "not available"																																																																																																																																																  ]
[ "rm_overlap",						  "PROC:      ",  "rm_overlap(BAT[any,any], BAT[oid,str]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "rotate_xor_hash",					  "PROC:      ",  "rotate_xor_hash(int, int, any) : int",																									  "not available"																																																																																																																																																  ]
[ "rule",						  "PROC:      ",  "rule(int, int, int, int, int) : rule",																									  "not available"																																																																																																																																																  ]
[ "rule",						  "PROC:      ",  "rule(int, str, int, int) : rule",																										  "not available"																																																																																																																																																  ]
[ "rule",						  "PROC:      ",  "rule(int, str, int, int, int) : rule",																									  "not available"																																																																																																																																																  ]
[ "run_nexi_query",					  "PROC:      ",  "run_nexi_query(str, BAT[str,str]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "run_tijah_query",					  "PROC:      ",  "run_tijah_query(str, BAT[str,str], bit, BAT[void,oid]) : BAT[oid,dbl]",																					  "not available"																																																																																																																																																  ]
[ "runtime",						  "PROC:      ",  "runtime(lock, lock) : BAT[lock,BAT]",																									  "not available"																																																																																																																																																  ]
[ "scale",						  "PROC:      ",  "scale(BAT[any,any], flt) : BAT[any,any]",																									  "not available"																																																																																																																																																  ]
[ "seconds",						  "PROC:      ",  "seconds(lng) : int",																												  "not available"																																																																																																																																																  ]
[ "seconds",						  "PROC:      ",  "seconds(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "select_node",					  "PROC:      ",  "select_node(BAT[oid,str]) : BAT[oid,dbl]",																									  "not available"																																																																																																																																																  ]
[ "select_node",					  "PROC:      ",  "select_node(str, BAT[oid,str]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "select_node",					  "PROC:      ",  "select_node(str, bit, BAT[oid,str]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "select_phrase",					  "PROC:      ",  "select_phrase(BAT[void,oid], BAT[oid,str]) : BAT[oid,dbl]",																							  "not available"																																																																																																																																																  ]
[ "select_root",					  "PROC:      ",  "select_root(BAT[oid,str]) : BAT[oid,dbl]",																									  "not available"																																																																																																																																																  ]
[ "select_root",					  "PROC:      ",  "select_root(BAT[void,oid], BAT[oid,str]) : BAT[oid,dbl]",																							  "not available"																																																																																																																																																  ]
[ "select_startnodes",					  "PROC:      ",  "select_startnodes(BAT[void,oid], BAT[oid,str]) : BAT[oid,dbl]",																						  "not available"																																																																																																																																																  ]
[ "select_term",					  "PROC:      ",  "select_term(str, BAT[oid,str]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "select_term",					  "PROC:      ",  "select_term(str, int, BAT[oid,str]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "set_intersect",					  "PROC:      ",  "set_intersect(BAT[any,any], BAT[any,any], BAT[oid,str]) : BAT[any,any]",																					  "not available"																																																																																																																																																  ]
[ "set_kind",						  "PROC:      ",  "set_kind(BAT[void,oid], int) : BAT[void,int]",																								  "not available"																																																																																																																																																  ]
[ "set_kind",						  "PROC:      ",  "set_kind(oid, int) : int",																											  "not available"																																																																																																																																																  ]
[ "set_union",						  "PROC:      ",  "set_union(BAT[any,any], BAT[any,any], BAT[oid,str]) : BAT[any,any]",																						  "not available"																																																																																																																																																  ]
[ "shred_doc",						  "PROC:      ",  "shred_doc(BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng]) : void",																				  "PARAMETERS:\n- BAT[void,str] locations: URIs refering to the xml documents to be shredded)\n- BAT[void,str] names:     document names ('alias') in the database\n- BAT[void,str] colnames:  collection names ('alias') in the database\n- BAT[void,lng] pageFrees: percentage of pages left free in the database\nDESCRIPTION:\nShred multiple xml documents to the internal Pathfinder format."																																																																																																		  ]
[ "shred_doc",						  "PROC:      ",  "shred_doc(str, str) : void",																											  "PARAMETERS:\n- str location: URI containing the xml document to be shredded)\n- str name:     document name ('alias') in database\nDESCRIPTION:\nShred single xml document to the internal Pathfinder format.\n(Leave no free pages and do not relate it to a collection.)"																																																																																																																	  ]
[ "shred_doc",						  "PROC:      ",  "shred_doc(str, str, str, lng) : void",																									  "PARAMETERS:\n- str location: URI refering to the xml documents to be shredded)\n- str name:     document name ('alias') in the database\n- str colname:  collection name ('alias') in the database\n- lng pageFree: percentage of pages left free in the database\nDESCRIPTION:\nShred single xml documents to the internal Pathfinder format."																																																																																																								  ]
[ "shred_doc_base",					  "PROC:      ",  "shred_doc_base(bit, BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng], Stream, lng) : void",																	  "not available"																																																																																																																																																  ]
[ "shred_into_docBAT",					  "PROC:      ",  "shred_into_docBAT(BAT[str,BAT], BAT[void,str], BAT[void,str], BAT[void,timestamp], str, oid, BAT[lock,BAT], oid, lng, bit, Stream, lng) : oid",												  "not available"																																																																																																																																																  ]
[ "shred_stream",					  "PROC:      ",  "shred_stream(Stream, str, str, lng) : void",																									  "not available"																																																																																																																																																  ]
[ "sin",						  "PROC:      ",  "sin(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "sinh",						  "PROC:      ",  "sinh(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "size",						  "PROC:      ",  "size(BAT[any,bit]) : wrd",																											  "not available"																																																																																																																																																  ]
[ "split2frag",						  "PROC:      ",  "split2frag(BAT[oid,any], BAT[void,oid]) : BAT[oid,BAT]",																							  "not available"																																																																																																																																																  ]
[ "sqrt",						  "PROC:      ",  "sqrt(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "standoff_select_narrow",				  "PROC:      ",  "standoff_select_narrow(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]",																  "not available"																																																																																																																																																  ]
[ "standoff_select_wide",				  "PROC:      ",  "standoff_select_wide(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]",																  "not available"																																																																																																																																																  ]
[ "step",						  "PROC:      ",  "step(int, int, BAT[void,oid], BAT[void,oid], BAT[void,oid], any, BAT[void,BAT], int, chr, str, str, str) : BAT[void,BAT]",															  "not available"																																																																																																																																																  ]
[ "table",						  "PROC:      ",  "table(str, BAT[any::1,any], ..BAT[any::1,any]..) : void",																							  "not available"																																																																																																																																																  ]
[ "tan",						  "PROC:      ",  "tan(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "tanh",						  "PROC:      ",  "tanh(flt) : flt",																												  "not available"																																																																																																																																																  ]
[ "terms",						  "PROC:      ",  "terms(BAT[oid,any], BAT[oid,str]) : BAT[oid,any]",																								  "not available"																																																																																																																																																  ]
[ "test_malalgebra",					  "PROC:      ",  "test_malalgebra() : void",																											  "not available"																																																																																																																																																  ]
[ "time_add_sec_interval",				  "PROC:      ",  "time_add_sec_interval(daytime, lng) : daytime",																								  "not available"																																																																																																																																																  ]
[ "time_sub_sec_interval",				  "PROC:      ",  "time_sub_sec_interval(daytime, lng) : daytime",																								  "not available"																																																																																																																																																  ]
[ "timestamp",						  "PROC:      ",  "timestamp(date) : timestamp",																										  "not available"																																																																																																																																																  ]
[ "timestamp",						  "PROC:      ",  "timestamp(int) : timestamp",																											  "not available"																																																																																																																																																  ]
[ "timestamp",						  "PROC:      ",  "timestamp(lng) : timestamp",																											  "not available"																																																																																																																																																  ]
[ "timestamp_add_sec_interval",				  "PROC:      ",  "timestamp_add_sec_interval(timestamp, lng) : timestamp",																							  "not available"																																																																																																																																																  ]
[ "timestamp_sub_month_interval",			  "PROC:      ",  "timestamp_sub_month_interval(timestamp, int) : timestamp",																							  "not available"																																																																																																																																																  ]
[ "timestamp_sub_sec_interval",				  "PROC:      ",  "timestamp_sub_sec_interval(timestamp, lng) : timestamp",																							  "not available"																																																																																																																																																  ]
[ "tj_add2collection_frag",				  "PROC:      ",  "tj_add2collection_frag(str, BAT[str,str], bit) : void",																							  "not available"																																																																																																																																																  ]
[ "tj_add_pre",						  "PROC:      ",  "tj_add_pre(BAT[oid,any]) : BAT[oid,oid]",																									  "not available"																																																																																																																																																  ]
[ "tj_and_comb",					  "PROC:      ",  "tj_and_comb(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "tj_and_nocomb",					  "PROC:      ",  "tj_and_nocomb(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "tj_collection_delete",				  "PROC:      ",  "tj_collection_delete(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_contained_by_noprop_nest_nid",			  "PROC:      ",  "tj_contained_by_noprop_nest_nid(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_contained_by_noprop_nest_pre",			  "PROC:      ",  "tj_contained_by_noprop_nest_pre(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_contained_by_noprop_unnest_nid",			  "PROC:      ",  "tj_contained_by_noprop_unnest_nid(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																				  "not available"																																																																																																																																																  ]
[ "tj_contained_by_noprop_unnest_pre",			  "PROC:      ",  "tj_contained_by_noprop_unnest_pre(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																				  "not available"																																																																																																																																																  ]
[ "tj_contained_by_prop_nest_nid",			  "PROC:      ",  "tj_contained_by_prop_nest_nid(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_contained_by_prop_nest_pre",			  "PROC:      ",  "tj_contained_by_prop_nest_pre(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_contained_by_prop_unnest_nid",			  "PROC:      ",  "tj_contained_by_prop_unnest_nid(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_contained_by_prop_unnest_pre",			  "PROC:      ",  "tj_contained_by_prop_unnest_pre(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_noprop_nest_nid",			  "PROC:      ",  "tj_containing_noprop_nest_nid(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_noprop_nest_pre",			  "PROC:      ",  "tj_containing_noprop_nest_pre(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_noprop_unnest_nid",			  "PROC:      ",  "tj_containing_noprop_unnest_nid(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_noprop_unnest_pre",			  "PROC:      ",  "tj_containing_noprop_unnest_pre(BAT[oid,oid], BAT[oid,oid]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_prop_nest_nid",			  "PROC:      ",  "tj_containing_prop_nest_nid(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_prop_nest_pre",			  "PROC:      ",  "tj_containing_prop_nest_pre(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_prop_unnest_nid",			  "PROC:      ",  "tj_containing_prop_unnest_nid(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_prop_unnest_pre",			  "PROC:      ",  "tj_containing_prop_unnest_pre(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,any]",																					  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_entity_LogSum",		  "PROC:      ",  "tj_containing_query_nest_nid_entity_LogSum(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_entity_min",		  "PROC:      ",  "tj_containing_query_nest_nid_entity_min(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_entity_plus",		  "PROC:      ",  "tj_containing_query_nest_nid_entity_plus(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_phrase",		  "PROC:      ",  "tj_containing_query_nest_nid_phrase(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_LM",		  "PROC:      ",  "tj_containing_query_nest_nid_term_LM(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_LMs",		  "PROC:      ",  "tj_containing_query_nest_nid_term_LMs(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_NLLR",		  "PROC:      ",  "tj_containing_query_nest_nid_term_NLLR(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_OKAPI",		  "PROC:      ",  "tj_containing_query_nest_nid_term_OKAPI(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_min",		  "PROC:      ",  "tj_containing_query_nest_nid_term_min(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_nid_term_plus",		  "PROC:      ",  "tj_containing_query_nest_nid_term_plus(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_entity_LogSum",		  "PROC:      ",  "tj_containing_query_nest_pre_entity_LogSum(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_entity_min",		  "PROC:      ",  "tj_containing_query_nest_pre_entity_min(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_entity_plus",		  "PROC:      ",  "tj_containing_query_nest_pre_entity_plus(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_phrase",		  "PROC:      ",  "tj_containing_query_nest_pre_phrase(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_LM",		  "PROC:      ",  "tj_containing_query_nest_pre_term_LM(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_LMs",		  "PROC:      ",  "tj_containing_query_nest_pre_term_LMs(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_NLLR",		  "PROC:      ",  "tj_containing_query_nest_pre_term_NLLR(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_OKAPI",		  "PROC:      ",  "tj_containing_query_nest_pre_term_OKAPI(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_min",		  "PROC:      ",  "tj_containing_query_nest_pre_term_min(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_nest_pre_term_plus",		  "PROC:      ",  "tj_containing_query_nest_pre_term_plus(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_entity_LogSum",	  "PROC:      ",  "tj_containing_query_unnest_nid_entity_LogSum(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_entity_min",		  "PROC:      ",  "tj_containing_query_unnest_nid_entity_min(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_entity_plus",		  "PROC:      ",  "tj_containing_query_unnest_nid_entity_plus(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_phrase",		  "PROC:      ",  "tj_containing_query_unnest_nid_phrase(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_LM",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_LM(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_LMs",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_LMs(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_NLLR",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_NLLR(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_OKAPI",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_OKAPI(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_min",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_min(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_nid_term_plus",		  "PROC:      ",  "tj_containing_query_unnest_nid_term_plus(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_entity_LogSum",	  "PROC:      ",  "tj_containing_query_unnest_pre_entity_LogSum(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_entity_min",		  "PROC:      ",  "tj_containing_query_unnest_pre_entity_min(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_entity_plus",		  "PROC:      ",  "tj_containing_query_unnest_pre_entity_plus(BAT[oid,any], BAT[oid,dbl]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_phrase",		  "PROC:      ",  "tj_containing_query_unnest_pre_phrase(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_LM",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_LM(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_LMs",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_LMs(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_NLLR",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_NLLR(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_OKAPI",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_OKAPI(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_min",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_min(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																				  "not available"																																																																																																																																																  ]
[ "tj_containing_query_unnest_pre_term_plus",		  "PROC:      ",  "tj_containing_query_unnest_pre_term_plus(BAT[oid,any], BAT[oid,BAT]) : BAT[oid,dbl]",																			  "not available"																																																																																																																																																  ]
[ "tj_delete_collection",				  "PROC:      ",  "tj_delete_collection(str, bit) : void",																									  "not available"																																																																																																																																																  ]
[ "tj_dump_collection",					  "PROC:      ",  "tj_dump_collection(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_ent2tid",						  "PROC:      ",  "tj_ent2tid(BAT[str,dbl]) : BAT[oid,dbl]",																									  "not available"																																																																																																																																																  ]
[ "tj_extend_collection",				  "PROC:      ",  "tj_extend_collection(str, BAT[void,str]) : void",																								  "not available"																																																																																																																																																  ]
[ "tj_fb_terms",					  "PROC:      ",  "tj_fb_terms(str, BAT[int,BAT], int, dbl) : BAT[void,str]",																							  "not available"																																																																																																																																																  ]
[ "tj_get_collection_lock",				  "PROC:      ",  "tj_get_collection_lock(str) : lock",																										  "not available"																																																																																																																																																  ]
[ "tj_get_ft_index",					  "PROC:      ",  "tj_get_ft_index(BAT[str,str], bit) : str",																									  "not available"																																																																																																																																																  ]
[ "tj_global_delete",					  "PROC:      ",  "tj_global_delete() : void",																											  "not available"																																																																																																																																																  ]
[ "tj_init_collection",					  "PROC:      ",  "tj_init_collection(str, BAT[str,str]) : void",																								  "not available"																																																																																																																																																  ]
[ "tj_init_global",					  "PROC:      ",  "tj_init_global() : void",																											  "not available"																																																																																																																																																  ]
[ "tj_init_global",					  "PROC:      ",  "tj_init_global(BAT[str,str], bit) : void",																									  "not available"																																																																																																																																																  ]
[ "tj_init_tagHash",					  "PROC:      ",  "tj_init_tagHash(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_init_termHash",					  "PROC:      ",  "tj_init_termHash(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_is_indexed",					  "PROC:      ",  "tj_is_indexed(str) : bit",																											  "not available"																																																																																																																																																  ]
[ "tj_is_indexed",					  "PROC:      ",  "tj_is_indexed(str) : bit",																											  "not available"																																																																																																																																																  ]
[ "tj_merge_frag_results",				  "PROC:      ",  "tj_merge_frag_results(BAT[void,BAT], int) : BAT[str,dbl]",																							  "not available"																																																																																																																																																  ]
[ "tj_merge_frag_results_inex",				  "PROC:      ",  "tj_merge_frag_results_inex(BAT[void,BAT], int) : BAT[str,dbl]",																						  "not available"																																																																																																																																																  ]
[ "tj_nid2pre",						  "PROC:      ",  "tj_nid2pre(BAT[oid,any]) : BAT[oid,any]",																									  "not available"																																																																																																																																																  ]
[ "tj_nid2pre",						  "PROC:      ",  "tj_nid2pre(BAT[oid,any], BAT[oid,str]) : BAT[oid,any]",																							  "not available"																																																																																																																																																  ]
[ "tj_or_comb",						  "PROC:      ",  "tj_or_comb(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "tj_or_nocomb",					  "PROC:      ",  "tj_or_nocomb(BAT[any,any], BAT[any,any]) : BAT[any,any]",																							  "not available"																																																																																																																																																  ]
[ "tj_pfop",						  "PROC:      ",  "tj_pfop(BAT[void,oid], BAT[void,any], BAT[void,int], BAT[void,oid]) : BAT[void,BAT]",																			  "not available"																																																																																																																																																  ]
[ "tj_play_doc_tape",					  "PROC:      ",  "tj_play_doc_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : void",																		  "not available"																																																																																																																																																  ]
[ "tj_pre2inexpath",					  "PROC:      ",  "tj_pre2inexpath(BAT[oid,dbl]) : BAT[str,dbl]",																								  "not available"																																																																																																																																																  ]
[ "tj_pre2nid_noprop",					  "PROC:      ",  "tj_pre2nid_noprop(BAT[oid,any]) : BAT[oid,any]",																								  "not available"																																																																																																																																																  ]
[ "tj_pre2nid_prop",					  "PROC:      ",  "tj_pre2nid_prop(BAT[oid,any]) : BAT[oid,any]",																								  "not available"																																																																																																																																																  ]
[ "tj_pre2pfpre",					  "PROC:      ",  "tj_pre2pfpre(BAT[oid,dbl]) : BAT[void,BAT]",																									  "not available"																																																																																																																																																  ]
[ "tj_prepare_query",					  "PROC:      ",  "tj_prepare_query(BAT[str,dbl]) : BAT[void,BAT]",																								  "not available"																																																																																																																																																  ]
[ "tj_prior_ls",					  "PROC:      ",  "tj_prior_ls(BAT[oid,dbl]) : BAT[any,any]",																									  "not available"																																																																																																																																																  ]
[ "tj_query_handler",					  "PROC:      ",  "tj_query_handler(bit, BAT[void,BAT], BAT[void,BAT], BAT[void,BAT], BAT[oid,any], BAT[oid,BAT], BAT[void,lng], BAT[void,dbl], BAT[void,str], BAT[void,BAT]) : BAT[void,BAT]",									  "not available"																																																																																																																																																  ]
[ "tj_rebuild_collection",				  "PROC:      ",  "tj_rebuild_collection(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_rm_overlap",					  "PROC:      ",  "tj_rm_overlap(BAT[oid,dbl]) : BAT[any,any]",																									  "not available"																																																																																																																																																  ]
[ "tj_select_star",					  "PROC:      ",  "tj_select_star() : BAT[oid,any]",																										  "not available"																																																																																																																																																  ]
[ "tj_select_startnodes",				  "PROC:      ",  "tj_select_startnodes() : BAT[oid,any]",																									  "not available"																																																																																																																																																  ]
[ "tj_select_tag",					  "PROC:      ",  "tj_select_tag(str) : BAT[oid,any]",																										  "not available"																																																																																																																																																  ]
[ "tj_set_parameter",					  "PROC:      ",  "tj_set_parameter(str, str, str) : void",																									  "not available"																																																																																																																																																  ]
[ "tj_size_collection",					  "PROC:      ",  "tj_size_collection(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_size_collection2",				  "PROC:      ",  "tj_size_collection2(str) : void",																										  "not available"																																																																																																																																																  ]
[ "tj_term2tid",					  "PROC:      ",  "tj_term2tid(BAT[str,dbl]) : BAT[oid,dbl]",																									  "not available"																																																																																																																																																  ]
[ "tj_term2tid",					  "PROC:      ",  "tj_term2tid(str, BAT[void,str], bit) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "tj_terms",						  "PROC:      ",  "tj_terms(str, BAT[int,BAT]) : BAT[void,str]",																								  "not available"																																																																																																																																																  ]
[ "tj_terms_contained_by",				  "PROC:      ",  "tj_terms_contained_by(str, BAT[oid,any]) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "tj_tf",						  "PROC:      ",  "tj_tf(str, BAT[int,BAT], BAT[void,oid]) : BAT[oid,lng]",																							  "not available"																																																																																																																																																  ]
[ "tj_tfall",						  "PROC:      ",  "tj_tfall(str, BAT[void,oid]) : BAT[oid,lng]",																								  "not available"																																																																																																																																																  ]
[ "tj_trace",						  "PROC:      ",  "tj_trace(str, str) : void",																											  "not available"																																																																																																																																																  ]
[ "tj_used_frags",					  "PROC:      ",  "tj_used_frags(str) : BAT[void,int]",																										  "not available"																																																																																																																																																  ]
[ "tj_verbose",						  "PROC:      ",  "tj_verbose(str, ..any..) : void",																										  "not available"																																																																																																																																																  ]
[ "tmark_grp_unique",					  "PROC:      ",  "tmark_grp_unique(BAT[any,any], BAT[oid,any]) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "tmark_grp_unique",					  "PROC:      ",  "tmark_grp_unique(any, BAT[oid,any]) : BAT[oid,oid]",																								  "not available"																																																																																																																																																  ]
[ "tmark_unique",					  "PROC:      ",  "tmark_unique(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "tmark_unique",					  "PROC:      ",  "tmark_unique(any::1, BAT[void,any]) : BAT[oid,oid]",																								  "not available"																																																																																																																																																  ]
[ "trace",						  "PROC:      ",  "trace(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,int], BAT[oid,oid]) : void",														  "not available"																																																																																																																																																  ]
[ "trace_items",					  "PROC:      ",  "trace_items(BAT[void,any], BAT[oid,BAT], BAT[oid,int], int, int) : void",																					  "not available"																																																																																																																																																  ]
[ "trace_ops",						  "PROC:      ",  "trace_ops(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,int], BAT[oid,oid], int, oid, oid) : void",															  "not available"																																																																																																																																																  ]
[ "trace_qname_uri",					  "PROC:      ",  "trace_qname_uri(oid, oid) : str",																										  "not available"																																																																																																																																																  ]
[ "trace_scopes",					  "PROC:      ",  "trace_scopes(BAT[void,any], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,BAT], BAT[oid,int], BAT[oid,oid], int, oid, oid) : void",											  "not available"																																																																																																																																																  ]
[ "vx_lookup",						  "PROC:      ",  "vx_lookup(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,str], str, str, str, str, bit) : BAT[oid,oid]",														  "not available"																																																																																																																																																  ]
[ "vx_lookup",						  "PROC:      ",  "vx_lookup(BAT[void,BAT], oid, BAT[void,int], BAT[oid,int], bit) : BAT[oid,oid]",																				  "not available"																																																																																																																																																  ]
[ "vx_lookup_qns",					  "PROC:      ",  "vx_lookup_qns(BAT[void,BAT], oid, str, str) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "vx_lookup_qns",					  "PROC:      ",  "vx_lookup_qns(BAT[void,BAT], oid, str, str, str, str) : BAT[oid,int]",																					  "not available"																																																																																																																																																  ]
[ "vx_maintain",					  "PROC:      ",  "vx_maintain(BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,str]) : BAT[int,oid]",																				  "not available"																																																																																																																																																  ]
[ "vx_maintain",					  "PROC:      ",  "vx_maintain(BAT[oid,oid], BAT[oid,str]) : BAT[int,oid]",																							  "not available"																																																																																																																																																  ]
[ "vx_reduce",						  "PROC:      ",  "vx_reduce(BAT[void,int], BAT[void,oid]) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "ws_cache_end",					  "PROC:      ",  "ws_cache_end(BAT[any,any]) : void",																										  "not available"																																																																																																																																																  ]
[ "ws_cache_expr",					  "PROC:      ",  "ws_cache_expr(BAT[any,any], str) : bit",																									  "not available"																																																																																																																																																  ]
[ "ws_cache_get",					  "PROC:      ",  "ws_cache_get(BAT[any,any], str) : bit",																									  "not available"																																																																																																																																																  ]
[ "ws_cache_put",					  "PROC:      ",  "ws_cache_put(BAT[any,any], str, BAT[any,any]) : void",																							  "not available"																																																																																																																																																  ]
[ "ws_collection",					  "PROC:      ",  "ws_collection(BAT[void,BAT], BAT[oid,str], BAT[void,oid]) : BAT[oid,oid]",																					  "not available"																																																																																																																																																  ]
[ "ws_collection_check",				  "PROC:      ",  "ws_collection_check(BAT[any::1,str]) : BAT[any::1,oid]",																							  "not available"																																																																																																																																																  ]
[ "ws_collection_root",					  "PROC:      ",  "ws_collection_root(BAT[void,BAT], BAT[void,str]) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "ws_collections",					  "PROC:      ",  "ws_collections(BAT[void,BAT], bit) : BAT[void,oid]",																								  "not available"																																																																																																																																																  ]
[ "ws_create",						  "PROC:      ",  "ws_create(int) : BAT[void,BAT]",																										  "not available"																																																																																																																																																  ]
[ "ws_destroy",						  "PROC:      ",  "ws_destroy(BAT[void,BAT]) : void",																										  "not available"																																																																																																																																																  ]
[ "ws_destroy",						  "PROC:      ",  "ws_destroy(any) : void",																											  "not available"																																																																																																																																																  ]
[ "ws_docavailable",					  "PROC:      ",  "ws_docavailable(BAT[void,BAT], BAT[void,str]) : BAT[void,bit]",																						  "not available"																																																																																																																																																  ]
[ "ws_docfilter",					  "PROC:      ",  "ws_docfilter(BAT[void,BAT], BAT[any::1,oid], oid, bit) : BAT[any::1,oid]",																					  "not available"																																																																																																																																																  ]
[ "ws_docname",						  "PROC:      ",  "ws_docname(BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,int]) : BAT[oid,str]",																			  "not available"																																																																																																																																																  ]
[ "ws_documents",					  "PROC:      ",  "ws_documents(BAT[void,BAT], BAT[any,str], bit) : BAT[oid,oid]",																						  "not available"																																																																																																																																																  ]
[ "ws_documents",					  "PROC:      ",  "ws_documents(BAT[void,BAT], bit) : BAT[void,oid]",																								  "not available"																																																																																																																																																  ]
[ "ws_end",						  "PROC:      ",  "ws_end(BAT[void,BAT], str) : int",																										  "not available"																																																																																																																																																  ]
[ "ws_findnodes",					  "PROC:      ",  "ws_findnodes(BAT[void,BAT], BAT[void,oid], any, any, any, any, bit) : BAT[oid,oid]",																				  "not available"																																																																																																																																																  ]
[ "ws_free",						  "PROC:      ",  "ws_free(lng) : void",																											  "not available"																																																																																																																																																  ]
[ "ws_ft_index_info",					  "PROC:      ",  "ws_ft_index_info(BAT[void,BAT], BAT[any,str], bit) : BAT[void,oid]",																						  "not available"																																																																																																																																																  ]
[ "ws_ft_index_info",					  "PROC:      ",  "ws_ft_index_info(BAT[void,BAT], bit) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "ws_ft_index_info_base",				  "PROC:      ",  "ws_ft_index_info_base(BAT[void,BAT], BAT[any,str], bit) : BAT[void,oid]",																					  "not available"																																																																																																																																																  ]
[ "ws_id",						  "PROC:      ",  "ws_id(BAT[void,BAT]) : lng",																											  "not available"																																																																																																																																																  ]
[ "ws_log",						  "PROC:      ",  "ws_log(BAT[void,BAT], str) : void",																										  "not available"																																																																																																																																																  ]
[ "ws_log",						  "PROC:      ",  "ws_log(lng, str) : void",																											  "not available"																																																																																																																																																  ]
[ "ws_log_analyze",					  "PROC:      ",  "ws_log_analyze() : void",																											  "not available"																																																																																																																																																  ]
[ "ws_log_print",					  "PROC:      ",  "ws_log_print(lng) : void",																											  "not available"																																																																																																																																																  ]
[ "ws_lookup",						  "PROC:      ",  "ws_lookup(BAT[void,BAT], oid, BAT[oid,oid]) : BAT[void,oid]",																						  "not available"																																																																																																																																																  ]
[ "ws_mil",						  "PROC:      ",  "ws_mil(BAT[void,BAT], str) : any",																										  "not available"																																																																																																																																																  ]
[ "ws_new",						  "PROC:      ",  "ws_new(oid, int, int, int, oid) : BAT[void,any]",																								  "not available"																																																																																																																																																  ]
[ "ws_newnids",						  "PROC:      ",  "ws_newnids(BAT[void,BAT], oid, int) : BAT[oid,void]",																							  "not available"																																																																																																																																																  ]
[ "ws_newpage",						  "PROC:      ",  "ws_newpage(BAT[void,BAT], oid) : oid",																									  "not available"																																																																																																																																																  ]
[ "ws_open",						  "PROC:      ",  "ws_open(BAT[void,BAT], BAT[void,str], BAT[void,str], BAT[void,oid], BAT[void,oid], bit) : BAT[void,oid]",																	  "not available"																																																																																																																																																  ]
[ "ws_opencoll",					  "PROC:      ",  "ws_opencoll(BAT[void,BAT], BAT[str,BAT], str, oid) : oid",																							  "not available"																																																																																																																																																  ]
[ "ws_opendoc",						  "PROC:      ",  "ws_opendoc(BAT[void,BAT], BAT[void,str]) : BAT[oid,oid]",																							  "not available"																																																																																																																																																  ]
[ "ws_opendoc",						  "PROC:      ",  "ws_opendoc(BAT[void,BAT], BAT[void,str], BAT[void,str], BAT[void,oid], BAT[void,oid], bit) : BAT[oid,oid]",																	  "not available"																																																																																																																																																  ]
[ "xmlcache_add_rule",					  "PROC:      ",  "xmlcache_add_rule(str, any) : void",																										  "DESCRIPTION:\nadd a new URI lifetime rule.\n\nThe XML document cache keeps indexed copies of documents that where recently\nused in the fn:doc(URI) xquery function.\n\nThe size of the cache is controlled using the 'xquery_cacheMB' setting in\nthe 'MonetDB.conf' file.\n\nFor file URIs, the cache looks at the last-modification-time of the file on disk\nto guarantee that the cached document is still up-to-date for answering queries from.\n\nFor other URIs, *lifetime rules* determine how long documents can stay in the cache.\nEach lifetime rule consists of a URI prefix and the registered seconds of lifetime.\n\nThe rule with longest prefix that matches an URI counts. Specifying a lifetime\nof 'int_nil' seconds means that the URI will *not* be cached at all.\nThis is also the default if no prefix matches an URI.\n\nThe name of a cached document is the same as its location (URI). For explicitly\nshredded documents (with 'shred_doc(location,name)'), the name is an 'alias' and\nmay differ from the URI. Explicitly shredded documents fall outside the XML document\ncache; documents are only removed at explicit user request (with 'delete_doc(name)')."	  ]
[ "xmlcache_add_rule",					  "PROC:      ",  "xmlcache_add_rule(str, lng) : void",																										  "not available"																																																																																																																																																  ]
[ "xmlcache_del_rule",					  "PROC:      ",  "xmlcache_del_rule(str) : void",																										  "DESCRIPTION:\ndeletes an existing URI lifetime rule.\n\nThe XML document cache keeps indexed copies of documents that where recently\nused in the fn:doc(URI) xquery function.\n\nThe size of the cache is controlled using the 'xquery_cacheMB' setting in\nthe 'MonetDB.conf' file.\n\nFor file URIs, the cache looks at the last-modification-time of the file on disk\nto guarantee that the cached document is still up-to-date for answering queries from.\n\nFor other URIs, *lifetime rules* determine how long documents can stay in the cache.\nEach lifetime rule consists of a URI prefix and the registered seconds of lifetime.\n\nThe rule with longest prefix that matches an URI counts. Specifying a lifetime\nof 'int_nil' seconds means that the URI will *not* be cached at all.\nThis is also the default if no prefix matches an URI.\n\nThe name of a cached document is the same as its location (URI). For explicitly\nshredded documents (with 'shred_doc(location,name)'), the name is an 'alias' and\nmay differ from the URI. Explicitly shredded documents fall outside the XML document\ncache; documents are only removed at explicit user request (with 'delete_doc(name)')."  ]
[ "xmlcache_print",					  "PROC:      ",  "xmlcache_print() : void",																											  "DESCRIPTION:\nshows the actual content of the XML document cache.\n\nThe XML document cache keeps indexed copies of documents that where recently\nused in the fn:doc(URI) xquery function.\n\nThe size of the cache is controlled using the 'xquery_cacheMB' setting in\nthe 'MonetDB.conf' file.\n\nFor file URIs, the cache looks at the last-modification-time of the file on disk\nto guarantee that the cached document is still up-to-date for answering queries from.\n\nFor other URIs, *lifetime rules* determine how long documents can stay in the cache.\nEach lifetime rule consists of a URI prefix and the registered seconds of lifetime.\n\nThe rule with longest prefix that matches an URI counts. Specifying a lifetime\nof 'int_nil' seconds means that the URI will *not* be cached at all.\nThis is also the default if no prefix matches an URI.\n\nThe name of a cached document is the same as its location (URI). For explicitly\nshredded documents (with 'shred_doc(location,name)'), the name is an 'alias' and\nmay differ from the URI. Explicitly shredded documents fall outside the XML document\ncache; documents are only removed at explicit user request (with 'delete_doc(name)')."  ]
[ "xmlcache_print_rules",				  "PROC:      ",  "xmlcache_print_rules() : void",																										  "DESCRIPTION:\nshows all URI lifetime rules.\n\nThe XML document cache keeps indexed copies of documents that where recently\nused in the fn:doc(URI) xquery function.\n\nThe size of the cache is controlled using the 'xquery_cacheMB' setting in\nthe 'MonetDB.conf' file.\n\nFor file URIs, the cache looks at the last-modification-time of the file on disk\nto guarantee that the cached document is still up-to-date for answering queries from.\n\nFor other URIs, *lifetime rules* determine how long documents can stay in the cache.\nEach lifetime rule consists of a URI prefix and the registered seconds of lifetime.\n\nThe rule with longest prefix that matches an URI counts. Specifying a lifetime\nof 'int_nil' seconds means that the URI will *not* be cached at all.\nThis is also the default if no prefix matches an URI.\n\nThe name of a cached document is the same as its location (URI). For explicitly\nshredded documents (with 'shred_doc(location,name)'), the name is an 'alias' and\nmay differ from the URI. Explicitly shredded documents fall outside the XML document\ncache; documents are only removed at explicit user request (with 'delete_doc(name)')."	  ]
[ "xmldb_print",					  "PROC:      ",  "xmldb_print() : void",																											  "DESCRIPTION:\nshows the actual content of the persistent XML document database (not the XML document cache).\n\nThis consists of all documents explicitly shredded with shred_doc(URI, alias)."																																																																																																																										  ]
[ "xmltab2",						  "PROC:      ",  "xmltab2(BAT[void,BAT], BAT[any,any]) : BAT[void,oid]",																							  "not available"																																																																																																																																																  ]
[ "xmltab4",						  "PROC:      ",  "xmltab4(BAT[void,BAT], str, BAT[void,str], str, BAT[void,str], str, BAT[void,str], str, BAT[void,str]) : BAT[void,oid]",															  "not available"																																																																																																																																																  ]
[ "xquery",						  "BUILTIN:   ",  "xquery(mode str, xquery str, is_url bit) : str ",																								  "xquery execution. parameters: mode, query, is_url (optional)\n usage:  var result := xquery(\"xml\", \"1+1\", false); printf(\"%s\",result);\n or:  printf(\"%s\",xquery(\"xml\", \"1+1\"));"																																																																																																																										  ]
[ "xquery_frontend",					  "COMMAND:   ",  "xquery_frontend() : ptr",																											  "create/return the xquery_frontend callback interface to pass to mapi register. "																																																																																																																																								  ]
[ "xquery_logger_create",				  "COMMAND:   ",  "xquery_logger_create(int, str, str, str, int) : logger",																							  "Create logger, check if recovery is needed.  The XRPC handler for PRE_COMMIT is passed."																																																																																																																																							  ]
[ "xquery_start_query_cache",				  "COMMAND:   ",  "xquery_start_query_cache(lng) : void",																									  "Cached xquery clients use the query plan cache (also flushes the cache when called). if nonzero, the parameter is a per-connection size limit to the plan cache in bytes"																																																																																																																													  ]
[ "xrpc_status",					  "PROC:      ",  "xrpc_status() : void",																											  "not available"																																																																																																																																																  ]
[ "year",						  "PROC:      ",  "year(int) : int",																												  "not available"																																																																																																																																																  ]
[ "year",						  "PROC:      ",  "year(timestamp) : int",																											  "not available"																																																																																																																																																  ]
[ "{card}",						  "PROC:      ",  "{card}(BAT[oid,any], BAT[oid,any]) : BAT[oid,wrd]",																								  "not available"																																																																																																																																																  ]
[ "{card}",						  "PROC:      ",  "{card}(BAT[oid,any], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]",																						  "not available"																																																																																																																																																  ]
[ "{count}",						  "PROC:      ",  "{count}(BAT[oid,any], BAT[oid,any]) : BAT[oid,int]",																								  "not available"																																																																																																																																																  ]
[ "{count}",						  "PROC:      ",  "{count}(BAT[oid,any], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,bte], BAT[oid,any]) : BAT[oid,bte]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,bte], BAT[oid,oid], BAT[oid,any]) : BAT[oid,bte]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,dbl], BAT[oid,any]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,dbl], BAT[oid,oid], BAT[oid,any]) : BAT[oid,dbl]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,flt], BAT[oid,oid], BAT[oid,any]) : BAT[oid,flt]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,int], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,lng], BAT[oid,any]) : BAT[oid,lng]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,lng], BAT[oid,oid], BAT[oid,any]) : BAT[oid,lng]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,sht], BAT[oid,any]) : BAT[oid,sht]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,sht], BAT[oid,oid], BAT[oid,any]) : BAT[oid,sht]",																						  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,wrd], BAT[oid,any]) : BAT[oid,wrd]",																								  "not available"																																																																																																																																																  ]
[ "{prod}",						  "PROC:      ",  "{prod}(BAT[oid,wrd], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,bte], BAT[oid,any]) : BAT[oid,bte]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,bte], BAT[oid,oid], BAT[oid,any]) : BAT[oid,bte]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,dbl], BAT[oid,any]) : BAT[oid,dbl]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,dbl], BAT[oid,oid], BAT[oid,any]) : BAT[oid,dbl]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,flt], BAT[oid,oid], BAT[oid,any]) : BAT[oid,flt]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,int], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,lng], BAT[oid,any]) : BAT[oid,lng]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,lng], BAT[oid,oid], BAT[oid,any]) : BAT[oid,lng]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,sht], BAT[oid,any]) : BAT[oid,sht]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,sht], BAT[oid,oid], BAT[oid,any]) : BAT[oid,sht]",																						  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,wrd], BAT[oid,any]) : BAT[oid,wrd]",																								  "not available"																																																																																																																																																  ]
[ "{sum}",						  "PROC:      ",  "{sum}(BAT[oid,wrd], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]",																						  "not available"																																																																																																																																																  ]

Module: "pf_standoff"

[ 13 ]
[ 13 ]

# function				type		signature													help																																																																									  # name
# str				str		str														str																																																																									  # type

[ "blob",			  "COMMAND:   ",  "blob(BAT[void,int], BAT[void,int], str) : BAT[void,str]",							  "fetch data from region (start,end) blob (file)"																																																																			  ]
[ "blob",			  "COMMAND:   ",  "blob(BAT[void,lng], BAT[void,lng], str) : BAT[void,str]",							  "fetch data from region (start,end) blob (file)"																																																																			  ]
[ "ll_select_narrow_join_sort",	  "COMMAND:   ",  "ll_select_narrow_join_sort(BAT[oid,int], BAT[oid,int], BAT[oid,int], BAT[oid,int]) : BAT[oid,oid]",		  "loop lifted select narrow join (on ints), using inputs sorted on start"																																																																  ]
[ "ll_select_narrow_join_sort",	  "COMMAND:   ",  "ll_select_narrow_join_sort(BAT[oid,lng], BAT[oid,lng], BAT[oid,lng], BAT[oid,lng]) : BAT[oid,oid]",		  "loop lifted select narrow join (on lngs), using inputs sorted on start"																																																																  ]
[ "ll_select_wide_join_sort",	  "COMMAND:   ",  "ll_select_wide_join_sort(BAT[oid,int], BAT[oid,int], BAT[oid,int], BAT[oid,int]) : BAT[oid,oid]",		  "loop lifted select wide join (on ints), using inputs sorted on start"																																																																  ]
[ "ll_select_wide_join_sort",	  "COMMAND:   ",  "ll_select_wide_join_sort(BAT[oid,lng], BAT[oid,lng], BAT[oid,lng], BAT[oid,lng]) : BAT[oid,oid]",		  "loop lifted select wide join (on lngs), using inputs sorted on start"																																																																  ]
[ "regionindex_extract",	  "PROC:      ",  "regionindex_extract(BAT[void,BAT], oid, str) : void",							  "PARAMETERS:\nBAT[str,BAT] an active ws (Working Set)\noid coll_oid (index in the active working set)\nstr tpe (type of region-values (int or lng))\nDESCRIPTION:\nadds three BATs to the working set REGION_PRE, REGION_START, and REGION_END and fills them."																																									  ]
[ "select_narrow",		  "PROC:      ",  "select_narrow(BAT[oid,oid], BAT[oid,oid], oid, BAT[void,BAT], int, BAT[void,oid], chr) : BAT[void,BAT]",	  "PARAMETERS:\nBAT[void,oid] iter (grouping relation)\nBAT[void,oid] item (context set)\noid cont (the current container of the ws)\nBAT[void,bat] ws (working set)\nint order (input & output order properties:\n           bit 0: input is sorted on iter(0) or item(1)\n           bit 1: output must be sorted on iter(0) or item(1))\nBAT[void,oid] cands (sorted list of result candidate OIDs in the tail)\nDESCRIPTION:\nreturns all nodes on the select_narrow axis of the item-nodes duplicate free for each group.\nNOTE: this code is copied from pf_support (and was then modified)"	  ]
[ "select_narrow_join_sort",	  "COMMAND:   ",  "select_narrow_join_sort(BAT[oid,int], BAT[oid,int], BAT[oid,int], BAT[oid,int]) : BAT[void,oid]",		  "select narrow join (on ints), using inputs sorted on start"																																																																		  ]
[ "select_narrow_join_sort",	  "COMMAND:   ",  "select_narrow_join_sort(BAT[oid,lng], BAT[oid,lng], BAT[oid,lng], BAT[oid,lng]) : BAT[void,oid]",		  "select narrow join (on lngs), using inputs sorted on start"																																																																		  ]
[ "select_wide",		  "PROC:      ",  "select_wide(BAT[oid,oid], BAT[oid,oid], oid, BAT[void,BAT], int, BAT[void,oid], chr) : BAT[void,BAT]",	  "PARAMETERS:\nBAT[void,oid] iter (grouping relation)\nBAT[void,oid] item (context set)\noid cont (the current container of the ws)\nBAT[void,bat] ws (working set)\nint order (input & output order properties:\n           bit 0: input is sorted on iter(0) or item(1)\n           bit 1: output must be sorted on iter(0) or item(1))\nBAT[void,oid] cands (sorted list of result candidate OIDs in the tail)\nDESCRIPTION:\nreturns all nodes on the select_wide axis of the item-nodes duplicate free for each group.\nNOTE: this code is copied from pf_support (and was then modified)"	  ]
[ "select_wide_join_sort",	  "COMMAND:   ",  "select_wide_join_sort(BAT[oid,int], BAT[oid,int], BAT[oid,int], BAT[oid,int]) : BAT[void,oid]",		  "select wide join (on ints), using inputs sorted on start"																																																																		  ]
[ "select_wide_join_sort",	  "COMMAND:   ",  "select_wide_join_sort(BAT[oid,lng], BAT[oid,lng], BAT[oid,lng], BAT[oid,lng]) : BAT[void,oid]",		  "select wide join (on lngs), using inputs sorted on start"																																																																		  ]

Module: "pf_support"

[ 0 ]
[ 0 ]
#-------------------------------------------------#
# function		type	signature	help	  # name
# str		str	str		str	  # type
#-------------------------------------------------#

Module: "pftijah"

[ 8 ]
[ 8 ]

# function				type		signature							help																																																																				  # name
# str				str		str								str																																																																				  # type

[ "tj_add2collection",		  "PROC:      ",  "tj_add2collection(str, BAT[str,str], bit) : void",		  "PARAMETERS:\n- str ftiName: the name of the collection.\n\n- BAT[str,str]: the bat containing the [location,name] pairs of the xml docs.\n- bit shred: when true the doc is shredded when necessary.\nDESCRIPTION:\nThe multidocument version of tj_add2collection. The main difference with the\nother method is the [str,str] bat which contains the location of the document\nin the head and the name in the tail.\nThe advantage of this method is that the collection is finalized after all\nxml documents in the bat are added to the collection."	  ]
[ "tj_add2collection",		  "PROC:      ",  "tj_add2collection(str, str, str, bit) : void",		  "PARAMETERS:\n- str ftiName: the name of the collection.\n- str uri_loc: the location of the xml document.\n- str uri_name: the name of the xml document (optional).\n- bit shred: when true the doc is shredded when necessary.\nDESCRIPTION:\nAdd a document to a pftijah collection. The document is indexed and if the \nshred parameter is true it is also shredded in Pathfinder. \nThe index is automatically finalized at the end of the method."													  ]
[ "tj_add2collection_frag",	  "PROC:      ",  "tj_add2collection_frag(str, str, str, bit) : void",		  "PARAMETERS:\n- str ftiName: the name of the collection.\n- BAT[str,str]: the bat containing the [location,name] pairs of the xml docs.\n- bit shred: when true the doc is shredded when necessary.\nDESCRIPTION:\nAdds a documents to the index. If needed, the index is split into several fragments.\nEach fragment is finalized after it is filled to its maximum capacity."																						  ]
[ "tj_delete_collection",	  "PROC:      ",  "tj_delete_collection(str) : void",				  "PARAMETERS:\n- str ftiName: the name of the collection to be deleted.\n\nDESCRIPTION:\nDelete the collection with name \"ftiName\"."																																																				  ]
[ "tj_delete_global",		  "PROC:      ",  "tj_delete_global() : void",					  "PARAMETERS:\nDESCRIPTION:\nDelete all pftijah collections and remove the global pftijah settings."																																																								  ]
[ "tj_init_collection",		  "PROC:      ",  "tj_init_collection(str, BAT[str,str], BAT[void,str]) : void",  "PARAMETERS:\n- str ftiName: the name of the collection\n- BAT[str,str] param: initialization parameter for collection.\n  possible values are:\n  tokenizer = { flex, fast }\n  stemmer = { nostemming, snowball-english, snowball-porter, snowball-dutch }\n  fragmentSize = [number] == the maximum size of a [pre|item] fragment\n  tagFilter = [comma seperated list of tags to be indexed]\n  etc.\n- BAT[void,str] v_pfc, list of pathfinder collection to index \nDESCRIPTION:\nCreate a new tijah collection."					  ]
[ "tj_init_collection_base",	  "PROC:      ",  "tj_init_collection_base(str, BAT[str,str]) : void",		  "PARAMETERS:\n-` str ftiName: the name of the collection.\n\n- BAT[str,str] param: the bat containing all indexing parameters (stemming, stopping, ...)\nDESCRIPTION:\nThis function can be called to initialize an empty collection with certain indexing parameters\nwhich gets filled by later tj_add2collection calls."																													  ]
[ "tj_init_global",		  "PROC:      ",  "tj_init_global(BAT[str,str]) : void",			  "PARAMETERS:\n- optional BAT[str,str] param: initialization parameter for global pftijah.\n  settings.\nDESCRIPTION:\nInitialize the global pftijah environment."																																																  ]

Module: "probxml"

[ 3 ]
[ 3 ]
#-----------------------------------------------------------------------------------------------------------------------------------------#
# function			type		signature				help							  # name
# str			str		str					str							  # type
#-----------------------------------------------------------------------------------------------------------------------------------------#
[ "edit_distance",	  "COMMAND:   ",  "edit_distance(str, str) : lng",	  "INCOMPLETE"						  ]
[ "probxml_ping",	  "PROC:      ",  "probxml_ping() : void",		  "PARAMETERS:\n- none.\nDESCRIPTION:\n- debugging "	  ]
[ "probxml_test_c",	  "COMMAND:   ",  "probxml_test_c(str) : str",		  "INCOMPLETE"						  ]

Module: "restore"

[ 9 ]
[ 9 ]
#---------------------------------------------------------------------------------------------------------------------------------#
# function			type		signature							help			  # name
# str			str		str								str			  # type
#---------------------------------------------------------------------------------------------------------------------------------#
[ "bat_ttype",		  "PROC:      ",  "bat_ttype(BAT[any,any]) : str",				  "not available"	  ]
[ "dump_data",		  "PROC:      ",  "dump_data(BAT[str,BAT], BAT[str,BAT], str, int) : void",	  "not available"	  ]
[ "dump_data",		  "PROC:      ",  "dump_data(BAT[str,BAT], str, int) : void",			  "not available"	  ]
[ "dump_format",	  "PROC:      ",  "dump_format(BAT[void,BAT], str) : BAT[str,BAT]",		  "not available"	  ]
[ "dump_seps",		  "PROC:      ",  "dump_seps(BAT[void,BAT]) : BAT[void,str]",			  "not available"	  ]
[ "export",		  "PROC:      ",  "export(BAT[any,any], str) : void",				  "not available"	  ]
[ "import",		  "PROC:      ",  "import(BAT[any,any], str) : BAT[any,any]",			  "not available"	  ]
[ "load_persistent",	  "PROC:      ",  "load_persistent(str) : int",					  "not available"	  ]
[ "restore",		  "PROC:      ",  "restore(str) : void",					  "not available"	  ]

Module: "xrpc_client"

[ 5 ]
[ 5 ]
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# function			type		signature																													help										  # name
# str			str		str																														str										  # type
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "doIterativeRPC",	  "PROC:      ",  "doIterativeRPC(str, str, str, bit, lng, lng, BAT[void,BAT], BAT[oid,str], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]",				  "DESCRIPTION: make a separate RPC call for ever iteration"			  ]
[ "doLoopLiftedRPC",	  "PROC:      ",  "doLoopLiftedRPC(str, str, str, bit, lng, lng, BAT[void,BAT], BAT[oid,str], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]",				  "DESCRIPTION: implementation of the loop-lifted RPC"				  ]
[ "get_rpc_res",	  "COMMAND:   ",  "get_rpc_res(oid, BAT[void,BAT], BAT[void,lng], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]",																		  "Retrieve values from the response message and return as a iter|item|kind bat"  ]
[ "http_post",		  "COMMAND:   ",  "http_post(str, str, str, str, bit, lng, lng, str, str, str, str, bit, lng, lng, BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : BAT[str,BAT]",	  "Create and send a RPC request message to the specified destination"		  ]
[ "xrpc_commit",	  "COMMAND:   ",  "xrpc_commit(str, str, BAT[void,str]) : void",																								  "coordinate a 2pc commit"							  ]

Module: "xrpc_server"

[ 8 ]
[ 8 ]
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# function			type		signature						help														  # name
# str			str		str							str														  # type
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "get_xrpc_open",	  "PROC:      ",  "get_xrpc_open() : bit",				  "DESCRIPTION:\nFind if the XRPC server should accept connections from other hosts"				  ]
[ "get_xrpc_options",	  "PROC:      ",  "get_xrpc_options() : str",				  "DESCRIPTION:\nFind the options that should be pass to the XRPC server, currently \"timing\" or \"debug\""	  ]
[ "get_xrpc_port",	  "PROC:      ",  "get_xrpc_port() : int",				  "DESCRIPTION:\nfind/calculate the port number to be used by the XRPC server"					  ]
[ "my_hostname",	  "COMMAND:   ",  "my_hostname() : str",				  "Returns the hostname of the localhost."									  ]
[ "rpcd_start",		  "COMMAND:   ",  "rpcd_start(int, bit, str) : void",			  "Start the HTTP server for RPC calls on the specified port."							  ]
[ "rpcd_start",		  "PROC:      ",  "rpcd_start() : void",				  "DESCRIPTION:\nStart XPRC receiver using the default values as specified in \"monet_environment\""		  ]
[ "xrpc_confirm_commit",  "COMMAND:   ",  "xrpc_confirm_commit(str, str, lng, ptr) : void",	  "report commit"												  ]
[ "xrpc_wait_for_commit", "COMMAND:   ",  "xrpc_wait_for_commit(str, str, lng, ptr) : void",	  "report prepared, wait for commit"										  ]

quit();

# 15:30:12 >  
# 15:30:12 >  Done.
# 15:30:12 >  

