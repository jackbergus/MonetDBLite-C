stdout of test 'all` in directory 'tests/sigs` itself:

#> Mtest:	milS all milS
#> Mtest:	Mserver -yaccsilent -d8 -home /hosts/dbfarm/Monet/Current/monet/IRIX6.3 -db tests_sigs -single all.milS
# Monet Database Server V4.0
# Copyright (c) 1993-1998, CWI & SION. All rights reserved.
# compiled for IRIX6.3/32bit on Fri Oct  2 00:21:04 MET DST 1998.
#script:all.milS


#You are system administrator (adm)!
setoid(20000000);
loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
procs;
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
monet_mod_nme.reverse.sort.print;
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "algebra",	  10293@0	  ]
[ "arith",	  10026@0	  ]
[ "bat",	  10244@0	  ]
[ "kernel",	  10000@0	  ]
[ "sys",	  10366@0	  ]
[ "trans",	  10423@0	  ]
monet_mod_nme.reverse.sort@batloop(){
	printf("\n\t%s\n\n",$h);
	sigs($h);
}

	algebra

#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "bandjoin(BAT[any::1,any::2], BAT[any::2,any::3], any::2, any::2) : BAT[any::1,any::3]"  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "copy(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "count(BAT[any,any]) : int"					  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "exist(BAT[any::1,any], any::1) : bit"			  ]
[ "fetch(BAT[any,any::1], int) : any::1"			  ]
[ "fetch(BAT[any,any::1], oid) : any::1"			  ]
[ "fetch(BAT[any::1,any::2], BAT[int,any]) : BAT[any::1,any::2]"  ]
[ "fetch(BAT[any::1,any::2], BAT[oid,any]) : BAT[any::1,any::2]"  ]
[ "find(BAT[any::1,any::2], any::1) : any::2"			  ]
[ "fragment(BAT[any::1,any::2], any::1, any::1, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "hashsplit(BAT[any::1,any::2], int) : BAT[int,BAT]"		  ]
[ "histogram(BAT[any,any::2]) : BAT[any::2,int]"		  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "kdiff(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"  ]
[ "kintersect(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"  ]
[ "kunion(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "kunique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "like(BAT[any::1,str], str) : BAT[any::1,str]"		  ]
[ "mark(BAT[any::1,any]) : BAT[any::1,oid]"			  ]
[ "mark(BAT[any::1,any], oid) : BAT[any::1,oid]"		  ]
[ "max(BAT[any,dbl]) : dbl"					  ]
[ "max(BAT[any,flt]) : flt"					  ]
[ "max(BAT[any,int]) : int"					  ]
[ "max(BAT[any,lng]) : lng"					  ]
[ "max(BAT[any,sht]) : sht"					  ]
[ "max(BAT[any::1,any::2]) : any::2"				  ]
[ "min(BAT[any,dbl]) : dbl"					  ]
[ "min(BAT[any,flt]) : flt"					  ]
[ "min(BAT[any,int]) : int"					  ]
[ "min(BAT[any,lng]) : lng"					  ]
[ "min(BAT[any,sht]) : sht"					  ]
[ "min(BAT[any::1,any::2]) : any::2"				  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "number(BAT[any::1,any]) : BAT[any::1,int]"			  ]
[ "outerjoin(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"  ]
[ "position(BAT[any::1,any], any::1) : int"			  ]
[ "project(BAT[any::1,any]) : BAT[any::1,void]"			  ]
[ "rangesplit(BAT[any::1,any::2], int) : BAT[any::2,BAT]"	  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "sample(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "sdiff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "select(BAT[any::1,any::2], any::2) : BAT[any::1,any::2]"	  ]
[ "select(BAT[any::1,any::2], any::2) : BAT[any::1,any::2]"	  ]
[ "select(BAT[any::1,any::2], any::2, any::2) : BAT[any::1,any::2]"  ]
[ "semijoin(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"  ]
[ "sintersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "slice(BAT[any::1,any::2], int, int) : BAT[any::1,any::2]"	  ]
[ "sort(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "split(BAT[any::1,any::2], BAT[oid,any::1], BAT[oid,any::2]) : void"  ]
[ "sum(BAT[any,dbl]) : dbl"					  ]
[ "sum(BAT[any,flt]) : flt"					  ]
[ "sum(BAT[any,int]) : int"					  ]
[ "sum(BAT[any,lng]) : lng"					  ]
[ "sum(BAT[any,sht]) : sht"					  ]
[ "sunion(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "sunique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "theta(BAT[any::2,any::2], BAT[any::1,any::3], BAT[any::1,any::2], BAT[any::2,any::3], int) : void"  ]
[ "thetajoin(BAT[any::1,any::2], BAT[any::2,any::3], int) : BAT[any::1,any::3]"  ]
[ "uhashsplit(BAT[any::1,any::2], int) : BAT[int,BAT]"		  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "urangesplit(BAT[any::1,any::2], int) : BAT[any::2,BAT]"	  ]
[ "uselect(BAT[any::1,any::2], any::2) : BAT[any::1,void]"	  ]
[ "uselect(BAT[any::1,any::2], any::2, any::2) : BAT[any::1,void]"  ]
[ "{count}(BAT[any::2,any]) : BAT[any::2,int]"			  ]

	arith

#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "!=(any::1, any::1) : bit"			  ]
[ "!=(bit, bit) : bit"				  ]
[ "!=(chr, chr) : bit"				  ]
[ "!=(dbl, dbl) : bit"				  ]
[ "!=(flt, flt) : bit"				  ]
[ "!=(int, int) : bit"				  ]
[ "!=(lng, lng) : bit"				  ]
[ "!=(oid, oid) : bit"				  ]
[ "!=(sht, sht) : bit"				  ]
[ "!=(str, str) : bit"				  ]
[ "%(chr, int) : int"				  ]
[ "%(int, chr) : chr"				  ]
[ "%(int, int) : int"				  ]
[ "%(int, sht) : sht"				  ]
[ "%(lng, int) : int"				  ]
[ "%(sht, int) : int"				  ]
[ "*(chr, chr) : chr"				  ]
[ "*(chr, int) : int"				  ]
[ "*(chr, sht) : sht"				  ]
[ "*(dbl, dbl) : dbl"				  ]
[ "*(dbl, flt) : dbl"				  ]
[ "*(dbl, int) : dbl"				  ]
[ "*(flt, dbl) : dbl"				  ]
[ "*(flt, flt) : flt"				  ]
[ "*(flt, int) : flt"				  ]
[ "*(int, chr) : int"				  ]
[ "*(int, dbl) : dbl"				  ]
[ "*(int, flt) : flt"				  ]
[ "*(int, int) : int"				  ]
[ "*(int, lng) : lng"				  ]
[ "*(int, sht) : int"				  ]
[ "*(lng, int) : lng"				  ]
[ "*(lng, lng) : lng"				  ]
[ "*(sht, chr) : sht"				  ]
[ "*(sht, int) : int"				  ]
[ "*(sht, sht) : sht"				  ]
[ "+(chr, chr) : chr"				  ]
[ "+(chr, int) : int"				  ]
[ "+(chr, sht) : sht"				  ]
[ "+(dbl, dbl) : dbl"				  ]
[ "+(dbl, flt) : dbl"				  ]
[ "+(dbl, int) : dbl"				  ]
[ "+(flt, dbl) : dbl"				  ]
[ "+(flt, flt) : flt"				  ]
[ "+(flt, int) : flt"				  ]
[ "+(int, chr) : int"				  ]
[ "+(int, dbl) : dbl"				  ]
[ "+(int, flt) : flt"				  ]
[ "+(int, int) : int"				  ]
[ "+(int, lng) : lng"				  ]
[ "+(int, sht) : int"				  ]
[ "+(lng, int) : lng"				  ]
[ "+(lng, lng) : lng"				  ]
[ "+(sht, chr) : sht"				  ]
[ "+(sht, int) : int"				  ]
[ "+(sht, sht) : sht"				  ]
[ "-(chr) : chr"				  ]
[ "-(chr, chr) : chr"				  ]
[ "-(chr, int) : int"				  ]
[ "-(chr, sht) : sht"				  ]
[ "-(dbl) : dbl"				  ]
[ "-(dbl, dbl) : dbl"				  ]
[ "-(dbl, flt) : dbl"				  ]
[ "-(dbl, int) : dbl"				  ]
[ "-(flt) : flt"				  ]
[ "-(flt, dbl) : dbl"				  ]
[ "-(flt, flt) : flt"				  ]
[ "-(flt, int) : flt"				  ]
[ "-(int) : int"				  ]
[ "-(int, chr) : int"				  ]
[ "-(int, dbl) : dbl"				  ]
[ "-(int, flt) : flt"				  ]
[ "-(int, int) : int"				  ]
[ "-(int, lng) : lng"				  ]
[ "-(int, sht) : int"				  ]
[ "-(lng) : lng"				  ]
[ "-(lng, int) : lng"				  ]
[ "-(lng, lng) : lng"				  ]
[ "-(sht) : sht"				  ]
[ "-(sht, chr) : sht"				  ]
[ "-(sht, int) : int"				  ]
[ "-(sht, sht) : sht"				  ]
[ "/(chr, chr) : chr"				  ]
[ "/(chr, int) : int"				  ]
[ "/(chr, sht) : sht"				  ]
[ "/(dbl, dbl) : dbl"				  ]
[ "/(dbl, flt) : dbl"				  ]
[ "/(dbl, int) : dbl"				  ]
[ "/(flt, dbl) : dbl"				  ]
[ "/(flt, flt) : flt"				  ]
[ "/(flt, int) : flt"				  ]
[ "/(int, chr) : int"				  ]
[ "/(int, dbl) : dbl"				  ]
[ "/(int, flt) : flt"				  ]
[ "/(int, int) : int"				  ]
[ "/(int, lng) : lng"				  ]
[ "/(int, sht) : int"				  ]
[ "/(lng, int) : lng"				  ]
[ "/(lng, lng) : lng"				  ]
[ "/(sht, chr) : sht"				  ]
[ "/(sht, int) : int"				  ]
[ "/(sht, sht) : sht"				  ]
[ "<(any::1, any::1) : bit"			  ]
[ "<(chr, chr) : bit"				  ]
[ "<(dbl, dbl) : bit"				  ]
[ "<(flt, flt) : bit"				  ]
[ "<(int, int) : bit"				  ]
[ "<(lng, lng) : bit"				  ]
[ "<(oid, oid) : bit"				  ]
[ "<(sht, sht) : bit"				  ]
[ "<(str, str) : bit"				  ]
[ "<<(chr, int) : chr"				  ]
[ "<<(int, int) : int"				  ]
[ "<<(lng, int) : lng"				  ]
[ "<<(sht, int) : sht"				  ]
[ "<=(any::1, any::1) : bit"			  ]
[ "<=(chr, chr) : bit"				  ]
[ "<=(dbl, dbl) : bit"				  ]
[ "<=(flt, flt) : bit"				  ]
[ "<=(int, int) : bit"				  ]
[ "<=(lng, lng) : bit"				  ]
[ "<=(oid, oid) : bit"				  ]
[ "<=(sht, sht) : bit"				  ]
[ "<=(str, str) : bit"				  ]
[ "=(any::1, any::1) : bit"			  ]
[ "=(bit, bit) : bit"				  ]
[ "=(chr, chr) : bit"				  ]
[ "=(dbl, dbl) : bit"				  ]
[ "=(flt, flt) : bit"				  ]
[ "=(int, int) : bit"				  ]
[ "=(lng, lng) : bit"				  ]
[ "=(oid, oid) : bit"				  ]
[ "=(sht, sht) : bit"				  ]
[ "=(str, str) : bit"				  ]
[ ">(any::1, any::1) : bit"			  ]
[ ">(chr, chr) : bit"				  ]
[ ">(dbl, dbl) : bit"				  ]
[ ">(flt, flt) : bit"				  ]
[ ">(int, int) : bit"				  ]
[ ">(lng, lng) : bit"				  ]
[ ">(oid, oid) : bit"				  ]
[ ">(sht, sht) : bit"				  ]
[ ">(str, str) : bit"				  ]
[ ">=(any::1, any::1) : bit"			  ]
[ ">=(chr, chr) : bit"				  ]
[ ">=(dbl, dbl) : bit"				  ]
[ ">=(flt, flt) : bit"				  ]
[ ">=(int, int) : bit"				  ]
[ ">=(lng, lng) : bit"				  ]
[ ">=(oid, oid) : bit"				  ]
[ ">=(sht, sht) : bit"				  ]
[ ">=(str, str) : bit"				  ]
[ ">>(chr, int) : chr"				  ]
[ ">>(int, int) : int"				  ]
[ ">>(lng, int) : lng"				  ]
[ ">>(sht, int) : sht"				  ]
[ "abs(chr) : chr"				  ]
[ "abs(dbl) : dbl"				  ]
[ "abs(flt) : flt"				  ]
[ "abs(int) : int"				  ]
[ "abs(lng) : lng"				  ]
[ "abs(sht) : sht"				  ]
[ "and(bit, bit) : bit"				  ]
[ "and(chr, chr) : chr"				  ]
[ "and(int, int) : int"				  ]
[ "and(lng, lng) : lng"				  ]
[ "and(sht, sht) : sht"				  ]
[ "between(any::1, any::1, any::1) : bit"	  ]
[ "between(chr, chr, chr) : bit"		  ]
[ "between(dbl, dbl, dbl) : bit"		  ]
[ "between(flt, flt, flt) : bit"		  ]
[ "between(int, int, int) : bit"		  ]
[ "between(lng, lng, lng) : bit"		  ]
[ "between(oid, oid, oid) : bit"		  ]
[ "between(sht, sht, sht) : bit"		  ]
[ "between(str, str, str) : bit"		  ]
[ "ifthenelse(bit, any::1, any::1) : any::1"	  ]
[ "inv(chr) : chr"				  ]
[ "inv(dbl) : dbl"				  ]
[ "inv(flt) : flt"				  ]
[ "inv(int) : int"				  ]
[ "inv(lng) : lng"				  ]
[ "inv(sht) : sht"				  ]
[ "isnil(any) : bit"				  ]
[ "max(any::1, any::1) : any::1"		  ]
[ "max(chr, chr) : chr"				  ]
[ "max(dbl, dbl) : dbl"				  ]
[ "max(flt, flt) : flt"				  ]
[ "max(int, int) : int"				  ]
[ "max(lng, lng) : lng"				  ]
[ "max(oid, oid) : oid"				  ]
[ "max(sht, sht) : sht"				  ]
[ "min(any::1, any::1) : any::1"		  ]
[ "min(chr, chr) : chr"				  ]
[ "min(dbl, dbl) : dbl"				  ]
[ "min(flt, flt) : flt"				  ]
[ "min(int, int) : int"				  ]
[ "min(lng, lng) : lng"				  ]
[ "min(oid, oid) : oid"				  ]
[ "min(sht, sht) : sht"				  ]
[ "not(bit) : bit"				  ]
[ "not(chr) : chr"				  ]
[ "not(int) : int"				  ]
[ "not(lng) : lng"				  ]
[ "not(sht) : sht"				  ]
[ "or(bit, bit) : bit"				  ]
[ "or(chr, chr) : chr"				  ]
[ "or(int, int) : int"				  ]
[ "or(lng, lng) : lng"				  ]
[ "or(sht, sht) : sht"				  ]
[ "rand() : int"				  ]
[ "srand(int) : void"				  ]
[ "xor(bit, bit) : bit"				  ]
[ "xor(chr, chr) : chr"				  ]
[ "xor(int, int) : int"				  ]
[ "xor(lng, lng) : lng"				  ]
[ "xor(sht, sht) : sht"				  ]

	bat

#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "accbuild(BAT[any,any], int) : void"				  ]
[ "accbuild(BAT[any,any], int, any) : void"			  ]
[ "accdestroy(BAT[any,any], int) : void"			  ]
[ "access(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "accpresent(BAT[any,any]) : int"				  ]
[ "batloop(BAT[any,any], ptr) : void"				  ]
[ "batloop(BAT[any,any], ptr, int, int) : void"			  ]
[ "bbpname(BAT[any,any], str) : bit"				  ]
[ "capacity(BAT[any,any]) : int"				  ]
[ "cold(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "convert(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "delete(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "delete(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"  ]
[ "delete(BAT[any::1,any::2], any::1) : BAT[any::1,any::2]"	  ]
[ "delete(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]"  ]
[ "destroy(BAT[any,any]) : void"				  ]
[ "export(BAT[any,any], str) : void"				  ]
[ "hashloop(BAT[any::1,any], ptr, any::1) : void"		  ]
[ "hashpersist(BAT[any,any], bit) : void"			  ]
[ "hot(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "htype(BAT[any,any]) : int"					  ]
[ "import(BAT[any,any], str) : BAT[any,any]"			  ]
[ "info(BAT[any,any]) : BAT[str,str]"				  ]
[ "insert(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "insert(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]"  ]
[ "key(BAT[any::1,any::2], bit) : BAT[any::1,any::2]"		  ]
[ "load(str) : BAT[any,any]"					  ]
[ "madvise(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "madvise(BAT[any::1,any::2], int, int, int, int, int) : BAT[any::1,any::2]"  ]
[ "mirror(BAT[any::1,any]) : BAT[any::1,any::1]"		  ]
[ "mmap(BAT[any::1,any::2], int) : BAT[any::1,any::2]"		  ]
[ "mmap(BAT[any::1,any::2], int, int, int, int, int) : BAT[any::1,any::2]"  ]
[ "mmap(str, int) : BAT[any::1,any::2]"				  ]
[ "mmap(str, int, int, int, int, int) : BAT[any,any]"		  ]
[ "new(int, int) : BAT[any,any]"				  ]
[ "new(int, int, int) : BAT[any,any]"				  ]
[ "ordered(BAT[any,any]) : bit"					  ]
[ "persists(BAT[any::1,any::2], bit) : BAT[any::1,any::2]"	  ]
[ "replace(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "replace(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]"  ]
[ "reverse(BAT[any::1,any::2]) : BAT[any::2,any::1]"		  ]
[ "roles(BAT[any::1,any::2], str, str) : BAT[any::1,any::2]"	  ]
[ "save(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "seqbase(BAT[any::1,any::2], oid) : BAT[any::1,any::2]"	  ]
[ "set(BAT[any::1,any::2], bit) : BAT[any::1,any::2]"		  ]
[ "synced(BAT[any,any], BAT[any,any]) : bit"			  ]
[ "ttype(BAT[any,any]) : int"					  ]
[ "unload(BAT[any,any]) : void"					  ]

	kernel

#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "ERROR(str format, ...any...) "				  ]
[ "[cast] (bat[any::1,any] v, int type_specifier) : bat[any::1,any] "  ]
[ "cast(any v, int type_specifier) : any "			  ]
[ "clientid() : int "						  ]
[ "constant(IDENT varname, ..IDENT... ) "			  ]
[ "drop(str modname) "				  ]
[ "eval(str format) : any "					  ]
[ "fork(STATEMENT) : int "					  ]
[ "freeze(IDENT varname, ..IDENT...) "				  ]
[ "kill(int clientid) "						  ]
[ "module(str modname) "				  ]
[ "newoid(int range) : oid "					  ]
[ "prompt(str prompt) "						  ]
[ "qstat() "							  ]
[ "qtrace(INT jobnumber) "					  ]
[ "queue() "							  ]
[ "quit() or CTRL-D "						  ]
[ "runon(STATEMENT, int threadno) "				  ]
[ "setoid(oid base) : oid "					  ]
[ "shutdown() "							  ]
[ "source(str mil_file) : any "					  ]
[ "threadcnt(int inc) : int "					  ]
[ "threadid() : int "						  ]
[ "type(any v) : int "						  ]
[ "varname(VARIABLE) : str "					  ]

	sys

#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "batsize(BAT[any,any]) : int"					  ]
[ "bbp() : BAT[str,int]"					  ]
[ "clients() : void"						  ]
[ "cpu() : BAT[str,int]"					  ]
[ "dir() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "format_fcn_sig(oid) : str"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "help(str) : void"						  ]
[ "io() : BAT[str,int]"						  ]
[ "loaded() : void"						  ]
[ "ls() : void"							  ]
[ "memory() : BAT[str,int]"					  ]
[ "module_db(str) : str"					  ]
[ "module_name(str) : str"					  ]
[ "modules() : void"						  ]
[ "print(BAT[any::1,any], ..BAT[any::1,any]..) : void"		  ]
[ "print(any) : void"						  ]
[ "print(int, BAT[any::1,any], ..BAT[any::1,any]..) : void"	  ]
[ "printf(str, ..any..) : void"					  ]
[ "procs() : void"						  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "sigs(str) : void"						  ]
[ "sprintf(str, ..any..) : str"					  ]
[ "table(BAT[any::1,any], ..BAT[any::1,any]..) : void"		  ]
[ "table(int, BAT[any::1,any], ..BAT[any::1,any]..) : void"	  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "threads() : void"						  ]
[ "vars() : void"						  ]
[ "view_bbp_group() : BAT[int,str]"				  ]
[ "view_bbp_heat() : BAT[int,int]"				  ]
[ "view_bbp_kind() : BAT[int,str]"				  ]
[ "view_bbp_location() : BAT[int,str]"				  ]
[ "view_bbp_name() : BAT[int,str]"				  ]
[ "view_bbp_role() : BAT[int,str]"				  ]
[ "view_bbp_status() : BAT[int,str]"				  ]
[ "view_client_login() : BAT[int,str]"				  ]
[ "view_client_name() : BAT[int,str]"				  ]
[ "view_client_tree() : BAT[int,str]"				  ]
[ "view_gdk_bbp() : BAT[str,int]"				  ]
[ "view_gdk_cpu() : BAT[str,int]"				  ]
[ "view_gdk_env() : BAT[str,str]"				  ]
[ "view_gdk_io() : BAT[str,int]"				  ]
[ "view_gdk_memory() : BAT[str,int]"				  ]
[ "view_gdk_thread() : BAT[int,str]"				  ]
[ "view_modules() : BAT[int,str]"				  ]
[ "view_var_constant() : BAT[int,str] "				  ]
[ "view_var_kind() : BAT[int,str] "				  ]
[ "view_var_type() : BAT[int,str] "				  ]

	trans

#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "abort() : void"					  ]
[ "abort(BAT[any,any], ..BAT[any,any]..) : void"	  ]
[ "alpha(BAT[any::1,any::2]) : BAT[any::1,any::2]"	  ]
[ "clean(BAT[any,any], ..BAT[any,any]..) : void"	  ]
[ "commit() : void"					  ]
[ "commit(BAT[any,any], ..BAT[any,any]..) : void"	  ]
[ "delta(BAT[any::1,any::2]) : BAT[any::1,any::2]"	  ]
procs; 
loaded;
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
monet_mod_nme.reverse.sort.print;
#---------------------------------#
# BAT:		  tmp_59	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "algebra",	  10293@0	  ]
[ "arith",	  10026@0	  ]
[ "bat",	  10244@0	  ]
[ "kernel",	  10000@0	  ]
[ "sys",	  10366@0	  ]
[ "trans",	  10423@0	  ]
modules;
#---------------------------------#
# name		| database	  #
#---------------------------------#
[ "vector",	  "any"		  ]
[ "arith",	  "any"		  ]
[ "mmath",	  "any"		  ]
[ "Test9",	  "any"		  ]
[ "Test8",	  "any"		  ]
[ "Test5",	  "any"		  ]
[ "Test4",	  "any"		  ]
[ "Test7",	  "any"		  ]
[ "Test6",	  "any"		  ]
[ "Test1",	  "any"		  ]
[ "Test3",	  "any"		  ]
[ "Test2",	  "any"		  ]
[ "OdmgTest",	  "any"		  ]
[ "blob",	  "any"		  ]
[ "str",	  "any"		  ]
[ "odmg",	  "any"		  ]
[ "TestUse",	  "any"		  ]
[ "gisbulk",	  "any"		  ]
[ "url",	  "any"		  ]
[ "xtables",	  "any"		  ]
[ "Example",	  "any"		  ]
[ "alarm",	  "any"		  ]
[ "bat",	  "any"		  ]
[ "CC_odmg",	  "any"		  ]
[ "unix",	  "any"		  ]
[ "jOdmg",	  "any"		  ]
[ "CC_Test",	  "any"		  ]
[ "oo7",	  "any"		  ]
[ "mprof",	  "any"		  ]
[ "blg",	  "any"		  ]
[ "algebra",	  "any"		  ]
[ "meta",	  "any"		  ]
[ "kernel",	  "any"		  ]
[ "trans",	  "any"		  ]
[ "gdkmem",	  "any"		  ]
[ "temporal",	  "any"		  ]
[ "enum",	  "any"		  ]
[ "tcpip",	  "any"		  ]
[ "TransTest",	  "any"		  ]
[ "Test",	  "any"		  ]
[ "tpcd",	  "any"		  ]
[ "wisc",	  "any"		  ]
[ "lock",	  "any"		  ]
[ "io",		  "any"		  ]
[ "sys",	  "any"		  ]
[ "gis",	  "any"		  ]
[ "fmap",	  "any"		  ]
view_modules.reverse.sort.print;
#-------------------------#
# BAT:		  tmp_60  #
# (str)		  (int)	  #
#-------------------------#
[ "CC_Test",	  26	  ]
[ "CC_odmg",	  23	  ]
[ "Example",	  20	  ]
[ "OdmgTest",	  12	  ]
[ "Test",	  40	  ]
[ "Test1",	  9	  ]
[ "Test2",	  11	  ]
[ "Test3",	  10	  ]
[ "Test4",	  6	  ]
[ "Test5",	  5	  ]
[ "Test6",	  8	  ]
[ "Test7",	  7	  ]
[ "Test8",	  4	  ]
[ "Test9",	  3	  ]
[ "TestUse",	  16	  ]
[ "TransTest",	  38	  ]
[ "alarm",	  21	  ]
[ "algebra",	  30	  ]
[ "arith",	  1	  ]
[ "bat",	  22	  ]
[ "blg",	  29	  ]
[ "blob",	  13	  ]
[ "enum",	  36	  ]
[ "fmap",	  47	  ]
[ "gdkmem",	  34	  ]
[ "gis",	  46	  ]
[ "gisbulk",	  17	  ]
[ "io",		  44	  ]
[ "jOdmg",	  25	  ]
[ "kernel",	  32	  ]
[ "lock",	  43	  ]
[ "meta",	  31	  ]
[ "mmath",	  2	  ]
[ "mprof",	  28	  ]
[ "odmg",	  15	  ]
[ "oo7",	  27	  ]
[ "str",	  14	  ]
[ "sys",	  45	  ]
[ "tcpip",	  37	  ]
[ "temporal",	  35	  ]
[ "tpcd",	  41	  ]
[ "trans",	  33	  ]
[ "unix",	  24	  ]
[ "url",	  18	  ]
[ "vector",	  0	  ]
[ "wisc",	  42	  ]
[ "xtables",	  19	  ]
fix:=monet_mod_nme.reverse.copy;
fix.print;
#---------------------------------#
# BAT:		  tmp_59	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "kernel",	  10000@0	  ]
[ "arith",	  10026@0	  ]
[ "bat",	  10244@0	  ]
[ "algebra",	  10293@0	  ]
[ "sys",	  10366@0	  ]
[ "trans",	  10423@0	  ]
others:=kdiff(view_modules.reverse,monet_mod_nme.reverse).sort.access(BAT_WRITE).revert;
others.print;
#-------------------------#
# BAT:		  tmp_62  #
# (str)		  (int)	  #
#-------------------------#
[ "xtables",	  19	  ]
[ "wisc",	  42	  ]
[ "vector",	  0	  ]
[ "url",	  18	  ]
[ "unix",	  24	  ]
[ "tpcd",	  41	  ]
[ "temporal",	  35	  ]
[ "tcpip",	  37	  ]
[ "str",	  14	  ]
[ "oo7",	  27	  ]
[ "odmg",	  15	  ]
[ "mprof",	  28	  ]
[ "mmath",	  2	  ]
[ "meta",	  31	  ]
[ "lock",	  43	  ]
[ "jOdmg",	  25	  ]
[ "io",		  44	  ]
[ "gisbulk",	  17	  ]
[ "gis",	  46	  ]
[ "gdkmem",	  34	  ]
[ "fmap",	  47	  ]
[ "enum",	  36	  ]
[ "blob",	  13	  ]
[ "blg",	  29	  ]
[ "alarm",	  21	  ]
[ "TransTest",	  38	  ]
[ "TestUse",	  16	  ]
[ "Test9",	  3	  ]
[ "Test8",	  4	  ]
[ "Test7",	  7	  ]
[ "Test6",	  8	  ]
[ "Test5",	  5	  ]
[ "Test4",	  6	  ]
[ "Test3",	  10	  ]
[ "Test2",	  11	  ]
[ "Test1",	  9	  ]
[ "Test",	  40	  ]
[ "OdmgTest",	  12	  ]
[ "Example",	  20	  ]
[ "CC_odmg",	  23	  ]
[ "CC_Test",	  26	  ]
others@batloop(){
	printf("\n\tloading %s\n\n",$h);
	module($h);
	loaded;
	sigs($h);
	procs;
	off:=kdiff(monet_mod_nme.reverse,fix);
	off.print;
	off@batloop(){
		printf("\n\tdropping %s\n\n",$h);
		drop($h);
	}
	loaded;
}

	loading xtables

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "xtables",	  1		  ]
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "CTcumsum(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"		  ]
[ "CTgroup(BAT[oid,any]) : BAT[oid,oid]"			  ]
[ "CTgroup(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "CTgroup(BAT[void,any::1], BAT[void,any]) : BAT[void,any::2]"	  ]
[ "CTgroup(BAT[void,any]) : BAT[void,any::1]"			  ]
[ "CThistosum(BAT[oid,oid], BAT[oid,int]) : BAT[oid,int]"	  ]
[ "CTreduce(BAT[void,oid], oid) : BAT[void,any]"		  ]
[ "CTregroup(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"	  ]
[ "CTsemihisto(BAT[oid,any], BAT[oid,any]) : BAT[oid,int]"	  ]
[ "CTsubgroup(BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"  ]
[ "CTsubgroup(BAT[void,any::1], BAT[void,any], BAT[oid,any]) : BAT[oid,any::2]"  ]
[ "histogram(BAT[any,any]) : BAT[any,int]"			  ]
[ "tunique(BAT[any,any]) : BAT[any,void]"			  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
#---------------------------------#
# BAT:		  tmp_61	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "xtables",	  10438@0	  ]

	dropping xtables

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading wisc

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "wisc",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "wisc(str, int) : void"	  ]
[ "wiscdestroy(str) : void"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "wisc", 10455@0	  ]

	dropping wisc

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading vector

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "vector",	  1		  ]
[ "gdkmem",	  1		  ]
[ "mmath",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "dbls_rancreate(int) : dbls"	  ]
[ "dimension(dbls) : int"	  ]
[ "dimension(flts) : int"	  ]
[ "dimension(ints) : int"	  ]
[ "distance(dbls, dbls) : dbl"	  ]
[ "distance(flts, flts) : dbl"	  ]
[ "distance(ints, ints) : dbl"	  ]
[ "flts_rancreate(int) : flts"	  ]
[ "getval(dbls, int) : dbl"	  ]
[ "getval(flts, int) : flt"	  ]
[ "getval(ints, int) : int"	  ]
[ "ints_rancreate(int) : ints"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
#---------------------------------#
# BAT:		  tmp_61	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "vector",	  10458@0	  ]
[ "gdkmem",	  10459@0	  ]
[ "mmath",	  10460@0	  ]

	dropping vector


	dropping gdkmem


	dropping mmath

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading url

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "url",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "getAnchor(url) : str"		  ]
[ "getBasename(url) : str"		  ]
[ "getContent(url) : str"		  ]
[ "getContext(url) : str"		  ]
[ "getDirectory(url) : BAT[int,str]"	  ]
[ "getDomain(url) : str"		  ]
[ "getExtension(url) : str"		  ]
[ "getFile(url) : str"			  ]
[ "getHost(url) : str"			  ]
[ "getPort(url) : str"			  ]
[ "getProtocol(url) : str"		  ]
[ "getQuery(url) : str"			  ]
[ "getQueryArg(url) : BAT[str,str]"	  ]
[ "getRobotURL(url) : str"		  ]
[ "getUser(url) : str"			  ]
[ "isaURL(url) : bit"			  ]
[ "newurl(str, str, int, str) : url"	  ]
[ "newurl(str, str, str) : url"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "url",  10492@0	  ]

	dropping url

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading unix

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "unix",	  1		  ]
#-------------------------#
# signature		  #
#-------------------------#
[ "getenv(str) : str"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "unix", 10511@0	  ]

	dropping unix

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading tpcd

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "tpcd",	  1		  ]
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "dvjoin(BAT[oid,void], BAT[void,any::1], BAT[oid,any::2]) : BAT[any::1,any::2]"  ]
[ "dvsemijoin(BAT[oid,void], BAT[void,any::1], BAT[oid,any::2]) : BAT[oid,any::1]"  ]
[ "extent(BAT[oid,any::1]) : BAT[oid,void]"			  ]
[ "vector(BAT[oid,any::1]) : BAT[void,any::1]"			  ]
[ "{avg}(BAT[int,flt], BAT[int,any]) : BAT[int,flt]"		  ]
[ "{avg}(BAT[int,int], BAT[int,any]) : BAT[int,int]"		  ]
[ "{avg}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"		  ]
[ "{avg}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"		  ]
[ "{max}(BAT[int,flt], BAT[int,any]) : BAT[int,flt]"		  ]
[ "{max}(BAT[int,int], BAT[int,any]) : BAT[int,int]"		  ]
[ "{max}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"		  ]
[ "{max}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"		  ]
[ "{min}(BAT[int,flt], BAT[int,any]) : BAT[int,flt]"		  ]
[ "{min}(BAT[int,int], BAT[int,any]) : BAT[int,int]"		  ]
[ "{min}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"		  ]
[ "{min}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"		  ]
[ "{sum}(BAT[int,flt], BAT[int,any]) : BAT[int,flt]"		  ]
[ "{sum}(BAT[int,int], BAT[int,any]) : BAT[int,int]"		  ]
[ "{sum}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"		  ]
[ "{sum}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "tpcd", 10513@0	  ]

	dropping tpcd

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading temporal

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "temporal",	  1		  ]
#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "!=(duration, duration) : bit"		  ]
[ "!=(instant, instant) : bit"			  ]
[ "!=(interval, interval) : bit"		  ]
[ "*(duration, flt) : duration"			  ]
[ "*(interval, flt) : interval"			  ]
[ "+(instant, duration) : instant"		  ]
[ "+(interval, duration) : interval"		  ]
[ "-(instant, duration) : instant"		  ]
[ "-(instant, instant) : duration"		  ]
[ "-(interval, duration) : interval"		  ]
[ "<(duration, duration) : bit"			  ]
[ "<(instant, instant) : bit"			  ]
[ "<(instant, interval) : bit"			  ]
[ "<(interval, interval) : bit"			  ]
[ "<=(instant, instant) : bit"			  ]
[ "=(duration, duration) : bit"			  ]
[ "=(instant, instant) : bit"			  ]
[ "=(interval, interval) : bit"			  ]
[ ">(duration, duration) : bit"			  ]
[ ">(instant, instant) : bit"			  ]
[ ">(instant, interval) : bit"			  ]
[ ">(interval, interval) : bit"			  ]
[ ">=(instant, instant) : bit"			  ]
[ "date(str) : instant"				  ]
[ "day(instant) : int"				  ]
[ "end_interval(interval) : instant"		  ]
[ "epoch(instant) : lng"			  ]
[ "epoch(lng) : instant"			  ]
[ "hours(instant) : int"			  ]
[ "in(instant, interval) : bit"			  ]
[ "include(interval, interval) : bit"		  ]
[ "included(interval, interval) : bit"		  ]
[ "intersect(interval, interval) : interval"	  ]
[ "minutes(instant) : int"			  ]
[ "month(instant) : int"			  ]
[ "new_interval(instant, instant) : interval"	  ]
[ "overlap(interval, interval) : bit"		  ]
[ "start_interval(interval) : instant"		  ]
[ "year(instant) : int"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
#---------------------------------#
# BAT:		  tmp_61	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "temporal",	  10548@0	  ]

	dropping temporal

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading tcpip

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "tcpip",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "cache() : BAT[str,str]"		  ]
[ "close() : void"			  ]
[ "close(int) : void"			  ]
[ "conns() : BAT[int,str]"		  ]
[ "export(int, BAT[any,any]) : void"	  ]
[ "export(int, any, str) : void"	  ]
[ "flush() : void"			  ]
[ "import(str) : any"			  ]
[ "import(str, bit) : any"		  ]
[ "listen() : void"			  ]
[ "listen(int) : void"			  ]
[ "mil(int, str) : void"		  ]
[ "mil(int, str, ..any..) : void"	  ]
[ "open(str) : int"			  ]
[ "rpc(int, str, ..any..) : any"	  ]
[ "terminate() : void"			  ]
[ "terminate(int) : void"		  ]
[ "waits() : BAT[int,int]"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "likeselect() : <predefinition>"				  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
#---------------------------------#
# BAT:		  tmp_64	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "tcpip",	  10588@0	  ]

	dropping tcpip

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading str

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "str",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "+(str, any) : str"		  ]
[ "chrAt(str, int) : chr"	  ]
[ "endsWith(str, str) : bit"	  ]
[ "length(str) : int"		  ]
[ "r_search(str, chr) : int"	  ]
[ "search(str, chr) : int"	  ]
[ "search(str, str) : int"	  ]
[ "startsWith(str, str) : bit"	  ]
[ "string(str, int) : str"	  ]
[ "string(str, int, int) : str"	  ]
[ "toLower(str) : str"		  ]
[ "toUpper(str) : str"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "str",  10608@0	  ]

	dropping str

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading oo7

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "oo7",	  1		  ]
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "closure(BAT[any::1,any::1]) : BAT[any::1,any::1]"		  ]
[ "oo7create(str) : void"					  ]
[ "oo7delete() : void"						  ]
[ "subgraph(BAT[any::2,any::1], BAT[any::1,any::1]) : BAT[any::1,any::1]"  ]
[ "traverse(BAT[any::2,any::1], BAT[any::1,any::1]) : BAT[any::1,any::1]"  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
#-------------------------#
# BAT:	  tmp_61	  #
# (str)	  (oid)		  #
#-------------------------#
[ "oo7",  10622@0	  ]

	dropping oo7

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "DatabaseNAME(str, odObject) : void"			  ]
[ "DatabaseRENAME(str, odObject) : void"		  ]
[ "List(oid, oid) : odList"				  ]
[ "Object(oid, oid) : odObject"				  ]
[ "Set(oid, oid) : odSet"				  ]
[ "TransactionABORT(int) : void"			  ]
[ "TransactionBEGIN(int) : void"			  ]
[ "TransactionCHANGE(int, odObject) : void"		  ]
[ "TransactionCOMMIT(int) : void"			  ]
[ "TransactionDESTROY(int) : void"			  ]
[ "TransactionNEW() : int"				  ]
[ "TransactionRESERVE(int, odObject, int) : void"	  ]
[ "_a0() : void"					  ]
[ "_a1() : void"					  ]
[ "append(odList, any) : odList"			  ]
[ "append(odList, odList) : odList"			  ]
[ "append(odList, odObject) : odList"			  ]
[ "atom(odSet) : any"					  ]
[ "cardinality(odList) : int"				  ]
[ "cardinality(odSet) : int"				  ]
[ "clear(odList) : void"				  ]
[ "clear(odSet) : void"					  ]
[ "contains(odList, any) : bit"				  ]
[ "contains(odSet, any) : bit"				  ]
[ "copy(odList) : odList"				  ]
[ "copy(odSet) : odSet"					  ]
[ "debug_invalidate() : void"				  ]
[ "difference(odSet, odSet) : odSet"			  ]
[ "empty(odList) : bit"					  ]
[ "empty(odSet) : bit"					  ]
[ "equal(odList, odList) : bit"				  ]
[ "equal(odObject, odObject) : bit"			  ]
[ "equal(odSet, odSet) : bit"				  ]
[ "exists(odSet, any::1, any::1, odAttr) : bit"		  ]
[ "find(odList, any, odAttr) : odObject"		  ]
[ "find(odSet, any, odAttr) : odObject"			  ]
[ "findlist(odSet, odList, odAttr) : odObject"		  ]
[ "findset(odSet, odSet, odAttr) : odObject"		  ]
[ "follow(odSet, odAttr) : odSet"			  ]
[ "getAttr(odObject, odAttr) : any"			  ]
[ "getOid(odObject) : oid"				  ]
[ "get_attr_bat(oid) : BAT[oid,any]"			  ]
[ "get_extent(oid) : BAT[oid,any]"			  ]
[ "insert(odSet, odObject) : void"			  ]
[ "insert(odSet, odSet) : void"				  ]
[ "insert_after(odList, int, any) : odList"		  ]
[ "insert_before(odList, int, any) : odList"		  ]
[ "intersect(odSet, odSet) : odSet"			  ]
[ "isObject(odObject) : bit"				  ]
[ "isunique(odSet) : bit"				  ]
[ "iterator_destroy(list_iter) : void"			  ]
[ "iterator_ismore(list_iter) : bit"			  ]
[ "iterator_next(list_iter) : list_iter"		  ]
[ "iterator_retrieve(list_iter) : any"			  ]
[ "list_create(int) : odList"				  ]
[ "list_create(odList, oid) : odList"			  ]
[ "list_create(oid) : odList"				  ]
[ "list_destroy(odList) : void"				  ]
[ "list_iterator(odList) : list_iter"			  ]
[ "list_retrieve_at(odList, int) : any"			  ]
[ "lookup(str) : any"					  ]
[ "nequal(odSet, odSet) : bit"				  ]
[ "obj(odSet) : odObject"				  ]
[ "odCloseDb() : void"					  ]
[ "odOpenDb(str) : void"				  ]
[ "remove(odList, int) : odList"			  ]
[ "remove(odSet, odObject) : void"			  ]
[ "remove(odSet, odSet) : void"				  ]
[ "select(odSet, any::1, any::1, odAttr) : odSet"	  ]
[ "setAttr(odObject, odAttr, any) : void"		  ]
[ "set_attr_bat(oid, BAT[oid,any]) : void"		  ]
[ "set_create(int) : odList"				  ]
[ "set_create(odList, oid) : odList"			  ]
[ "set_create(oid) : odList"				  ]
[ "set_extent(oid, BAT[oid,any]) : void"		  ]
[ "sort(odSet, odAttr) : odSet"				  ]
[ "sorted(odSet) : bit"					  ]
[ "toBat(odSet) : BAT[any,any]"				  ]
[ "toList(odSet) : odList"				  ]
[ "toSet(BAT[any,any]) : odSet"				  ]
[ "toSet(BAT[any,any], oid) : odSet"			  ]
[ "toSet(odList) : odSet"				  ]
[ "union(odSet, odSet) : odSet"				  ]
[ "unique(odSet, bit) : void"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
#-------------------------#
# BAT:	  tmp_23	  #
# (str)	  (oid)		  #
#-------------------------#
[ "odmg", 10628@0	  ]

	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading mprof

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "mprof",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "-(Mallinfo, Mallinfo) : Mallinfo"	  ]
[ "-(Rusage, Rusage) : Rusage"		  ]
[ "-(Tms, Tms) : Tms"			  ]
[ "Ma_arena(Mallinfo) : int"		  ]
[ "Ma_fordblks(Mallinfo) : int"		  ]
[ "Ma_fsmblks(Mallinfo) : int"		  ]
[ "Ma_new() : Mallinfo"			  ]
[ "Ma_uordblks(Mallinfo) : int"		  ]
[ "Ma_usmblks(Mallinfo) : int"		  ]
[ "Ru_inblock(Rusage) : int"		  ]
[ "Ru_majflt(Rusage) : int"		  ]
[ "Ru_maxrss(Rusage) : int"		  ]
[ "Ru_minflt(Rusage) : int"		  ]
[ "Ru_new() : Rusage"			  ]
[ "Ru_nivcsw(Rusage) : int"		  ]
[ "Ru_nswap(Rusage) : int"		  ]
[ "Ru_nvcsw(Rusage) : int"		  ]
[ "Ru_oublock(Rusage) : int"		  ]
[ "Tms_new() : Tms"			  ]
[ "Tms_stime(Tms) : int"		  ]
[ "Tms_utime(Tms) : int"		  ]
[ "pmB(str) : void"			  ]
[ "pmClear() : void"			  ]
[ "pmE(str) : void"			  ]
[ "pmTag(str, str) : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
#---------------------------------#
# BAT:		  tmp_71	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "mprof",	  10744@0	  ]

	dropping mprof

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading mmath

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "mmath",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "acos(dbl) : dbl"		  ]
[ "asin(dbl) : dbl"		  ]
[ "atan(dbl) : dbl"		  ]
[ "atan2(dbl, dbl) : dbl"	  ]
[ "ceil(dbl) : dbl"		  ]
[ "cos(dbl) : dbl"		  ]
[ "cosh(dbl) : dbl"		  ]
[ "exp(dbl) : dbl"		  ]
[ "fabs(dbl) : dbl"		  ]
[ "floor(dbl) : dbl"		  ]
[ "fmod(dbl, dbl) : dbl"	  ]
[ "log(dbl) : dbl"		  ]
[ "log10(dbl) : dbl"		  ]
[ "pow(dbl, dbl) : dbl"		  ]
[ "sin(dbl) : dbl"		  ]
[ "sinh(dbl) : dbl"		  ]
[ "sqrt(dbl) : dbl"		  ]
[ "tan(dbl) : dbl"		  ]
[ "tanh(dbl) : dbl"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "mmath",	  10772@0	  ]

	dropping mmath

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading meta

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "meta",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "Class_Classes() : odSet"				  ]
[ "Class_GETClassId(odObject) : int"			  ]
[ "Class_GETDeriveds(odObject) : odSet"			  ]
[ "Class_GETExtentName(odObject) : str"			  ]
[ "Class_GETMembers(odObject) : odSet"			  ]
[ "Class_GETMethods(odObject) : odSet"			  ]
[ "Class_GETName(odObject) : str"			  ]
[ "Class_GETSupers(odObject) : odSet"			  ]
[ "Class_GETtheExtent(odObject) : odAttr"		  ]
[ "Class_GETtheModule(odObject) : odObject"		  ]
[ "Class_SETClassId(odObject, int) : void"		  ]
[ "Class_SETExtentName(odObject, str) : void"		  ]
[ "Class_SETName(odObject, str) : void"			  ]
[ "Class_SETtheExtent(odObject, odAttr) : void"		  ]
[ "Class_SETtheModule(odObject, odObject) : void"	  ]
[ "Class_destroy(odObject) : void"			  ]
[ "Class_new() : odObject"				  ]
[ "Class_new(oid) : odObject"				  ]
[ "Func_Functions() : odSet"				  ]
[ "Func_GETName(odObject) : str"			  ]
[ "Func_GETtheFunc(odObject) : ptr"			  ]
[ "Func_GETtheModule(odObject) : odObject"		  ]
[ "Func_SETName(odObject, str) : void"			  ]
[ "Func_SETtheFunc(odObject, ptr) : void"		  ]
[ "Func_SETtheModule(odObject, odObject) : void"	  ]
[ "Func_destroy(odObject) : void"			  ]
[ "Func_new() : odObject"				  ]
[ "Func_new(oid) : odObject"				  ]
[ "Member_GETColType(odObject) : int"			  ]
[ "Member_GETInverse(odObject) : odObject"		  ]
[ "Member_GETName(odObject) : str"			  ]
[ "Member_GETTypeId(odObject) : int"			  ]
[ "Member_GETattr(odObject) : odAttr"			  ]
[ "Member_GETtheClass(odObject) : odObject"		  ]
[ "Member_Members() : odSet"				  ]
[ "Member_SETColType(odObject, int) : void"		  ]
[ "Member_SETInverse(odObject, odObject) : void"	  ]
[ "Member_SETName(odObject, str) : void"		  ]
[ "Member_SETTypeId(odObject, int) : void"		  ]
[ "Member_SETattr(odObject, odAttr) : void"		  ]
[ "Member_SETtheClass(odObject, odObject) : void"	  ]
[ "Member_destroy(odObject) : void"			  ]
[ "Member_new() : odObject"				  ]
[ "Member_new(oid) : odObject"				  ]
[ "Method_GETName(odObject) : str"			  ]
[ "Method_GETtheClass(odObject) : odObject"		  ]
[ "Method_GETtheFunc(odObject) : ptr"			  ]
[ "Method_Methods() : odSet"				  ]
[ "Method_SETName(odObject, str) : void"		  ]
[ "Method_SETtheClass(odObject, odObject) : void"	  ]
[ "Method_SETtheFunc(odObject, ptr) : void"		  ]
[ "Method_destroy(odObject) : void"			  ]
[ "Method_new() : odObject"				  ]
[ "Method_new(oid) : odObject"				  ]
[ "Module_GETClasses(odObject) : odSet"			  ]
[ "Module_GETFunctions(odObject) : odSet"		  ]
[ "Module_GETName(odObject) : str"			  ]
[ "Module_Modules() : odSet"				  ]
[ "Module_SETName(odObject, str) : void"		  ]
[ "Module_destroy(odObject) : void"			  ]
[ "Module_new() : odObject"				  ]
[ "Module_new(oid) : odObject"				  ]
[ "NamedObject_GETClassId(odObject) : int"		  ]
[ "NamedObject_GETName(odObject) : str"			  ]
[ "NamedObject_GETtheExtent(odObject) : int"		  ]
[ "NamedObject_GETtheObject(odObject) : oid"		  ]
[ "NamedObject_NamedObjects() : odSet"			  ]
[ "NamedObject_SETClassId(odObject, int) : void"	  ]
[ "NamedObject_SETName(odObject, str) : void"		  ]
[ "NamedObject_SETtheExtent(odObject, int) : void"	  ]
[ "NamedObject_SETtheObject(odObject, oid) : void"	  ]
[ "NamedObject_destroy(odObject) : void"		  ]
[ "NamedObject_new() : odObject"			  ]
[ "NamedObject_new(oid) : odObject"			  ]
[ "odInitmeta() : void"					  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLmeta() : any"						  ]
#---------------------------------#
# BAT:		  tmp_68	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "meta",	  10792@0	  ]
[ "CC_odmg",	  10793@0	  ]
[ "odmg",	  10794@0	  ]

	dropping meta


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading lock

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "lock",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "lock_create() : lock"	  ]
[ "lock_destroy(lock) : void"	  ]
[ "lock_set(lock) : void"	  ]
[ "lock_unset(lock) : void"	  ]
[ "sema_create(int) : sema"	  ]
[ "sema_destroy(sema) : void"	  ]
[ "sema_down(sema) : void"	  ]
[ "sema_up(sema) : void"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLmeta() : any"						  ]
#-------------------------#
# BAT:	  tmp_23	  #
# (str)	  (oid)		  #
#-------------------------#
[ "lock", 10988@0	  ]

	dropping lock

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading jOdmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "jOdmg",	  1		  ]
[ "blob",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "getAtomIDs(odSet) : odSet"		  ]
[ "getAttrIDs(str, str, odSet) : odSet"	  ]
[ "getClassIDs(str, odSet) : odSet"	  ]
[ "jget(jarray) : any"			  ]
[ "jlen(jarray) : int"			  ]
[ "jput(any, int) : jarray2"		  ]
[ "jtype(jarray) : int"			  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_68	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "jOdmg",	  10997@0	  ]
[ "blob",	  10998@0	  ]
[ "odmg",	  11002@0	  ]

	dropping jOdmg


	dropping blob


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading io

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "io",		  1		  ]
[ "blob",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "fclose(stream) : void"				  ]
[ "fdpipe(bipipe, bit, str) : stream"			  ]
[ "feof(stream) : bit"					  ]
[ "ferror() : str"					  ]
[ "fflush(stream) : void"				  ]
[ "fgetc(stream) : chr"					  ]
[ "fgets(stream) : str"					  ]
[ "fopen(str, str) : stream"				  ]
[ "fprintf(stream, str, ..any..) : void"		  ]
[ "fputc(int, stream) : void"				  ]
[ "fputs(str, stream) : void"				  ]
[ "fread(stream, int) : blob"				  ]
[ "freopen(str, str, stream) : stream"			  ]
[ "fseek(stream, int, int) : int"			  ]
[ "ftable(stream, ..BAT[any::1,any]..) : void"		  ]
[ "ftable(stream, int, ..BAT[any::1,any]..) : void"	  ]
[ "fwrite(stream, blob, int) : void"			  ]
[ "fwrite(stream, str, int) : void"			  ]
[ "popen() : bipipe"					  ]
[ "stderr() : stream"					  ]
[ "stdin() : stream"					  ]
[ "stdout() : stream"					  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#-------------------------#
# BAT:	  tmp_23	  #
# (str)	  (oid)		  #
#-------------------------#
[ "io",	  11126@0	  ]
[ "blob", 11127@0	  ]

	dropping io


	dropping blob

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading gisbulk

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "gisbulk",	  1		  ]
[ "gis",	  1		  ]
[ "mmath",	  1		  ]
[ "gdkmem",	  1		  ]
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "disjoint_join(BAT[any,box], BAT[box,any]) : BAT[any,any]"	  ]
[ "djoin(BAT[any,box], BAT[box,any], dbl, dbl) : BAT[any,any]"	  ]
[ "djoin(BAT[any,box], BAT[point,any], dbl, dbl) : BAT[any,any]"  ]
[ "djoin(BAT[any,point], BAT[box,any], dbl, dbl) : BAT[any,any]"  ]
[ "djoin(BAT[any,point], BAT[point,any], dbl, dbl) : BAT[any,any]"  ]
[ "dselect(BAT[any,box], box, dbl, dbl) : BAT[any,box]"		  ]
[ "dselect(BAT[any,box], point, dbl, dbl) : BAT[any,box]"	  ]
[ "inside_join(BAT[any,box], BAT[box,any]) : BAT[any,any]"	  ]
[ "rtree_ok(BAT[box,any]) : bit"				  ]
[ "rtree_ok(BAT[point,any]) : bit"				  ]
[ "rtree_ok(BAT[polygon,any]) : bit"				  ]
[ "rtree_ok(BAT[polyline,any]) : bit"				  ]
[ "rtree_ok(BAT[segment,any]) : bit"				  ]
[ "rtree_print(BAT[box,any]) : void"				  ]
[ "rtree_print(BAT[point,any]) : void"				  ]
[ "rtree_print(BAT[polygon,any]) : void"			  ]
[ "rtree_print(BAT[polyline,any]) : void"			  ]
[ "rtree_print(BAT[segment,any]) : void"			  ]
[ "rtreebbox(BAT[any,box]) : box"				  ]
[ "rtreebbox(BAT[any,point]) : box"				  ]
[ "rtreebbox(BAT[any,polygon]) : box"				  ]
[ "rtreebbox(BAT[any,polyline]) : box"				  ]
[ "rtreebbox(BAT[any,segment]) : box"				  ]
[ "sjoin(BAT[any,segment], BAT[segment,any], int) : BAT[any,any]"  ]
[ "sjoin(BAT[any::1,box], BAT[box,any::2]) : BAT[any::1,any::2]"  ]
[ "sjoin(BAT[any::1,box], BAT[point,any::2]) : BAT[any::1,any::2]"  ]
[ "sjoin(BAT[any::1,point], BAT[box,any::2]) : BAT[any::1,any::2]"  ]
[ "sjoin(BAT[any::1,segment], BAT[segment,any::2]) : BAT[any::1,any::2]"  ]
[ "sjoin_overlap(BAT[any::1,segment], BAT[segment,any::2]) : BAT[any::1,any::2]"  ]
[ "sselect(BAT[any,box], box) : BAT[any,box]"			  ]
[ "sselect(BAT[any,point], box) : BAT[any,point]"		  ]
[ "sselect(BAT[any,polygon], box) : BAT[any,polygon]"		  ]
[ "sselect(BAT[any,polyline], box) : BAT[any,polyline]"		  ]
[ "sselect(BAT[any,segment], box) : BAT[any,segment]"		  ]
[ "sselect(BAT[any,segment], segment, int) : BAT[any,segment]"	  ]
[ "sselect_cross(BAT[any,segment], segment) : BAT[any,segment]"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "gisbulk",	  11153@0	  ]
[ "gis",	  11154@0	  ]
[ "mmath",	  11155@0	  ]
[ "gdkmem",	  11175@0	  ]

	dropping gisbulk


	dropping gis


	dropping mmath


	dropping gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading gis

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "gis",	  1		  ]
[ "mmath",	  1		  ]
[ "gdkmem",	  1		  ]
#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "!=(box, box) : bit"				  ]
[ "!=(circle, circle) : bit"			  ]
[ "!=(cpolygon, cpolygon) : bit"		  ]
[ "!=(point, point) : bit"			  ]
[ "!=(polygon, polygon) : bit"			  ]
[ "!=(polyline, polyline) : bit"		  ]
[ "!=(segment, segment) : bit"			  ]
[ "!=(shape, shape) : bit"			  ]
[ "=(box, box) : bit"				  ]
[ "=(circle, circle) : bit"			  ]
[ "=(cpolygon, cpolygon) : bit"			  ]
[ "=(point, point) : bit"			  ]
[ "=(polygon, polygon) : bit"			  ]
[ "=(polyline, polyline) : bit"			  ]
[ "=(segment, segment) : bit"			  ]
[ "=(shape, shape) : bit"			  ]
[ "add(box, point) : box"			  ]
[ "add(point, point) : point"			  ]
[ "add(polygon, point) : polygon"		  ]
[ "add(polyline, point) : polyline"		  ]
[ "addhole(cpolygon, polygon) : cpolygon"	  ]
[ "addminitree(cpolygon, int, int) : cpolygon"	  ]
[ "addminitree(polygon, int, int) : polygon"	  ]
[ "addminitree(polyline, int, int) : polyline"	  ]
[ "angle(dbl, dbl) : dbl"			  ]
[ "angle(point, point, point) : dbl"		  ]
[ "angle(segment) : dbl"			  ]
[ "area(box) : dbl"				  ]
[ "area(circle) : dbl"				  ]
[ "area(cpolygon) : dbl"			  ]
[ "area(polygon) : dbl"				  ]
[ "area(shape) : dbl"				  ]
[ "area(triangle) : dbl"			  ]
[ "bbox(BAT[any,box]) : box"			  ]
[ "bbox(box, box) : box"			  ]
[ "bbox(circle) : box"				  ]
[ "bbox(cpolygon) : box"			  ]
[ "bbox(point) : box"				  ]
[ "bbox(polygon) : box"				  ]
[ "bbox(polyline) : box"			  ]
[ "bbox(segment) : box"				  ]
[ "bbox(shape) : box"				  ]
[ "blowup(box, dbl) : box"			  ]
[ "bottom(box) : dbl"				  ]
[ "boundary(cpolygon) : polygon"		  ]
[ "boundary(polygon) : polyline"		  ]
[ "center(box) : point"				  ]
[ "center(circle) : point"			  ]
[ "center(segment) : point"			  ]
[ "clockwise(polygon) : bit"			  ]
[ "clockwise(triangle) : bit"			  ]
[ "closed(polyline) : bit"			  ]
[ "convex_hull(BAT[any,point]) : polygon"	  ]
[ "convex_hull(cpolygon) : polygon"		  ]
[ "convex_hull(polygon) : polygon"		  ]
[ "convex_hull(polyline) : polygon"		  ]
[ "create(dbl, dbl) : point"			  ]
[ "create(point, point) : segment"		  ]
[ "create(point, point, point) : triangle"	  ]
[ "create(polygon) : cpolygon"			  ]
[ "create_circle(point, point) : circle"	  ]
[ "create_circle(point, point, point) : circle"	  ]
[ "create_minitree(polygon, int, int) : minitree"  ]
[ "dest(polyline) : point"			  ]
[ "dest(segment) : point"			  ]
[ "direction(point, point) : dbl"		  ]
[ "distance(box, box) : dbl"			  ]
[ "distance(box, point) : dbl"			  ]
[ "distance(circle, circle) : dbl"		  ]
[ "distance(circle, point) : dbl"		  ]
[ "distance(circle, segment) : dbl"		  ]
[ "distance(cpolygon, cpolygon) : dbl"		  ]
[ "distance(cpolygon, point) : dbl"		  ]
[ "distance(cpolygon, polygon) : dbl"		  ]
[ "distance(cpolygon, polyline) : dbl"		  ]
[ "distance(cpolygon, segment) : dbl"		  ]
[ "distance(point, box) : dbl"			  ]
[ "distance(point, circle) : dbl"		  ]
[ "distance(point, cpolygon) : dbl"		  ]
[ "distance(point, point) : dbl"		  ]
[ "distance(point, polygon) : dbl"		  ]
[ "distance(point, polyline) : dbl"		  ]
[ "distance(point, segment) : dbl"		  ]
[ "distance(polygon, cpolygon) : dbl"		  ]
[ "distance(polygon, minitree, point) : dbl"	  ]
[ "distance(polygon, minitree, polygon, minitree) : dbl"  ]
[ "distance(polygon, minitree, segment) : dbl"	  ]
[ "distance(polygon, point) : dbl"		  ]
[ "distance(polygon, polygon) : dbl"		  ]
[ "distance(polygon, polyline) : dbl"		  ]
[ "distance(polygon, segment) : dbl"		  ]
[ "distance(polyline, cpolygon) : dbl"		  ]
[ "distance(polyline, point) : dbl"		  ]
[ "distance(polyline, polygon) : dbl"		  ]
[ "distance(polyline, polyline) : dbl"		  ]
[ "distance(polyline, segment) : dbl"		  ]
[ "distance(segment, circle) : dbl"		  ]
[ "distance(segment, cpolygon) : dbl"		  ]
[ "distance(segment, point) : dbl"		  ]
[ "distance(segment, polygon) : dbl"		  ]
[ "distance(segment, polyline) : dbl"		  ]
[ "distance(segment, segment) : dbl"		  ]
[ "divide(box, dbl) : box"			  ]
[ "divide(point, dbl) : point"			  ]
[ "divide(polygon, dbl) : polygon"		  ]
[ "divide(polyline, dbl) : polyline"		  ]
[ "east(box) : segment"				  ]
[ "extract(polygon) : minitree"			  ]
[ "extract(polyline) : minitree"		  ]
[ "gcenter(polygon) : point"			  ]
[ "hash_val(box) : int"				  ]
[ "hash_val(circle) : int"			  ]
[ "hash_val(cpolygon) : int"			  ]
[ "hash_val(point) : int"			  ]
[ "hash_val(polygon) : int"			  ]
[ "hash_val(polyline) : int"			  ]
[ "hash_val(segment) : int"			  ]
[ "hash_val(shape) : int"			  ]
[ "hash_val(triangle) : int"			  ]
[ "hasminitree(cpolygon) : bit"			  ]
[ "hasminitree(polygon) : bit"			  ]
[ "hasminitree(polyline) : bit"			  ]
[ "heapok(BAT[any,cpolygon]) : void"		  ]
[ "heapok(BAT[any,polygon]) : void"		  ]
[ "heapok(BAT[any,polyline]) : void"		  ]
[ "heapok(BAT[any,shape]) : void"		  ]
[ "heapstatus(BAT[any,cpolygon]) : void"	  ]
[ "heapstatus(BAT[any,polygon]) : void"		  ]
[ "heapstatus(BAT[any,polyline]) : void"	  ]
[ "heapstatus(BAT[any,shape]) : void"		  ]
[ "height(box) : dbl"				  ]
[ "hole(cpolygon, int) : polygon"		  ]
[ "index(polygon, int) : point"			  ]
[ "index(polyline, int) : point"		  ]
[ "index(triangle, int) : point"		  ]
[ "info(cpolygon) : void"			  ]
[ "inside(box, box) : bit"			  ]
[ "inside(circle, box) : bit"			  ]
[ "inside(cpolygon, box) : bit"			  ]
[ "inside(cpolygon, circle) : bit"		  ]
[ "inside(cpolygon, cpolygon) : bit"		  ]
[ "inside(cpolygon, polygon) : bit"		  ]
[ "inside(point, box) : bit"			  ]
[ "inside(point, circle) : bit"			  ]
[ "inside(point, cpolygon) : bit"		  ]
[ "inside(point, polygon) : bit"		  ]
[ "inside(point, polygon, minitree) : bit"	  ]
[ "inside(polygon, box) : bit"			  ]
[ "inside(polygon, circle) : bit"		  ]
[ "inside(polygon, cpolygon) : bit"		  ]
[ "inside(polygon, polygon) : bit"		  ]
[ "inside(polyline, box) : bit"			  ]
[ "inside(polyline, circle) : bit"		  ]
[ "inside(polyline, cpolygon) : bit"		  ]
[ "inside(polyline, polygon) : bit"		  ]
[ "inside(segment, box) : bit"			  ]
[ "inside(segment, circle) : bit"		  ]
[ "inside(segment, cpolygon) : bit"		  ]
[ "inside(segment, polygon) : bit"		  ]
[ "inside(triangle, box) : bit"			  ]
[ "interior(polyline) : polygon"		  ]
[ "intersect(polyline, polyline) : bit"		  ]
[ "intersect(segment, segment) : bit"		  ]
[ "intersection(segment, segment) : point"	  ]
[ "left(box) : dbl"				  ]
[ "length(segment) : dbl"			  ]
[ "lower_res(polygon, dbl) : polygon"		  ]
[ "max_line(segment, segment) : segment"	  ]
[ "monotone(polygon, int, int) : bit"		  ]
[ "monotone(polyline, int, int) : bit"		  ]
[ "multiply(box, dbl) : box"			  ]
[ "multiply(point, dbl) : point"		  ]
[ "multiply(polygon, dbl) : polygon"		  ]
[ "multiply(polyline, dbl) : polyline"		  ]
[ "nbytes(cpolygon) : int"			  ]
[ "nbytes(minitree) : int"			  ]
[ "nbytes(polygon) : int"			  ]
[ "nbytes(polyline) : int"			  ]
[ "nbytes(shape) : int"				  ]
[ "nholes(cpolygon) : int"			  ]
[ "nnodes(minitree) : int"			  ]
[ "north(box) : segment"			  ]
[ "npoints(cpolygon) : int"			  ]
[ "npoints(polygon) : int"			  ]
[ "npoints(polyline) : int"			  ]
[ "ok(box) : bit"				  ]
[ "ok(circle) : bit"				  ]
[ "ok(cpolygon) : bit"				  ]
[ "ok(point) : bit"				  ]
[ "ok(polygon) : bit"				  ]
[ "ok(polyline) : bit"				  ]
[ "ok(segment) : bit"				  ]
[ "ok(shape) : bit"				  ]
[ "ok(triangle) : bit"				  ]
[ "overlap(box, box) : bit"			  ]
[ "overlap(box, point) : bit"			  ]
[ "overlap(cpolygon, cpolygon) : bit"		  ]
[ "overlap(cpolygon, point) : bit"		  ]
[ "overlap(cpolygon, polygon) : bit"		  ]
[ "overlap(cpolygon, polyline) : bit"		  ]
[ "overlap(point, box) : bit"			  ]
[ "overlap(point, cpolygon) : bit"		  ]
[ "overlap(point, polygon) : bit"		  ]
[ "overlap(point, polyline) : bit"		  ]
[ "overlap(polygon, cpolygon) : bit"		  ]
[ "overlap(polygon, point) : bit"		  ]
[ "overlap(polygon, polygon) : bit"		  ]
[ "overlap(polygon, polyline) : bit"		  ]
[ "overlap(polygon, segment) : bit"		  ]
[ "overlap(polyline, cpolygon) : bit"		  ]
[ "overlap(polyline, point) : bit"		  ]
[ "overlap(polyline, polygon) : bit"		  ]
[ "overlap(polyline, polyline) : bit"		  ]
[ "overlap(segment, cpolygon) : bit"		  ]
[ "overlap(segment, point) : bit"		  ]
[ "overlap(segment, polygon) : bit"		  ]
[ "overlap(segment, polyline) : bit"		  ]
[ "plot(BAT[any,segment]) : void"		  ]
[ "plot(cpolygon) : void"			  ]
[ "plot(polygon) : void"			  ]
[ "plot(polygon, minitree) : void"		  ]
[ "plot(polyline) : void"			  ]
[ "plot(segment) : void"			  ]
[ "plot(shape) : void"				  ]
[ "point_add(point, point) : point"		  ]
[ "point_dir(point) : dbl"			  ]
[ "point_div(point, dbl) : point"		  ]
[ "point_rand() : point"			  ]
[ "point_rel(point, point) : point"		  ]
[ "points_rand(int) : BAT[oid,point]"		  ]
[ "pqrelate(polyline, polyline) : int"		  ]
[ "project(point, point, dbl) : point"		  ]
[ "radius(circle) : dbl"			  ]
[ "relate(point, point) : int"			  ]
[ "relate(polygon, polygon) : int"		  ]
[ "relate(polyline, polyline) : int"		  ]
[ "remove_dups(polygon) : polygon"		  ]
[ "reverse(polygon) : polygon"			  ]
[ "reverse(polyline) : polyline"		  ]
[ "reverse(segment) : segment"			  ]
[ "right(box) : dbl"				  ]
[ "rotate(point, dbl) : point"			  ]
[ "rotate(polygon, dbl) : polygon"		  ]
[ "rotate(polyline, dbl) : polyline"		  ]
[ "rotate(shape, dbl) : shape"			  ]
[ "rotate(triangle, dbl) : triangle"		  ]
[ "scale(point, dbl) : point"			  ]
[ "scale(polygon, dbl) : polygon"		  ]
[ "scale(polyline, dbl) : polyline"		  ]
[ "scale(shape, dbl) : shape"			  ]
[ "scale(triangle, dbl) : triangle"		  ]
[ "segment_length(segment) : dbl"		  ]
[ "segments(BAT[any,polyline]) : BAT[any,segment]"  ]
[ "selfintersect(polyline) : bit"		  ]
[ "south(box) : segment"			  ]
[ "src(polyline) : point"			  ]
[ "src(segment) : point"			  ]
[ "subtract(box, point) : box"			  ]
[ "subtract(point, point) : point"		  ]
[ "subtract(polygon, point) : polygon"		  ]
[ "subtract(polyline, point) : polyline"	  ]
[ "top(box) : dbl"				  ]
[ "topolygon(box) : polygon"			  ]
[ "topolygon(triangle) : polygon"		  ]
[ "topolyline(box) : polyline"			  ]
[ "topolyline(segment) : polyline"		  ]
[ "topolyline(triangle) : polyline"		  ]
[ "toshape(point) : shape"			  ]
[ "toshape(polygon) : shape"			  ]
[ "toshape(polyline) : shape"			  ]
[ "toshape(segment) : shape"			  ]
[ "toshape(triangle) : shape"			  ]
[ "translate(point, point) : point"		  ]
[ "translate(polygon, point) : polygon"		  ]
[ "translate(polyline, point) : polyline"	  ]
[ "translate(shape, point) : shape"		  ]
[ "translate(triangle, point) : triangle"	  ]
[ "triangulate(cpolygon) : BAT[oid,segment]"	  ]
[ "triangulate(polygon) : BAT[oid,segment]"	  ]
[ "unite(polygon, minitree) : polygon"		  ]
[ "west(box) : segment"				  ]
[ "width(box) : dbl"				  ]
[ "xcoord(point) : dbl"				  ]
[ "ycoord(point) : dbl"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "gis",	  11497@0	  ]
[ "mmath",	  11498@0	  ]
[ "gdkmem",	  11518@0	  ]

	dropping gis


	dropping mmath


	dropping gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "gdkmem",	  1		  ]
#-----------------#
# signature	  #
#-----------------#
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "gdkmem",	  11803@0	  ]

	dropping gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading fmap

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "fmap",	  1		  ]
[ "gisbulk",	  1		  ]
[ "gis",	  1		  ]
[ "mmath",	  1		  ]
[ "gdkmem",	  1		  ]
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "areafeat_geometry(BAT[int,BAT], BAT[oid,oid]) : BAT[oid,polygon]"  ]
[ "cmap_add_constraint(BAT[int,BAT], polyline) : int"		  ]
[ "cmap_add_constraint(BAT[int,BAT], segment) : void"		  ]
[ "cmap_create() : void"					  ]
[ "cmap_to_fmap(BAT[int,BAT]) : void"				  ]
[ "dcel_create() : void"					  ]
[ "dcel_to_cmap(BAT[int,BAT]) : void"				  ]
[ "dcel_triangulate(BAT[int,BAT]) : void"			  ]
[ "destination_edge(BAT[int,BAT]) : BAT[oid,oid]"		  ]
[ "edge_destination(BAT[int,BAT]) : BAT[oid,oid]"		  ]
[ "edge_face(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "edge_fixed(BAT[int,BAT]) : BAT[oid,int]"			  ]
[ "edge_geometry(BAT[int,BAT]) : BAT[oid,segment]"		  ]
[ "edge_geometry(BAT[int,BAT], BAT[oid,oid]) : BAT[oid,segment]"  ]
[ "edge_geometry(BAT[int,BAT], oid) : segment"			  ]
[ "edge_geometry(BAT[int,BAT], oid) : segment"			  ]
[ "edge_next(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "edge_previous(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "edge_reverse(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "edge_source(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "face_bbox(BAT[int,BAT]) : BAT[oid,box]"			  ]
[ "face_edge(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "face_feat(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "face_geometry(BAT[int,BAT]) : BAT[oid,polygon]"		  ]
[ "face_geometry(BAT[int,BAT], BAT[oid,oid]) : BAT[oid,polygon]"  ]
[ "face_geometry(BAT[int,BAT], oid) : polygon"			  ]
[ "face_geometry(BAT[int,BAT], oid) : polygon"			  ]
[ "feat_edge(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "feat_face(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "feat_vertex(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "fmap_add_cpolygon(BAT[int,BAT], cpolygon) : oid"		  ]
[ "fmap_add_polygon(BAT[int,BAT], polygon) : oid"		  ]
[ "fmap_buildSkelet(BAT[int,BAT], oid) : BAT[oid,segment]"	  ]
[ "fmap_create() : void"					  ]
[ "fmap_create_bat(BAT[any,any]) : BAT[int,BAT]"		  ]
[ "fmap_delauney(BAT[int,BAT], oid) : void"			  ]
[ "fmap_dissolveFeature(BAT[int,BAT], BAT[oid,any]) : BAT[oid,segment]"  ]
[ "fmap_dissolveFeature(BAT[int,BAT], oid) : BAT[oid,segment]"	  ]
[ "fmap_dump(BAT[int,BAT], str) : void"				  ]
[ "fmap_mergeFeature(BAT[int,BAT], oid, BAT[oid,segment]) : void"  ]
[ "fmap_nousemonotone() : void"					  ]
[ "fmap_noverbose() : void"					  ]
[ "fmap_removeIntermediateEdges(BAT[int,BAT], int, BAT[oid,segment]) : void"  ]
[ "fmap_removeUnfixed(BAT[int,BAT]) : void"			  ]
[ "fmap_usemonotone() : void"					  ]
[ "fmap_verbose() : void"					  ]
[ "pg_add_cpolygon(BAT[int,BAT], cpolygon) : int"		  ]
[ "pg_add_point(BAT[int,BAT], point) : void"			  ]
[ "pg_add_points(BAT[int,BAT], BAT[any,point]) : void"		  ]
[ "pg_add_polygon(BAT[int,BAT], polygon) : int"			  ]
[ "pg_add_polyline(BAT[int,BAT], polyline) : int"		  ]
[ "pg_add_segment(BAT[int,BAT], segment) : void"		  ]
[ "pg_create_bat() : BAT[int,BAT]"				  ]
[ "pg_makemonotone(BAT[int,BAT]) : void"			  ]
[ "pg_to_dcel(BAT[int,BAT]) : oid"				  ]
[ "polygon_feature(BAT[int,BAT]) : BAT[oid,oid]"		  ]
[ "source_edge(BAT[int,BAT]) : BAT[oid,oid]"			  ]
[ "tin_improve(BAT[int,BAT]) : int"				  ]
[ "vertex_geometry(BAT[int,BAT]) : BAT[oid,point]"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_23	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "fmap",	  11804@0	  ]
[ "gisbulk",	  11805@0	  ]
[ "gis",	  11806@0	  ]
[ "mmath",	  11807@0	  ]
[ "gdkmem",	  11827@0	  ]

	dropping fmap


	dropping gisbulk


	dropping gis


	dropping mmath


	dropping gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading enum

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "enum",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "[decode](int, BAT[any::1,any]) : BAT[any::1,any]"	  ]
[ "[encode](int, BAT[any::1,any]) : BAT[any::1,any]"	  ]
[ "decode(int, any) : any"				  ]
[ "encode(int, any) : any"				  ]
[ "enum_create(str, BAT[any,any]) : int"		  ]
[ "enum_destroy(int) : void"				  ]
[ "enum_drop(any) : any"				  ]
[ "enum_drop(int) : void"				  ]
[ "enum_load(BAT[any,int]) : int"			  ]
[ "enum_load(any) : any"				  ]
[ "enum_table(int) : BAT[any,any]"			  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
[ "enum_load(any) : any"					  ]
[ "enum_drop(any) : any"					  ]
#-------------------------#
# BAT:	  tmp_68	  #
# (str)	  (oid)		  #
#-------------------------#
[ "enum", 12208@0	  ]

	dropping enum

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading blob

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "blob",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "toblob(str) : blob"		  ]
[ "tostr(blob) : str"		  ]
[ "tostr(blob, int) : str"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#-------------------------#
# BAT:	  tmp_68	  #
# (str)	  (oid)		  #
#-------------------------#
[ "blob", 12220@0	  ]

	dropping blob

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading blg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "blg",	  1		  ]
[ "gis",	  1		  ]
[ "mmath",	  1		  ]
[ "gdkmem",	  1		  ]
#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "create_blg(polyline) : blg"			  ]
[ "printblg(blg) : void"			  ]
[ "reduce(polyline, blg, dbl) : polyline"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_68	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "blg",	  12224@0	  ]
[ "gis",	  12225@0	  ]
[ "mmath",	  12226@0	  ]
[ "gdkmem",	  12246@0	  ]

	dropping blg


	dropping gis


	dropping mmath


	dropping gdkmem

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading alarm

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "alarm",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "alarm(int, str) : void"	  ]
[ "ctime() : str"		  ]
[ "sleep(int) : void"		  ]
[ "time() : int"		  ]
[ "timers() : BAT[str,str]"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "intTail(any) : any"						  ]
#---------------------------------#
# BAT:		  tmp_68	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "alarm",	  12534@0	  ]

	dropping alarm

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading TransTest

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "TransTest",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "T_GETname(odObject) : str"		  ]
[ "T_GETnr(odObject) : int"		  ]
[ "T_GETnr2(odObject) : int"		  ]
[ "T_SETname(odObject, str) : void"	  ]
[ "T_SETnr(odObject, int) : void"	  ]
[ "T_SETnr2(odObject, int) : void"	  ]
[ "T_Ts() : odSet"			  ]
[ "T_destroy(odObject) : void"		  ]
[ "T_new() : odObject"			  ]
[ "T_new(oid) : odObject"		  ]
[ "odInitTransTest() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTransTest() : any"					  ]
#---------------------------------#
# BAT:		  tmp_79	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "TransTest",	  12540@0	  ]
[ "CC_odmg",	  12541@0	  ]
[ "odmg",	  12542@0	  ]

	dropping TransTest


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading TestUse

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "TestUse",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
[ "temporal",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETaDate(odObject) : instant"	  ]
[ "A_SETaDate(odObject, instant) : void"  ]
[ "A_TestUseAs() : odSet"		  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "odInitTestUse() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTestUse() : any"						  ]
#---------------------------------#
# BAT:		  tmp_85	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "TestUse",	  12672@0	  ]
[ "CC_odmg",	  12673@0	  ]
[ "odmg",	  12674@0	  ]
[ "temporal",	  12761@0	  ]

	dropping TestUse


	dropping CC_odmg


	dropping odmg


	dropping temporal

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test9

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test9",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETName(odObject) : str"		  ]
[ "A_GETbs(odObject) : odSet"		  ]
[ "A_GETenums(odObject) : int"		  ]
[ "A_GETstring_list(odObject) : odList"	  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_SETenums(odObject, int) : void"	  ]
[ "A_append(odObject, str) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str, int) : odObject"		  ]
[ "A_val(odObject) : str"		  ]
[ "B_GETalist(odObject) : odList"	  ]
[ "B_GETas(odObject) : odSet"		  ]
[ "B_GETl(odObject) : odList"		  ]
[ "B_append(odObject, int) : void"	  ]
[ "B_destroy(odObject) : void"		  ]
[ "B_new() : odObject"			  ]
[ "B_new(oid) : odObject"		  ]
[ "B_new(str) : odObject"		  ]
[ "B_print(odObject) : void"		  ]
[ "odInitTest9() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest9() : any"						  ]
#---------------------------------#
# BAT:		  tmp_98	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test9",	  12840@0	  ]
[ "CC_odmg",	  12841@0	  ]
[ "odmg",	  12842@0	  ]

	dropping Test9


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test8

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test8",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-------------------------------------------------#
# signature					  #
#-------------------------------------------------#
[ "digit_GETnegative(odObject) : odObject"	  ]
[ "digit_GETvalue(odObject) : int"		  ]
[ "digit_SETnegative(odObject, odObject) : void"  ]
[ "digit_SETvalue(odObject, int) : void"	  ]
[ "digit_SetNegative(odObject, odObject) : void"  ]
[ "digit_destroy(odObject) : void"		  ]
[ "digit_digits() : odSet"			  ]
[ "digit_new() : odObject"			  ]
[ "digit_new(int) : odObject"			  ]
[ "digit_new(oid) : odObject"			  ]
[ "odInitTest8() : void"			  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest8() : any"						  ]
#---------------------------------#
# BAT:		  tmp_104	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test8",	  12983@0	  ]
[ "CC_odmg",	  12984@0	  ]
[ "odmg",	  12985@0	  ]

	dropping Test8


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test7

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test7",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
[ "Test2",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "C_GETName(odObject) : odObject"	  ]
[ "C_SETName(odObject, odObject) : void"  ]
[ "C_destroy(odObject) : void"		  ]
[ "C_new() : odObject"			  ]
[ "C_new(odObject) : odObject"		  ]
[ "C_new(oid) : odObject"		  ]
[ "odInitTest7() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest7() : any"						  ]
#---------------------------------#
# BAT:		  tmp_116	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test7",	  13115@0	  ]
[ "CC_odmg",	  13116@0	  ]
[ "odmg",	  13117@0	  ]
[ "Test2",	  13204@0	  ]

	dropping Test7


	dropping CC_odmg


	dropping odmg


	dropping Test2

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test6

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test6",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_As() : odSet"			  ]
[ "A_GETBs(odObject) : odSet"		  ]
[ "A_GETName(odObject) : str"		  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str) : odObject"		  ]
[ "B_Bs() : odSet"			  ]
[ "B_GETa(odObject) : odObject"		  ]
[ "B_GETcs(odObject) : odSet"		  ]
[ "B_GETd(odObject) : odObject"		  ]
[ "B_GETnr(odObject) : int"		  ]
[ "B_SETa(odObject, odObject) : void"	  ]
[ "B_SETd(odObject, odObject) : void"	  ]
[ "B_SETnr(odObject, int) : void"	  ]
[ "B_destroy(odObject) : void"		  ]
[ "B_new() : odObject"			  ]
[ "B_new(oid) : odObject"		  ]
[ "B_new(str, int) : odObject"		  ]
[ "C_Cs() : odSet"			  ]
[ "C_GETName(odObject) : str"		  ]
[ "C_GETb(odObject) : odObject"		  ]
[ "C_SETName(odObject, str) : void"	  ]
[ "C_SETb(odObject, odObject) : void"	  ]
[ "C_destroy(odObject) : void"		  ]
[ "C_new() : odObject"			  ]
[ "C_new(oid) : odObject"		  ]
[ "C_new(str) : odObject"		  ]
[ "C_relate(odObject, odObject) : void"	  ]
[ "D_Ds() : odSet"			  ]
[ "D_GETBs(odObject) : odSet"		  ]
[ "D_GETName(odObject) : str"		  ]
[ "D_SETName(odObject, str) : void"	  ]
[ "D_destroy(odObject) : void"		  ]
[ "D_new() : odObject"			  ]
[ "D_new(oid) : odObject"		  ]
[ "D_new(str) : odObject"		  ]
[ "D_relate(odObject, odSet) : void"	  ]
[ "D_remove(odObject, odObject) : void"	  ]
[ "D_removeset(odObject) : void"	  ]
[ "find(str) : odObject"		  ]
[ "findset() : odObject"		  ]
[ "odInitTest6() : void"		  ]
[ "relate_D_Bs() : void"		  ]
[ "test_iterator() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest6() : any"						  ]
#---------------------------------#
# BAT:		  tmp_135	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test6",	  13259@0	  ]
[ "CC_odmg",	  13260@0	  ]
[ "odmg",	  13261@0	  ]

	dropping Test6


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test5

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test5",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETName(odObject) : str"		  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_echo(odObject, int) : void"	  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str) : odObject"		  ]
[ "B_GETExtra(odObject) : str"		  ]
[ "B_SETExtra(odObject, str) : void"	  ]
[ "B_destroy(odObject) : void"		  ]
[ "B_echo(odObject, int) : void"	  ]
[ "B_new() : odObject"			  ]
[ "B_new(oid) : odObject"		  ]
[ "B_new(str, str) : odObject"		  ]
[ "C_GETMore(odObject) : str"		  ]
[ "C_SETMore(odObject, str) : void"	  ]
[ "C_destroy(odObject) : void"		  ]
[ "C_echo(odObject, int) : void"	  ]
[ "C_new() : odObject"			  ]
[ "C_new(oid) : odObject"		  ]
[ "C_new(str, str, str) : odObject"	  ]
[ "odInitTest5() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest5() : any"						  ]
#---------------------------------#
# BAT:		  tmp_147	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test5",	  13426@0	  ]
[ "CC_odmg",	  13427@0	  ]
[ "odmg",	  13428@0	  ]

	dropping Test5


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test4

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test4",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETBirthday(odObject) : Date"	  ]
[ "A_GETName(odObject) : str"		  ]
[ "A_SETBirthday(odObject, Date) : void"  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_age(odObject) : int"		  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str, Date) : odObject"		  ]
[ "Date_GET_day(Date) : chr"		  ]
[ "Date_GET_month(Date) : chr"		  ]
[ "Date_GET_year(Date) : sht"		  ]
[ "Date_new(int, int, int) : Date"	  ]
[ "Date_setDay(Date, int) : void"	  ]
[ "Date_setMonth(Date, int) : void"	  ]
[ "Date_setYear(Date, int) : void"	  ]
[ "odInitTest4() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest4() : any"						  ]
#---------------------------------#
# BAT:		  tmp_154	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test4",	  13569@0	  ]
[ "CC_odmg",	  13570@0	  ]
[ "odmg",	  13571@0	  ]

	dropping Test4


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test3

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test3",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETName(odObject) : str"		  ]
[ "A_GETb(odObject) : odObject"		  ]
[ "A_GETenums(odObject) : int"		  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_SETb(odObject, odObject) : void"	  ]
[ "A_SETenums(odObject, int) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str, int) : odObject"		  ]
[ "A_val(odObject) : str"		  ]
[ "B_GETa(odObject) : odObject"		  ]
[ "B_SETa(odObject, odObject) : void"	  ]
[ "B_destroy(odObject) : void"		  ]
[ "B_new() : odObject"			  ]
[ "B_new(oid) : odObject"		  ]
[ "B_new(str) : odObject"		  ]
[ "odInitTest3() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest3() : any"						  ]
#---------------------------------#
# BAT:		  tmp_164	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test3",	  13707@0	  ]
[ "CC_odmg",	  13708@0	  ]
[ "odmg",	  13709@0	  ]

	dropping Test3


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test2

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test2",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETName(odObject) : str"		  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str) : odObject"		  ]
[ "B_GETa(odObject) : odObject"		  ]
[ "B_SETa(odObject, odObject) : void"	  ]
[ "B_destroy(odObject) : void"		  ]
[ "B_new() : odObject"			  ]
[ "B_new(oid) : odObject"		  ]
[ "B_new(str) : odObject"		  ]
[ "B_obtain(odObject) : odObject"	  ]
[ "odInitTest2() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
#---------------------------------#
# BAT:		  tmp_169	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test2",	  13846@0	  ]
[ "CC_odmg",	  13847@0	  ]
[ "odmg",	  13848@0	  ]

	dropping Test2


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test1

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test1",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#-----------------------------------------#
# signature				  #
#-----------------------------------------#
[ "A_GETName(odObject) : str"		  ]
[ "A_GETNr(odObject) : int"		  ]
[ "A_NameLength(odObject) : int"	  ]
[ "A_SETName(odObject, str) : void"	  ]
[ "A_SETNr(odObject, int) : void"	  ]
[ "A_destroy(odObject) : void"		  ]
[ "A_new() : odObject"			  ]
[ "A_new(oid) : odObject"		  ]
[ "A_new(str) : odObject"		  ]
[ "A_print(odObject, bit) : void"	  ]
[ "A_test_false(odObject) : bit"	  ]
[ "A_test_true(odObject) : bit"		  ]
[ "odInitTest1() : void"		  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest1() : any"						  ]
#---------------------------------#
# BAT:		  tmp_176	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Test1",	  13981@0	  ]
[ "CC_odmg",	  13982@0	  ]
[ "odmg",	  13983@0	  ]

	dropping Test1


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Test

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Test",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "Address_GETnumber(odObject) : int"			  ]
[ "Address_GETstreet(odObject) : str"			  ]
[ "Address_SETnumber(odObject, int) : void"		  ]
[ "Address_SETstreet(odObject, str) : void"		  ]
[ "Address_destroy(odObject) : void"			  ]
[ "Address_new() : odObject"				  ]
[ "Address_new(oid) : odObject"				  ]
[ "City_GETname(odObject) : str"			  ]
[ "City_SETname(odObject, str) : void"			  ]
[ "City_cities() : odSet"				  ]
[ "City_destroy(odObject) : void"			  ]
[ "City_new() : odObject"				  ]
[ "City_new(oid) : odObject"				  ]
[ "Department_GETaddress(odObject) : odObject"		  ]
[ "Department_GETname(odObject) : str"			  ]
[ "Department_GETpeople(odObject) : odSet"		  ]
[ "Department_SETaddress(odObject, odObject) : void"	  ]
[ "Department_SETname(odObject, str) : void"		  ]
[ "Department_departments() : odSet"			  ]
[ "Department_destroy(odObject) : void"			  ]
[ "Department_new() : odObject"				  ]
[ "Department_new(oid) : odObject"			  ]
[ "Employee_GETsalary(odObject) : flt"			  ]
[ "Employee_SETsalary(odObject, flt) : void"		  ]
[ "Employee_destroy(odObject) : void"			  ]
[ "Employee_employees() : odSet"			  ]
[ "Employee_new() : odObject"				  ]
[ "Employee_new(oid) : odObject"			  ]
[ "Person_GETaddress(odObject) : odObject"		  ]
[ "Person_GETdate_of_birth(odObject) : lng"		  ]
[ "Person_GETdepartment(odObject) : odObject"		  ]
[ "Person_GETname(odObject) : str"			  ]
[ "Person_GETsex(odObject) : str"			  ]
[ "Person_SETaddress(odObject, odObject) : void"	  ]
[ "Person_SETdate_of_birth(odObject, lng) : void"	  ]
[ "Person_SETdepartment(odObject, odObject) : void"	  ]
[ "Person_SETname(odObject, str) : void"		  ]
[ "Person_SETsex(odObject, str) : void"			  ]
[ "Person_destroy(odObject) : void"			  ]
[ "Person_new() : odObject"				  ]
[ "Person_new(oid) : odObject"				  ]
[ "Person_persons() : odSet"				  ]
[ "Student_GETmajor(odObject) : str"			  ]
[ "Student_SETmajor(odObject, str) : void"		  ]
[ "Student_destroy(odObject) : void"			  ]
[ "Student_new() : odObject"				  ]
[ "Student_new(oid) : odObject"				  ]
[ "Student_students() : odSet"				  ]
[ "consult() : void"					  ]
[ "load() : void"					  ]
[ "odInitTest() : void"					  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest1() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLTest() : any"						  ]
#-------------------------#
# BAT:	  tmp_197	  #
# (str)	  (oid)		  #
#-------------------------#
[ "Test", 14115@0	  ]
[ "odmg", 14116@0	  ]

	dropping Test


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading OdmgTest

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "OdmgTest",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "Customer_Customers() : odSet"			  ]
[ "Customer_GETcustID(odObject) : int"			  ]
[ "Customer_GETproducts(odObject) : odSet"		  ]
[ "Customer_GETstatus(odObject) : int"			  ]
[ "Customer_SETcustID(odObject, int) : void"		  ]
[ "Customer_SETstatus(odObject, int) : void"		  ]
[ "Customer_boughtThisYear(odObject) : odList"		  ]
[ "Customer_buyProduct(odObject, odObject, int) : int"	  ]
[ "Customer_buyProductList(odObject, odList) : odSet"	  ]
[ "Customer_buyProductSet(odObject, odSet) : void"	  ]
[ "Customer_destroy(odObject) : void"			  ]
[ "Customer_new() : odObject"				  ]
[ "Customer_new(oid) : odObject"			  ]
[ "Part_GETname(odObject) : str"			  ]
[ "Part_GETusedInProducts(odObject) : odSet"		  ]
[ "Part_Parts() : odSet"				  ]
[ "Part_SETname(odObject, str) : void"			  ]
[ "Part_destroy(odObject) : void"			  ]
[ "Part_new() : odObject"				  ]
[ "Part_new(oid) : odObject"				  ]
[ "Person_GETchildren(odObject) : odSet"		  ]
[ "Person_GETmother(odObject) : odObject"		  ]
[ "Person_GETname(odObject) : str"			  ]
[ "Person_Persons() : odSet"				  ]
[ "Person_SETmother(odObject, odObject) : void"		  ]
[ "Person_SETname(odObject, str) : void"		  ]
[ "Person_destroy(odObject) : void"			  ]
[ "Person_new() : odObject"				  ]
[ "Person_new(oid) : odObject"				  ]
[ "Product_GETbuyers(odObject) : odSet"			  ]
[ "Product_GETmainPart(odObject) : odObject"		  ]
[ "Product_GETname(odObject) : str"			  ]
[ "Product_GETparts(odObject) : odList"			  ]
[ "Product_GETproductID(odObject) : int"		  ]
[ "Product_Products() : odSet"				  ]
[ "Product_SETmainPart(odObject, odObject) : void"	  ]
[ "Product_SETname(odObject, str) : void"		  ]
[ "Product_SETproductID(odObject, int) : void"		  ]
[ "Product_destroy(odObject) : void"			  ]
[ "Product_new() : odObject"				  ]
[ "Product_new(oid) : odObject"				  ]
[ "odInitOdmgTest() : void"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest1() : any"						  ]
[ "ODLTest() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLOdmgTest() : any"						  ]
#---------------------------------#
# BAT:		  tmp_218	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "OdmgTest",	  14284@0	  ]
[ "CC_odmg",	  14285@0	  ]
[ "odmg",	  14286@0	  ]

	dropping OdmgTest


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading Example

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "Example",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "Customer_Customers() : odSet"			  ]
[ "Customer_GETaddress(odObject) : str"			  ]
[ "Customer_GETarea(odObject) : str"			  ]
[ "Customer_GETcity(odObject) : str"			  ]
[ "Customer_GETcomments(odObject) : str"		  ]
[ "Customer_GETcreditLimit(odObject) : flt"		  ]
[ "Customer_GETdiscounts(odObject) : odSet"		  ]
[ "Customer_GETgender(odObject) : chr"			  ]
[ "Customer_GETid(odObject) : int"			  ]
[ "Customer_GETname(odObject) : str"			  ]
[ "Customer_GETorders(odObject) : odSet"		  ]
[ "Customer_GETphone(odObject) : str"			  ]
[ "Customer_GETstate(odObject) : str"			  ]
[ "Customer_GETzip(odObject) : str"			  ]
[ "Customer_SETaddress(odObject, str) : void"		  ]
[ "Customer_SETarea(odObject, str) : void"		  ]
[ "Customer_SETcity(odObject, str) : void"		  ]
[ "Customer_SETcomments(odObject, str) : void"		  ]
[ "Customer_SETcreditLimit(odObject, flt) : void"	  ]
[ "Customer_SETgender(odObject, chr) : void"		  ]
[ "Customer_SETid(odObject, int) : void"		  ]
[ "Customer_SETname(odObject, str) : void"		  ]
[ "Customer_SETphone(odObject, str) : void"		  ]
[ "Customer_SETstate(odObject, str) : void"		  ]
[ "Customer_SETzip(odObject, str) : void"		  ]
[ "Customer_buy(odObject, odSet, date) : odObject"	  ]
[ "Customer_destroy(odObject) : void"			  ]
[ "Customer_new() : odObject"				  ]
[ "Customer_new(oid) : odObject"			  ]
[ "Discount_Discounts() : odSet"			  ]
[ "Discount_GETcustomers(odObject) : odSet"		  ]
[ "Discount_GETdiscountPerc(odObject) : flt"		  ]
[ "Discount_SETdiscountPerc(odObject, flt) : void"	  ]
[ "Discount_destroy(odObject) : void"			  ]
[ "Discount_new() : odObject"				  ]
[ "Discount_new(oid) : odObject"			  ]
[ "Item_GETitemNr(odObject) : int"			  ]
[ "Item_GETorder(odObject) : odObject"			  ]
[ "Item_GETorderId(odObject) : int"			  ]
[ "Item_GETprice(odObject) : flt"			  ]
[ "Item_GETproduct(odObject) : odObject"		  ]
[ "Item_GETproductId(odObject) : int"			  ]
[ "Item_GETquantity(odObject) : int"			  ]
[ "Item_GETtotal(odObject) : flt"			  ]
[ "Item_Items() : odSet"				  ]
[ "Item_SETitemNr(odObject, int) : void"		  ]
[ "Item_SETorder(odObject, odObject) : void"		  ]
[ "Item_SETorderId(odObject, int) : void"		  ]
[ "Item_SETprice(odObject, flt) : void"			  ]
[ "Item_SETproduct(odObject, odObject) : void"		  ]
[ "Item_SETproductId(odObject, int) : void"		  ]
[ "Item_SETquantity(odObject, int) : void"		  ]
[ "Item_SETtotal(odObject, flt) : void"			  ]
[ "Item_destroy(odObject) : void"			  ]
[ "Item_new() : odObject"				  ]
[ "Item_new(oid) : odObject"				  ]
[ "Order_GETcommisionPlan(odObject) : chr"		  ]
[ "Order_GETcustomer(odObject) : odObject"		  ]
[ "Order_GETid(odObject) : int"				  ]
[ "Order_GETitems(odObject) : odSet"			  ]
[ "Order_GETorderDate(odObject) : date"			  ]
[ "Order_GETshipDate(odObject) : date"			  ]
[ "Order_GETtotal(odObject) : flt"			  ]
[ "Order_Orders() : odSet"				  ]
[ "Order_SETcommisionPlan(odObject, chr) : void"	  ]
[ "Order_SETcustomer(odObject, odObject) : void"	  ]
[ "Order_SETid(odObject, int) : void"			  ]
[ "Order_SETorderDate(odObject, date) : void"		  ]
[ "Order_SETshipDate(odObject, date) : void"		  ]
[ "Order_SETtotal(odObject, flt) : void"		  ]
[ "Order_destroy(odObject) : void"			  ]
[ "Order_new() : odObject"				  ]
[ "Order_new(oid) : odObject"				  ]
[ "Price_GETendDate(odObject) : date"			  ]
[ "Price_GETminPrice(odObject) : flt"			  ]
[ "Price_GETprodId(odObject) : int"			  ]
[ "Price_GETproduct(odObject) : odObject"		  ]
[ "Price_GETstartDate(odObject) : date"			  ]
[ "Price_GETstdPrice(odObject) : flt"			  ]
[ "Price_Prices() : odSet"				  ]
[ "Price_SETendDate(odObject, date) : void"		  ]
[ "Price_SETminPrice(odObject, flt) : void"		  ]
[ "Price_SETprodId(odObject, int) : void"		  ]
[ "Price_SETproduct(odObject, odObject) : void"		  ]
[ "Price_SETstartDate(odObject, date) : void"		  ]
[ "Price_SETstdPrice(odObject, flt) : void"		  ]
[ "Price_destroy(odObject) : void"			  ]
[ "Price_new() : odObject"				  ]
[ "Price_new(oid) : odObject"				  ]
[ "Product_GETdescription(odObject) : str"		  ]
[ "Product_GETid(odObject) : int"			  ]
[ "Product_GETordered_items(odObject) : odSet"		  ]
[ "Product_GETprices(odObject) : odSet"			  ]
[ "Product_Products() : odSet"				  ]
[ "Product_SETdescription(odObject, str) : void"	  ]
[ "Product_SETid(odObject, int) : void"			  ]
[ "Product_destroy(odObject) : void"			  ]
[ "Product_new() : odObject"				  ]
[ "Product_new(oid) : odObject"				  ]
[ "customerId(str, str, str, str) : odObject"		  ]
[ "date_GETstorage(date) : int"				  ]
[ "date_day(date) : int"				  ]
[ "date_month(date) : int"				  ]
[ "date_new(int, int, int) : date"			  ]
[ "date_year(date) : int"				  ]
[ "odInitExample() : void"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest1() : any"						  ]
[ "ODLTest() : any"						  ]
[ "ODLOdmgTest() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLExample() : any"						  ]
#---------------------------------#
# BAT:		  tmp_268	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "Example",	  14447@0	  ]
[ "CC_odmg",	  14448@0	  ]
[ "odmg",	  14449@0	  ]

	dropping Example


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading CC_odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------#
# signature			  #
#---------------------------------#
[ "DatabaseClose() : void"	  ]
[ "DatabaseOpen(str) : void"	  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest1() : any"						  ]
[ "ODLTest() : any"						  ]
[ "ODLOdmgTest() : any"						  ]
[ "ODLExample() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
#---------------------------------#
# BAT:		  tmp_268	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "CC_odmg",	  14674@0	  ]
[ "odmg",	  14675@0	  ]

	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

	loading CC_Test

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
[ "CC_Test",	  1		  ]
[ "CC_odmg",	  1		  ]
[ "odmg",	  1		  ]
#---------------------------------------------------------#
# signature						  #
#---------------------------------------------------------#
[ "Address_GETnumber(odObject) : int"			  ]
[ "Address_GETstreet(odObject) : str"			  ]
[ "Address_SETnumber(odObject, int) : void"		  ]
[ "Address_SETstreet(odObject, str) : void"		  ]
[ "Address_destroy(odObject) : void"			  ]
[ "Address_new() : odObject"				  ]
[ "Address_new(oid) : odObject"				  ]
[ "City_GETname(odObject) : str"			  ]
[ "City_SETname(odObject, str) : void"			  ]
[ "City_cities() : odSet"				  ]
[ "City_destroy(odObject) : void"			  ]
[ "City_new() : odObject"				  ]
[ "City_new(oid) : odObject"				  ]
[ "DBconsult() : void"					  ]
[ "DBload() : void"					  ]
[ "Department_GETaddress(odObject) : odObject"		  ]
[ "Department_GETname(odObject) : str"			  ]
[ "Department_GETpeople(odObject) : odSet"		  ]
[ "Department_SETaddress(odObject, odObject) : void"	  ]
[ "Department_SETname(odObject, str) : void"		  ]
[ "Department_departments() : odSet"			  ]
[ "Department_destroy(odObject) : void"			  ]
[ "Department_new() : odObject"				  ]
[ "Department_new(oid) : odObject"			  ]
[ "Employee_GETsalary(odObject) : flt"			  ]
[ "Employee_SETsalary(odObject, flt) : void"		  ]
[ "Employee_destroy(odObject) : void"			  ]
[ "Employee_employees() : odSet"			  ]
[ "Employee_new() : odObject"				  ]
[ "Employee_new(oid) : odObject"			  ]
[ "Person_GETaddress(odObject) : odObject"		  ]
[ "Person_GETdate_of_birth(odObject) : lng"		  ]
[ "Person_GETdepartment(odObject) : odObject"		  ]
[ "Person_GETname(odObject) : str"			  ]
[ "Person_GETsex(odObject) : str"			  ]
[ "Person_SETaddress(odObject, odObject) : void"	  ]
[ "Person_SETdate_of_birth(odObject, lng) : void"	  ]
[ "Person_SETdepartment(odObject, odObject) : void"	  ]
[ "Person_SETname(odObject, str) : void"		  ]
[ "Person_SETsex(odObject, str) : void"			  ]
[ "Person_destroy(odObject) : void"			  ]
[ "Person_new() : odObject"				  ]
[ "Person_new(oid) : odObject"				  ]
[ "Person_persons() : odSet"				  ]
[ "Student_GETmajor(odObject) : str"			  ]
[ "Student_SETmajor(odObject, str) : void"		  ]
[ "Student_destroy(odObject) : void"			  ]
[ "Student_new() : odObject"				  ]
[ "Student_new(oid) : odObject"				  ]
[ "Student_students() : odSet"				  ]
[ "odInitCC_Test() : void"				  ]
#-----------------------------------------------------------------#
# MIL Procedure							  #
#-----------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"			  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"  ]
[ "mil_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "neg_select(BAT[any::1,any::2], str, any, ..any..) : BAT[any::1,any::2]"  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"  ]
[ "help_tpe(int) : str"						  ]
[ "help_sig(oid) : void"					  ]
[ "help(str) : void"						  ]
[ "help() : <predefinition>"					  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"	  ]
[ "modules() : void"						  ]
[ "loaded() : void"						  ]
[ "sigs(str) : void"						  ]
[ "dir() : void"						  ]
[ "ls() : void"							  ]
[ "procs() : void"						  ]
[ "clients() : void"						  ]
[ "vars() : void"						  ]
[ "threads() : void"						  ]
[ "env() : void"						  ]
[ "environment() : BAT[str,str]"				  ]
[ "cpu() : BAT[str,int]"					  ]
[ "memory() : BAT[str,int]"					  ]
[ "io() : BAT[str,int]"						  ]
[ "bbp() : BAT[str,int]"					  ]
[ "tail(BAT[any,any]) : int"					  ]
[ "head(BAT[any,any]) : int"					  ]
[ "batsize(BAT[any,any]) : int"					  ]
[ "readonly(BAT[any::1,any::2]) : int"				  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"	  ]
[ "group(BAT[oid,oid], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"		  ]
[ "group(BAT[oid,any]) : BAT[oid,oid]"				  ]
[ "debug(..any..) : any"					  ]
[ "gsum(any) : any"						  ]
[ "avg(..any..) : any"						  ]
[ "{count}(..any..) : any"					  ]
[ "uunique(..any..) : any"					  ]
[ "udiff(..any..) : any"					  ]
[ "uintersect(..any..) : any"					  ]
[ "uunion(..any..) : any"					  ]
[ "gorder(any) : any"						  ]
[ "gsemijoin(any, any) : any"					  ]
[ "gjoin(any, any) : any"					  ]
[ "gjoin() : <predefinition>"					  ]
[ "gselect(..any..) : any"					  ]
[ "guselect(..any..) : any"					  ]
[ "arpc(..any..) : any"						  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"		  ]
[ "likeselect() : <predefinition>"				  ]
[ "pmPrint(..any..) : any"					  ]
[ "pmSummary(..any..) : any"					  ]
[ "ODLmeta() : any"						  ]
[ "intTail(any) : any"						  ]
[ "ODLTransTest() : any"					  ]
[ "ODLTestUse() : any"						  ]
[ "ODLTest9() : any"						  ]
[ "ODLTest8() : any"						  ]
[ "ODLTest7() : any"						  ]
[ "ODLTest6() : any"						  ]
[ "ODLTest5() : any"						  ]
[ "ODLTest4() : any"						  ]
[ "ODLTest3() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest2() : any"						  ]
[ "ODLTest1() : any"						  ]
[ "ODLTest() : any"						  ]
[ "ODLOdmgTest() : any"						  ]
[ "ODLExample() : any"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLexist(str) : bit"						  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLnew_bat(str, int, int) : any"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLrename(BAT[any,any], str) : void"				  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLdestroy_bat(str) : void"					  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLinsert(BAT[any,any], any, any) : void"			  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLnew_classid() : oid"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLset_classid() : void"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLnew_memberid() : oid"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLset_memberid() : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLnew_module(str) : void"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLclassids(oid) : any"					  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLnew_NamedObject(str, oid, BAT[any,any], oid) : void"	  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLclassid(oid, str) : oid"					  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLnew_class(str, str, str) : void"				  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLmemberids(oid) : any"					  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLsuper(oid, str, str) : void"				  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLmemberid(oid, str) : oid"					  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_member(oid, str, int, oid, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberValue(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLnew_memberObject(str, str, str, str, oid) : void"		  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodids(oid) : any"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLmethodid(oid, str) : oid"					  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLnew_method(str, str, str) : void"				  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncids(oid) : any"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLfuncid(oid, str) : oid"					  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLnew_func(str, str) : void"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLfind_member(str, str, str) : oid"				  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLnew_link(str, str, str, str, str, str, oid, oid) : void"	  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLmodule_init(str) : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLnew_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLdestroy_odmg() : void"					  ]
[ "ODLCC_Test() : any"						  ]
#---------------------------------#
# BAT:		  tmp_302	  #
# (str)		  (oid)		  #
#---------------------------------#
[ "CC_Test",	  14793@0	  ]
[ "CC_odmg",	  14794@0	  ]
[ "odmg",	  14795@0	  ]

	dropping CC_Test


	dropping CC_odmg


	dropping odmg

#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "kernel",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "algebra",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]
quit;
