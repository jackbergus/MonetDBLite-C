stdout of test 'tst_writestr` in directory 'tests/by_Peter` itself:

#> Mtest:	milM tst_writestr milM
#> Mtest:	Mtimeout -timeout 543 Mserver -modulesilent -yaccsilent -d8 -db tests_by_Peter tst_writestr.milM
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for Linux2.2.12-20smp/32bit on Wed Apr 12 05:50:14 CEST 2000.
#script:tst_writestr.milM


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# test memory map of string heap under append
vm_minsize(lng(128*1024));

var b := 500000;
#BIG := new(void,int,50000000); # claim 200MB
var d := densebat(wrd(b)).[int]().[+](1);

{
 new(void,str,1000000).seqbase(0@0).access(BAT_WRITE).rename("aa").persists(true);
 unload("aa");
}

commit();

var i := 0;
while(true) { 
 bat("aa").info().reverse().select("theap.storage").reverse().print();
 var e := [str]([+](d,b));
 #e := [str]([/](d,10000));
 print(b :+= 500000); 
 bat("aa").insert(e);
 bat("aa").mmap(1,1,1,1);
 i :+= 1;
 if (i = 4) { break; }
 unload("aa");
}
#-------------------------------------------------#
# t			tmp_32			  # name
# str			str			  # type
#-----------------------------------------#
[ "theap.storage",	  "malloced"	  ]
[ 1000000 ]
#-----------------------------------------#
# BAT:			  tmp_31	  #
# (str)			  (str)		  #
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 1500000 ]
#-----------------------------------------#
# BAT:			  tmp_31	  #
# (str)			  (str)		  #
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 2000000 ]
#-----------------------------------------#
# BAT:			  tmp_31	  #
# (str)			  (str)		  #
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 2500000 ]

{
bat("aa").persists(false);
commit();
}

quit();

# 11:25:18 >  
# 11:25:18 >  Done.
# 11:25:18 >  

