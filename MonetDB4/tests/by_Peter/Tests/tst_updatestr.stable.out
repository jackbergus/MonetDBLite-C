stdout of test 'tst_updatestr` in directory 'tests/by_Peter` itself:


# 12:34:05 >  
# 12:34:05 >  Mtimeout -timeout 60 Mserver "--config=/ufs/niels/data/Linux-i686/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/niels/data/Linux-i686/lib/MonetDB:/ufs/niels/data/Linux-i686/lib/bin" --set "gdk_dbfarm=/ufs/niels/data/Linux-i686/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/niels/data/Linux-i686/var/MonetDB/log" --set mapi_port=42599 --set sql_port=53847 --set monet_prompt= --trace --dbname=mTests_tests_by_Peter  < tst_updatestr.milM
# 12:34:05 >  

# Monet Database Server V4.7.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
# test memory map of string heap under append
var b := 500000;
#BIG := new(void,int,50000000); # claim 200MB
var d := densebat(wrd(b)).[int]().[+](1);

{
 new(void,str,1000000).seqbase(0@0).access(BAT_WRITE).rename("ab").persists(true);
 bat("ab").insert([str](d));
 bat("ab").count().print();
 bat("ab").slice(0,2).print();
 unload("ab");
}
[ 500000 ]
#-----------------#
# h	t	  # name
# void	str	  # type
#-----------------#
[ 0@0,	  "1"	  ]
[ 1@0,	  "2"	  ]
[ 2@0,	  "3"	  ]

commit();

var i := 0;
while(true) { 
 bat("ab").info().reverse().select("theap.storage").reverse().print();
 var e := [str]([+](d,b));
 #e := [str]([/](d,10000));
 print(b :+= 500000); 
 bat("ab").replace(e);
 bat("ab").count().print();
 bat("ab").slice(0,2).print();
 bat("ab").mmap(1,1,1,1);
 i :+= 1;
 if (i = 4) { break; }
 unload("ab");
}
#-------------------------------------------------#
# t			h			  # name
# str			str			  # type
#-------------------------------------------------#
[ "theap.storage",	  "memory mapped"	  ]
[ 1000000 ]
[ 500000 ]
#---------------------------------#
# h		t		  # name
# oid		str		  # type
#-------------------------#
[ 0@0,	  "500001"	  ]
[ 1@0,		  "500002"	  ]
[ 2@0,		  "500003"	  ]
#-----------------------------------------#
# t			h		  # name
# str			str		  # type
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 1500000 ]
[ 500000 ]
#---------------------------------#
# h		t		  # name
# oid		str		  # type
#-------------------------#
[ 0@0,	  "1000001"	  ]
[ 1@0,		  "1000002"	  ]
[ 2@0,		  "1000003"	  ]
#-----------------------------------------#
# t			h		  # name
# str			str		  # type
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 2000000 ]
[ 500000 ]
#---------------------------------#
# h		t		  # name
# oid		str		  # type
#-------------------------#
[ 0@0,	  "1500001"	  ]
[ 1@0,		  "1500002"	  ]
[ 2@0,		  "1500003"	  ]
#-----------------------------------------#
# t			h		  # name
# str			str		  # type
#-----------------------------------------#
[ "theap.storage",	  "private map"	  ]
[ 2500000 ]
[ 500000 ]
#---------------------------------#
# h		t		  # name
# oid		str		  # type
#-------------------------#
[ 0@0,	  "2000001"	  ]
[ 1@0,		  "2000002"	  ]
[ 2@0,		  "2000003"	  ]

bat("ab").slice(0,2).print();
#---------------------------------#
# h		t		  # name
# oid		str		  # type
#-------------------------#
[ 0@0,	  "2000001"	  ]
[ 1@0,		  "2000002"	  ]
[ 2@0,		  "2000003"	  ]
quit();

# 12:34:38 >  
# 12:34:38 >  Done.
# 12:34:38 >  

