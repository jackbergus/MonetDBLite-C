setoid(oid(2000000));
# make a wisconsin-like database
# it uses the predefined wisconsin generator
module("wisc");
wisc("W10k",10000);
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
commit();
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
wisc("W100k",100000);
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); memory().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
commit();
printf("#~BeginVariableOutput~#\n"); io().print(); printf("#~EndVariableOutput~#\n");
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
quit();
