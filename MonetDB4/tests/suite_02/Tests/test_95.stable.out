stdout of test 'test_95` in directory 'tests/suite_02` itself:


# 12:12:53 >  
# 12:12:53 >  Mtimeout -timeout 60 Mserver "--config=/ufs/niels/data/monet/Linux/etc/monet.conf" --debug=10   --set monet_prompt= --dbname=Tests_tests_suite_02  < test_95.milM
# 12:12:53 >  

# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
setoid(oid(2000000));
# This sequence is conflict free
#load(k10_unique1); load(k10_unique2);
var k10_unique1 := bat("k10_unique1");
var k10_unique2 := bat("k10_unique2");
qtrace(1);
var t1:= k10_unique1.copy();
var t2:= k10_unique1.copy();
var t3:= k10_unique1.copy();
var t4:= k10_unique1.copy();
var t5:= k10_unique1.copy();
var s1:= k10_unique2.copy();
var s2:= k10_unique2.copy();
var s3:= k10_unique2.copy();
var s4:= k10_unique2.copy();
var s5:= k10_unique2.copy();
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  330	  ]
[ "elapuser",	  0	  ]
[ "system",	  1480	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
join(t1,s1.reverse()).count().print();
[ 10000 ]
join(t2,s2.reverse()).count().print();
[ 10000 ]
join(t3,s3.reverse()).count().print();
[ 10000 ]
join(t4,s4.reverse()).count().print();
[ 10000 ]
join(t5,s5.reverse()).count().print();
[ 10000 ]
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  350	  ]
[ "elapuser",	  20	  ]
[ "system",	  1490	  ]
[ "elapsystem",	  10	  ]
#~EndVariableOutput~#
var i1,i2,i3,i4,i5;
printf("#~BeginVariableOutput~#\n"); qstat(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[     4,      0,      0,      3,       0,       0,      66, "# This sequence is conflict free"]
#[     3,      0,      1,      6,       0,      66,       0, "readCmd;"]
#[     6,      1,      1,      5,      66,      66,       3, "t1:= k10_unique1.copy();"]
#[     5,      1,      1,      8,      66,      69,       0, "readCmd;"]
#[     8,      1,      1,      7,      69,      69,       1, "t2:= k10_unique1.copy();"]
#[     7,      1,      1,     10,      69,      70,       0, "readCmd;"]
#[    10,      1,      1,      9,      70,      70,       2, "t3:= k10_unique1.copy();"]
#[     9,      1,      1,     12,      70,      72,       0, "readCmd;"]
#[    12,      1,      1,     11,      72,      72,       2, "t4:= k10_unique1.copy();"]
#[    11,      1,      1,     14,      72,      74,       0, "readCmd;"]
#[    14,      1,      1,     13,      74,      74,       1, "t5:= k10_unique1.copy();"]
#[    13,      1,      1,     16,      74,      75,       0, "readCmd;"]
#[    16,      1,      1,     15,      75,      75,       2, "s1:= k10_unique2.copy();"]
#[    15,      1,      1,     18,      75,      77,       0, "readCmd;"]
#[    18,      1,      1,     17,      77,      77,       1, "s2:= k10_unique2.copy();"]
#[    17,      1,      1,     20,      77,      78,       0, "readCmd;"]
#[    20,      1,      1,     19,      78,      78,       1, "s3:= k10_unique2.copy();"]
#[    19,      1,      1,     22,      78,      79,       0, "readCmd;"]
#[    22,      1,      1,     21,      79,      79,       0, "s4:= k10_unique2.copy();"]
#[    21,      1,      1,     24,      79,      79,       1, "readCmd;"]
#[    24,      1,      1,     23,      80,      80,       0, "s5:= k10_unique2.copy();"]
#[    23,      1,      1,     26,      79,      80,       1, "readCmd;"]
#[    26,      1,      1,     25,      81,      81,       6, "printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVa"]
#[    25,      1,      1,     28,      80,      87,       0, "readCmd;"]
#[    28,      1,      1,     27,      87,      87,       5, "join(t1,s1.reverse()).count().print();"]
#[    27,      1,      1,     30,      87,      92,       0, "readCmd;"]
#[    30,      1,      1,     29,      92,      92,       5, "join(t2,s2.reverse()).count().print();"]
#[    29,      1,      1,     32,      92,      97,       0, "readCmd;"]
#[    32,      1,      1,     31,      97,      97,       4, "join(t3,s3.reverse()).count().print();"]
#[    31,      1,      1,     34,      97,     101,       1, "readCmd;"]
#[    34,      1,      1,     33,     102,     102,       4, "join(t4,s4.reverse()).count().print();"]
#[    33,      1,      1,     36,     101,     106,       0, "readCmd;"]
#[    36,      1,      1,     35,     106,     106,       5, "join(t5,s5.reverse()).count().print();"]
#[    35,      1,      1,     38,     106,     111,       0, "readCmd;"]
#[    38,      1,      1,     37,     111,     111,       6, "printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVa"]
#[    37,      1,      1,     40,     111,     117,       0, "readCmd;"]
#[    40,      1,      1,     39,     117,     117,       0, "var i1,i2,i3,i4,i5;"]
#[    39,      1,      1,     42,     117,     117,       0, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);qtrace(1);
threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  350	  ]
[ "elapuser",	  0	  ]
[ "system",	  1490	  ]
[ "elapsystem",	  0	  ]
#~EndVariableOutput~#
{|	
	i1:=join(t1,s1.reverse()).count();
	i2:=join(t2,s2.reverse()).count();
	i3:=join(t3,s3.reverse()).count();
	i4:=join(t4,s4.reverse()).count();
	i5:=join(t5,s5.reverse()).count();
|}
printf("#~BeginVariableOutput~#\n"); qstat(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
##------------------------------------------------------------------------#
## key   | put   | get  | wakeup  | enter | start | duration | action     #
##------------------------------------------------------------------------#
#[    45,      1,      1,     44,    1078,    1078,       0, "qtrace(0);qtrace(1);"]
#[    44,      1,      1,     47,    1078,    1078,       0, "readCmd;"]
#[    47,      1,      1,     46,    1078,    1078,       1, "threadcnt(4);printf("#~BeginVariableOutput~#\n"); cpu().print(); pr"]
#[    46,      1,      3,     49,    1078,    1079,       1, "readCmd;"]
#[    51,      4,      1,     50,    1080,    1080,       4, "[0]"]
#[    52,      4,      3,     50,    1080,    1082,       7, "[1]"]
#[    53,      4,      1,     50,    1080,    1084,       5, "[2]"]
#[    54,      4,      2,     50,    1080,    1086,       9, "[3]"]
#[    55,      4,      5,     50,    1080,    1088,       8, "[4]"]
#[    50,      4,      4,      0,    1080,    1096,       0, ""]
#[    49,      3,      4,     48,    1080,    1080,      16, "{|	"]
#[    48,      3,      3,     57,    1079,    1096,       1, "readCmd;"]
#~EndVariableOutput~#
qtrace(0);
print(i1);
[ 10000 ]
print(i2);
[ 10000 ]
print(i3);
[ 10000 ]
print(i4);
[ 10000 ]
print(i5);
[ 10000 ]
print("done parallel");
[ "done parallel" ]
"pseudo_thread_name".print();
[ "pseudo_thread_name" ]
printf("#~BeginVariableOutput~#\n"); view_gdk_thread().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n"); cpu().print(); printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:		  cpu	  #
# (str)		  (int)	  #
#-------------------------#
[ "elapsed",	  0	  ]
[ "user",	  0	  ]
[ "elapuser",	  -350	  ]
[ "system",	  0	  ]
[ "elapsystem",	  -1490	  ]
#~EndVariableOutput~#
quit();

# 12:12:54 >  
# 12:12:54 >  Done.
# 12:12:54 >  

