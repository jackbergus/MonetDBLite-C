stdout of test 'setaggr_exist` in directory 'src/monet` itself:

#> Mtest (13:51:58):	milM setaggr_exist milM
#> Mtest (13:51:58):	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db src_monet setaggr_exist.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:setaggr_exist.milM

# 11:48:26 >  
# 11:48:26 >  Mtimeout -timeout 60 Mserver "--config=/ufs/niels/data/Linux-i686/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/niels/data/Linux-i686/lib/MonetDB" --set "gdk_dbfarm=/ufs/niels/data/Linux-i686/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/niels/data/Linux-i686/var/MonetDB/log" --set mapi_port=41715 --set sql_port=50742 --set monet_prompt= --trace --dbname=mTests_src_monet  < setaggr_exist.milM
# 11:48:26 >  

# Monet Database Server V4.3.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
var b := new(oid, bit);

b.insert(oid(4), true);
b.insert(oid(4), true);
b.insert(oid(4), true);
b.insert(oid(5), true);
b.insert(oid(5), true);
b.insert(oid(5), false);
b.insert(oid(6), true);
b.insert(oid(7), false);
b.insert(oid(8), false);
b.insert(oid(8), false);
b.insert(oid(8), false);
b.insert(oid(9), true);
b.insert(oid(9), bit(nil));
b.insert(oid(10), false);
b.insert(oid(10), bit(nil));
b.insert(oid(11), false);
b.insert(oid(11), bit(nil));
b.insert(oid(11), true);
b.insert(oid(12), bit(nil));
b.print();
#-----------------#
# BAT:	  tmp_26  #
# (oid)	  (bit)	  #
#-----------------#
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 5@0,	  true	  ]
[ 5@0,	  false	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  false	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  false	  ]
[ 11@0,	  nil	  ]
[ 11@0,	  true	  ]
[ 12@0,	  nil	  ]

proc exist(BAT[bit,bit] b) : bit {
  return b.exist(true);
}

var x := {exist}(b);
x.print();
#-----------------#
# BAT:	  tmp_27  #
# (oid)	  (bit)	  #
#-----------------#
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

b.insert(oid(1), true);

x := {exist}(b);
x.print();
#-----------------#
# BAT:	  tmp_28  #
# (oid)	  (bit)	  #
#-----------------#
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]
[ 1@0,	  true	  ]

var bs := b.sort();
var bss := b.sort_ht();
printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#
bs.print();
#-----------------#
# BAT:	  tmp_27  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 5@0,	  false	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  nil	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  true	  ]
[ 11@0,	  nil	  ]
[ 11@0,	  false	  ]
[ 12@0,	  nil	  ]
printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#
bss.print();
#-----------------#
# BAT:	  tmp_25  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  false	  ]
[ 5@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  nil	  ]
[ 9@0,	  true	  ]
[ 10@0,	  nil	  ]
[ 10@0,	  false	  ]
[ 11@0,	  nil	  ]
[ 11@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  nil	  ]

x := {exist}(bs);
x.print();
#-----------------#
# BAT:	  tmp_29  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

var y := {exist}(bss);
y.print();
#-----------------#
# BAT:	  tmp_30  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

var bst := b.reverse().sort().reverse();
var bsst := b.reverse().sort_ht().reverse();

x := {exist}(bst);
printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#
x.print();
#-----------------#
# BAT:	  tmp_32  #
# (oid)	  (bit)	  #
#-----------------#
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 9@0,	  true	  ]
[ 12@0,	  false	  ]
[ 8@0,	  false	  ]
[ 5@0,	  true	  ]
[ 7@0,	  false	  ]
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 6@0,	  true	  ]
printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#
x.sort_ht().print();
#-----------------#
# BAT:	  tmp_29  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

y := {exist}(bsst);
y.print();
#-----------------#
# BAT:	  tmp_35  #
# (oid)	  (bit)	  #
#-----------------#
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]
[ 5@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 6@0,	  true	  ]
y.sort_ht().print();
#-----------------#
# BAT:	  tmp_30  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]


bs.accbuild("hash");
bss.accbuild("hash");

printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#
bs@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ false ]
[ true ]
printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#
bss@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ true ]
[ false ]

x := {exist}(bs);
x.print();
#-----------------#
# BAT:	  tmp_33  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

y := {exist}(bss);
y.print();
#-----------------#
# BAT:	  tmp_30  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#
bs@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ false ]
[ true ]
printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#
bss@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ true ]
[ false ]

bs.reverse().accbuild("hash");
bss.reverse().accbuild("hash");

x := {exist}(bs);
x.print();
#-----------------#
# BAT:	  tmp_32  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

y := {exist}(bss);
y.print();
#-----------------#
# BAT:	  tmp_35  #
# (oid)	  (bit)	  #
#-----------------#
[ 1@0,	  true	  ]
[ 4@0,	  true	  ]
[ 5@0,	  true	  ]
[ 6@0,	  true	  ]
[ 7@0,	  false	  ]
[ 8@0,	  false	  ]
[ 9@0,	  true	  ]
[ 10@0,	  false	  ]
[ 11@0,	  true	  ]
[ 12@0,	  false	  ]

printf("#~BeginVariableOutput~#\n");
#~BeginVariableOutput~#
bs@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ false ]
[ true ]
printf("#~EndVariableOutput~#\n");
#~EndVariableOutput~#
bss@hashloop(oid(5)) {
  print($t);
}
[ true ]
[ true ]
[ false ]

bs.reverse()@hashloop(true) {
  print($t);
}
[ 11@0 ]
[ 9@0 ]
[ 6@0 ]
[ 5@0 ]
[ 5@0 ]
[ 4@0 ]
[ 4@0 ]
[ 4@0 ]
[ 1@0 ]

bss.reverse()@hashloop(true) {
  print($t);
}
[ 11@0 ]
[ 9@0 ]
[ 6@0 ]
[ 5@0 ]
[ 5@0 ]
[ 4@0 ]
[ 4@0 ]
[ 4@0 ]
[ 1@0 ]
quit();

# 17:06:20 >  
# 17:06:20 >  Done.
# 17:06:20 >  

