stdout of test 'refcnt` in directory 'src/monet` itself:


# 15:28:46 >  
# 15:28:46 >  Mtimeout -timeout 300 ./refcnt refcnt 
# 15:28:46 >  


# 15:28:46 >  
# 15:28:46 >  Mtimeout -timeout 60 Mserver --config=/ufs/boncz/MonetDB/linux/etc/monet.conf --debug=10 --set monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB --set gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm --set sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log --set mapi_port=55437 --set sql_port=50559 --set monet_prompt= --trace --dbname=mTests_src_monet
# 15:28:46 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# restart gives correct refcnt b from 0 to 1 
# since b is part of a and persistent expected refcnt should be 2
# bat of bats can no longer be made persistent and therefor this test
# losses much of its use
var b:=new(int,int);
b.rename("b");
b.persists(true);
var a:=new(int,bat);
a.rename("a");
a.persists(true);
!ERROR: BATmode: BAT type implies that a[int,BAT] cannot be made persistent.
a.insert(1,b);
commit();
quit();   
 restart gives correct refcnt b from 0 to 1 
 since b is part of a and persistent expected refcnt should be 2 

# 15:28:47 >  
# 15:28:47 >  Mtimeout -timeout 60 Mserver --config=/ufs/boncz/MonetDB/linux/etc/monet.conf --debug=10 --set monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB --set gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm --set sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log --set mapi_port=55437 --set sql_port=50559 --set monet_prompt= --trace --dbname=mTests_src_monet
# 15:28:47 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
ls();
#-------------------------------------------------------------------------------------------------#
# name	| htype	| ttype	| count	| heat	| dirty		| status| kind	| refcnt| lrefcnt	  #
#-------------------------------------------------------------------------------------------------#
[ "b",	  "int",  "int",  0,	  0,	  "clean",	  "disk", "pers", 0,	  1		  ]
bat("a").print();
!ERROR: interpret_params: print(param 1): invalid BAT.
bat("b").print();
#-----------------#
# BAT:	  b	  #
# (int)	  (int)	  #
#-----------------#
# tidy up
bat("a").persists(false); 
!ERROR: interpret_params: persists(param 1): invalid BAT.
bat("b").persists(false); 
commit();
quit();

# 15:28:47 >  
# 15:28:47 >  Done.
# 15:28:47 >  

