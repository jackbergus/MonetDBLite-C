stdout of test 'cache` in directory 'gdk` itself:


# 11:55:17 >  
# 11:55:17 >  Mtimeout -timeout 60 Mserver "--config=/data/home/boncz/gcc-64-32-debug/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/data/home/boncz/gcc-64-32-debug/lib/MonetDB:/data/home/boncz/gcc-64-32-debug/lib/bin" --set "gdk_dbfarm=/data/home/boncz/gcc-64-32-debug/var/MonetDB/dbfarm" --set "sql_logdir=/data/home/boncz/gcc-64-32-debug/var/MonetDB/log" --set mapi_port=37376 --set monet_prompt= --trace --dbname=mTests_src_gdk  < cache.milM
# 11:55:17 >  

# Monet Database Server V4.11.3
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module(alarm);

proc test_batcache(int n, int r) : void {
  var b := bat(void,void);
  var j := 0;
  while(j < r) {
    {
      var bb := bat(int,bat,3*n);
      var i := 0;
      while(i < n) {
        var ht := i % 11;
        var tt := (i/11) % 11;
        var v := str(i);
        var vh := b;
        var vt := b;
        if (ht != bat) vh := v.cast(ht);
        if (tt != bat) vt := v.cast(tt);
        var bn := bat(ht,tt).insert(vh, vt).access(BAT_READ);
        var bh := bn.hmark(0@0); # create some views
        var bt := bn.tmark(0@0); # create some views
        bb.insert(i,bn);
        bb.insert(i,bh);
        bb.insert(i,bt);
        i :+= 1;
      }
    }
    # bb destroyed => flush 3*n bats through the cache
    var i := 0;
    while(i < n) {
      var ht := i % 11;
      var tt := (i/11) % 11;
      var v := str(i);
      var vh := b;
      var vt := b;
      if (ht != bat) vh := v.cast(ht);
      if (tt != bat) vt := v.cast(tt);
      var bn := bat(ht,tt).insert(vh, vt).access(BAT_READ);
      var bh := bn.hmark(0@0);
      var bt := bn.tmark(0@0);
      i :+= 1;
    }
    j :+= 1;
  }
}
debugmask(0);
dir("tmp");
#-----------------------------------------------------------------------------------------------------------------#
# name			htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str			str	str	lng	int	str		str	str	int	int		  # type
#-----------------------------------------------------------------------------------------------------------------#
test_batcache(100,300);

var t := time();
test_batcache(100,300);
var t1 := time() - t;
dir("tmp");
#-----------------------------------------------------------------------------------------------------------------#
# name			htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str			str	str	lng	int	str		str	str	int	int		  # type
#-----------------------------------------------------------------------------------------------------------------#

bbp_batcache_minsize(wrd(0));
t := time();
test_batcache(100,300);
var t2 := time() - t;
dir("tmp");
#-----------------------------------------------------------------------------------------------------------------#
# name			htype	ttype	count	heat	dirty		status	kind	refcnt	lrefcnt		  # name
# str			str	str	lng	int	str		str	str	int	int		  # type
#-----------------------------------------------------------------------------------------------------------------#
print(t1 < t2);
[ true ]
quit();

# 11:55:32 >  
# 11:55:32 >  Done.
# 11:55:32 >  

