stdout of test 'casts` in directory 'gdk` itself:


# 14:56:01 >  
# 14:56:01 >  Mtimeout -timeout 60 Mserver "--config=/ufs/boncz/MonetDB/linux/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/boncz/MonetDB/linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/boncz/MonetDB/linux/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/boncz/MonetDB/linux/var/MonetDB/log" --set mapi_port=52524 --set sql_port=56156 --set monet_prompt= --trace --dbname=mTests_src_gdk  < casts.milM
# 14:56:01 >  

# Monet Database Server V4.3.13
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# casting to int

0.print();
[ 0 ]
1.print();
[ 1 ]
32767.print();
[ 32767 ]
32768.print();
[ 32768 ]
32769.print();
[ 32769 ]
2147483647.print();
[ 2147483647 ]
2147483648.print();
[ 2147483648 ]
2147483649.print();
[ 2147483649 ]
-2147483647.print();
[ -2147483647 ]
-2147483648.print();
[ -2147483648 ]
-2147483649.print();
[ -2147483649 ]

# from bit
int(true).print();
[ 1 ]
int(false).print();
[ 0 ]

# from chr
int('a').print();
[ 97 ]

# from bte
int(bte(1)).print();
[ 1 ]
int(bte(127)).print();
[ 127 ]

# from sht
int(sht(1)).print();
[ 1 ]
int(sht(32767)).print();
[ 32767 ]

# from int
int(1).print();
[ 1 ]
int(32767).print();
[ 32767 ]
int(32768).print();
[ 32768 ]
int(2147483647).print();
[ 2147483647 ]
int(-2147483647).print();
[ -2147483647 ]
int(2147483647+1).print();
[ nil ]
int(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
int(2147483647+2).print();
[ -2147483647 ]
# should this produce nil (overflow)?
int(-2147483647 - 2).print();
[ 2147483647 ]

# from wrd
int(wrd(1LL)).print();
[ 1 ]
int(wrd(2147483647LL)).print();
[ 2147483647 ]
int(wrd(2147483648LL)).print();
[ nil ]
int(wrd(2147483649LL)).print();
[ nil ]
int(wrd(-2147483647LL)).print();
[ -2147483647 ]
int(wrd(-2147483648LL)).print();
[ nil ]
int(wrd(-2147483649LL)).print();
[ nil ]

# from lng
int(1LL).print();
[ 1 ]
int(2147483647LL).print();
[ 2147483647 ]
int(2147483648LL).print();
[ nil ]
int(2147483649LL).print();
[ nil ]
int(-2147483647LL).print();
[ -2147483647 ]
int(-2147483648LL).print();
[ nil ]
int(-2147483649LL).print();
[ nil ]

# from flt
int(0.0).print();
[ 0 ]
int(0.1).print();
[ 0 ]
int(0.5).print();
[ 0 ]
int(0.9).print();
[ 0 ]
int(1.0).print();
[ 1 ]
int(-0.1).print();
[ 0 ]
int(-0.5).print();
[ 0 ]
int(-0.9).print();
[ 0 ]
int(-1.0).print();
[ -1 ]
int(2147483647.0).print();
[ nil ]
int(2147483648.0).print();
[ nil ]
int(2147483649.0).print();
[ nil ]
int(-2147483647.0).print();
[ nil ]
int(-2147483648.0).print();
[ nil ]
int(-2147483649.0).print();
[ nil ]

# from dbl
int(0.0LL).print();
[ 0 ]
int(0.1LL).print();
[ 0 ]
int(0.5LL).print();
[ 0 ]
int(0.9LL).print();
[ 0 ]
int(1.0LL).print();
[ 1 ]
int(-0.1LL).print();
[ 0 ]
int(-0.5LL).print();
[ 0 ]
int(-0.9LL).print();
[ 0 ]
int(-1.0LL).print();
[ -1 ]
int(2147483647.0LL).print();
[ 2147483647 ]
int(2147483648.0LL).print();
[ nil ]
int(2147483649.0LL).print();
[ nil ]
int(-2147483647.0LL).print();
[ -2147483647 ]
int(-2147483648.0LL).print();
[ nil ]
int(-2147483649.0LL).print();
[ nil ]

# from oid
int(2@0).print();
[ 2 ]
int(2@1).print();
[ 2 ]
int(2147483647@0).print();
[ 2147483647 ]
int(2147483648@0).print();
[ nil ]
int(2147483649@0).print();
[ nil ]

# from str
int("0").print();
[ 0 ]
int("32767").print();
[ 32767 ]
int("2147483647").print();
[ 2147483647 ]
int("2147483648").print();
[ nil ]
int("2147483649").print();
[ nil ]
int("-2147483647").print();
[ -2147483647 ]
int("-2147483648").print();
[ nil ]
int("-2147483649").print();
[ nil ]
int("").print();
[ nil ]
int("random string").print();
[ nil ]

# to bit

# from bit
bit(true).print();
[ true ]
bit(false).print();
[ false ]

# from chr
bit('a').print();
[ true ]
bit(chr(0)).print();
[ false ]

# from bte
bit(bte(0)).print();
[ false ]
bit(bte(1)).print();
[ true ]
bit(bte(-1)).print();
[ true ]
bit(bte(96)).print();
[ true ]

# from sht
bit(sht(0)).print();
[ false ]
bit(sht(1)).print();
[ true ]
bit(sht(-1)).print();
[ true ]
bit(sht(4096)).print();
[ true ]

# from int
bit(0).print();
[ false ]
bit(1).print();
[ true ]
bit(-1).print();
[ true ]
bit(4096).print();
[ true ]

# from wrd
bit(wrd(0LL)).print();
[ false ]
bit(wrd(1LL)).print();
[ true ]
bit(wrd(-1LL)).print();
[ true ]
bit(wrd(4096LL)).print();
[ true ]

# from lng
bit(0LL).print();
[ false ]
bit(1LL).print();
[ true ]
bit(-1LL).print();
[ true ]
bit(4096LL).print();
[ true ]

# from flt
bit(0.0).print();
[ false ]
bit(0.1).print();
[ true ]
bit(1.0).print();
[ true ]
bit(-0.1).print();
[ true ]
bit(-1.0).print();
[ true ]
bit(4096.0).print();
[ true ]

# from dbl
bit(0.0LL).print();
[ false ]
bit(0.1LL).print();
[ true ]
bit(1.0LL).print();
[ true ]
bit(-0.1LL).print();
[ true ]
bit(-1.0LL).print();
[ true ]
bit(4096.0LL).print();
[ true ]

# from oid
bit(0@0).print();
[ false ]
bit(1@0).print();
[ true ]
bit(4096@0).print();
[ true ]
bit(1073741824@0).print();
[ true ]
bit(2147483647@0).print();
[ true ]

# from str
bit("true").print();
[ true ]
bit("false").print();
[ false ]
bit("0").print();
[ false ]
bit("1").print();
[ true ]
bit("random string").print();
[ nil ]
bit("").print();
[ nil ]

# to sht

# from bit
sht(true).print();
[ 1 ]
sht(false).print();
[ 0 ]

# from chr
sht('a').print();
[ 97 ]
sht(chr(0)).print();
[ 0 ]

# from int
sht(0).print();
[ 0 ]
sht(32767).print();
[ 32767 ]
sht(32768).print();
[ nil ]
sht(32769).print();
[ nil ]
sht(-32767).print();
[ -32767 ]
sht(-32768).print();
[ nil ]
sht(-32769).print();
[ nil ]
sht(2147483647).print();
[ nil ]

# from lng
sht(0LL).print();
[ 0 ]
sht(32767LL).print();
[ 32767 ]
sht(32768LL).print();
[ nil ]
sht(32769LL).print();
[ nil ]
sht(-32767LL).print();
[ -32767 ]
sht(-32768LL).print();
[ nil ]
sht(-32769LL).print();
[ nil ]
sht(2147483647LL).print();
[ nil ]

# from flt
sht(0.0).print();
[ 0 ]
sht(0.1).print();
[ 0 ]
sht(0.5).print();
[ 0 ]
sht(0.9).print();
[ 0 ]
sht(1.0).print();
[ 1 ]
sht(-0.1).print();
[ 0 ]
sht(-0.5).print();
[ 0 ]
sht(-0.9).print();
[ 0 ]
sht(-1.0).print();
[ -1 ]
sht(32767.0).print();
[ 32767 ]
sht(32768.0).print();
[ nil ]
sht(32769.0).print();
[ nil ]
sht(-32767.0).print();
[ -32767 ]
sht(-32768.0).print();
[ nil ]
sht(-32769.0).print();
[ nil ]

# from dbl
sht(0.0LL).print();
[ 0 ]
sht(0.1LL).print();
[ 0 ]
sht(0.5LL).print();
[ 0 ]
sht(0.9LL).print();
[ 0 ]
sht(1.0LL).print();
[ 1 ]
sht(-0.1LL).print();
[ 0 ]
sht(-0.5LL).print();
[ 0 ]
sht(-0.9LL).print();
[ 0 ]
sht(-1.0LL).print();
[ -1 ]
sht(32767.0LL).print();
[ 32767 ]
sht(32768.0LL).print();
[ nil ]
sht(32769.0LL).print();
[ nil ]
sht(-32767.0LL).print();
[ -32767 ]
sht(-32768.0LL).print();
[ nil ]
sht(-32769.0LL).print();
[ nil ]

# from oid
sht(0@0).print();
[ 0 ]
sht(1@0).print();
[ 1 ]
sht(4096@0).print();
[ 4096 ]
sht(1073741824@0).print();
[ nil ]
sht(2147483647@0).print();
[ nil ]

# from str
sht("0").print();
[ 0 ]
sht("32767").print();
[ 32767 ]
sht("32768").print();
[ nil ]
sht("32769").print();
[ nil ]
sht("-32767").print();
[ -32767 ]
sht("-32768").print();
[ nil ]
sht("-32769").print();
[ nil ]
sht("").print();
[ nil ]
sht("random string").print();
[ nil ]

# to long

0LL.print();
[ 0 ]
1LL.print();
[ 1 ]
32767LL.print();
[ 32767 ]
32768LL.print();
[ 32768 ]
32769LL.print();
[ 32769 ]
2147483647LL.print();
[ 2147483647 ]
2147483648LL.print();
[ 2147483648 ]
2147483649LL.print();
[ 2147483649 ]
-2147483647LL.print();
[ -2147483647 ]
-2147483648LL.print();
[ -2147483648 ]
-2147483649LL.print();
[ -2147483649 ]
9223372036854775807LL.print();
[ 9223372036854775807 ]
9223372036854775808LL.print();
[ nil ]
9223372036854775809LL.print();
[ nil ]
-9223372036854775807LL.print();
[ -9223372036854775807 ]
-9223372036854775808LL.print();
[ nil ]
-9223372036854775809LL.print();
[ nil ]

# from bit
lng(true).print();
[ 1 ]
lng(false).print();
[ 0 ]

# from chr
lng('a').print();
[ 97 ]

# from sht
lng(sht(1)).print();
[ 1 ]
lng(sht(32767)).print();
[ 32767 ]

# from int
lng(1).print();
[ 1 ]
lng(32767).print();
[ 32767 ]
lng(32768).print();
[ 32768 ]
lng(2147483647).print();
[ 2147483647 ]
lng(-2147483647).print();
[ -2147483647 ]
lng(2147483647+1).print();
[ nil ]
lng(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
lng(2147483647+2).print();
[ -2147483647 ]
# should this produce nil (overflow)?
lng(-2147483647 - 2).print();
[ 2147483647 ]

# from lng
# from flt
lng(0.0).print();
[ 0 ]
lng(0.1).print();
[ 0 ]
lng(0.5).print();
[ 0 ]
lng(0.9).print();
[ 0 ]
lng(1.0).print();
[ 1 ]
lng(-0.1).print();
[ 0 ]
lng(-0.5).print();
[ 0 ]
lng(-0.9).print();
[ 0 ]
lng(-1.0).print();
[ -1 ]
lng(2147483647.0).print();
[ 2147483648 ]
lng(2147483648.0).print();
[ 2147483648 ]
lng(2147483649.0).print();
[ 2147483648 ]
lng(-2147483647.0).print();
[ -2147483648 ]
lng(-2147483648.0).print();
[ -2147483648 ]
lng(-2147483649.0).print();
[ -2147483648 ]
lng(9223372036854775807.0).print();
[ 9223372036854775807 ]
lng(9223372036854775808.0).print();
[ 9223372036854775807 ]
lng(9223372036854775809.0).print();
[ 9223372036854775807 ]
lng(-9223372036854775807.0).print();
[ nil ]
lng(-9223372036854775808.0).print();
[ nil ]
lng(-9223372036854775809.0).print();
[ nil ]

# from dbl
lng(0.0LL).print();
[ 0 ]
lng(0.1LL).print();
[ 0 ]
lng(0.5LL).print();
[ 0 ]
lng(0.9LL).print();
[ 0 ]
lng(1.0LL).print();
[ 1 ]
lng(-0.1LL).print();
[ 0 ]
lng(-0.5LL).print();
[ 0 ]
lng(-0.9LL).print();
[ 0 ]
lng(-1.0LL).print();
[ -1 ]
lng(2147483647.0LL).print();
[ 2147483647 ]
lng(2147483648.0LL).print();
[ 2147483648 ]
lng(2147483649.0LL).print();
[ 2147483649 ]
lng(-2147483647.0LL).print();
[ -2147483647 ]
lng(-2147483648.0LL).print();
[ -2147483648 ]
lng(-2147483649.0LL).print();
[ -2147483649 ]
lng(9223372036854775807.0LL).print();
[ 9223372036854775807 ]
lng(9223372036854775808.0LL).print();
[ 9223372036854775807 ]
lng(9223372036854775809.0LL).print();
[ 9223372036854775807 ]
lng(-9223372036854775807.0LL).print();
[ nil ]
lng(-9223372036854775808.0LL).print();
[ nil ]
lng(-9223372036854775809.0LL).print();
[ nil ]

# from oid
lng(2@0).print();
[ 2 ]
lng(2@1).print();
[ 2 ]
lng(2147483647@0).print();
[ 2147483647 ]
lng(2147483648@0).print();
[ 2147483648 ]
lng(2147483649@0).print();
[ 2147483649 ]
lng(9223372036854775807@0).print();
[ 9223372036854775807 ]
lng(9223372036854775808@0).print();
[ nil ]
lng(9223372036854775809@0).print();
[ nil ]

# from str
lng("0").print();
[ 0 ]
lng("32767").print();
[ 32767 ]
lng("2147483647").print();
[ 2147483647 ]
lng("2147483648").print();
[ 2147483648 ]
lng("2147483649").print();
[ 2147483649 ]
lng("-2147483647").print();
[ -2147483647 ]
lng("-2147483648").print();
[ -2147483648 ]
lng("-2147483649").print();
[ -2147483649 ]
lng("").print();
[ nil ]
lng("random string").print();
[ nil ]
lng("9223372036854775807").print();
[ 9223372036854775807 ]
lng("9223372036854775808").print();
[ nil ]
lng("9223372036854775809").print();
[ nil ]
lng("-9223372036854775807").print();
[ -9223372036854775807 ]
lng("-9223372036854775808").print();
[ nil ]
lng("-9223372036854775809").print();
[ nil ]

# to flt

# from bit
flt(true).print();
[ 1 ]
flt(false).print();
[ 0 ]

# from chr
flt('a').print();
[ 97 ]

# from sht
flt(sht(1)).print();
[ 1 ]
flt(sht(32767)).print();
[ 32767 ]

# from int
flt(1).print();
[ 1 ]
flt(32767).print();
[ 32767 ]
flt(32768).print();
[ 32768 ]
flt(2147483647).print();
[ 2.14748365e+09 ]
flt(-2147483647).print();
[ -2.14748365e+09 ]
flt(2147483647+1).print();
[ nil ]
flt(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
flt(2147483647+2).print();
[ -2.14748365e+09 ]
# should this produce nil (overflow)?
flt(-2147483647 - 2).print();
[ 2.14748365e+09 ]

# from lng
flt(1LL).print();
[ 1 ]
flt(2147483647LL).print();
[ 2.14748365e+09 ]
flt(2147483648LL).print();
[ 2.14748365e+09 ]
flt(2147483649LL).print();
[ 2.14748365e+09 ]
flt(-2147483647LL).print();
[ -2.14748365e+09 ]
flt(-2147483648LL).print();
[ -2.14748365e+09 ]
flt(-2147483649LL).print();
[ -2.14748365e+09 ]
flt(9223372036854775807LL).print();
[ 9.22337204e+18 ]
flt(9223372036854775808LL).print();
[ nil ]
flt(9223372036854775809LL).print();
[ nil ]
flt(-9223372036854775807LL).print();
[ -9.22337204e+18 ]
flt(-9223372036854775808LL).print();
[ nil ]
flt(-9223372036854775809LL).print();
[ nil ]

# from dbl
flt(0.0LL).print();
[ 0 ]
flt(0.1LL).print();
[ 0.100000001 ]
flt(0.5LL).print();
[ 0.5 ]
flt(0.9LL).print();
[ 0.899999976 ]
flt(1.0LL).print();
[ 1 ]
flt(-0.1LL).print();
[ -0.100000001 ]
flt(-0.5LL).print();
[ -0.5 ]
flt(-0.9LL).print();
[ -0.899999976 ]
flt(-1.0LL).print();
[ -1 ]
flt(2147483647.0LL).print();
[ 2.14748365e+09 ]
flt(2147483648.0LL).print();
[ 2.14748365e+09 ]
flt(2147483649.0LL).print();
[ 2.14748365e+09 ]
flt(-2147483647.0LL).print();
[ -2.14748365e+09 ]
flt(-2147483648.0LL).print();
[ -2.14748365e+09 ]
flt(-2147483649.0LL).print();
[ -2.14748365e+09 ]

# from oid
flt(2@0).print();
[ 2 ]
flt(2@1).print();
[ 2 ]
flt(2147483647@0).print();
[ 2.14748365e+09 ]
flt(2147483648@0).print();
[ 2.14748365e+09 ]
flt(2147483649@0).print();
[ 2.14748365e+09 ]

# from str
flt("0").print();
[ 0 ]
flt("32767").print();
[ 32767 ]
flt("2147483647").print();
[ 2.14748365e+09 ]
flt("2147483648").print();
[ 2.14748365e+09 ]
flt("2147483649").print();
[ 2.14748365e+09 ]
flt("-2147483647").print();
[ -2.14748365e+09 ]
flt("-2147483648").print();
[ -2.14748365e+09 ]
flt("-2147483649").print();
[ -2.14748365e+09 ]
flt("0.0").print();
[ 0 ]
flt("0.1").print();
[ 0.100000001 ]
flt("1.0").print();
[ 1 ]
flt("1e0").print();
[ 1 ]
flt("1e1").print();
[ 10 ]
flt("1e10").print();
[ 1e+10 ]
flt("1e+10").print();
[ 1e+10 ]
flt("1e-10").print();
[ 1.00000001e-10 ]
flt("1.e0").print();
[ 1 ]
flt("1.e1").print();
[ 10 ]
flt("1.e10").print();
[ 1e+10 ]
flt("1.e+10").print();
[ 1e+10 ]
flt("1.e-10").print();
[ 1.00000001e-10 ]
flt("1.0e0").print();
[ 1 ]
flt("1.0e1").print();
[ 10 ]
flt("1.0e10").print();
[ 1e+10 ]
flt("1.0e+10").print();
[ 1e+10 ]
flt("1.0e-10").print();
[ 1.00000001e-10 ]
flt("-0.0").print();
[ -0 ]
flt("-0.1").print();
[ -0.100000001 ]
flt("-1.0").print();
[ -1 ]
flt("-1e0").print();
[ -1 ]
flt("-1e1").print();
[ -10 ]
flt("-1e10").print();
[ -1e+10 ]
flt("-1e+10").print();
[ -1e+10 ]
flt("-1e-10").print();
[ -1.00000001e-10 ]
flt("-1.e0").print();
[ -1 ]
flt("-1.e1").print();
[ -10 ]
flt("-1.e10").print();
[ -1e+10 ]
flt("-1.e+10").print();
[ -1e+10 ]
flt("-1.e-10").print();
[ -1.00000001e-10 ]
flt("-1.0e0").print();
[ -1 ]
flt("-1.0e1").print();
[ -10 ]
flt("-1.0e10").print();
[ -1e+10 ]
flt("-1.0e+10").print();
[ -1e+10 ]
flt("-1.0e-10").print();
[ -1.00000001e-10 ]
flt("1E0").print();
[ 1 ]
flt("1E1").print();
[ 10 ]
flt("1E10").print();
[ 1e+10 ]
flt("1E+10").print();
[ 1e+10 ]
flt("1E-10").print();
[ 1.00000001e-10 ]
flt("1.E0").print();
[ 1 ]
flt("1.E1").print();
[ 10 ]
flt("1.E10").print();
[ 1e+10 ]
flt("1.E+10").print();
[ 1e+10 ]
flt("1.E-10").print();
[ 1.00000001e-10 ]
flt("1.0E0").print();
[ 1 ]
flt("1.0E1").print();
[ 10 ]
flt("1.0E10").print();
[ 1e+10 ]
flt("1.0E+10").print();
[ 1e+10 ]
flt("1.0E-10").print();
[ 1.00000001e-10 ]
flt("-1E0").print();
[ -1 ]
flt("-1E1").print();
[ -10 ]
flt("-1E10").print();
[ -1e+10 ]
flt("-1E+10").print();
[ -1e+10 ]
flt("-1E-10").print();
[ -1.00000001e-10 ]
flt("-1.E0").print();
[ -1 ]
flt("-1.E1").print();
[ -10 ]
flt("-1.E10").print();
[ -1e+10 ]
flt("-1.E+10").print();
[ -1e+10 ]
flt("-1.E-10").print();
[ -1.00000001e-10 ]
flt("-1.0E0").print();
[ -1 ]
flt("-1.0E1").print();
[ -10 ]
flt("-1.0E10").print();
[ -1e+10 ]
flt("-1.0E+10").print();
[ -1e+10 ]
flt("-1.0E-10").print();
[ -1.00000001e-10 ]
# flt range is -3.402823466E+38F to 3.402823466E+38F which is
# -3.4028234663852886e+38 to 3.4028234663852886e+38 in double
# precission
flt("340282347000000000000000000000000000000").print();
[ 3.40282347e+38 ]
flt("340282346600000000000000000000000000000").print();
[ 3.40282347e+38 ]
flt("340282346700000000000000000000000000000").print();
[ 3.40282347e+38 ]
flt("-340282346600000000000000000000000000000").print();
[ nil ]
flt("-340282346700000000000000000000000000000").print();
[ nil ]
flt("3.402823466E+38").print();
[ 3.40282347e+38 ]
flt("3.402823467E+38").print();
[ 3.40282347e+38 ]
flt("0.3402823466E+39").print();
[ 3.40282347e+38 ]
flt("34.02823466E+37").print();
[ 3.40282347e+38 ]
flt("-3.402823466E+38").print();
[ nil ]
flt("-3.402823467E+38").print();
[ nil ]
flt("-0.3402823466E+39").print();
[ nil ]
flt("-34.02823466E+37").print();
[ nil ]
flt("").print();
[ nil ]
flt("random string").print();
[ nil ]

# to dbl

# from bit
dbl(true).print();
[ 1 ]
dbl(false).print();
[ 0 ]

# from chr
dbl('a').print();
[ 97 ]

# from sht
dbl(sht(1)).print();
[ 1 ]
dbl(sht(32767)).print();
[ 32767 ]

# from int
dbl(1).print();
[ 1 ]
dbl(32767).print();
[ 32767 ]
dbl(32768).print();
[ 32768 ]
dbl(2147483647).print();
[ 2147483647 ]
dbl(-2147483647).print();
[ -2147483647 ]
dbl(2147483647+1).print();
[ nil ]
dbl(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
dbl(2147483647+2).print();
[ -2147483647 ]
# should this produce nil (overflow)?
dbl(-2147483647 - 2).print();
[ 2147483647 ]

# from lng
dbl(1LL).print();
[ 1 ]
dbl(2147483647LL).print();
[ 2147483647 ]
dbl(2147483648LL).print();
[ 2147483648 ]
dbl(2147483649LL).print();
[ 2147483649 ]
dbl(-2147483647LL).print();
[ -2147483647 ]
dbl(-2147483648LL).print();
[ -2147483648 ]
dbl(-2147483649LL).print();
[ -2147483649 ]
dbl(9223372036854775807LL).print();
[ 9.2233720368547758e+18 ]
dbl(9223372036854775808LL).print();
[ nil ]
dbl(9223372036854775809LL).print();
[ nil ]
dbl(-9223372036854775807LL).print();
[ -9.2233720368547758e+18 ]
dbl(-9223372036854775808LL).print();
[ nil ]
dbl(-9223372036854775809LL).print();
[ nil ]

# from flt
dbl(0.0).print();
[ 0 ]
dbl(0.1).print();
[ 0.10000000149011612 ]
dbl(0.5).print();
[ 0.5 ]
dbl(0.9).print();
[ 0.89999997615814209 ]
dbl(1.0).print();
[ 1 ]
dbl(-0.1).print();
[ -0.10000000149011612 ]
dbl(-0.5).print();
[ -0.5 ]
dbl(-0.9).print();
[ -0.89999997615814209 ]
dbl(-1.0).print();
[ -1 ]
dbl(2147483647.0).print();
[ 2147483648 ]
dbl(2147483648.0).print();
[ 2147483648 ]
dbl(2147483649.0).print();
[ 2147483648 ]
dbl(-2147483647.0).print();
[ -2147483648 ]
dbl(-2147483648.0).print();
[ -2147483648 ]
dbl(-2147483649.0).print();
[ -2147483648 ]

# from oid
dbl(2@0).print();
[ 2 ]
dbl(2@1).print();
[ 2 ]
dbl(2147483647@0).print();
[ 2147483647 ]
dbl(2147483648@0).print();
[ 2147483648 ]
dbl(2147483649@0).print();
[ 2147483649 ]

# from str
dbl("0").print();
[ 0 ]
dbl("32767").print();
[ 32767 ]
dbl("2147483647").print();
[ 2147483647 ]
dbl("2147483648").print();
[ 2147483648 ]
dbl("2147483649").print();
[ 2147483649 ]
dbl("-2147483647").print();
[ -2147483647 ]
dbl("-2147483648").print();
[ -2147483648 ]
dbl("-2147483649").print();
[ -2147483649 ]
dbl("0.0").print();
[ 0 ]
dbl("0.1").print();
[ 0.10000000000000001 ]
dbl("1.0").print();
[ 1 ]
dbl("1e0").print();
[ 1 ]
dbl("1e1").print();
[ 10 ]
dbl("1e10").print();
[ 10000000000 ]
dbl("1e+10").print();
[ 10000000000 ]
dbl("1e-10").print();
[ 1e-10 ]
dbl("1.e0").print();
[ 1 ]
dbl("1.e1").print();
[ 10 ]
dbl("1.e10").print();
[ 10000000000 ]
dbl("1.e+10").print();
[ 10000000000 ]
dbl("1.e-10").print();
[ 1e-10 ]
dbl("1.0e0").print();
[ 1 ]
dbl("1.0e1").print();
[ 10 ]
dbl("1.0e10").print();
[ 10000000000 ]
dbl("1.0e+10").print();
[ 10000000000 ]
dbl("1.0e-10").print();
[ 1e-10 ]
dbl("-0.0").print();
[ -0 ]
dbl("-0.1").print();
[ -0.10000000000000001 ]
dbl("-1.0").print();
[ -1 ]
dbl("-1e0").print();
[ -1 ]
dbl("-1e1").print();
[ -10 ]
dbl("-1e10").print();
[ -10000000000 ]
dbl("-1e+10").print();
[ -10000000000 ]
dbl("-1e-10").print();
[ -1e-10 ]
dbl("-1.e0").print();
[ -1 ]
dbl("-1.e1").print();
[ -10 ]
dbl("-1.e10").print();
[ -10000000000 ]
dbl("-1.e+10").print();
[ -10000000000 ]
dbl("-1.e-10").print();
[ -1e-10 ]
dbl("-1.0e0").print();
[ -1 ]
dbl("-1.0e1").print();
[ -10 ]
dbl("-1.0e10").print();
[ -10000000000 ]
dbl("-1.0e+10").print();
[ -10000000000 ]
dbl("-1.0e-10").print();
[ -1e-10 ]
dbl("1E0").print();
[ 1 ]
dbl("1E1").print();
[ 10 ]
dbl("1E10").print();
[ 10000000000 ]
dbl("1E+10").print();
[ 10000000000 ]
dbl("1E-10").print();
[ 1e-10 ]
dbl("1.E0").print();
[ 1 ]
dbl("1.E1").print();
[ 10 ]
dbl("1.E10").print();
[ 10000000000 ]
dbl("1.E+10").print();
[ 10000000000 ]
dbl("1.E-10").print();
[ 1e-10 ]
dbl("1.0E0").print();
[ 1 ]
dbl("1.0E1").print();
[ 10 ]
dbl("1.0E10").print();
[ 10000000000 ]
dbl("1.0E+10").print();
[ 10000000000 ]
dbl("1.0E-10").print();
[ 1e-10 ]
dbl("-1E0").print();
[ -1 ]
dbl("-1E1").print();
[ -10 ]
dbl("-1E10").print();
[ -10000000000 ]
dbl("-1E+10").print();
[ -10000000000 ]
dbl("-1E-10").print();
[ -1e-10 ]
dbl("-1.E0").print();
[ -1 ]
dbl("-1.E1").print();
[ -10 ]
dbl("-1.E10").print();
[ -10000000000 ]
dbl("-1.E+10").print();
[ -10000000000 ]
dbl("-1.E-10").print();
[ -1e-10 ]
dbl("-1.0E0").print();
[ -1 ]
dbl("-1.0E1").print();
[ -10 ]
dbl("-1.0E10").print();
[ -10000000000 ]
dbl("-1.0E+10").print();
[ -10000000000 ]
dbl("-1.0E-10").print();
[ -1e-10 ]
dbl("340282346600000000000000000000000000000").print();
[ 3.4028234660000002e+38 ]
dbl("340282346700000000000000000000000000000").print();
[ 3.4028234670000002e+38 ]
dbl("-340282346600000000000000000000000000000").print();
[ -3.4028234660000002e+38 ]
dbl("-340282346700000000000000000000000000000").print();
[ -3.4028234670000002e+38 ]
dbl("3.402823466E+38").print();
[ 3.4028234660000002e+38 ]
dbl("3.402823467E+38").print();
[ 3.4028234670000002e+38 ]
dbl("0.3402823466E+39").print();
[ 3.4028234660000002e+38 ]
dbl("34.02823466E+37").print();
[ 3.4028234660000002e+38 ]
dbl("-3.402823466E+38").print();
[ -3.4028234660000002e+38 ]
dbl("-3.402823467E+38").print();
[ -3.4028234670000002e+38 ]
dbl("-0.3402823466E+39").print();
[ -3.4028234660000002e+38 ]
dbl("-34.02823466E+37").print();
[ -3.4028234660000002e+38 ]
# dbl range is -1.7976931348623157E+308 to 1.7976931348623157E+308.
dbl("179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000").print();
[ 1.7976931348623157e+308 ]
dbl("179769313486231580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000").print();
[ 1.7976931348623157e+308 ]
dbl("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000").print();
[ nil ]
dbl("-179769313486231580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000").print();
[ nil ]
dbl("1.7976931348623157E+308").print();
[ 1.7976931348623157e+308 ]
dbl("1.7976931348623158E+308").print();
[ 1.7976931348623157e+308 ]
dbl("0.17976931348623157E+309").print();
[ 1.7976931348623157e+308 ]
dbl("17.976931348623157E+307").print();
[ 1.7976931348623157e+308 ]
dbl("-1.7976931348623157E+308").print();
[ nil ]
dbl("-1.7976931348623158E+308").print();
[ nil ]
dbl("-0.17976931348623157E+309").print();
[ nil ]
dbl("-17.976931348623157E+307").print();
[ nil ]
dbl("").print();
[ nil ]
dbl("random string").print();
[ nil ]

# to oid

# from bit
oid(true).print();
[ 1@0 ]
oid(false).print();
[ 0@0 ]

# from chr
oid('a').print();
[ 97@0 ]

# from sht
oid(sht(1)).print();
[ 1@0 ]
oid(sht(32767)).print();
[ 32767@0 ]

# from int
oid(1).print();
[ 1@0 ]
oid(32767).print();
[ 32767@0 ]
oid(32768).print();
[ 32768@0 ]
oid(2147483647).print();
[ 2147483647@0 ]
oid(-2147483647).print();
[ nil ]
oid(2147483647+1).print();
[ nil ]
oid(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
oid(2147483647+2).print();
[ nil ]
# should this produce nil (overflow)?
oid(-2147483647 - 2).print();
[ 2147483647@0 ]

# from lng
oid(1LL).print();
[ 1@0 ]
oid(2147483647LL).print();
[ 2147483647@0 ]
oid(2147483648LL).print();
[ 2147483648@0 ]
oid(2147483649LL).print();
[ 2147483649@0 ]
oid(-2147483647LL).print();
[ nil ]
oid(-2147483648LL).print();
[ nil ]
oid(-2147483649LL).print();
[ nil ]

# from flt
oid(0.0).print();
[ 0@0 ]
oid(0.1).print();
[ 0@0 ]
oid(0.5).print();
[ 0@0 ]
oid(0.9).print();
[ 0@0 ]
oid(1.0).print();
[ 1@0 ]
oid(-0.1).print();
[ nil ]
oid(-0.5).print();
[ nil ]
oid(-0.9).print();
[ nil ]
oid(-1.0).print();
[ nil ]
oid(2147483647.0).print();
[ 2147483648@0 ]
oid(2147483648.0).print();
[ 2147483648@0 ]
oid(2147483649.0).print();
[ 2147483648@0 ]
oid(-2147483647.0).print();
[ nil ]
oid(-2147483648.0).print();
[ nil ]
oid(-2147483649.0).print();
[ nil ]

# from dbl
oid(0.0LL).print();
[ 0@0 ]
oid(0.1LL).print();
[ 0@0 ]
oid(0.5LL).print();
[ 0@0 ]
oid(0.9LL).print();
[ 0@0 ]
oid(1.0LL).print();
[ 1@0 ]
oid(-0.1LL).print();
[ nil ]
oid(-0.5LL).print();
[ nil ]
oid(-0.9LL).print();
[ nil ]
oid(-1.0LL).print();
[ nil ]
oid(2147483647.0LL).print();
[ 2147483647@0 ]
oid(2147483648.0LL).print();
[ 2147483648@0 ]
oid(2147483649.0LL).print();
[ 2147483649@0 ]
oid(-2147483647.0LL).print();
[ nil ]
oid(-2147483648.0LL).print();
[ nil ]
oid(-2147483649.0LL).print();
[ nil ]

# from oid
oid(2@0).print();
[ 2@0 ]
oid(2@1).print();
[ 2@0 ]
oid(2147483647@0).print();
[ 2147483647@0 ]
oid(2147483648@0).print();
[ 2147483648@0 ]
oid(2147483649@0).print();
[ 2147483649@0 ]

# from str
oid("0").print();
[ 0@0 ]
oid("32767").print();
[ 32767@0 ]
oid("2147483647").print();
[ 2147483647@0 ]
oid("2147483648").print();
[ 2147483648@0 ]
oid("2147483649").print();
[ 2147483649@0 ]
oid("-2147483647").print();
[ nil ]
oid("-2147483648").print();
[ nil ]
oid("-2147483649").print();
[ nil ]
oid("").print();
[ nil ]
oid("random string").print();
[ nil ]


# to str

# from bit
str(true).print();
[ "true" ]
str(false).print();
[ "false" ]

# from chr
str('a').print();
[ "a" ]

# from sht
str(sht(1)).print();
[ "1" ]
str(sht(32767)).print();
[ "32767" ]

# from int
str(1).print();
[ "1" ]
str(32767).print();
[ "32767" ]
str(32768).print();
[ "32768" ]
str(2147483647).print();
[ "2147483647" ]
str(-2147483647).print();
[ "-2147483647" ]
str(2147483647+1).print();
[ nil ]
str(-2147483647 - 1).print();
[ nil ]
# should this produce nil (overflow)?
str(2147483647+2).print();
[ "-2147483647" ]
# should this produce nil (overflow)?
str(-2147483647 - 2).print();
[ "2147483647" ]

# from lng
str(1LL).print();
[ "1" ]
str(2147483647LL).print();
[ "2147483647" ]
str(2147483648LL).print();
[ "2147483648" ]
str(2147483649LL).print();
[ "2147483649" ]
str(-2147483647LL).print();
[ "-2147483647" ]
str(-2147483648LL).print();
[ "-2147483648" ]
str(-2147483649LL).print();
[ "-2147483649" ]

# from flt
str(0.0).print();
[ "0" ]
str(0.1).print();
[ "0.100000001" ]
str(0.5).print();
[ "0.5" ]
str(0.9).print();
[ "0.899999976" ]
str(1.0).print();
[ "1" ]
str(-0.1).print();
[ "-0.100000001" ]
str(-0.5).print();
[ "-0.5" ]
str(-0.9).print();
[ "-0.899999976" ]
str(-1.0).print();
[ "-1" ]
str(2147483647.0).print();
[ "2.14748365e+09" ]
str(2147483648.0).print();
[ "2.14748365e+09" ]
str(2147483649.0).print();
[ "2.14748365e+09" ]
str(-2147483647.0).print();
[ "-2.14748365e+09" ]
str(-2147483648.0).print();
[ "-2.14748365e+09" ]
str(-2147483649.0).print();
[ "-2.14748365e+09" ]

# from dbl
str(0.0LL).print();
[ "0" ]
str(0.1LL).print();
[ "0.10000000000000001" ]
str(0.5LL).print();
[ "0.5" ]
str(0.9LL).print();
[ "0.90000000000000002" ]
str(1.0LL).print();
[ "1" ]
str(-0.1LL).print();
[ "-0.10000000000000001" ]
str(-0.5LL).print();
[ "-0.5" ]
str(-0.9LL).print();
[ "-0.90000000000000002" ]
str(-1.0LL).print();
[ "-1" ]
str(2147483647.0LL).print();
[ "2147483647" ]
str(2147483648.0LL).print();
[ "2147483648" ]
str(2147483649.0LL).print();
[ "2147483649" ]
str(-2147483647.0LL).print();
[ "-2147483647" ]
str(-2147483648.0LL).print();
[ "-2147483648" ]
str(-2147483649.0LL).print();
[ "-2147483649" ]

# from oid
str(2@0).print();
[ "2@0" ]
str(2@1).print();
[ "2@0" ]
str(2147483647@0).print();
[ "2147483647@0" ]
str(2147483648@0).print();
[ "2147483648@0" ]
str(2147483649@0).print();
[ "2147483649@0" ]

# from str
str("0").print();
[ "0" ]
str("32767").print();
[ "32767" ]
str("2147483647").print();
[ "2147483647" ]
str("2147483648").print();
[ "2147483648" ]
str("2147483649").print();
[ "2147483649" ]
str("-2147483647").print();
[ "-2147483647" ]
str("-2147483648").print();
[ "-2147483648" ]
str("-2147483649").print();
[ "-2147483649" ]
str("").print();
[ "" ]
str("random string").print();
[ "random string" ]
quit();

# 14:56:01 >  
# 14:56:01 >  Done.
# 14:56:01 >  

