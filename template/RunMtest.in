#!/bin/sh

# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2011 MonetDB B.V.
# All Rights Reserved.

pkg=template
buildbase=@QBUILD@
builddir="${buildbase}/template"
# make sure srcdir contains absolute path name
srcdir=`cd '@srcdir@'; pwd`
uname=`uname`

# M5 is default
@HAVE_MONETDB5_TRUE@V=5
# commandline option overrules default
for arg
do
    case "$arg" in
    -5) V=5;;
    esac
done

# where compiled Pathfinder modules are to be found
for d in src/monetdb$V
do
	MOD_PATH="${MOD_PATH}:${builddir}/$d/.libs:${builddir}/$d"
done

case "$V" in
5)
# where compiled monetdb5 modules are to be found
for d in optimizer scheduler modules/atoms modules/kernel modules/mal extras/crackers extras/rdf extras/xml
do
	MOD_PATH="${MOD_PATH}:${buildbase}/monetdb5/$d/.libs:${buildbase}/monetdb5/$d"
	# enable auto-loading of modules before `make install`
	mkdir -p ${buildbase}/monetdb5/$d/autoload
	cp -f ${srcdir}/../monetdb5/$d/[0-9][0-9]_*.mal ${buildbase}/monetdb5/$d/autoload/ 2>/dev/null
done
PATH="${buildbase}/tools/mserver:$PATH"
;;
esac

# enhance various paths to find our stuff
MOD_PATH="`echo ${MOD_PATH} | sed 's/^://'`"
libpath="${MOD_PATH}"
PATH="${buildbase}/clients/mapiclient:${buildbase}/clients/examples/C:${buildbase}/clients/examples/php:${buildbase}/clients/examples/python:${buildbase}/clients/perl/Tests:${buildbase}/testing:$PATH"
export PATH

PYTHONPATH="${buildbase}/clients/python/build/lib:${buildbase}/testing:${srcdir}/../testing:${PYTHONPATH}"
export PYTHONPATH

CLASSPATH="${buildbase}/java:${buildbase}/java/tests:${CLASSPATH}"
export CLASSPATH

perlib="${buildbase}/clients/perl:${srcdir}/../clients/perl"
PERLLIB="${perlib}:${PERLLIB}"
PERL5LIB="${perlib}:${PERL5LIB}"
export PERLLIB PERL5LIB

if [ "${LD_LIBRARY_PATH}" ] ; then
	LD_LIBRARY_PATH=":${LD_LIBRARY_PATH}"
fi
LD_LIBRARY_PATH="${libpath}${LD_LIBRARY_PATH}"
export LD_LIBRARY_PATH

if [ "${uname}" = "Darwin" ] ; then
	if [ "${DYLD_LIBRARY_PATH}" ] ; then
		DYLD_LIBRARY_PATH=":${DYLD_LIBRARY_PATH}"
	fi
	DYLD_LIBRARY_PATH="${libpath}${DYLD_LIBRARY_PATH}"
	export DYLD_LIBRARY_PATH
fi
if [ "${uname}" = "AIX" ] ; then
	if [ "${LIBPATH}" ] ; then
		LIBPATH=":${LIBPATH}"
	fi
	LIBPATH="${libpath}${LIBPATH}"
	export LIBPATH
fi

# execute Mtest.py in the source directory
cd "$srcdir"

# execute the script.
# if no arguments, do a recursive test (Mtest.py -r), else pass on the
# arguments.
# if the environment variable MTEST_AT is set (value does not matter), pass
# the --at flag to Mtest.py so that it uses the at command as a watchdog.
exec python "${buildbase}/testing/Mtest.py" -$V --package=${pkg} --monet_mod_path="${MOD_PATH}" --dbfarm="${builddir}/dbfarm" --TSTTRGBASE="${builddir}" ${MTEST_AT+--at} "${@--rq}"
