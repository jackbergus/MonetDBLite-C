# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2010 MonetDB B.V.
# All Rights Reserved.

dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.60)
AC_INIT([MonetDB template], [0.15.4], [info@monetdb.org], [MonetDB-template])
#                            ^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AC_CONFIG_AUX_DIR(conf)
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AH_TOP([#include "sysdefs.h"])
AH_BOTTOM([#include "stddef.h"])

dnl ----------------------
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([src/monetdb4/example.mx])
AM_CONFIG_HEADER([template_config.h:conf/config.h.in])
CONFIG_H=template_config.h
AC_SUBST(CONFIG_H)

# TEMPLATE_BUILD and TEMPLATE_SOURCE are *only* used for monetdb-template-config and RunMserver
# TEMPLATE_SOURCE is the absolute path name of the source directory
# (srcdir can be relative)

# The Q versions of various variables are used in places where \'s
# need to be escapes with an extra \.  Configure does not support \'s
# in path names, so there is no need to do anything special here
# except set the variables.  The command to set them in case we do
# need to escape the \'s is Qvar=`echo "$var" | sed 's/\\\\/\\\\\\\\/g'`
TEMPLATE_BUILD=[`pwd`]
AC_SUBST(TEMPLATE_BUILD)

TEMPLATE_SOURCE=[`(cd $srcdir && pwd)`]
AC_SUBST(TEMPLATE_SOURCE)

AM_MONETDB_XQ_VARS_1()


dnl Check for Monet
req_monetdb_ver='1.38.0'
#                ^^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB_COMMON($req_monetdb_ver)
if test "x$have_monetdb" != xyes; then
	if test "x$MONETDB_VERSION" = "x"; then
		AC_MSG_ERROR([MonetDB was not found. Template requires at least version $req_monetdb_ver of MonetDB.])
	else
		AC_MSG_ERROR([Template requires at least version $req_monetdb_ver of MonetDB, but only version $MONETDB_VERSION was found.])
	fi
fi
AM_MONETDB_DEFAULTS()
AM_MONETDB_COMPILER()
AM_MONETDB_TOOLS()
AM_MONETDB_OPTIONS()
AM_MONETDB_LIBS()
AM_MONETDB_UTILS()
req_monetdb4_ver='4.38.0'
#                 ^^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB4($req_monetdb4_ver)
req_monetdb5_ver='5.20.0'
#                 ^^^^^
# Maintained via vertoo. Please don't modify by hand!
# Contact MonetDB-developers@lists.sourceforge.net for details and/or assistance.
AM_MONETDB5($req_monetdb5_ver)

if test "x$have_monetdb4" != xyes -a "x$have_monetdb5" != xyes; then
	if test "x$MONETDB4_VERSION" = "x" -a "x$MONETDB5_VERSION" = "x"; then
		AC_MSG_ERROR([Neither MonetDB4 nor MonetDB5 was not found. Template requires at least version $req_monetdb4_ver of MonetDB4 or version $req_monetdb5_ver of MonetDB5.])
	else
		if test "x$MONETDB4_VERSION" = "x"; then
			MONETDB4_VERSION='none'
		fi
		if test "x$MONETDB5_VERSION" = "x"; then
			MONETDB5_VERSION='none'
		fi
		AC_MSG_ERROR([Template requires at least version $req_monetdb4_ver of MonetDB4 (found $MONETDB4_VERSION) or version $req_monetdb5_ver of MonetDB5 (found $MONETDB5_VERSION).])
	fi
fi


dnl provide different versions of the paths derived above
AM_MONETDB_XQ_VARS_2()
AC_DEFINE_UNQUOTED(TEMPLATE_PREFIX,"$QXprefix",[architecture-independent files])
AC_DEFINE_UNQUOTED(TEMPLATE_EXEC_PREFIX,"$QXexec_prefix",[architecture-dependent files])
QTEMPLATE_BUILD="$TEMPLATE_BUILD"
XTEMPLATE_BUILD="`$translatepath "$TEMPLATE_BUILD"`"
QXTEMPLATE_BUILD="`echo "$XTEMPLATE_BUILD" | sed 's/\\\\/\\\\\\\\/g'`"
AC_SUBST(QTEMPLATE_BUILD)
AC_SUBST(XTEMPLATE_BUILD)
AC_SUBST(QXTEMPLATE_BUILD)
QTEMPLATE_SOURCE="$TEMPLATE_SOURCE"
XTEMPLATE_SOURCE="`$translatepath "$TEMPLATE_SOURCE"`"
QXTEMPLATE_SOURCE="`echo "$XTEMPLATE_SOURCE" | sed 's/\\\\/\\\\\\\\/g'`"
AC_SUBST(QTEMPLATE_SOURCE)
AC_SUBST(XTEMPLATE_SOURCE)
AC_SUBST(QXTEMPLATE_SOURCE)
AC_DEFINE_UNQUOTED(TEMPLATE_LOCALSTATEDIR,"$QXlocalstatedir",[modifiable single-machine data])
AC_DEFINE_UNQUOTED(TEMPLATE_LIBDIR,"$QXlibdir",[object code libraries])
AC_DEFINE_UNQUOTED(TEMPLATE_SYSCONFDIR,"$QXsysconfdir",[read-only single-machine data])

dnl  CFLAGS for our code are stricter than what autoconf can cope with.
CFLAGS="$CFLAGS \$(X_CFLAGS)"
