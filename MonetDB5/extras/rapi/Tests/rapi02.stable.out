stdout of test 'rapi02` in directory 'monetdb5/extras/rapi` itself:


# 15:45:24 >  
# 15:45:24 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32234" "--set" "mapi_usock=/var/tmp/mtest-13776/.s.monetdb.32234" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch2/hannes/monetdb-rint-install/var/MonetDB/mTests_monetdb5_extras_rapi" "rapi02.mal"
# 15:45:24 >  

# MonetDB 5 server v11.16.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_extras_rapi', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.592 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://bristol.ins.cwi.nl:32234/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13776/.s.monetdb.32234
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
function user.main():void;
# input types testing 
# inty types 
    bbit := bat.new(:oid,:bit);
    bat.append(bbit,true:bit);
    bat.append(bbit,false:bit);
    bat.append(bbit,true:bit);
    bat.append(bbit,false:bit);
    bat.append(bbit,nil:bit);
    rbit:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bbit);
    io.print(rbit);
    bbte := bat.new(:oid,:bte);
    bat.append(bbte,42:bte);
    bat.append(bbte,84:bte);
    bat.append(bbte,nil:bte);
    bat.append(bbte,0:bte);
    bat.append(bbte,nil:bte);
    rbte:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bbte);
    io.print(rbte);
    bsht := bat.new(:oid,:sht);
    bat.append(bsht,42:sht);
    bat.append(bsht,82:sht);
    bat.append(bsht,0:sht);
    bat.append(bsht,3276:sht);
    bat.append(bsht,nil:sht);
    rsht:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bsht);
    io.print(rsht);
    bint := bat.new(:oid,:int);
    bat.append(bint,1804289383:int);
    bat.append(bint,846930886:int);
    bat.append(bint,1681692777:int);
    bat.append(bint,1714636915:int);
    bat.append(bint,nil:int);
    rint:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bint);
    io.print(rint);
    bwrd := bat.new(:oid,:wrd);
    bat.append(bwrd,1804289383:wrd);
    bat.append(bwrd,846930886:wrd);
    bat.append(bwrd,1681692777:wrd);
    bat.append(bwrd,1714636915:wrd);
    rwrd:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bwrd);
    io.print(rwrd);
    blng := bat.new(:oid,:lng);
    bat.append(blng,1804289383:lng);
    bat.append(blng,846930886:lng);
    bat.append(blng,1681692777:lng);
    bat.append(blng,1714636915:lng);
    rlng:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",blng);
    io.print(rlng);
# floating point 
    bflt := bat.new(:oid,:flt);
    bat.append(bflt,18042.8945:flt);
    bat.append(bflt,846.930908:flt);
    bat.append(bflt,16.816927:flt);
    bat.append(bflt,1714636.88:flt);
    rflt:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bflt);
    io.print(rflt);
    bdbl := bat.new(:oid,:dbl);
    bat.append(bdbl,180428.9375:dbl);
    bat.append(bdbl,84.693092346191406:dbl);
    bat.append(bdbl,168169.28125:dbl);
    bat.append(bdbl,17146370:dbl);
    bat.append(bdbl,nil:dbl);
    rdbl:bat[:oid,:dbl]  := rapi.eval("Re(fft(na.omit(arg1)))",bdbl);
    io.print(rdbl);
# strings 
    bstr := bat.new(:oid,:str);
    bat.append(bstr,"asdf":str);
    bat.append(bstr,"sd asd asd asd asd a":str);
    bat.append(bstr,"":str);
    bat.append(bstr,nil:str);
    rstr:bat[:oid,:int]  := rapi.eval("unlist(lapply(arg1,nchar))",bstr);
    io.print(rstr);
# output types testing 
    binto := bat.new(:oid,:int);
    bat.append(binto,1804289383:int);
    bat.append(binto,846930886:int);
    bat.append(binto,1681692777:int);
    bat.append(binto,1714636915:int);
    bat.append(binto,nil:int);
    rintbi:bat[:oid,:int]  := rapi.eval("arg1",binto);
    io.print(rintbi);
    rintbi2:bat[:oid,:int]  := rapi.eval("as.integer(arg1)",binto);
    io.print(rintbi2);
    rintbl:bat[:oid,:lng]  := rapi.eval("as.integer(arg1)",binto);
    io.print(rintbl);
    rintbd:bat[:oid,:dbl]  := rapi.eval("as.numeric(arg1)",binto);
    io.print(rintbd);
    rintbs:bat[:oid,:str]  := rapi.eval("as.character(arg1)",binto);
    io.print(rintbs);
    rintbf:bat[:oid,:str]  := rapi.eval("as.factor(arg1)",binto);
    io.print(rintbf);
end main;
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	2  ]
[ 1@0,	0  ]
[ 2@0,	2  ]
[ 3@0,	0  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	126  ]
[ 1@0,	0  ]
[ 2@0,	0  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	3400  ]
[ 1@0,	42  ]
[ 2@0,	-3316  ]
[ 3@0,	42  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	6047549961  ]
[ 1@0,	122596606  ]
[ 2@0,	924414359  ]
[ 3@0,	122596606  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	6047549961  ]
[ 1@0,	122596606  ]
[ 2@0,	924414359  ]
[ 3@0,	122596606  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	6047549961  ]
[ 1@0,	122596606  ]
[ 2@0,	924414359  ]
[ 3@0,	122596606  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	1733543.5173664093  ]
[ 1@0,	18026.077604293823  ]
[ 2@0,	-1697424.0944499969  ]
[ 3@0,	18026.077604293823  ]
#Running R expression Re(fft(na.omit(arg1)))
#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	17495052.911842346  ]
[ 1@0,	12259.65625  ]
[ 2@0,	-16797856.474342346  ]
[ 3@0,	12259.65625  ]
#Running R expression unlist(lapply(arg1,nchar))
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	4  ]
[ 1@0,	20  ]
[ 2@0,	0  ]
[ 3@0,	1  ]
# User R expression: arg1
# Executed R expression ret <- as.data.frame((function(arg1){arg1})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	1804289383  ]
[ 1@0,	846930886  ]
[ 2@0,	1681692777  ]
[ 3@0,	1714636915  ]
[ 4@0,	nil  ]
# User R expression: as.integer(arg1)
# Executed R expression ret <- as.data.frame((function(arg1){as.integer(arg1)})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	1804289383  ]
[ 1@0,	846930886  ]
[ 2@0,	1681692777  ]
[ 3@0,	1714636915  ]
[ 4@0,	nil  ]
# User R expression: as.integer(arg1)
# Executed R expression ret <- as.data.frame((function(arg1){as.integer(arg1)})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	lng  # type
#--------------------------#
[ 0@0,	1804289383  ]
[ 1@0,	846930886  ]
[ 2@0,	1681692777  ]
[ 3@0,	1714636915  ]
[ 4@0,	nil  ]
# User R expression: as.numeric(arg1)
# Executed R expression ret <- as.data.frame((function(arg1){as.numeric(arg1)})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	dbl  # type
#--------------------------#
[ 0@0,	1804289383  ]
[ 1@0,	846930886  ]
[ 2@0,	1681692777  ]
[ 3@0,	1714636915  ]
[ 4@0,	nil  ]
# User R expression: as.character(arg1)
# Executed R expression ret <- as.data.frame((function(arg1){as.character(arg1)})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	str  # type
#--------------------------#
[ 0@0,	"1804289383"  ]
[ 1@0,	"846930886"  ]
[ 2@0,	"1681692777"  ]
[ 3@0,	"1714636915"  ]
[ 4@0,	nil  ]
# User R expression: as.factor(arg1)
# Executed R expression ret <- as.data.frame((function(arg1){as.factor(arg1)})(arg1),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t  # name
# void	str  # type
#--------------------------#
[ 0@0,	"1804289383"  ]
[ 1@0,	"846930886"  ]
[ 2@0,	"1681692777"  ]
[ 3@0,	"1714636915"  ]
[ 4@0,	nil  ]

# 15:45:25 >  
# 15:45:25 >  "Done."
# 15:45:25 >  

