stdout of test 'rapi05` in directory 'monetdb5/extras/rapi` itself:


# 14:05:12 >  
# 14:05:12 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38561" "--set" "mapi_usock=/var/tmp/mtest-18551/.s.monetdb.38561" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/rapi//Linux/var/MonetDB/mTests_monetdb5_extras_rapi" "rapi05.mal"
# 14:05:12 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_extras_rapi', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:38561/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-18551/.s.monetdb.38561
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
function user.main():void;
    g := bat.new(:oid,:int);
    bat.append(g,1);
    bat.append(g,2);
    bat.append(g,3);
    bat.append(g,1);
    bat.append(g,2);
    bat.append(g,3);
    bat.append(g,1);
    bat.append(g,2);
    bat.append(g,3);
    bat.append(g,1);
    b := bat.new(:oid,:dbl);
    bat.append(b,1804289383:dbl);
    bat.append(b,846930886:dbl);
    bat.append(b,1681692777:dbl);
    bat.append(b,1714636915:dbl);
    bat.append(b,1957747793:dbl);
    bat.append(b,424238335:dbl);
    bat.append(b,719885386:dbl);
    bat.append(b,1649760492:dbl);
    bat.append(b,596516649:dbl);
    bat.append(b,1189641421:dbl);
    (r:bat[:oid,:int] ,s:bat[:oid,:dbl] ) := rapi.eval("aggregate(arg1,by=list(arg2),FUN=function(x){sort(x)[max(length(x)-arg3,0)]})",b,g,1);
    io.print(r,s);
end main;
# User R expression: aggregate(arg1,by=list(arg2),FUN=function(x){sort(x)[max(length(x)-arg3,0)]})
# Executed R expression ret <- as.data.frame((function(arg1,arg2,arg3){aggregate(arg1,by=list(arg2),FUN=function(x){sort(x)[max(length(x)-arg3,0)]})})(arg1,arg2,arg3),nm=NA,stringsAsFactors=F)

#--------------------------#
# h	t	t  # name
# void	int	dbl  # type
#--------------------------#
[ 0@0,	1,	1714636915  ]
[ 1@0,	2,	1649760492  ]
[ 2@0,	3,	596516649  ]

# 14:05:12 >  
# 14:05:12 >  "Done."
# 14:05:12 >  

