.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH MONETDB5.CONF 5 "APRIL 2010" MonetDB "MonetDB 5"
.SH NAME
monetdb5.conf \- Configuration for mserver5, merovingian, monetdb and mclient.
.SH DESCRIPTION
The monetdb5.conf file is the runtime configuration file for mserver5,
merovingian, monetdb and mclient.
.P
The monetdb5.conf file controls access, authentication, logging, memory
settings, file locations and open ports.
.P
Settings are categorised in sections that usually correspond to a
component of the MonetDB application suite.
.SH "FILE FORMAT"
The monetdb5.conf file consists of parameters of the form
\(dq\&name=value\(dq\&.
.P
The file is line-based, each newline-terminated line represents either a
comment or a parameter.
.P 
Only the first equals sign in a parameter is significant.  Whitespace
before or after the first equals sign is not stripped.  Trailing
whitespace in a parameter value is retained verbatim.
.P 
Any line beginning with a hash (#) is ignored, as are lines containing
only whitespace.
.P 
The values following the equals sign in parameters are all a string
where quotes are not needed, and if written be part of the string.

.SH "GDK PARAMETERS"
GDK (Goblin Database Kernel) is the current columnar storage kernel
engine of the MonetDB 5 database.  It is the component that manages and
performs operations on BATs (Binary Association Tables), single columns.
The parameters here affect the behaviour of GDK which may nagatively
impact performance if set wrongly.  The kernel tries to choose the
values for optimal performance.  Changing these parameters is
discouraged.
.P 
.IP "gdk_mem_bigsize"
Memory chunks of size >= gdk_mem_bigsize (in bytes) will be mmaped
anonymously.  Default: 1<<20 == 1024576 == 1 MiB
.\" for 32 bit systems try to claim 3G of (virtual) memory; ???
.IP "gdk_vmtrim"
Enable or disable the vmtrim thread which tries to unload memory that is
not in use.  Default: yes
.IP "gdk_alloc_map"
This parameter is mainly for debugging with valgrind.
.\" For 32-bit systems, GDK tries claim 3G of (virtual) memory.
.\" set the alloc map to "no" to run mserver with valgrind;
Also, you need to tell valgrind to use 8-byte alignment, hence:
\(dq\&valgrind --alignment=8 mserver5 --set gdk_alloc_map=no ...\(dq\&
This feature should better be disabled for normal use.  Default: no
.IP "gdk_debug"
You can enable debug output for specific kernel operations.  By default
debug is switched off for obvious reasons.  The value of gdk_debug is an
integer, which value can be (a combination of):
.EX
          1 = thread-specific debug output
          2 = CHECKMASK    = property enforcing on new BATs
          4 = MEMMASK      = memory allocation
          8 = PROPMASK     = property checking on all values:
                             tells about wrongly set properties
         16 = IOMASK       = major IO activity
         32 = BATMASK      = BAT handling
         64 = PARSEMASK    = parser debugging
        128 = PARMASK      = Thread management
        256 = TRGMASK      = Event management
        512 = TMMASK       = Transaction management
       1024 = TEMMASK      = Locks and Triggers
       2048 = DLMASK       = Dynamic loading
       4096 = PERFMASK     = BBP Performance (?)
       8192 = DELTAMASK    = Delta debugging (?)
      16384 = LOADMASK     = Module loading
      32768 = YACCMASK     = Yacc specific error messages
    2097152 = ALGOMASK     = show join/select algorithm chosen
    4194304 = ESTIMASK     = show result size estimations
                             (for join, select)
    8388608 = XPROPMASK    = extended property checking:
                             tells also about not set properties
   16777216 = JOINPROPMASK = disable property checking with
                             join & outerjoin (e.g., for
                             performance measurements)
   33554432 = DEADBEEFMASK = disable "cleaning" of freed memory
                             in GDKfree() (e.g., for performance
                             measurements)
   67108864 = ALLOCMASK    = exhaustive GDK malloc & free tracing
                             for debugging (GDK developers, only)
  134217728 = OPTMASK      = trace the actions, decisions and
                             effects of MAL optimizers
  268435456 = EXTENDMASK   = trace/debug HEAPextend;
                             used only for development & debugging
  536870912 = FORCEMITOMASK = forcefully activate mitosis even on
                              small tables, i.e., split small tables
                              in as many (tiny) pieces as there are
                              cores (threads) available;
                              this allows us to test mitosis
                              functionality without requiring large
                              data sets (--- at the expense of a
                              potentially significant interpretation
                              overhead for unnecessary large plans);
                              used only for development & testing;
                              set automatically by Mtest.py
.EE

Note that mserver5 recognizes a series of command line options as well:
.EX
  --threads       (1 | PARMASK)
  --memory        (MEMMASK)
  --properties    (CHECKMASK | PROPMASK | BATMASK)
  --io            (IOMASK | PERFMASK)
  --transactions  (TMMASK | DELTAMASK | TEMMASK)
  --modules       (DLMASK | LOADMASK)
  --algorithms    (ALGOMASK | ESTIMASK)
  --xproperties   (XPROPMASK )
  --performance   (JOINPROPMASK | DEADBEEFMASK)
  --optimizers    (OPTMASK)
  --forcemito     (FORCEMITOMASK)
.EE

Default: 0

.SH "MONETDB5 PARAMETERS"
MonetDB 5 is the application around the GDK kernel to perform operations
driven by the MAL (MonetDB Assembler Language) language.  MonetDB 5
contains an extensive optimiser framework to transform MAL plans into
more optimal or functional (e.g. distributed) plans.
.IP "mal_listing"
You can enable the server listing the parsed MAL program for any
script parsed on the command line.  The value of mal_listing is an
integer that have the following possible values:
.EX
   0 = Disable
   1 = List the original input
   2 = List the MAL instruction
   4 = List the MAL type information
   8 = List the MAL UDF type
  16 = List the MAL properties
  32 = List the hidden details
  64 = List the bat tuple count
.EE

Default: 0
.SH "FILES"
monetdb5.conf
.SH "SEE ALSO"
.\".BR mserver5 (1),
.BR merovingian (1),
.BR monetdb (1),
.BR mclient (1)
