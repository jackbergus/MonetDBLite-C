# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2014 MonetDB B.V.
# All Rights Reserved.

module urlbox
comment "The URL box provides fast access to
a large collection of url strings based on a
vertical fragmented representation.";

pattern open():void
address URLBOXopen
comment "Locate and open the URL box";
pattern close():void
address URLBOXclose
comment "Close the URL box ";
pattern destroy():void
address URLBOXdestroy
comment "Destroy the URL box";
pattern take(u:str):oid
address URLBOXtake
comment "Get a handle for the URL";
pattern deposit(u:str):void 		
address URLBOXdeposit
comment "Enter a new url into the box";
command depositFile(fnme:str):void
address URLBOXdepositFile;

pattern releaseAll():void 
address URLBOXreleaseAll
comment "Release all elements from the box";
pattern release(u:str):void 		
address URLBOXrelease
comment "Release a single URL value";
pattern release(u:int):void 		
address URLBOXreleaseOid
comment "Release a single URL value";

pattern toString(u:int):str 
address URLBOXtoString
comment "Get the string representation of an element in the box";

pattern discard(name:str):void 		
address URLBOXdiscard
comment "Remove the URL from the box";
pattern discard(name:int):void 		
address URLBOXdiscardOid
comment "Remove the URL from the box";
pattern discard():void 		
address URLBOXdiscardAll
comment "Remove all URLs from the box";

pattern newIterator()(:oid,:str)
address URLBOXnewIterator
comment "Locate next element in the box";
pattern hasMoreElements()(:oid,:str)
address URLBOXhasMoreElements
comment "Locate next element in the box";

command getLevel(i:int):bat[:oid,:str]
address URLBOXgetLevel;

command getNames():bat[:oid,:str]
address URLBOXgetNames;
command getCount():bat[:oid,:lng]
address URLBOXgetCount;
command getCardinality():bat[:oid,:lng]
address URLBOXgetCardinality;
command getSize():bat[:oid,:lng]
address URLBOXgetSize;
pattern prelude():void 
address URLBOXprelude
comment "Initialize the URL box";

urlbox.prelude();
