# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2014 MonetDB B.V.
# All Rights Reserved.

module box;

pattern open(nme:str):any_1
address BOXopen
comment "Locate the box and open it.";
pattern close(bname:str):void	
address BOXclose
comment "Close the box.";
pattern destroy(bname:str):void	
address BOXdestroy
comment "Destroy the box.";
pattern take(bnme:str, vnme:str):any_1
address BOXtake
comment "Locate the typed value in the box.";
pattern deposit(bname:str,name:str,v:any_1):void 			
address BOXdeposit
comment "Enter a new value into the box.";
pattern releaseAll(bname:str) :void 			
address BOXreleaseAll
comment "Release all objects for this client.";
pattern release(bname:str,nme:str,val:any_1):void 			
address BOXrelease
comment "Release the BAT from the client pool.";
pattern toString(bname:str,name:str) :str 			
address BOXtoString
comment "Get the string representation of 
	the i-th element in the box.";
pattern discard(bname:str,name:str) :void 			
address BOXdiscard
comment "Release the BAT from the client pool.";
pattern iterator(nme:str):lng 
address BOXiterator
comment "Locates the next element in the box.";
command getBoxNames():bat[:int,:str]
address BOXgetBoxNames
comment "Retrieve the names of all boxes.";
