# create sorted oid arrangement 
include orderidx;

bv:= bat.new(:oid,:int);
bat.append(bv,959217167 );
bat.append(bv,1920220901 );
bat.append(bv,1303856962 );
bat.append(bv,1667896496 );
bat.append(bv,1080090866 );
bat.append(bv,527076325 );
bat.append(bv,266430612 );
bat.append(bv,1674978691 );
bat.append(bv,1863672321 );
bat.append(bv,58690783 );

vv:= algebra.slice(bv,0,10);

s0:= algebra.subselect(vv,nil:bat[:oid,:oid],nil:int,nil:int,false,false,false);
io.print(s0,vv);

s1:= algebra.subselect(vv,nil:bat[:oid,:oid],nil:int,959217167,true,true,false);
io.print(s1,vv);

s2:= algebra.subselect(vv,nil:bat[:oid,:oid],959217167,959217167,true,true,false);
io.print(s2,vv);

s3:= algebra.subselect(vv,nil:bat[:oid,:oid],1863672321,nil:int,true,true,false);
io.print(s3,vv);

# introduce an oid index, it should produce the same results
bat.orderidx(vv,3);
ord := bat.getorderidx(vv);
io.print(ord,vv);
x0:= algebra.subselect(vv,nil:bat[:oid,:oid],nil:int,nil:int,false,false,false);
io.print(x0,vv);

x1:= algebra.subselect(vv,nil:bat[:oid,:oid],nil:int,959217167,true,true,false);
io.print(x1,vv);

x2:= algebra.subselect(vv,nil:bat[:oid,:oid],959217167,959217167,true,true,false);
io.print(x2,vv);

x3:= algebra.subselect(vv,nil:bat[:oid,:oid],1863672321,nil:int,true,true,false);
io.print(x3,vv);
