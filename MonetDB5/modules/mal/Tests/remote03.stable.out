stdout of test 'remote03` in directory 'monetdb5/modules/mal` itself:


# 22:17:31 >  
# 22:17:31 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30468" "--set" "mapi_usock=/var/tmp/mtest-3813/.s.monetdb.30468" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/current//Linux/var/MonetDB/mTests_monetdb5_modules_mal" "remote03.mal"
# 22:17:31 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_modules_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30468/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-3813/.s.monetdb.30468
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
function user.main():void;
# let connect figure out itself how to connect to the running db 
    uri := sabaoth.getLocalConnectionURI();
    conn:str  := remote.connect(uri,"monetdb","monetdb");
# this is invalid, as io.print is an invalid module, and bla will be 
# taken as function 
    res:str  := remote.put(conn,:void);
    res:str  := remote.exec(conn,"io.print","bla");
catch SyntaxException:str ;
    io.print("Received first error from the remote site");
    io.printf("!%s\n",SyntaxException);
exit SyntaxException:str ;
# now do it with a function that returns something (a BAT in this case) 
    bn := bat.new(:oid,:str);
    b := remote.put(conn,bn);
catch MALException:str ;
    io.print("Received second init error from the remote site");
    io.printf("!%s\n",MALException);
exit MALException:str ;
    io.print(b);
    b := remote.exec(conn,"inspect","getAtomNames");
catch MALException:str ;
    io.print("Received second error from the remote site");
    io.printf("!%s\n",MALException);
exit MALException:str ;
    io.print(b);
    c:bat[:oid,:str]  := remote.get(conn,b);
    io.print(c);
catch MALException:str ;
    io.print("Received third error from the remote site");
    io.printf("!%s\n",MALException);
exit MALException:str ;
# io.print only outputs things, but returns nothing 
    ah:str  := remote.put(conn,:void);
    io.print(ah);
    ah:str  := remote.exec(conn,"io","print",b);
catch MALException:str ;
    io.print("Received fourth error from the remote site");
    io.printf("!%s\n",MALException);
exit MALException:str ;
    d:void  := remote.get(conn,ah);
    io.print(d);
catch MALException:str ;
    io.print("Received fifth error from the remote site");
    io.printf("!%s\n",MALException);
exit MALException:str ;
# help testweb a bit, since currently no cleanup is done on server 
# shutdown 
    remote.disconnect(conn);
end user.main;
[ "Received first error from the remote site" ]
!SyntaxException:remote.exec:(mapi:monetdb://monetdb@vienna.ins.cwi.nl/mTests_monetdb5_modules_mal) rmt0__8_void := io.print.bla();
SyntaxException:parseError:                       ^'(' expected

[ "rmt1_bn_bat_oid_str" ]
[ "rmt1_bn_bat_oid_str" ]
#--------------------------#
# h	t  # name
# void	str  # type
#--------------------------#
[ 0@0,	"void"  ]
[ 1@0,	"bit"  ]
[ 2@0,	"bte"  ]
[ 3@0,	"sht"  ]
[ 4@0,	"BAT"  ]
[ 5@0,	"int"  ]
[ 6@0,	"oid"  ]
[ 7@0,	"wrd"  ]
[ 8@0,	"ptr"  ]
[ 9@0,	"flt"  ]
[ 10@0,	"dbl"  ]
[ 11@0,	"lng"  ]
[ 12@0,	"str"  ]
[ 13@0,	"streams"  ]
[ 14@0,	"bstream"  ]
[ 15@0,	"blob"  ]
[ 16@0,	"sqlblob"  ]
[ 17@0,	"color"  ]
[ 18@0,	"url"  ]
[ 19@0,	"uuid"  ]
[ 20@0,	"json"  ]
[ 21@0,	"date"  ]
[ 22@0,	"daytime"  ]
[ 23@0,	"timestamp"  ]
[ 24@0,	"timezone"  ]
[ 25@0,	"zrule"  ]
[ 26@0,	"inet"  ]
[ 27@0,	"identifier"  ]
[ 28@0,	"xml"  ]
[ 29@0,	"pcre"  ]
[ 30@0,	"mbr"  ]
[ 31@0,	"wkb"  ]
[ "rmt2__8_void" ]
[ nil ]

# 22:17:31 >  
# 22:17:31 >  "Done."
# 22:17:31 >  

