# enqueue something 
b:= bat.new(:oid,:int);

bat.append(b,1);
bat.append(b,0);
bat.append(b,2);
bat.append(b,2);
bat.append(b,5);
bat.append(b,5);
bat.append(b,3);

io.print(b);

a:= bat.new(:oid,:str);

bat.append(a,"sjoerd");
bat.append(a,"peter");
bat.append(a,"stefan");
bat.append(a,"stefan");
bat.append(a,"niels");
bat.append(a,"martin");
bat.append(a,"stefan");

io.print(a);

# topn of b, new interface should return void,oid(position)
bp:= pqueue.topn_min(a,0:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,1:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,2:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,3:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,4:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,5:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,6:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,7:wrd);
io.print(bp);
bp:= pqueue.topn_min(a,8:wrd);
io.print(bp);

# utopn only count the unique values - topn of b, 
# 	duplicates are included in the returned position list and
# 	get the same group id.
#
# 	returns both void,pos, void,gid
io.print("Start of compound");
(bp,bg):= pqueue.topn_min(b,0:wrd);
io.print(bp);
io.print(bg);
# (sub) topn input: aligned bg group id, ap values bat
#	output:	void,pos
# returns the topn of the combination gid,value
(cp,cg):= pqueue.topn_min(a,bp,bg,0:wrd);
io.print(cp);

(bp,bg):= pqueue.topn_min(b,1:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,1:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,2:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,2:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,3:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,3:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,4:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,4:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,5:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,5:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,6:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,6:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,7:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,7:wrd);
io.print(cp);
io.print(cg);

(bp,bg):= pqueue.topn_min(b,8:wrd);
io.print(bp);
io.print(bg);
(cp,cg):= pqueue.topn_min(a,bp,bg,8:wrd);
io.print(cp);
io.print(cg);

