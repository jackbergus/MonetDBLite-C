stdout of test 'arrange00` in directory 'monetdb5/modules/mal` itself:


# 20:25:42 >  
# 20:25:42 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37874" "--set" "mapi_usock=/var/tmp/mtest-19995/.s.monetdb.37874" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/leftmart//Linux/var/MonetDB/mTests_monetdb5_modules_mal" "arrange00.mal"
# 20:25:42 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_modules_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:37874/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-19995/.s.monetdb.37874
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
function user.main():void;
# create sorted oid arrangement  
    bv := bat.new(:oid,:int);
barrier v := 0:int;
    w := mmath.rand();
    bat.append(bv,w);
    redo v := iterator.next(1:int,10:int);
exit v;
    io.print(bv);
    bat.arrange(bv,3);
end user.main;
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	1487234864  ]
[ 1@0,	1592400937  ]
[ 2@0,	701036934  ]
[ 3@0,	1760828847  ]
[ 4@0,	967339068  ]
[ 5@0,	769106223  ]
[ 6@0,	490462704  ]
[ 7@0,	237432659  ]
[ 8@0,	814072936  ]
[ 9@0,	394304748  ]
#bat.arrange pieces 3
&1 0 11 1 11
% .explain # table_name
% mal # name
% clob # type
% 96 # length












# 20:25:42 >  
# 20:25:42 >  "Done."
# 20:25:42 >  

