stdout of test 'pqueue2` in directory 'monetdb5/modules/mal` itself:


# 19:38:33 >  
# 19:38:33 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31811" "--set" "mapi_usock=/var/tmp/mtest-16241/.s.monetdb.31811" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/default/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_monetdb5_modules_mal" "pqueue2.mal"
# 19:38:33 >  

# MonetDB 5 server v11.18.0 (hg id: 474443038dbe)
# This is an unreleased version
# Serving database 'mTests_monetdb5_modules_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.ins.cwi.nl:36947/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9503/.s.monetdb.36947
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
function user.main():void;
# enqueue something  
    a := bat.new(:oid,:int);
    bat.append(a,1);
    bat.append(a,0);
    bat.append(a,2);
    bat.append(a,2);
    bat.append(a,3);
    bat.append(a,3);
    bat.append(a,3);
    io.print(a);
    b := bat.new(:oid,:int);
    bat.append(b,1);
    bat.append(b,0);
    bat.append(b,2);
    bat.append(b,2);
    bat.append(b,5);
    bat.append(b,5);
    bat.append(b,3);
    io.print(b);
# topn of b, new interface should return void,oid(position) 
    bp := algebra.firstn(b,0:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,1:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,2:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,3:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,4:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,5:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,6:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,7:wrd,false,false);
    io.print(bp);
    bp := algebra.firstn(b,8:wrd,false,false);
    io.print(bp);
# utopn only count the unique values - topn of b,  
# 	duplicates are included in the returned position list and 
# 	get the same group id. 
# 	returns both void,pos, void,gid 
    io.print("Start of compound");
    (bp,bg) := algebra.firstn(b,0:wrd,false,false);
    io.print(bp);
    io.print(bg);
# (sub) topn input: aligned bg group id, ap values bat 
#	output:	void,pos 
# returns the topn of the combination gid,value 
    (cp,cg) := algebra.firstn(a,bp,bg,0:wrd,false,false);
    io.print(cp);
    (bp,bg) := algebra.firstn(b,1:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,1:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,2:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,2:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,3:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,3:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,4:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,4:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,5:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,5:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,6:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,6:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,7:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,7:wrd,false,false);
    io.print(cp);
    io.print(cg);
    (bp,bg) := algebra.firstn(b,8:wrd,false,false);
    io.print(bp);
    io.print(bg);
    (cp,cg) := algebra.firstn(a,bp,bg,8:wrd,false,false);
    io.print(cp);
    io.print(cg);
end main;
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	1  ]
[ 1@0,	0  ]
[ 2@0,	2  ]
[ 3@0,	2  ]
[ 4@0,	3  ]
[ 5@0,	3  ]
[ 6@0,	3  ]
#--------------------------#
# h	t  # name
# void	str  # type
#--------------------------#
[ 0@0,	1  ]
[ 1@0,	0  ]
[ 2@0,	2  ]
[ 3@0,	2  ]
[ 4@0,	5  ]
[ 5@0,	5  ]
[ 6@0,	3  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
[ 2@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	5@0  ]
[ 3@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
[ "Start of compound" ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
[ 2@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
[ 2@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	4@0  ]
[ 1@0,	5@0  ]
[ 2@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
[ 2@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	2@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	2@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	2@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	2@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	2@0  ]
[ 2@0,	2@0  ]
[ 3@0,	0@0  ]
[ 4@0,	0@0  ]
[ 5@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	2@0  ]
[ 2@0,	2@0  ]
[ 3@0,	0@0  ]
[ 4@0,	0@0  ]
[ 5@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	2@0  ]
[ 3@0,	2@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
[ 6@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	2@0  ]
[ 3@0,	2@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
[ 6@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	2@0  ]
[ 3@0,	2@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
[ 6@0,	1@0  ]
#--------------------------#
# h	t  # name
# void	void  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
[ 5@0,	5@0  ]
[ 6@0,	6@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	2@0  ]
[ 3@0,	2@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
[ 6@0,	1@0  ]

# 19:38:33 >  
# 19:38:33 >  "Done."
# 19:38:33 >  

