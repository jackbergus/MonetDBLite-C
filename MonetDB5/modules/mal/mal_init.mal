# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2012 MonetDB B.V.
# All Rights Reserved.

# @f mal_init
# @a Martin Kersten
# @* Mal Startup file
# Upon starting the Monet/MAL server we need to initialize the symbol table.
# This encompasses loading the signatures of several key modules.
# They are listed below.
#
# Beware, since libraries are loaded dynamically, there is an implicit
# dependency. For example, the mapi module initializer uses the bat module.
# It should be loaded after the bat module.
#
# The negative effect is that this module is inspected as part of
# the function resolution scheme.
#
# The remainder interprets the signatures and resolves the address bindings.
# The signatures may exists without the corresponding function implementation
# to be loaded.  This way, MAL programs can be normally compiled, and only
# upon use of the function will it create the necessary exception.
#
# The order of the includes defines the dependencies.
include mdb;
include unix;
include lock;
include sema;
include alarm;
include mmath;
include streams;
# @-
# The kernel stuff to make it work
include bat5;
include batExtensions;
include algebra;
include algebraExtensions;
include calc;
include status;
include group;
include aggr;
include array;
include pqueue;
include mkey;

# @-
# Atom extensions
include blob;
include color;
include str;
include url;
include mtime;
include inet;
include identifier;
include xml;
include batxml;

# @-
# The hardwired multiplex extensions
include batmmath;
include batcalc;
include batifthen;
include batmtime;
include batstr;
include batcolor;

# @-
# MAL related extensions
include sabaoth;
include pcre;
include clients;
include const;
include attach;
include bbp;
include box;
include mal_io;
include tablet;
include factories;
include recycle;
include remote;
include trader; # experimental

include mat; 	# experimental
# include histogram; 	# experimental
include inspect;
include manual;
include language;
include constraints; # experimental
include mal_mapi;

include profiler;
include statistics;	# experimental
include sample;

include optimizer;
include opt_support;
include opt_accumulators;
include opt_aliases;
include opt_centipede;
include opt_coercion;
include opt_constants;
include opt_dataflow;
include opt_dictionary;
include opt_deadcode;
include opt_datacyclotron;
include opt_compression;
include opt_commonTerms;
include opt_costModel;
include opt_emptySet;
include opt_evaluate;
include opt_factorize;
include opt_garbageCollector;
include opt_inline;
include opt_groups;
include opt_joinpath;
include opt_macro;
include opt_accessmode;
include opt_multiplex;
include opt_mergetable;
include opt_mitosis;
include opt_reorder;
include opt_octopus;
include opt_origin;
include opt_peephole;
include opt_prejoin;
include opt_qep;
include opt_history;
include opt_pushranges;
include opt_reduce;
include opt_remap;
include opt_recycler;
include opt_singleton;
include opt_strengthReduction;
include opt_statistics;
include opt_trace;
include opt_mapreduce;
include opt_remoteQueries;

include chopper;
include cluster;
include opt_cluster;
include txtsim;
include tokenizer;
include zorder;

# @-
# library logger;
# include logger;
include transaction;

# @-
# scheduler components
include run_isolate;
include run_memo;
include run_octopus;
include srvpool;

# @-
# Any extensions (MAL scripts) that should be automatically loaded upon
# startup can be placed in the autoload directory.  One typically finds
# the SQL module in here, but it can also be used to load custom scripts.
include autoload;
