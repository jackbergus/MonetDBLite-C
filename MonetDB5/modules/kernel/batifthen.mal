command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:bit]) :bat[:oid,:bit]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:bit) :bat[:oid,:bit]
address CMDifThenCst_bit
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:bit], e:bat[:oid,:bit]) :bat[:oid,:bit]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bit, e:bat[:oid,:bit]) :bat[:oid,:bit]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:bit], e:bit) :bat[:oid,:bit]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bit, e:bit) :bat[:oid,:bit]
address CMDifThenElseCst_bit
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:bte]) :bat[:oid,:bte]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:bte) :bat[:oid,:bte]
address CMDifThenCst_bte
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:bte], e:bat[:oid,:bte]) :bat[:oid,:bte]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bte, e:bat[:oid,:bte]) :bat[:oid,:bte]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:bte], e:bte) :bat[:oid,:bte]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bte, e:bte) :bat[:oid,:bte]
address CMDifThenElseCst_bte
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:sht]) :bat[:oid,:sht]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:sht) :bat[:oid,:sht]
address CMDifThenCst_sht
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:sht], e:bat[:oid,:sht]) :bat[:oid,:sht]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:sht, e:bat[:oid,:sht]) :bat[:oid,:sht]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:sht], e:sht) :bat[:oid,:sht]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:sht, e:sht) :bat[:oid,:sht]
address CMDifThenElseCst_sht
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:int]) :bat[:oid,:int]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:int) :bat[:oid,:int]
address CMDifThenCst_int
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:int], e:bat[:oid,:int]) :bat[:oid,:int]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:int, e:bat[:oid,:int]) :bat[:oid,:int]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:int], e:int) :bat[:oid,:int]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:int, e:int) :bat[:oid,:int]
address CMDifThenElseCst_int
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:lng]) :bat[:oid,:lng]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:lng) :bat[:oid,:lng]
address CMDifThenCst_lng
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:lng], e:bat[:oid,:lng]) :bat[:oid,:lng]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:lng, e:bat[:oid,:lng]) :bat[:oid,:lng]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:lng], e:lng) :bat[:oid,:lng]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:lng, e:lng) :bat[:oid,:lng]
address CMDifThenElseCst_lng
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:oid]) :bat[:oid,:oid]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:oid) :bat[:oid,:oid]
address CMDifThenCst_oid
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:oid], e:bat[:oid,:oid]) :bat[:oid,:oid]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:oid, e:bat[:oid,:oid]) :bat[:oid,:oid]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:oid], e:oid) :bat[:oid,:oid]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:oid, e:oid) :bat[:oid,:oid]
address CMDifThenElseCst_oid
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:flt]) :bat[:oid,:flt]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:flt) :bat[:oid,:flt]
address CMDifThenCst_flt
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:flt], e:bat[:oid,:flt]) :bat[:oid,:flt]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:flt, e:bat[:oid,:flt]) :bat[:oid,:flt]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:flt], e:flt) :bat[:oid,:flt]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:flt, e:flt) :bat[:oid,:flt]
address CMDifThenElseCst_flt
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:dbl]) :bat[:oid,:dbl]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:dbl) :bat[:oid,:dbl]
address CMDifThenCst_dbl
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:dbl], e:bat[:oid,:dbl]) :bat[:oid,:dbl]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:dbl, e:bat[:oid,:dbl]) :bat[:oid,:dbl]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:dbl], e:dbl) :bat[:oid,:dbl]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:dbl, e:dbl) :bat[:oid,:dbl]
address CMDifThenElseCst_dbl
comment "If-then-else operation to assemble a conditional result ";


command batcalc.ifthen(b:bat[:oid,:bit], t:bat[:oid,:str]) :bat[:oid,:str]
address CMDifThen
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthen(b:bat[:oid,:bit], t:str) :bat[:oid,:str]
address CMDifThenCst_str
comment "If-then operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:str], e:bat[:oid,:str]) :bat[:oid,:str]
address CMDifThenElse
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:str, e:bat[:oid,:str]) :bat[:oid,:str]
address CMDifThenElseCst1
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:bat[:oid,:str], e:str) :bat[:oid,:str]
address CMDifThenElseCst2
comment "If-then-else operation to assemble a conditional result ";

command batcalc.ifthenelse(b:bat[:oid,:bit], t:str, e:str) :bat[:oid,:str]
address CMDifThenElseCst_str
comment "If-then-else operation to assemble a conditional result ";
