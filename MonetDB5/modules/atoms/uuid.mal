atom uuid;

# the atom functions
command cmp() address UUIDcompare;
command fromstr() address UUIDfromString;
command hash() address UUIDhash;
command null() address UUIDnull;
command read() address UUIDread;
command tostr() address UUIDtoString;
command write() address UUIDwrite;

# fix up the rest of the atom definition
command prelude():void address UUIDprelude;
uuid.prelude();

command new() :uuid
address UUIDgenerateUuid
comment "Generate a new uuid";

command uuid(s:str):uuid
address UUIDstr2uuid
comment "Coerce a string to a uuid, validating its format";

command calc.uuid(s:str):uuid
address UUIDstr2uuid
comment "Coerce a string to a uuid, validating its format";

command str(u:uuid):str
address UUIDuuid2str
comment "Coerce a uuid to its string type";

command calc.str(s:uuid):str
address UUIDuuid2str
comment "Coerce a uuid to a string type";

command isaUUID(u:str):bit
address UUIDisaUUID
comment "Test a string for a UUID format";

command calc.==(l:uuid,r:uuid):bit
address UUIDequal
comment "Compare two UUID values for equality";

function calc.uuid(u:uuid):uuid;
 return u;
end calc.uuid;
