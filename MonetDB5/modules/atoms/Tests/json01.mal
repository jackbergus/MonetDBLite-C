#validity tests
b:= json.new("{}");
f:= json.filter(b,"f1");
io.print(f);
b:= json.new("{\"f1\":1}");
f:= json.filter(b,"f1");
io.print(f);
b:= json.new("{\"f1\":1,\"f2\":2}");
f:= json.filter(b,"f2");
io.print(f);
b:= json.new("{\"f1\":1,\"f2\":2,\"f1\":3}");
f:= json.filter(b,"f1");
io.print(f);
b:= json.new("{\"f1\":{\"f12\":3},\"f2\":[2,3,4]}");
f:= json.filter(b,"f1");
io.print(f);
f:= json.filter(b,"f12");
io.print(f);

b:= json.new("[1,\"f2\", 2]");
f:= json.filter(b,0);
io.print(f);
f:= json.filter(b,1);
io.print(f);
f:= json.filter(b,2);
io.print(f);
f:= json.filter(b,3);
io.print(f);
