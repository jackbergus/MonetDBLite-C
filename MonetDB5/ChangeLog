# ChangeLog file for MonetDB5
# This file is updated with Maddlog

* Sun Mar 14 2010 Martin Kersten <martin.kersten@cwi.nl>
- The dataflow scheduler has been revamped to allow for
  more parellelism to be exploited.
- The garbage collection administration has been changed. Every variable record
  now comes with an end-of-life field (eolife), which denotes the instruction whereafter
  the BAT variable reference counter can be decremented. The garbage collector is
  never called automagically on MAL functions, because there may be other
  pressing needs to retain them. This means that MAL functions defined and
  used in the context of SQL, and which are not inlined, may cause a leakage.
  The garbage collection has become part of each interpreter step.
  The new approach makes the SQL/MAL plans half te size as before.

* Mon Mar 01 2010 Fabian Groffen <fabian@cwi.nl>
- Removed stethoscope from MonetDB5 sources.  New location is in the
  clients repository.

* Fri Feb 26 2010 Martin Kersten <mk@cwi.nl>
- Added the compression optimizer as an example of how to gain access to
  foreign file formats deep down in the kernel and transfer them just
  in time into a temporary BAT.

* Fri Feb 26 2010 Fabian Groffen <fabian@cwi.nl>
- Renamed configure argument --with-console to --enable-console.
  Default remains console being enabled.

* Mon Feb 22 2010 Martin Kersten <mk@cwi.nl>
- Fixed cleaning the user module context upon session end.
  Fixes bug #2956664

* Thu Feb 04 2010 Fabian Groffen <fabian@cwi.nl>
- The config variable mapi_usock can now be used to instruct the server
  to listen for connections on a local UNIX domain socket on UNIX-like
  systems.

* Mon Jan 18 2010 Martin Kersten <mk@cwi.nl>
- The MAL interpreter has been extended with an operation
  admission policy to control the memory claims of all
  concurrent running interpreters. Instructions are hold
  up unto there is sufficient resource or the query plan
  can not avoid its execution anymore.
- The join path optimizer has been extended with searching for
  join*, semijoin*, and leftjoin* paths. Furthermore, it avoids
  duplicate work by factoring out all common simple join paths.

