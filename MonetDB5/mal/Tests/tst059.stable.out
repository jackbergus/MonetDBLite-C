stdout of test 'tst059` in directory 'monetdb5/mal` itself:


# 18:17:50 >  
# 18:17:50 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32986" "--set" "mapi_usock=/var/tmp/mtest-11633/.s.monetdb.32986" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "tst059.mal"
# 18:17:50 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:32986/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11633/.s.monetdb.32986
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
function user.threevaluedlogic(B:bit):int;
    threevaluedlogic:int  := nil:int;
barrier X_2 := B;
    return threevaluedlogic:int  := 1:int;
exit X_2;
barrier X_8 := calc.isnil(B);
    return threevaluedlogic:int  := nil:int;
exit X_8;
barrier X_6 := calc.not(B);
    return threevaluedlogic:int  := 0:int;
exit X_6;
    return threevaluedlogic:int  := threevaluedlogic;
end threevaluedlogic;
function user.main():void;
# three valued logic, using a sequential plan 
# for use in parallel blocks check for the nil in both branches 
# F b1 THEN RETURN 1; 
# ELSEIF NOT(b1) THEN RETURN 0; 
#  ELSE RETURN NULL; 
# END IF; 
    z1 := user.threevaluedlogic(true);
    io.print(z1);
    z2 := user.threevaluedlogic(false);
    io.print(z2);
    z3 := user.threevaluedlogic(nil:bit);
    io.print(z3);
end main;
[ 1 ]
[ 0 ]
[ nil ]

# 18:17:50 >  
# 18:17:50 >  "Done."
# 18:17:50 >  

