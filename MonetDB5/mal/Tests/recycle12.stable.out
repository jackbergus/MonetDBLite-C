stdout of test 'recycle12` in directory 'monetdb5/mal` itself:


# 18:50:02 >  
# 18:50:02 >   mserver5 "--config=/export/scratch1/milena/monet.DBG/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch1/milena/monet.DBG/lib/MonetDB5:/export/scratch1/milena/monet.DBG/lib/MonetDB5/lib:/export/scratch1/milena/monet.DBG/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch0/milena/var/dbfarm" --set "sql_logdir=/export/scratch0/milena/var/dblogs/logs/sql"  --set mapi_open=true --set xrpc_open=true --set mapi_port=30138 --set xrpc_port=44901 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle12.mal
# 18:50:02 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:35047/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-28287/.s.monetdb.35047
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
function sql.mvc():int;
    return mvc := 1;
end mvc;
function sql.tid(mvc:int,s:str,t:str):bat[:oid,:oid];
    b := bat.new(:oid,:oid);
barrier i := 0@0:oid;
    bat.append(b,i);
    redo i := iterator.next(1@0:oid,11@0:oid);
exit i;
    return tid := b;
end tid;
function sql.bind(mvc:int,s:str,t:str,c:str,i:int):bat[:oid,:int];
    b := bat.new(:oid,:int);
    bat.insert(b,0@0,0);
    bat.insert(b,1@0,1);
    bat.insert(b,2@0,2);
    bat.insert(b,3@0,3);
    bat.insert(b,4@0,4);
    bat.insert(b,5@0,5);
    bat.insert(b,6@0,6);
    bat.insert(b,7@0,7);
    bat.insert(b,8@0,8);
    bat.insert(b,9@0,9);
    bat.insert(b,10@0,10);
    bat.insert(b,11@0,11);
    return bind := b;
end bind;
function sql.qry(low:int,hgh:int):void;
    m := sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
    s := algebra.subselect(b,x,low,hgh,true,true,false);
    l1 := calc.+(low,1);
    h1 := calc.-(hgh,1);
    s2 := algebra.subselect(b,l1,h1,true,true,false);
end qry;
function sql.qry1(val:int):void;
    m := sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
    s := algebra.subselect(b,x,val,val,true,true,false);
end qry1;
#
#recycle.setRetainPolicy(1);
#recycle.setReusePolicy(1);
#recycle.setCachePolicy(3);
#optimizer.recycle("user","qry");
#optimizer.recycle("user","qry1");
#
#qry(2,8);
#qry1(10);
#qry1(10);
#
#recycle.dump();
##recycle.dump();
#
#
function user.main():void;
#test the basics of the recycler 
# testing query categories statistics 
#intra-query commonality 
#inter-query commonality 
    recycle.setCache(10);
    user.qry(2,8);
    user.qry1(10);
    user.qry1(10);
    recycle.dump();
#recycle.dump(); 
end main;
#Query patterns 2
#Name	calls	globRec	locRec	Cat
#qry	1	0	1	0
#qry1	2	2	0	0

# 18:50:02 >  
# 18:50:02 >  Done.
# 18:50:02 >  

