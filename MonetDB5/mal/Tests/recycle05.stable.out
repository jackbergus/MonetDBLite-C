stdout of test 'recycle05` in directory 'monetdb5/mal` itself:


function sql.mvc():int;
    return mvc := 1;
end sql.mvc;
function sql.tid(mvc:int,s:str,t:str):bat[:oid,:oid];
    b := bat.new(:oid,:oid);
barrier i := 0@0:oid;
    bat.append(b,i);
    redo i := iterator.next(1@0:oid,1000@0:oid);
exit i;
    return tid := b;
end sql.tid;
function sql.bind(m:int,s:str,t:str,c:str,i:int):bat[:oid,:int];
    b := bat.new(:oid,:int);
barrier i := 0:int;
    bat.append(b,i);
    redo i := iterator.next(1:int,1000:int);
exit i;
    return bind := b;
end sql.bind;
function sql.qry(low:int,hgh:int):void;
    m := sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
    s1 := algebra.subselect(b,x,low,hgh,true,true,false);
end sql.qry;
function user.main():void;
# Test of LRU cache policy in limited memory (12 RU) 
    recycle.setCache(4);
    io.print("start");
    user.qry(100,120);
    user.qry(700,710);
    recycle.dump();
# The next query should evict the oldest leaves (#2 mark an #3 reverse) 
    user.qry(400,700);
    recycle.dump();
end user.main;
[ "start" ]
