stdout of test 'tst236` in directory 'mal` itself:


# 13:59:36 >  
# 13:59:36 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/monet5/Linux/lib64/MonetDB5/lib:/ufs/mk/monet5/Linux/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/xquery_logs" --set mapi_port=37951 --set monet_prompt= --trace --dbname=mTests_src_mal  tst236.mal < /dev/null
# 13:59:36 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
## check reference counting and multiplex
#function dir():void;
#        d:= bbp.getRefCount();
#        dl:=bbp.getLRefCount();
#        dn:= bbp.getNames();
#        io.print(dn,d,dl);
#end dir;
function user.dir():void;
    d := bbp.getRefCount();
    dl := bbp.getLRefCount();
    dn := bbp.getNames();
    ds := algebra.sort(dn);
    io.table(ds,d,dl);
end dir;
#
#function createBAT(name:str):bat;
#	res:= bat.new(:int,:int);
#	bat.setName(res,name);
#	i:= calc.getBATidentifier(res);
#	return i;
#end createBAT;
function user.createBAT(name:str):BAT;
    res := bat.new(:int,:int);
    bat.setName(res,name);
    i := calc.getBATidentifier(res);
    return createBAT := i;
end createBAT;
#m:= bat.new(:oid,:str);
#bat.insert(m,10:oid,"ten");
#bat.insert(m,20:oid,"twenty");
#dir();
#r:bat[:oid,:bat]:= optimizer.multiplex("user","createBAT",m);
#dir();
#io.print(r);
#
function user.main():void;
# check reference counting and multiplex 
    m := bat.new(:oid,:str);
    bat.insert(m,10@0:oid,"ten");
    bat.insert(m,20@0:oid,"twenty");
    X_15 := bat.new(nil:oid,nil:BAT);
barrier (X_19,X_20,X_21) := bat.newIterator(m);
    X_23 := user.createBAT(X_21);
    bat.insert(X_15,X_20,X_23);
    redo (X_19,X_20,X_21) := bat.hasMoreElements(m);
exit (X_19,X_20,X_21);
    r:bat[:oid,:BAT]  := X_15;
    io.print(r);
end main;
#-------------------------#
# h	t		  # name
# oid	BAT		  # type
#-------------------------#
[ 10@0,	  <ten>		  ]
[ 20@0,	  <twenty>	  ]

# 13:59:36 >  
# 13:59:36 >  Done.
# 13:59:36 >  

