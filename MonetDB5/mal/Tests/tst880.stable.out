stdout of test 'tst880` in directory 'monetdb5/mal` itself:


# 14:40:05 >  
# 14:40:05 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39006" "--set" "mapi_usock=/var/tmp/mtest-7711/.s.monetdb.39006" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "tst880.mal"
# 14:40:05 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39006/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-7711/.s.monetdb.39006
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 12:36:19 >  
# 12:36:19 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11334" "--port=30001"
# 12:36:19 >  

function user.foo():void;               	#[0]  0 
    b:bat[:oid,:int] := bat.new(:oid,:int);	#[1] CMDBATnew 1 <- 2 3 
    bat.append(b:bat[:oid,:int],-5:int);	#[2] BKCappend_val_wrap 4 <- 1 5 
    bat.append(b:bat[:oid,:int],0:int); 	#[3] BKCappend_val_wrap 6 <- 1 7 
    bat.append(b:bat[:oid,:int],5:int); 	#[4] BKCappend_val_wrap 8 <- 1 9 
    bat.append(b:bat[:oid,:int],nil:int);	#[5] BKCappend_val_wrap 10 <- 1 11 
    bat.append(b:bat[:oid,:int],nil:int);	#[6] BKCappend_val_wrap 12 <- 1 11 
    bat.append(b:bat[:oid,:int],7:int); 	#[7] BKCappend_val_wrap 13 <- 1 14 
    bat.append(b:bat[:oid,:int],8:int); 	#[8] BKCappend_val_wrap 15 <- 1 16 
    c:bat[:oid,:int] := bat.new(:oid,:int);	#[9] CMDBATnew 17 <- 2 3 
    bat.append(c:bat[:oid,:int],-5:int);	#[10] BKCappend_val_wrap 18 <- 17 5 
    bat.append(c:bat[:oid,:int],1:int); 	#[11] BKCappend_val_wrap 19 <- 17 20 
    bat.append(c:bat[:oid,:int],5:int); 	#[12] BKCappend_val_wrap 21 <- 17 9 
    bat.append(c:bat[:oid,:int],nil:int);	#[13] BKCappend_val_wrap 22 <- 17 11 
    bat.append(c:bat[:oid,:int],4:int); 	#[14] BKCappend_val_wrap 23 <- 17 24 
    bat.append(c:bat[:oid,:int],9:int); 	#[15] BKCappend_val_wrap 25 <- 17 26 
    bat.append(c:bat[:oid,:int],nil:int);	#[16] BKCappend_val_wrap 27 <- 17 11 
    z:bat[:oid,:int] := batcalc.max(b:bat[:oid,:int],c:bat[:oid,:int]);	#[17] CMDbatMAX 28 <- 1 17 
    io.print(b:bat[:oid,:int],c:bat[:oid,:int],z:bat[:oid,:int]);	#[18] IOtable 29 <- 1 17 28 
    z:bat[:oid,:int] := batcalc.min(b:bat[:oid,:int],c:bat[:oid,:int]);	#[19] CMDbatMIN 28 <- 1 17 
    io.print(b:bat[:oid,:int],c:bat[:oid,:int],z:bat[:oid,:int]);	#[20] IOtable 30 <- 1 17 28 
end user.foo;                           	#[21]  
#--------------------------#
# h	t	t	t  # name
# void	int	int	int  # type
#--------------------------#
[ 0@0,	-5,	-5,	-5  ]
[ 1@0,	0,	1,	1  ]
[ 2@0,	5,	5,	5  ]
[ 3@0,	nil,	nil,	nil  ]
[ 4@0,	nil,	4,	nil  ]
[ 5@0,	7,	9,	9  ]
[ 6@0,	8,	nil,	nil  ]
#--------------------------#
# h	t	t	t  # name
# void	int	int	int  # type
#--------------------------#
[ 0@0,	-5,	-5,	-5  ]
[ 1@0,	0,	1,	0  ]
[ 2@0,	5,	5,	5  ]
[ 3@0,	nil,	nil,	nil  ]
[ 4@0,	nil,	4,	nil  ]
[ 5@0,	7,	9,	7  ]
[ 6@0,	8,	nil,	nil  ]

# 14:40:05 >  
# 14:40:05 >  "Done."
# 14:40:05 >  

