#test the basics of the recycler
# testing reuse-cover with different selection instructions


module sql;
function sql.mvc():int;
    return mvc:=1;
end mvc;

function sql.tid(mvc:int,s:str,t:str):bat[:oid,:oid];
b:= bat.new(:oid,:oid);
barrier i:= 0:oid;
    bat.append(b,i);
    redo i:= iterator.next(1:oid,11:oid);
exit i;
    return tid:= b;
end tid;

function sql.bind(m:int,s:str,t:str,c:str,i:int):bat[:oid,:int];
	b:= bat.new(:oid,:int);
	bat.insert(b,0@0,0);
	bat.insert(b,1@0,1);
	bat.insert(b,2@0,2);
	bat.insert(b,3@0,3);
	bat.insert(b,4@0,4);
	bat.insert(b,5@0,5);
	bat.insert(b,6@0,6);
	bat.insert(b,7@0,7);
	bat.insert(b,8@0,8);
	bat.insert(b,9@0,9);
	bat.insert(b,10@0,10);
	bat.insert(b,11@0,11);
	return bind:=b;
end bind;

function qry(low:int, hgh:int);
    m:= sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]:= sql.bind(m,"sys","tbl","col",0);
    s1:= algebra.subselect(b,x,low,hgh,true,true,false);
    v:= low + hgh;
    v1:= v/2;
    v2:= calc.int(v1);
    s2:= algebra.subselect(b,x,v2,v2,true,true,false);
    s3:= algebra.subselect(b,x,low,v2,true,true,false);
    s4:= algebra.subselect(b,x,low,hgh,false,true,false);
    io.print(s1);
    io.print(s2);
    io.print(s3);
    io.print(s4);
end qry;

optimizer.recycler("user","qry");

qry(2,8);

recycle.dump();
