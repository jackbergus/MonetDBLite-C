stdout of test 'recycle01` in directory 'monetdb5/mal` itself:


# 12:49:06 >  
# 12:49:06 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=33469 --set xrpc_port=48324 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle01.mal
# 12:49:06 >  

# MonetDB server v5.5.0, based on kernel v1.23.0
# Serving database 'mTests_src_mal'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30811/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-24776/.s.monetdb.30811
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
function sql.mvc():int;
    return mvc := 1;
end mvc;
function sql.tid(mvc:int,s:str,t:str):bat[:oid,:oid];
    b := bat.new(:oid,:oid);
barrier i := 0@0:oid;
    bat.append(b,i);
    redo i := iterator.next(1@0:oid,12@0:oid);
exit i;
    return tid := b;
end tid;
function sql.bind(mvc:int,s:str,t:str,c:str,i:int):bat[:oid,:int];
    b := bat.new(:oid,:int);
    bat.insert(b,0@0,0);
    bat.insert(b,1@0,1);
    bat.insert(b,2@0,2);
    bat.insert(b,3@0,3);
    bat.insert(b,4@0,4);
    bat.insert(b,5@0,5);
    bat.insert(b,6@0,6);
    bat.insert(b,7@0,7);
    bat.insert(b,8@0,8);
    bat.insert(b,9@0,9);
    bat.insert(b,10@0,10);
    bat.insert(b,11@0,11);
    return bind := b;
end bind;
function sql.qry(low:int,hgh:int):void;
    m := sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
    s := algebra.subselect(b,x,low,hgh,true,true,false);
    io.print(s);
end qry;
#
#recycle.setRetainPolicy(1);
#recycle.setReusePolicy(1);
#optimizer.recycle("user","qry");
#io.print("start");
#qry(1,10);
#io.print("zoom in");
#qry(1,5);
#io.print("next step");
#qry(2,3);
#io.print("last");
#qry(1,11);
#recycle.dump();
#
function user.main():void;
#test the basics of the recycler 
#reusing select results 
    mdb.list("user","qry");
    io.print("start");
    user.qry(1,10);
    io.print("reuse BAT");
    user.qry(1,10);
    recycle.dump();
end main;
function sql.qry(low:int,hgh:int):void;
    m := sql.mvc();
    x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
    s := algebra.subselect(b,x,low,hgh,true,true,false);
    io.print(s);
end qry;
[ "start" ]
#RECYCLE [  0]     X_0 := sql.mvc();
#RECYCLE [  1]     X_1 := sql.tid(1,"sys","tbl");
#RECYCLE [  2]     X_4 := sql.bind(1,"sys","tbl","col",0);
#RECYCLE [  3]     X_7 := algebra.subselect(<tmp_1034>,<tmp_1033>,1,10,true,true,false);
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	1@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
[ 6@0,	7@0  ]
[ 7@0,	8@0  ]
[ 8@0,	9@0  ]
[ 9@0,	10@0  ]
[ "reuse BAT" ]
#REUSED  [  0]       m := sql.mvc();
#REUSED  [  1]       x:bat[:oid,:oid]  := sql.tid(m,"sys","tbl");
#REUSED  [  2]       b:bat[:oid,:int]  := sql.bind(m,"sys","tbl","col",0);
#REUSED  [  3]       s := algebra.subselect(b,x,low,hgh,true,true,false);
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	1@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
[ 6@0,	7@0  ]
[ 7@0,	8@0  ]
[ 8@0,	9@0  ]
[ 9@0,	10@0  ]
#RECYCLER  CATALOG admission ADM_ALL
#CACHE= policy PROFIT limit= 20000 
#RESOURCES hard stmt = 20000 hard var = 100000 hard mem=16741163008
#recycled = 3 incache= 4 executed = 1536 memory(KB)= 144 PersBat memory=0
#RPremoved = 0 RPactive= 4 RPmisses = 0
#Cache search time= 0(usec)
# CL	   lru		cnt	 ticks	 rd	 wr	 Instr
#        0	946139	2	47	0	0	    X_0 := sql.mvc();
#        1	946150	2	60	96	0	    X_1 := sql.tid(1,"sys","tbl");
#        2	946161	2	41	48	0	    X_4 := sql.bind(1,"sys","tbl","col",0);
#        3	946173	2	36	80	144	    X_7 := algebra.subselect(<tmp_1034>,<tmp_1033>,1,10,true,true,false);
#RECYCLE shutdown
#[0]    _0 = 1 :int  constant 
#[1]    _1 = <tmp_1033> :BAT  constant 
#[2]    _2 = "sys" :str  constant 
#[3]    _3 = "tbl" :str  constant 
#[4]    _4 = <tmp_1034> :BAT  constant 
#[5]    _5 = "col" :str  constant 
#[6]    _6 = 0 :int  constant 
#[7]    _7 = <tmpr_1036> :BAT  constant 
#[8]    _8 = 10 :int  constant 
#[9]    _9 = true :bit  constant 
#[10]   _10 = false :bit  constant 

# 12:49:07 >  
# 12:49:07 >  Done.
# 12:49:07 >  

