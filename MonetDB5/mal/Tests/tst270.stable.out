stdout of test 'tst270` in directory 'monetdb5/mal` itself:


# 08:01:11 >  
# 08:01:11 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst270.mal </dev/null
# 08:01:11 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##Same as tst200, but includes testing of the profiler
#
##profiler.setAll();
#profiler.activate("tick");
#profiler.activate("pc");
#profiler.activate("statement");
##profiler.setFilter("*","*");
#profiler.setFilter("*","insert");
##profiler.setFilter("*","print");
#profiler.openStream("/tmp/MonetEvents");
#
#o:=oid(20000000);
#setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(:int,:int);
#printf("#~BeginVariableOutput~#\n"); 
#binfo:= bat.info(b);
#print(binfo); 
#printf("#~EndVariableOutput~#\n");
#
#profiler.start();
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#print(b,b,b);
#profiler.stop();
#profiler.closeStream();
#
function user.main():void;
#Same as tst200, but includes testing of the profiler 
#profiler.setAll(); 
    profiler.activate("ticks");
    profiler.activate("pc");
    profiler.activate("stmt");
#profiler.setFilter("*","*"); 
    profiler.setFilter("*","append");
    profiler.openStream("/tmp/MonetEvents");
    o := calc.oid(20000000);
    calc.setoid(o);
#test basic functionality of the BAT library. 
#focussed on integers 
#it includes insertions,deletions,selections, and joins. 
    b := bat.new(:oid,:int);
    io.printf("#~BeginVariableOutput~#\n");
    (bk,bv) := bat.info(b);
    io.print(bk,bv);
    io.printf("#~EndVariableOutput~#\n");
    profiler.start();
    err := bat.append(b,15);
    err := bat.append(b,4);
    n0 := calc.int(nil);
    err := bat.append(b,n0);
    err := bat.append(b,16);
    err := bat.append(b,25);
    err := bat.append(b,36);
    err := bat.append(b,49);
    err := bat.append(b,64);
    err := bat.append(b,n0);
    err := bat.append(b,n0);
    err := bat.append(b,81);
    io.print(b);
    io.print(b,b,b);
    profiler.stop();
    profiler.closeStream();
    profiler.cleanup();
end main;
#~BeginVariableOutput~#
#-------------------------------------------------#
# h	t		t			  # name
# oid	str		str			  # type
#--------------------------#
[ 0@0,	"batId",	"tmp_653"  ]
[ 1@0,	"batCacheid",	"427"  ]
[ 2@0,	  "hparentid",		  "0"		  ]
[ 3@0,	  "tparentid",		  "0"		  ]
[ 4@0,	  "batSharecnt",	  "0"		  ]
[ 5@0,	  "batCount",		  "0"		  ]
[ 6@0,	  "batCapacity",	  "256"		  ]
[ 7@0,	  "head",		  "void"	  ]
[ 8@0,	  "tail",		  "int"		  ]
[ 9@0,	  "batPersistence",	  "transient"	  ]
[ 10@0,	  "batRestricted",	  "updatable"	  ]
[ 11@0,	  "batRefcnt",		  "1"		  ]
[ 12@0,	  "batLRefcnt",		  "1"		  ]
[ 13@0,	  "batDirty",		  "dirty"	  ]
[ 14@0,	"hsorted",	"1"  ]
[ 15@0,	"hrevsorted",	"1"  ]
[ 16@0,	"hident",	"h"  ]
[ 17@0,	"hdense",	"1"  ]
[ 18@0,	"hseqbase",	"0@0"  ]
[ 19@0,	"hkey",	"1"  ]
[ 20@0,	"hvarsized",	"1"  ]
[ 21@0,	"halign",	"0"  ]
[ 22@0,	"hnosorted",	"0"  ]
[ 23@0,	"hnorevsorted",	"0"  ]
[ 24@0,	"hnodense",	"0"  ]
[ 25@0,	"hnokey[0]",	"0"  ]
[ 26@0,	"hnokey[1]",	"0"  ]
[ 27@0,	"hnonil",	"1"  ]
[ 28@0,	"hnil",	"0"  ]
[ 29@0,	"tident",	"t"  ]
[ 30@0,	"tdense",	"0"  ]
[ 31@0,	"tseqbase",	"0@0"  ]
[ 32@0,	"tsorted",	"1"  ]
[ 33@0,	"trevsorted",	"1"  ]
[ 34@0,	"tkey",	"1"  ]
[ 35@0,	"tvarsized",	"0"  ]
[ 36@0,	"talign",	"20000001"  ]
[ 37@0,	"tnosorted",	"0"  ]
[ 38@0,	"tnorevsorted",	"0"  ]
[ 39@0,	"tnodense",	"0"  ]
[ 40@0,	"tnokey[0]",	"0"  ]
[ 41@0,	"tnokey[1]",	"0"  ]
[ 42@0,	"tnonil",	"1"  ]
[ 43@0,	"tnil",	"0"  ]
[ 44@0,	"batInserted",	"0"  ]
[ 45@0,	"batDeleted",	"0"  ]
[ 46@0,	"batFirst",	"0"  ]
[ 47@0,	"htop",	"0"  ]
[ 48@0,	"ttop",	"0"  ]
[ 49@0,	"batStamp",	"347"  ]
[ 50@0,	"lastUsed",	"12239"  ]
[ 51@0,	"curStamp",	"349"  ]
[ 52@0,	"batCopiedtodisk",	"0"  ]
[ 53@0,	"batDirtydesc",	"dirty"  ]
[ 54@0,	"H->heap.dirty",	"clean"  ]
[ 55@0,	"T->heap.dirty",	"clean"  ]
[ 56@0,	"head.free",	"0"  ]
[ 57@0,	"head.size",	"0"  ]
[ 58@0,	"head.storage",	"absent"  ]
[ 59@0,	"head.newstorage",	"malloced"  ]
[ 60@0,	"head.filename",	"no file"  ]
[ 61@0,	"tail.free",	"0"  ]
[ 62@0,	"tail.size",	"1024"  ]
[ 63@0,	"tail.storage",	"malloced"  ]
[ 64@0,	"tail.newstorage",	"malloced"  ]
[ 65@0,	"tail.filename",	"06/653.tail"  ]
[ 66@0,	"H->vheap->dirty",	"clean"  ]
[ 67@0,	"T->vheap->dirty",	"clean"  ]
#~EndVariableOutput~#
# Start performance profiling
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  15	  ]
[ 1@0,	  4	  ]
[ 2@0,	  nil	  ]
[ 3@0,	  16	  ]
[ 4@0,	  25	  ]
[ 5@0,	  36	  ]
[ 6@0,	  49	  ]
[ 7@0,	  64	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  81	  ]
#---------------------------------#
# h	tmp_4	tmp_4	tmp_4	  # name
# int	int	int	int	  # type
#---------------------------------#
[ 0@0,	  15,	  15,	  15	  ]
[ 1@0,	  4,	  4,	  4	  ]
[ 2@0,	  nil,	  nil,	  nil	  ]
[ 3@0,	  16,	  16,	  16	  ]
[ 4@0,	  25,	  25,	  25	  ]
[ 5@0,	  36,	  36,	  36	  ]
[ 6@0,	  49,	  49,	  49	  ]
[ 7@0,	  64,	  64,	  64	  ]
[ 8@0,	  nil,	  nil,	  nil	  ]
[ 9@0,	  nil,	  nil,	  nil	  ]
[ 10@0,	  81,	  81,	  81	  ]

# 08:01:11 >  
# 08:01:11 >  Done.
# 08:01:11 >  

