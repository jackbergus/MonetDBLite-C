stdout of test 'tst913` in directory 'monetdb5/mal` itself:


# 18:25:43 >  
# 18:25:43 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=30562 --set monet_prompt= --trace --dbname=mTests_src_mal  tst913.mal < /dev/null
# 18:25:43 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:30001/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11334/.s.monetdb.30001
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 22:45:46 >  
# 22:45:46 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-7101" "--port=34631"
# 22:45:46 >  

function user.foo():void;               	#[0]  0 
    b:bat[:oid,:str] := bat.new(:oid,:str);	#[1] CMDBATnew 1 <- 2 3 
    bat.append(b:bat[:oid,:str],"true":str);	#[2] BKCappend_val_wrap 4 <- 1 5 
    bat.append(b:bat[:oid,:str],"TRUE":str);	#[3] BKCappend_val_wrap 6 <- 1 7 
    bat.append(b:bat[:oid,:str],"FALSE":str);	#[4] BKCappend_val_wrap 8 <- 1 9 
    bat.append(b:bat[:oid,:str],"false":str);	#[5] BKCappend_val_wrap 10 <- 1 11 
    bat.append(b:bat[:oid,:str],"":str);	#[6] BKCappend_val_wrap 12 <- 1 13 
    bat.append(b:bat[:oid,:str],nil:str);	#[7] BKCappend_val_wrap 14 <- 1 15 
    io.print(b:bat[:oid,:str]);         	#[8] IOprint_val 16 <- 1 
    bc:bat[:oid,:bit] := batcalc.bit_noerror(b:bat[:oid,:str]);	#[9] CMDconvert_bit 17 <- 1 
    io.print(bc:bat[:oid,:bit]);        	#[10] IOprint_val 18 <- 17 
end user.foo;                           	#[11]  
#--------------------------#
# h	t		  # name
# int	str		  # type
#-------------------------#
[ 0@0,	  "true"	  ]
[ 1@0,	  "TRUE"	  ]
[ 2@0,	  "FALSE"	  ]
[ 3@0,	  "false"	  ]
[ 4@0,	  ""		  ]
[ 5@0,	  nil		  ]
#-----------------#
# h	t	  # name
# int	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	true  ]
[ 2@0,	false  ]
[ 3@0,	  false	  ]
[ 4@0,	  nil	  ]
[ 5@0,	  nil	  ]

# 18:25:43 >  
# 18:25:43 >  Done.
# 18:25:43 >  

