stdout of test 'tst607` in directory 'src/mal` itself:


# 13:31:54 >  
# 13:31:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=32003 --set sql_port=41971 --set xquery_port=59185 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst607.mal < /dev/null
# 13:31:54 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## using spaces
#
#u:str:=const.take("user");
#io.printf("User bound to %s\n",u);
#roomnumber:= 321;
#const.deposit("roomnumber",roomnumber);
#
#v:int:= const.take("roomnumber");
#io.print(v);
#v:= 123;
#v:= v+1;
#const.release("roomnumber");
#io.print("attempt twice to release");
#const.release("roomnumber"); # failure? done twice or implicit take?
#
function user.main():void;
# using spaces 
    u:str  := const.take("user");
    io.printf("#User bound to %s\n",u);
    roomnumber := 321;
    const.deposit("roomnumber",roomnumber);
    v:int  := const.take("roomnumber");
    io.print(v);
    v:int  := 123;
    v:int  := calc.+(v,1);
    const.release("roomnumber");
    io.print("attempt twice to release");
    const.release("roomnumber");
# failure? done twice or implicit take? 
end main;
#User bound to 0
[ 321 ]
[ "attempt twice to release" ]

# 13:31:54 >  
# 13:31:54 >  Done.
# 13:31:54 >  

