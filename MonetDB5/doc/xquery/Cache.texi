@subsection Cache Policy
The @strong{document cache} holds recently accessed XML documents. It
is persistent accross Mserver sessions.
There is a @strong{caching policy} that determines whether and until when
a document that is loaded by an executing XQuery will stay in the cache.

An important parameter is the size of the cache. It is controlled by the 
@code{xquery_cacheMB} variable in the @code{MonetDB.conf}
file. This value is in megabytes (MB). From MIL, you can inspect (but 
not modify) these settings using:
@verbatim
  mil> env();
  #---------------------------------------------------------------#
  # h               t                                             # name
  # str             str                                           # type
  #---------------------------------------------------------------#
  [ "config",        "/home/boncz/MonetDB/Linux/etc/MonetDB.conf" ]
  
  ...lines omitted...
  
  [ "mapi_port",     "50000"                                      ]
  
  ...lines omitted...
  
  [ "xquery_output", "dm"                                         ]
  [ "xquery_cacheMB","100"                                        ]
  mil>
@end verbatim
To modify the settings, edit the @code{MonetDB.conf} file. Its exact
filepath location is listed under @code{"config"} in the same table.

Apart from the cache size, there are @strong{rules} that control the behavior
of the document cache.
A general rule is that MonetDB/XQuery @strong{always} caches file URIs. The
system uses the last-modified timestamp of the filesystem to guarantee that
when a query is run, the cached document is actual (if it has changed on disk,
the document is removed from the cache automatically, and is shredded anew).

Other caching @strong{lifetime-rules} can be added explicitly with the 
@code{xmlcache_add_rule("URI-prefix", seconds);} command. 
Such a rule states that all documents whose URI starts with the specified
prefix should be cached for a maximum amount of seconds (in case of
multiple lifetime rules prefix-matching and URI, the longets match counts). 

Such rules are persistent and remain in place until explicitly
revoked with @code{xmlcache_del_rule("URI-prefix");}.
The currently active set of lifetime rules can be inspected with:
@verbatim
  mil> xmlcache_print_rules();
  #---------------------------------#
  # URI-prefix    liftime-secs      # name
  # str           lng               # type
  #---------------------------------#
  mil>
@end verbatim
no rules, currently!

Below an example of how to add two lifetime rules:
@itemize
@item cache all HTTP URIs for 5 minutes.
@item cache all documents from @code{http://www.cwi.nl} for a month.
@end itemize
@verbatim
  mil> xmlcache_add_rule("http://", 300);
  mil> xmlcache_add_rule("http://www.cwi.nl", 30*24*60*60);
  mil> xmlcache_print_rules();
  #-----------------------------------------#
  # URI-prefix            liftime-secs      # name
  # str                   lng               # type
  #-----------------------------------------#
  [ "http://",              300             ]
  [ "http://www.cwi.nl",    2592000         ]
  mil>
@end verbatim
