@subsection Add Document
For example, to add the document @url{../../../files/HelloWorld.xml,HelloWorld.xml},
to the database try the following:

@verbatim
  > @value{mclient} -lmil
  # Monet Database Server V4.8.2
  # Copyright (c) 1993-2005, CWI. All rights reserved.
  # Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
  # Visit http://monetdb.cwi.nl/ for further information.
  mil>shred_doc("/.../HelloWorld.xml","HelloWorld.xml");
  mil>\q
@end verbatim

Using the MIL language switch of @value{mclient} you directly interact
with the server using the proprietary MonetDB server language.
The command line returns with a MapiClient prompt. 
On this prompt you can type the MIL-code and to 
quit @value{mclient}, you simply press the Ctrl-D key combination or
backslash-q.

@strong{Note:} all statements in MIL have to be terminated with a ';' (semi-colon).

@strong{Note:} you don't have to start a new MAPI session for each document you
want to shred. You can simply call @code{shred_doc(physical_name, logical_name)}
again during the same session.

A copy of the original document is now part of your persistent collection.
The second argument of  @code{shred_doc} is its logical name,
which should be unique within the collection. 
Now we are able to issue XQuery queries on the document in our collection 
using its logical name:

@verbatim
  doc("HelloWorld.xml")
@end verbatim

@strong{Note:} that issueing this XQuery should be done with 
@url{../APIs/MapiClient,@value{mclient} in XQuery mode}
(i.e. with option @code{-lxquery} instead of @code{-lmil}).


