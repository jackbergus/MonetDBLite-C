MonetDB/XQuery supports a wide range of the built-in functions described in
the <a href='http://www.w3.org/'>W3C</a> specifications. Here is a list of
functions that MonetDB/XQuery currently supports. Some functions are not yet
implemented, while others probably won't be implemented in the near future.</p>


<table> <tr><td style='color: green;'>yes</td><td><b>Order
Awareness</b><br/>MonetDB/XQuery correctly implements document and sequence
orders, as well as node identity.</td></tr> <tr><td style='color:
green;'>yes</td><td><b>XPath Location Steps</b><br/>MonetDB/XQuery implements
XQuery's <em>full axis feature</em>, i.e., we support all 12 XPath axes. Note,
however, that we do not support node tests on <em>type annotations</em> as
introduced with newer XQuery drafts.</td></tr>

<tr><td style='color: green;'>yes</td><td><b>FLWOR clauses</b><br/>We support
FLWOR clauses with full generality and arbitrary nesting, including positional
variables.</td></tr> <tr><td style='color: green;'>yes</td><td><b>Arithmetics,
Logics, Conditionals</b><br/>We support arithmetics, logics (<code>and</code>,
<code>or</code>), and conditionals (<code>some</code>/<code>every</code>,
<code>if-then-else</code>).</td></tr>

<tr><td style='color: brown;'>partly</td><td><b>Node Construction</b><br/>We
fully support element, attribute, and text constructors, at arbitrary nesting
depth. We have not implemented document, comment and processing-instruction
constructors, yet.</td></tr> <tr><td style='color:
green;'>yes</td><td><b>Namespaces</b><br/>MonetDB/XQuery fully supports
namespaces.</td></tr>

<tr><td style='color: green;'>yes</td><td><b>Schema
Import</b><br/>MonetDB/XQuery implements the <em>Schema Import</em> feature.
This is not well tested, though.</td></tr> 

<tr><td style='color: brown;'>partly</td><td><b>Module
Import</b><br/>MonetDB/XQuery implements the <em>Module Import</em> feature,
however its handling of recursive module imports is non-standard.
Most importantly, the W3C formal semantics specify that if a query (or a module) 
imports a module, only the variables and functions directly defined by that 
module will become visible to it. In MonetDB/XQuery, though, <b>all</b> namespaces, 
variables and functions that were imported by that module, will become visible.
Thus MonetDB/XQuery may encounter clashes (leading to errors), e.g. in namespace
identifiers, or funtion signature or variable names, that should not occur according
to the formal semantics.
</td></tr> 


<tr><td style='color:
brown;'>partly</td><td><b>XQuery Built-In Functions</b><br/>We support a large
set of built-in functions, as listed in our <a href='../Functions'>Function
Library</a>. We currently do <em>not</em> support functions that involve
specific collation orders, as well as functions that involve date/time
conversions.</td></tr>

<tr><td style='color: green;'>yes</td><td><b>User-Defined
Functions</b><br/>MonetDB/XQuery correctly deals with user-defined functions,
with or without recursion. Current development efforts will lead to an even
more efficient implementation that completely eliminates function call
overhead.</td></tr> <tr><td style='color: brown;'>partly</td><td><b>Simple
Types</b><br/>We currently support the XQuery simple types <tt>xs:integer</tt>,
<tt>xs:decimal</tt>, <tt>xs:double</tt>, <tt>xs:string</tt>, and
<tt>xs:boolean</tt>. Note that we currently implement <tt>xs:decimal</tt> as a
floating point number which may lead to rounding errors.</td></tr>

<tr><td style='color: green;'>yes</td><td><b>Static
Typing</b><br/>MonetDB/XQuery supports the <em>Static Typing</em> feature. (For
experts: we actually support <em>structural</em> typing here, using Antimirov's
algorithm.)</td></tr> <tr><td style='color: red;'>no</td><td><b>Dynamic
Typing</b><br/>Our implementation of XQuery's <code>typeswitch</code> clause is
still very limited. We currently allow type tests that can be decided at
compile time, and tests for <em>atomic</em> types. Note that the lack of
dynamic typing may also limit XQuery's casting functionalities.</td></tr>

<tr><td style='color: red;'>no</td><td><b>Validation</b><br/>MonetDB/XQuery
does not yet support validation, though work is underway to close that
gap.</td></tr> </table>


