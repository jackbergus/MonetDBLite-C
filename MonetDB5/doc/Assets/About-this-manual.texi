@chapter General Introduction
The MonetDB reference manual serves as the primary entry
point to locate information on its functionality,
system architecture, services, and best practices on using its components.

The manual is focussed on the features available in Version 5.
However, users of older versions may benefit from the sections
on e.g. SQL and the inner core of the system, because these
components are shared with Version 4.

The manual is produced from a Texinfo framework file, which collects
and organizes bits-and-pieces of information scattered around the many
source components comprising the MonetDB software family. 
The Texinfo file is turned into a HTML browse-able version using 
@emph{makeinfo} program. It can also be used to produce
a Postscript version using @emph{tex2dvi} followed by 
@emph{dvips}. The PDF version can be produced from the Postscript
using @emph{ps2pdf}.
Alternative formats, e.g. XML and DocBook format, can be
readily obtained from the Texinfo file.

The copyright(2005) on the MonetDB software, documentation,
and logo is owned by CWI.
Other trademarks and copyrights referred to in this manual are
the property of their respective owners.

@emph{Disclaimer} The reference manual is still under development,
much like the underlying source code base. This may lead to 
incomplete and inconsistencies descriptions,
for which we apologize in advance. You can help improving the manual
using the user commentary system included in the website.
@menu
* Intended audience::
* Get Going::
* Features and Limitations::
@menu
* When to consider MonetDB::
* When not to consider MonetDB::
* What are the MonetDB key features::
* Size limitations for MonetDB::
@end menu
* The History of MonetDB::
* Manual Generation::
* Software Versions::
* Conventions and Notation::
* Additional Resources::
@end menu

@node Intended audience, Get Going,General Introduction, Top
@section Intended Audience
The MonetDB reference manual is aimed at application developers and 
researchers with an intermediate level exposure to database technology,
its embedding in host environments such as C, Perl, Python, PHP,
or middleware solutions based on JDBC and ODBC.

The route towards becoming a database application expert is long
and tedious. It requires building experiences from small toy examples
towards large business critical application.
The MonetDB reference manual is not designed for this purpose,
but in combination with the abundance of tutorial articles on SQL-based
systems and the examples given here,
it should be possible to quickly create your first 
working MonetDB/SQL application.

The bulk of the MonetDB reference manual deals with the techniques
available in the back-end for the expert user and researcher.
Judicious use of the programming interfaces and database kernel modules for
domain specific tasks lead to high-performance solutions. 
The grand challenge for the MonetDB development team
is to assemble a sufficient and orthogonal set of partial solutions. 
Feedback on the current set is highly
appreciated, especially before you embark on a complex programming
project. If the envisioned functionality is generally applicable it makes
sense to contribute it to the community.
Share your comments, thoughts, and comments through the
@url{mailto:monetdb-users@@lists.sourceforge.net,MonetDB mailing list}
held at SourceForge.

@node Get Going, Features and Limitations, Intended audience, General Introduction
@section How to Read This Manual
The reference manual covers a lot of ground, which at first reading
may be slightly confusing. The material is presented in a top-down fashion,
starting at the SQL application layer, following the software stack
to discuss MAL at length,
to the low-level data structures and operations.
Forward references are included frequently to point into the right
direction for additional information.

First time users of MonetDB should read @ref{Download
and Installation} and @ref{SQL}. It prepares the ground to develop
applications using the SQL database language inter-galactica.
Advanced topics for application builders are covered in @ref{User
Interfaces}.

The query language @ref{XQuery} is intended for users
living at the edge of technology. It provides a functional
complete implementation of the XQuery and Xupdate standard.
Unfortunately, for the time being the XQuery compiler is only 
available for MonetDB Version 4.

If you are interested in technical details
of the MonetDB system, you should start reading @ref{MonetDB Overview}.
Two reading  tracks are possible. The @ref{MonetDB Assembler Language}
and subsequent sections describe the abstract machine and optimizers
to improve execution speed.
It is relevant for a better understanding of the query processing
behavior and provides an entry point to built new languages on top
of the database kernel. The description of the SQL to MAL compilation
provides a basis for developing your own language front-end.

The second track, The Inner Core describes the datastructures
and operations exploited in the abstract machine layer. This part
is essential for developers to aid in bug fixing and to
extend the kernel with new functionality. Its information covers
also the ground for MonetDB version 4.
For most readers, however, it can be skipped without causing
problems to develop efficient applications.
