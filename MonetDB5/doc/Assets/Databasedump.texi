@subsection Database Dumps
To safeguard and transport a SQL database produce
an @sc{ascii}-based database dump first
This option is standard available for the client programs.
However, be prepared that not all SQL schema features may be retained 
in the process. It also takes much more time to produce the dump file.

@include Assets/warning.texi
Consider you have already installed the SQL tutorial database @sc{voc}
and wish to transport it to another machine. The following steps are
required after you have started the database server.

@example
shell> mclient -lsql --dump >/tmp/voc.sql
@end example
You can inspect the file @sc{/tmp/voc.sql} to confirm that indeed
a compact database dump is available. Move this file over to the new
machine. The @sc{monetdb} script can be used to create the database
and start the server. Once done, it suffices to feed the dump file
to a MonetDB client program to populate the database.
@example
shell> monetdb --start --dbname=voc
....
shell> mclient -lsql /tmp/voc.sql
@end example

The dump facility is available as an option to the @sc{monetdb} script.
It tags the dump and stores it away in the checkpoint directory.

An alternative scheme is to start  a textual client
and type the following commands without any extra white space:
@example
sql>>path/to/dump.sql
sql>\D
sql>>
@end example

That is, first a line consisting of a greater than symbol followed by the absolu
te (!) path name of the file in which you want to store the dump. This will redi
rect future output to the file mentioned. Then a line consisting of just backsla
sh-capital D. This command does the actual dump which is, because of the previou
s line, stored in the dump file. And finally a line with just a greater than sym
bol. This closes the file and redirects the output again to the screen.

[Note: if you don't use the absolute path name of a file, the file is
created in the directory where the Client was started.
On Windows this is at the location where the program was installed,
and therefore using an absolute path name is highly recommended.]

