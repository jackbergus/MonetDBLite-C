@section Downloads and Installation

Using MonetDB for experimentation and application development
requires installation of the back-end server, a front-end compiler for
SQL or XQuery, the APIs, and a (graphical) user interface.
These components are packaged conveniently for several platforms in
the @url{http://sourceforge.net/project/showfiles.php?group_id=56967,download} section at SourceForge.

Most people prefer a standard distribution, `officially' declared as stable.
Stable means that special care has been taken to assure that errors reported
during the nightly builds have been solved on the platforms of interest.
Major bug fixes are also applied to the latest stable version, while functional
enhancements are kept for the next release or the daily builds.

If you encounter errors during the installation, please have a look at the
FAQ and @url{mailto:monetdb-users@@lists.sourceforge.net,MonetDB mailing list}
for common errors and some advice on how to proceed.

@menu
* Standard Distribution::
* Software Versions ::
* Source Distribution::
* Start and Stop the Server::
* Database Configuration ::
* Checkpoint and Recovery ::
* Database Dumps ::
@end menu
@node Standard Distribution, Software Versions, Download and Installation, Download and Installation
@subsection Standard Distribution

The standard distribution is meant for users primarilly interested
in building SQL or XQuery applications. They should obtain the
pre-packaged binary distribution from
the @url{http://sourceforge.net/project/showfiles.php?group_id=56967,download} section at SourceForge.
The system can be installed in a private directory for experimentation
or in the Linux/Windows compliant default folder location.

@c The choice between Version 4.9 and 5.0 should be planned carefully.
@c Both engines provide the same SQL functionality, but differ greatly
@c under the hood. Version 4.9 is based on the MIL scripting language,
@c which is known to be slow, and provides limited support for
@c query optimization and 
@c program development (e.g. a debugger). The MIL language becomes
@c depreciated as soon as the XQuery compiler has been ported.
@c Contrary, Version 5.0 provides an assembler like scripting language,
@c geared at supporting front-end apllication code generation. It is not
@c a language for programmers to write their applications on a daily basis.
@c This simplicity greatly enhances the parsing and interpretation
@c performance. Especially, small SQL queries run more than twice as fast.
@c For more details see @ref{Design Considerations}

The MonetDB code base evolves quickly with daily builds available for
users preferring living at the edge. Application developers, however,
may tune into the 
@url{mailto:monetdb-users@@lists.sourceforge.net,MonetDB mailing list}
to be warned when a major
release has become available, or when detected errors require a patch.

@c Before you embark upon application development, take the quick tour from
@c the tutorial section. It illustrates a small, but concrete application
@c scenario geared at querying a historical database with trading trips of the
@c world-famous East-Indian Trading Corp (1602-1795).
@node Software Versions, Source Distribution, Standard Distribution, Download and Installation
@subsection Software Versions
The MonetDB product family consists of several related packages.
The versions and their dependencies is described at the
download site kept
at @url{http://sourceforge.net/projects/monetdb,SourceForge}.

These packages should be installed in the proper order, 
starting with the @code{buildtools}, followed by the MonetDB Version 4
kernel, the Version 5 kernel, and finally the front-end compilers SQL and XQuery.

@c software portability issues
From its inception, the MonetDB software has been designed to
meet the highest level of standards regarding software portability.
The interface to the operating system is based on the POSIX standard.
The default C-compilation options are strict, considering all compiler
warnings as fatal. String and memory manipulation are all guarded against
overflows. This with multi-year deployment
in a commercial setting makes the code base robust.

@c what are the platforms supported
Thanks to the GNU @sc{autoconf}  and @sc{automake} tools,
the MonetDB software runs on a wide variety of hardware/software platforms.
@c A summary of those operating systems and the compiler toolkits is shown below.
@c 
@c @multitable @columnfractions 0.25 0.1 0.7
@c @headitem Operating System @tab Word size @tab Compilers
@c @item Microsoft@tab 32 bits @tab Windows XP, Windows Server 2003
@c @item Cygwin (Windows) @tab 32 bits @tab GNU
@c @item Gentoo (Linux 2.6.14) @tab 32 bits @tab GNU
@c @item Fedora Core  4 @tab 64 bits @tab GNU, Intel
@c @item Fedora Core 3 @tab 64 bits @tab GNU, Intel
@c @item RedHat EL WS @tab 64 bits @tab GNU, Intel
@c @item Debian 3.0 @tab 64 bits @tab GNU, PGI
@c @item Suse 9.3 @tab 64 bits @tab GNU, Intel
@c @item MacOS X 10.4 (Darwin 8.2.0) @tab 32 bits @tab GNU
@c @item AIX 5.1 @tab 32 bits @tab GNU, IBM
@c @item IRIX 64 6.5 @tab 32,64 bits @tab GNU, SGI
@c @item Solaris 8 (SunOS 5.8) @tab 32,64 bits @tab GNU, Sun
@c @item OpenZaurus @tab 32 bits @tab GNU (cross)
@c @item Gumstix @tab 32 bits @tab GNU (cross)
@c @item LinkStation @tab 32 bits @tab GNU (cross)
@c @end multitable

The MonetDB development team uses many of the platforms available to perform
automated nightly regression testing. For more details
see @url{http://monetdb.cwi.nl/Development/TestWeb/index.html,The Test Web}.

