@subsection Checkpoint and Recovery
Safeguarding the content of your database requires carefully planned steps.
The easiest way is to shutdown the server first.
Then the database directory holding the database can be compressed
and stored away. You may want to create a tarball with compressed
files and name them clearly for later recall.

The checkpoint is not complete without the corresponding log files
produced by SQL. They are stored by default in a mirror directory
of @sc{dbfarm}, called @sc{dblogs}. They should also be picked up
and safeguarded for future use.

On Linux platforms the checkpoint and recover operations are 
packaged as shell scripts, which are wrapped by the @sc{monetdb} script.
Taking a checkpoint and its recovery is as simple as:
@example
shell>monetdb --checkpoint --dbname=demo
Checkpoint store .../var/MonetDB5/chkpnt
Preparing checkpoint file 'demo/2006-01-02-223704'
Preparing checkpoint log file 'demo/2006-01-02-223704-logs'

shell>monetdb --recover --dbname=demo
Checkpoint tags defined for 'demo'
2006-01-02-224335
2006-01-02-224233
...
Specify the checkpoint tag for 'demo' ? 2006-01-02-224335
Move existing database out of the way 'demo2006-01-02-224416'
Move existing database logs out of the way 'demo2006-01-02-224416'
Restore from store .../var/MonetDB5/chkpnt
Reload checkpoint file 'demo/2006-01-02-224335'
Reload checkpoint log file 'demo/2006-01-02-224335-logs'
Database recovery finished
@end example
Before the checkpoint operation starts the database server is brought down
and restarted afterwards.
The checkpoint files are stored away in a path specified in the
database configuration file. 
