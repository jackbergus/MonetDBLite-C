stdout of test 'memo02` in directory 'monetdb5/scheduler` itself:


# 22:34:44 >  
# 22:34:44 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=32539 --set xrpc_port=46725 --set monet_prompt= --trace --dbname=mTests_src_scheduler  memo02.mal < /dev/null
# 22:34:44 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_scheduler
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:37931/
function user.main():void;
# The first memo driven execution 
# use a generic cost function 
    A := bat.new(:oid,:oid);
    bat.append(A,1@0);
    B := algebra.copy(A);
    bat.setWriteMode(B);
    bat.append(B,2@0);
    C := algebra.copy(B);
    bat.setWriteMode(C);
    bat.append(C,3@0);
    D := algebra.copy(C);
    bat.setWriteMode(D);
    bat.append(D,3@0);
    scheduler.choice();
    T1 := algebra.leftfetchjoin(A,B);
    T2 := algebra.leftfetchjoin(B,C);
    T3 := algebra.leftfetchjoin(C,D);
    scheduler.choice("getVolume",T1,T2,T3);
    T4 := algebra.leftfetchjoin(T1,C);
    T5 := algebra.leftfetchjoin(A,T2);
    T6 := algebra.leftfetchjoin(T2,D);
    T7 := algebra.leftfetchjoin(B,T3);
    T8 := algebra.leftfetchjoin(C,D);
    scheduler.choice("getVolume",T4,T5,T6,T7,T8);
    T9 := algebra.leftfetchjoin(T4,D);
    T10 := algebra.leftfetchjoin(T5,D);
    T11 := algebra.leftfetchjoin(A,T6);
    T12 := algebra.leftfetchjoin(A,T7);
    T13 := algebra.leftfetchjoin(T1,T8);
    scheduler.choice("getVolume",T9,T10,T11,T12,T13);
    answer := scheduler.pick(T9,T10,T11,T12,T13);
    io.print(answer);
end main;
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  3@0	  ]

# 22:34:44 >  
# 22:34:44 >  Done.
# 22:34:44 >  

