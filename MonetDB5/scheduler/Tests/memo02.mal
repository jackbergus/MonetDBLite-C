# The first memo driven execution
# use a generic cost function

	A:= bat.new(:oid,:oid);
	bat.append(A,1@0);
	B:= algebra.copy(A);
	bat.setWriteMode(B);
	bat.append(B,2@0);
	C:= algebra.copy(B);
	bat.setWriteMode(C);
	bat.append(C,3@0);
	D:= algebra.copy(C);
	bat.setWriteMode(D);
	bat.append(D,3@0);

	scheduler.choice();
	T1:= algebra.leftfetchjoin(A,B);
	T2:= algebra.leftfetchjoin(B,C);
	T3:= algebra.leftfetchjoin(C,D);
	scheduler.choice("getVolume",T1,T2,T3);

	T4:= algebra.leftfetchjoin(T1,C);
	T5:= algebra.leftfetchjoin(A,T2);
	T6:= algebra.leftfetchjoin(T2,D);
	T7:= algebra.leftfetchjoin(B,T3);
	T8:= algebra.leftfetchjoin(C,D);
	scheduler.choice("getVolume",T4,T5,T6,T7,T8);

	T9:= algebra.leftfetchjoin(T4,D);
	T10:= algebra.leftfetchjoin(T5,D);
	T11:= algebra.leftfetchjoin(A,T6);
	T12:= algebra.leftfetchjoin(A,T7);
	T13:= algebra.leftfetchjoin(T1,T8);
	scheduler.choice("getVolume",T9,T10,T11,T12,T13);
	answer:= scheduler.pick(T9,T10,T11,T12,T13);
	io.print(answer);
