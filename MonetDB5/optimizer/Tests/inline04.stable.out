stdout of test 'inline04` in directory 'monetdb5/optimizer` itself:


# 18:00:43 >  
# 18:00:43 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=34223 --set xrpc_port=43286 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline04.mal
# 18:00:43 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39909/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-2983/.s.monetdb.39909
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
#WARNING To speedup user.foo a bulk operator implementation is needed
#    z:bat[:oid,:int] := mal.multiplex("user":str,"foo":str,b:any,b:any);
#WARNING To speedup user.foo a bulk operator implementation is needed
#    z:bat[:oid,:int] := mal.multiplex("user":str,"foo":str,b:bat[:oid,:int],b:bat[:oid,:int]);
#WARNING To speedup user.foo a bulk operator implementation is needed
#    z:bat[:oid,:int] := mal.multiplex("user":str,"foo":str,b:bat[:oid,:int],2:int);

# 15:49:03 >  
# 15:49:03 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-29846" "--port=34870"
# 15:49:03 >  

#	mdb.List("user","qry");
function user.qry():void;               	#[0]  0 
    b:bat[:oid,:int] := bat.new(:oid,:int);	#[1] CMDBATnew 1 <- 2 3 
    bat.append(b:bat[:oid,:int],1:int); 	#[2] BKCappend_val_wrap 4 <- 1 5 
    X_11:bat[:oid,:int] := bat.new(nil:oid,nil:int);	#[3] CMDBATnew 11 <- 12 13 
barrier (X_15:oid,X_16:int) := iterator.new(b:bat[:oid,:int]);	#[4] ITRbunIterator 15 16 <- 1 
    X_36:int := calc.+(X_16:int,X_16:int);	#[5] CMDvarADDsignal 36 <- 16 16 
    X_37:int := 1:int;                  	#[6]  37 <- 38 
barrier X_39:bit := true:bit;           	#[7]  39 <- 40 
    X_36:int := calc.*(X_36:int,X_36:int);	#[8] CMDvarMULsignal 36 <- 36 36 
    X_37:int := calc.+(X_37:int,1:int); 	#[9] CMDvarADDsignal 37 <- 37 38 
    redo X_39:bit := calc.<(X_37:int,3:int);	#[10] CMDvarLT 39 <- 37 41 
exit X_39:bit;                          	#[11]  39 
    X_18:int := X_36:int;               	#[12]  18 <- 36 
    bat.append(X_11:bat[:oid,:int],X_18:int);	#[13] BKCappend_val_wrap 19 <- 11 18 
    redo (X_15:oid,X_16:int) := iterator.next(b:bat[:oid,:int]);	#[14] ITRbunNext 15 16 <- 1 
exit (X_15:oid,X_16:int);               	#[15]  15 16 
    z:bat[:oid,:int] := X_11:bat[:oid,:int];	#[16]  6 <- 11 
    X_23:bat[:oid,:int] := bat.new(nil:oid,nil:int);	#[17] CMDBATnew 23 <- 12 13 
barrier (X_25:oid,X_26:int) := iterator.new(b:bat[:oid,:int]);	#[18] ITRbunIterator 25 26 <- 1 
    X_45:int := calc.+(X_26:int,2:int); 	#[19] CMDvarADDsignal 45 <- 26 10 
    X_46:int := 1:int;                  	#[20]  46 <- 38 
barrier X_47:bit := true:bit;           	#[21]  47 <- 40 
    X_45:int := calc.*(X_45:int,X_45:int);	#[22] CMDvarMULsignal 45 <- 45 45 
    X_46:int := calc.+(X_46:int,1:int); 	#[23] CMDvarADDsignal 46 <- 46 38 
    redo X_47:bit := calc.<(X_46:int,3:int);	#[24] CMDvarLT 47 <- 46 41 
exit X_47:bit;                          	#[25]  47 
    X_28:int := X_45:int;               	#[26]  28 <- 45 
    bat.append(X_23:bat[:oid,:int],X_28:int);	#[27] BKCappend_val_wrap 29 <- 23 28 
    redo (X_25:oid,X_26:int) := iterator.next(b:bat[:oid,:int]);	#[28] ITRbunNext 25 26 <- 1 
exit (X_25:oid,X_26:int);               	#[29]  25 26 
    z:bat[:oid,:int] := X_23:bat[:oid,:int];	#[30]  6 <- 23 
end user.qry;                           	#[31]  

# 18:00:43 >  
# 18:00:43 >  Done.
# 18:00:43 >  

