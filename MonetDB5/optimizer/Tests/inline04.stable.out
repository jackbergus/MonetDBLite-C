stdout of test 'inline04` in directory 'monetdb5/optimizer` itself:


# 18:00:43 >  
# 18:00:43 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=34223 --set xrpc_port=43286 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline04.mal
# 18:00:43 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39909/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-2983/.s.monetdb.39909
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 15:49:03 >  
# 15:49:03 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-29846" "--port=34870"
# 15:49:03 >  

function user.qry():void;               	#[0] (0)  0 
    b:bat[:int] := bat.new(:oid,:int);  	#[1] (0) CMDBATnew 1 <- 2 3 
    bat.append(b:bat[:int],1:int);      	#[2] (0) BKCappend_val_wrap 4 <- 1 5 
    X_15:bat[:int] := batcalc.+(b:bat[:int],b:bat[:int]);	#[3] (0) CMDbatADDsignal 15 <- 1 1 
    X_16:int := 1:int;                  	#[4] (0)  16 <- 5 
barrier X_17:bit := true:bit;           	#[5] (0)  17 <- 18 
    X_15:bat[:int] := batcalc.*(X_15:bat[:int],X_15:bat[:int]);	#[6] (0) CMDbatMULsignal 15 <- 15 15 
    X_16:int := calc.+(X_16:int,1:int); 	#[7] (0) CMDvarADDsignal 16 <- 16 5 
    redo X_17:bit := calc.<(X_16:int,3:int);	#[8] (0) CMDvarLT 17 <- 16 19 
exit X_17:bit;                          	#[9] (0)  17 
    z:bat[:int] := X_15:bat[:int];      	#[10] (0)  6 <- 15 
    X_25:bat[:int] := batcalc.+(b:bat[:int],2:int);	#[11] (0) CMDbatADDsignal 25 <- 1 10 
    X_26:int := 1:int;                  	#[12] (0)  26 <- 5 
barrier X_27:bit := true:bit;           	#[13] (0)  27 <- 18 
    X_25:bat[:int] := batcalc.*(X_25:bat[:int],X_25:bat[:int]);	#[14] (0) CMDbatMULsignal 25 <- 25 25 
    X_26:int := calc.+(X_26:int,1:int); 	#[15] (0) CMDvarADDsignal 26 <- 26 5 
    redo X_27:bit := calc.<(X_26:int,3:int);	#[16] (0) CMDvarLT 27 <- 26 19 
exit X_27:bit;                          	#[17] (0)  27 
    z:bat[:int] := X_25:bat[:int];      	#[18] (0)  6 <- 25 
end user.qry;                           	#[19] (0)  

# 18:00:43 >  
# 18:00:43 >  Done.
# 18:00:43 >  

