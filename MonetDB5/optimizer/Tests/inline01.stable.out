stdout of test 'inline01` in directory 'monetdb5/optimizer` itself:


# 00:18:07 >  
# 00:18:07 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31500 --set xrpc_port=46952 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline01.mal
# 00:18:07 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.help{inline}():void;
    b := bat.new(:oid,:int);
    c := bat.new(:oid,:int);
    z:int  := 1;
    bat.append(b,1);
barrier (x,z:int) := iterator.new(b);
    io.print(x);
catch MALException:str;
exit MALException:str;
exit (x,z:int);
barrier (x,z:int) := iterator.new(c);
    io.print(x);
    redo (x,z:int) := iterator.next(c);
catch MALException:str;
exit MALException:str;
exit (x,y,z:int);
end user.help;
function user.qry1{inline}():void;
    user.help();
end user.qry1;
function user.qry():void;
    user.qry1();
end user.qry;
function user.main():void;
    mdb.List("user","qry");
end user.main;
function user.qry():void;
    X_5:bat[:oid,:int] := bat.new(:oid,:int);
    X_8:bat[:oid,:int] := bat.new(:oid,:int);
    X_9:int := 1:int;
    bat.append(X_5:bat[:oid,:int],1:int);
barrier (X_12:oid,X_9:int) := iterator.new(X_5:bat[:oid,:int]);
    io.print(X_12:oid);
catch MALException:str;
exit MALException:str;
exit (X_12:oid,X_9:int);
barrier (X_12:oid,X_9:int) := iterator.new(X_8:bat[:oid,:int]);
    io.print(X_12:oid);
    redo (X_12:oid,X_9:int) := iterator.next(X_8:bat[:oid,:int]);
catch MALException:str;
exit MALException:str;
exit (X_12:oid,X_16:any,X_9:int);
end user.qry;

# 00:18:07 >  
# 00:18:07 >  Done.
# 00:18:07 >  

