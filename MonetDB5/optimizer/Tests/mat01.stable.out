stdout of test 'mat01` in directory 'src/optimizer` itself:


# 11:53:46 >  
# 11:53:46 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39582 --set sql_port=44122 --set xquery_port=52828 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat01.mal < /dev/null
# 11:53:46 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## select count(*) from tables
#include sql;
#mdb.list();
##   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2);
## bind the two components separately
##   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
## simulate the SQL behavior
#    v2v0:= bat.new(:void,:int);
#    bat.insert(v2v0,nil,0);
#    v2v1:= bat.new(:void,:int);
#    bat.insert(v2v1,nil,1);
#    v2v2:= bat.new(:void,:int);
#    bat.insert(v2v2,nil,2);
#    v2 := mat.new(v2v0,v2v1,v2v2);
#
##   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);
#    v23:= bat.new(:void,:int);
#    bat.insert(v23,nil,3);
#
##   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);
#    v8:= bat.new(:void,:oid);
#  
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#    v17 := algebra.markT(v12,0@0);
#    v19 := bat.reverse(v17);
#    v21 := algebra.join(v19,v2);
#
##   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);
#    v26:= bat.new(:void,:oid);
#
#    v28 := bat.reverse(v26);
#    v30 := algebra.kdifference(v23,v28);
#    v34 := algebra.markT(v30,0@0);
#    v36 := bat.reverse(v34);
#    v38 := algebra.join(v36,v23);
#    v40 := bat.setAccess(v21,"w");
#    bat.append(v40,v38);
#    v47 := algebra.markT(v40,0@0);
#    v49 := bat.reverse(v47);
#    v51 := algebra.join(v49,v40);
#    v56 := algebra.markT(v51,0@0);
#    v58 := bat.reverse(v56);
#    v60 := algebra.join(v58,v51);
#    v62 := aggr.count(v60);
##   sql.exportValue(3,"tables","countvid","int",32,0,6,v62);
#	io.print(v62);
#
#optimizer.multitable();
#
#
function user.main():void;	# 0  (main:void)
# select count(*) from tables 	# 1  (_1:str)
    mdb.list();	# 2 MDBlist (_2:void)
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 	# 3  (_3:str)
# bind the two components separately 	# 4  (_4:str)
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 5  (_5:str)
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 6  (_6:str)
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 7  (_7:str)
# simulate the SQL behavior 	# 8  (_8:str)
    v2v0 := bat.new(:void,:int);	# 9 CMDBATnew (v2v0:bat[:void,:int])<-(_10:void)(_11:int)
    bat.insert(v2v0,nil,0);	# 10 BKCinsert_bun (_12:void)<-(v2v0:bat[:void,:int])(_13:void)(_14:int)
    v2v1 := bat.new(:void,:int);	# 11 CMDBATnew (v2v1:bat[:void,:int])<-(_10:void)(_11:int)
    bat.insert(v2v1,nil,1);	# 12 BKCinsert_bun (_16:void)<-(v2v1:bat[:void,:int])(_13:void)(_17:int)
    v2v2 := bat.new(:void,:int);	# 13 CMDBATnew (v2v2:bat[:void,:int])<-(_10:void)(_11:int)
    bat.insert(v2v2,nil,2);	# 14 BKCinsert_bun (_19:void)<-(v2v2:bat[:void,:int])(_13:void)(_20:int)
    v2 := mat.new(v2v0,v2v1,v2v2);	# 15 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])(v2v2:bat[:void,:int])
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 	# 16  (_22:str)
    v23 := bat.new(:void,:int);	# 17 CMDBATnew (v23:bat[:void,:int])<-(_10:void)(_11:int)
    bat.insert(v23,nil,3);	# 18 BKCinsert_bun (_24:void)<-(v23:bat[:void,:int])(_13:void)(_25:int)
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 	# 19  (_26:str)
    v8 := bat.new(:void,:oid);	# 20 CMDBATnew (v8:bat[:void,:oid])<-(_10:void)(_28:oid)
    v10 := bat.reverse(v8);	# 21 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _55 := algebra.kdifference(v2v0,v10);	# 22 ALGkdiff (_55:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _56 := algebra.kdifference(v2v1,v10);	# 23 ALGkdiff (_56:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    _57 := algebra.kdifference(v2v2,v10);	# 24 ALGkdiff (_57:bat[:oid,:int])<-(v2v2:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_55,_56,_57);	# 25 MATnew (v12:bat[:oid,:int])<-(_55:bat[:oid,:int])(_56:bat[:oid,:int])(_57:bat[:oid,:int])
    _58 := algebra.markT(_55,0@0);	# 26 ALGtmark (_58:bat[:oid,:void])<-(_55:bat[:oid,:int])(_32:oid)
    _59 := algebra.markT(_56,0@0);	# 27 ALGtmark (_59:bat[:oid,:void])<-(_56:bat[:oid,:int])(_32:oid)
    _60 := algebra.markT(_57,0@0);	# 28 ALGtmark (_60:bat[:oid,:void])<-(_57:bat[:oid,:int])(_32:oid)
    v17 := mat.new(_58,_59,_60);	# 29 MATnew (v17:bat[:oid,:void])<-(_58:bat[:oid,:void])(_59:bat[:oid,:void])(_60:bat[:oid,:void])
    _61 := bat.reverse(_58);	# 30 BKCreverse (_61:bat[:void,:oid])<-(_58:bat[:oid,:void])
    _62 := bat.reverse(_59);	# 31 BKCreverse (_62:bat[:void,:oid])<-(_59:bat[:oid,:void])
    _63 := bat.reverse(_60);	# 32 BKCreverse (_63:bat[:void,:oid])<-(_60:bat[:oid,:void])
    v19 := mat.new(_61,_62,_63);	# 33 MATnew (v19:bat[:void,:oid])<-(_61:bat[:void,:oid])(_62:bat[:void,:oid])(_63:bat[:void,:oid])
    v19 := mat.pack(_61,_62,_63);	# 34 MATpack (v19:bat[:void,:oid])<-(_61:bat[:void,:oid])(_62:bat[:void,:oid])(_63:bat[:void,:oid])
    _64 := algebra.join(v19,v2v0);	# 35 ALGjoin (_64:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v0:bat[:void,:int])
    _65 := algebra.join(v19,v2v1);	# 36 ALGjoin (_65:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v1:bat[:void,:int])
    _66 := algebra.join(v19,v2v2);	# 37 ALGjoin (_66:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v2:bat[:void,:int])
    v21 := mat.new(_64,_65,_66);	# 38 MATnew (v21:bat[:void,:int])<-(_64:bat[:void,:int])(_65:bat[:void,:int])(_66:bat[:void,:int])
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 	# 39  (_35:str)
    v26 := bat.new(:void,:oid);	# 40 CMDBATnew (v26:bat[:void,:oid])<-(_10:void)(_28:oid)
    v28 := bat.reverse(v26);	# 41 BKCreverse (v28:bat[:oid,:void])<-(v26:bat[:void,:oid])
    v30 := algebra.kdifference(v23,v28);	# 42 ALGkdiff (v30:bat[:oid,:int])<-(v23:bat[:void,:int])(v28:bat[:oid,:void])
    v34 := algebra.markT(v30,0@0);	# 43 ALGtmark (v34:bat[:oid,:void])<-(v30:bat[:oid,:int])(_32:oid)
    v36 := bat.reverse(v34);	# 44 BKCreverse (v36:bat[:void,:oid])<-(v34:bat[:oid,:void])
    v38 := algebra.join(v36,v23);	# 45 ALGjoin (v38:bat[:void,:int])<-(v36:bat[:void,:oid])(v23:bat[:void,:int])
    _67 := bat.setAccess(_64,"w");	# 46 BKCsetAccess (_67:bat[:void,:int])<-(_64:bat[:void,:int])(_43:str)
    _68 := bat.setAccess(_65,"w");	# 47 BKCsetAccess (_68:bat[:void,:int])<-(_65:bat[:void,:int])(_43:str)
    _69 := bat.setAccess(_66,"w");	# 48 BKCsetAccess (_69:bat[:void,:int])<-(_66:bat[:void,:int])(_43:str)
    v40 := mat.new(_67,_68,_69);	# 49 MATnew (v40:bat[:void,:int])<-(_67:bat[:void,:int])(_68:bat[:void,:int])(_69:bat[:void,:int])
    bat.append(_69,v38);	# 50 BKCbat_append_void_bat_wrap (_70:void)<-(_69:bat[:void,:int])(v38:bat[:void,:int])
    _71 := algebra.markT(_67,0@0);	# 51 ALGtmark (_71:bat[:oid,:void])<-(_67:bat[:void,:int])(_32:oid)
    _72 := algebra.markT(_68,0@0);	# 52 ALGtmark (_72:bat[:oid,:void])<-(_68:bat[:void,:int])(_32:oid)
    _73 := algebra.markT(_69,0@0);	# 53 ALGtmark (_73:bat[:oid,:void])<-(_69:bat[:void,:int])(_32:oid)
    v47 := mat.new(_71,_72,_73);	# 54 MATnew (v47:bat[:oid,:void])<-(_71:bat[:oid,:void])(_72:bat[:oid,:void])(_73:bat[:oid,:void])
    _74 := bat.reverse(_71);	# 55 BKCreverse (_74:bat[:void,:oid])<-(_71:bat[:oid,:void])
    _75 := bat.reverse(_72);	# 56 BKCreverse (_75:bat[:void,:oid])<-(_72:bat[:oid,:void])
    _76 := bat.reverse(_73);	# 57 BKCreverse (_76:bat[:void,:oid])<-(_73:bat[:oid,:void])
    v49 := mat.new(_74,_75,_76);	# 58 MATnew (v49:bat[:void,:oid])<-(_74:bat[:void,:oid])(_75:bat[:void,:oid])(_76:bat[:void,:oid])
    v49 := mat.pack(_74,_75,_76);	# 59 MATpack (v49:bat[:void,:oid])<-(_74:bat[:void,:oid])(_75:bat[:void,:oid])(_76:bat[:void,:oid])
    _77 := algebra.join(v49,_67);	# 60 ALGjoin (_77:bat[:void,:int])<-(v49:bat[:void,:oid])(_67:bat[:void,:int])
    _78 := algebra.join(v49,_68);	# 61 ALGjoin (_78:bat[:void,:int])<-(v49:bat[:void,:oid])(_68:bat[:void,:int])
    _79 := algebra.join(v49,_69);	# 62 ALGjoin (_79:bat[:void,:int])<-(v49:bat[:void,:oid])(_69:bat[:void,:int])
    v51 := mat.new(_77,_78,_79);	# 63 MATnew (v51:bat[:void,:int])<-(_77:bat[:void,:int])(_78:bat[:void,:int])(_79:bat[:void,:int])
    _80 := algebra.markT(_77,0@0);	# 64 ALGtmark (_80:bat[:oid,:void])<-(_77:bat[:void,:int])(_32:oid)
    _81 := algebra.markT(_78,0@0);	# 65 ALGtmark (_81:bat[:oid,:void])<-(_78:bat[:void,:int])(_32:oid)
    _82 := algebra.markT(_79,0@0);	# 66 ALGtmark (_82:bat[:oid,:void])<-(_79:bat[:void,:int])(_32:oid)
    v56 := mat.new(_80,_81,_82);	# 67 MATnew (v56:bat[:oid,:void])<-(_80:bat[:oid,:void])(_81:bat[:oid,:void])(_82:bat[:oid,:void])
    _83 := bat.reverse(_80);	# 68 BKCreverse (_83:bat[:void,:oid])<-(_80:bat[:oid,:void])
    _84 := bat.reverse(_81);	# 69 BKCreverse (_84:bat[:void,:oid])<-(_81:bat[:oid,:void])
    _85 := bat.reverse(_82);	# 70 BKCreverse (_85:bat[:void,:oid])<-(_82:bat[:oid,:void])
    v58 := mat.new(_83,_84,_85);	# 71 MATnew (v58:bat[:void,:oid])<-(_83:bat[:void,:oid])(_84:bat[:void,:oid])(_85:bat[:void,:oid])
    v58 := mat.pack(_83,_84,_85);	# 72 MATpack (v58:bat[:void,:oid])<-(_83:bat[:void,:oid])(_84:bat[:void,:oid])(_85:bat[:void,:oid])
    _86 := algebra.join(v58,_77);	# 73 ALGjoin (_86:bat[:void,:int])<-(v58:bat[:void,:oid])(_77:bat[:void,:int])
    _87 := algebra.join(v58,_78);	# 74 ALGjoin (_87:bat[:void,:int])<-(v58:bat[:void,:oid])(_78:bat[:void,:int])
    _88 := algebra.join(v58,_79);	# 75 ALGjoin (_88:bat[:void,:int])<-(v58:bat[:void,:oid])(_79:bat[:void,:int])
    v60 := mat.new(_86,_87,_88);	# 76 MATnew (v60:bat[:void,:int])<-(_86:bat[:void,:int])(_87:bat[:void,:int])(_88:bat[:void,:int])
    v62 := 0;	# 77  (v62:int)<-(_89:int)
    _90 := aggr.count(_86);	# 78 ALGcount_bat (_90:int)<-(_86:bat[:void,:int])
    v62 := calc.+(v62,_90);	# 79 CALCbinaryADDintint (v62:int)<-(v62:int)(_90:int)
    _91 := aggr.count(_87);	# 80 ALGcount_bat (_91:int)<-(_87:bat[:void,:int])
    v62 := calc.+(v62,_91);	# 81 CALCbinaryADDintint (v62:int)<-(v62:int)(_91:int)
    _92 := aggr.count(_88);	# 82 ALGcount_bat (_92:int)<-(_88:bat[:void,:int])
    v62 := calc.+(v62,_92);	# 83 CALCbinaryADDintint (v62:int)<-(v62:int)(_92:int)
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 	# 84  (_52:str)
    io.print(v62);	# 85 IOprint_val (_53:int)<-(v62:int)
end main;	# 86  
function user.main():void;
    mdb.list();
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 
# bind the two components separately 
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
# simulate the SQL behavior 
    v2v0 := bat.new(:void,:int);
    bat.insert(v2v0,nil,0);
    v2v1 := bat.new(:void,:int);
    bat.insert(v2v1,nil,1);
    v2v2 := bat.new(:void,:int);
    bat.insert(v2v2,nil,2);
    v2 := mat.new(v2v0,v2v1,v2v2);
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 
    v23 := bat.new(:void,:int);
    bat.insert(v23,nil,3);
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 
    v8 := bat.new(:void,:oid);
    v10 := bat.reverse(v8);
    _55 := algebra.kdifference(v2v0,v10);
    _56 := algebra.kdifference(v2v1,v10);
    _57 := algebra.kdifference(v2v2,v10);
    v12 := mat.new(_55,_56,_57);
    _58 := algebra.markT(_55,0@0);
    _59 := algebra.markT(_56,0@0);
    _60 := algebra.markT(_57,0@0);
    v17 := mat.new(_58,_59,_60);
    _61 := bat.reverse(_58);
    _62 := bat.reverse(_59);
    _63 := bat.reverse(_60);
    v19 := mat.new(_61,_62,_63);
    v19 := mat.pack(_61,_62,_63);
    _64 := algebra.join(v19,v2v0);
    _65 := algebra.join(v19,v2v1);
    _66 := algebra.join(v19,v2v2);
    v21 := mat.new(_64,_65,_66);
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 
    v26 := bat.new(:void,:oid);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    _67 := bat.setAccess(_64,"w");
    _68 := bat.setAccess(_65,"w");
    _69 := bat.setAccess(_66,"w");
    v40 := mat.new(_67,_68,_69);
    bat.append(_69,v38);
    _71 := algebra.markT(_67,0@0);
    _72 := algebra.markT(_68,0@0);
    _73 := algebra.markT(_69,0@0);
    v47 := mat.new(_71,_72,_73);
    _74 := bat.reverse(_71);
    _75 := bat.reverse(_72);
    _76 := bat.reverse(_73);
    v49 := mat.new(_74,_75,_76);
    v49 := mat.pack(_74,_75,_76);
    _77 := algebra.join(v49,_67);
    _78 := algebra.join(v49,_68);
    _79 := algebra.join(v49,_69);
    v51 := mat.new(_77,_78,_79);
    _80 := algebra.markT(_77,0@0);
    _81 := algebra.markT(_78,0@0);
    _82 := algebra.markT(_79,0@0);
    v56 := mat.new(_80,_81,_82);
    _83 := bat.reverse(_80);
    _84 := bat.reverse(_81);
    _85 := bat.reverse(_82);
    v58 := mat.new(_83,_84,_85);
    v58 := mat.pack(_83,_84,_85);
    _86 := algebra.join(v58,_77);
    _87 := algebra.join(v58,_78);
    _88 := algebra.join(v58,_79);
    v60 := mat.new(_86,_87,_88);
    v62 := 0;
    _90 := aggr.count(_86);
    v62 := calc.+(v62,_90);
    _91 := aggr.count(_87);
    v62 := calc.+(v62,_91);
    _92 := aggr.count(_88);
    v62 := calc.+(v62,_92);
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 
    io.print(v62);
end main;
[ 0 ]

# 11:53:46 >  
# 11:53:46 >  Done.
# 11:53:46 >  

