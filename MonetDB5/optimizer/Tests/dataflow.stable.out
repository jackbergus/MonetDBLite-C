stdout of test 'dataflow` in directory 'monetdb5/optimizer` itself:


# 18:05:39 >  
# 18:05:39 >   mserver5  --debug=10 --set gdk_nr_threads=0  --set "gdk_dbfarm=/ufs/mk/Aug2011//Linux/var/MonetDB" --set mapi_open=true --set mapi_port=32759 --set monet_prompt= --trace --forcemito --set mal_listing=2  --dbname=mTests_optimizer  dataflow.mal
# 18:05:39 >  

# MonetDB 5 server v11.5.0
# This is an unreleased version
# Serving database 'mTests_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.749 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32759/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 07:59:33 >  
# 07:59:33 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-23820" "--port=35704"
# 07:59:33 >  

function user.tst():void;               	#[0] (0)  0 
barrier X_35:bit := language.dataflow();	#[1] (0) MALstartDataflow 35 
    s:bat[:int] := microbenchmark.uniform(0@0:oid, 100000:lng, 100000:int);	#[2] (0) MBMuniform 1 <- 2 3 4 
    l:int := aggr.min(s:bat[:int]);     	#[3] (0) ALGminany 5 <- 1 
    h:int := l:int;                     	#[4] (0)  6 <- 5 
#mdb.setTimer(true);                    
#mdb.setThread(true);                   
    z:bat[:oid] := nil:bat[:oid];       	#[7] (0)  9 <- 10 
    t1:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[8] (0) ALGselect2 11 <- 1 12 5 6 13 14 15 
    t2:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[9] (0) ALGselect2 16 <- 1 17 5 6 13 13 15 
    t3:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[10] (0) ALGselect2 18 <- 1 19 5 6 13 13 15 
    t4:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[11] (0) ALGselect2 20 <- 1 21 5 6 13 13 15 
    t5:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[12] (0) ALGselect2 22 <- 1 23 5 6 13 13 15 
    t6:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[13] (0) ALGselect2 24 <- 1 25 5 6 13 13 15 
    t7:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[14] (0) ALGselect2 26 <- 1 27 5 6 13 13 15 
    t8:bat[:oid] := algebra.select(s:bat[:int], nil:bat[:oid], l:int, h:int, true:bit, true:bit, false:bit);	#[15] (0) ALGselect2 28 <- 1 29 5 6 13 13 15 
    language.pass(s:bat[:int]);         	#[16] (0) MALpass 37 <- 1 
exit X_35:bit;                          	#[17] (0)  35 
    z:bat[:oid] := mat.pack(t1:bat[:oid], t2:bat[:oid], t3:bat[:oid], t4:bat[:oid], t5:bat[:oid], t6:bat[:oid], t7:bat[:oid], t8:bat[:oid]);	#[18] (0) MATpack 9 <- 11 16 18 20 22 24 26 28 
    mdb.var();                          	#[19] (0) MDBvar 30 
    c:lng := aggr.count(z:bat[:oid]);   	#[20] (0) ALGcount_bat 31 <- 9 
    io.print(c:lng);                    	#[21] (0) IOprint_val 32 <- 31 
    io.print("done":str);               	#[22] (0) IOprint_val 33 <- 34 
end user.tst;                           	#[23] (0)  
#dataflow             actions= 1 time=43 usec 
#garbagecollector     actions= 0 time=51 usec 
#Stack 'tst' size=43 top=33
#[ 0]   tst (0,0,17) = 0@0 :void   not used 
#[ 1]     s (2,2,16) = <tmp_21> :bat[:int] rows=100000   
#[ 2]   X_2 (2,2,2) = 0@0 :oid  constant  
#[ 3]   X_3 (2,2,2) = 100000 :lng  constant  
#[ 4]   X_4 (2,2,2) = 100000 :int  constant  
#[ 5]     l (3,3,15) = 0 :int   
#[ 6]     h (4,4,15) = 0 :int   
#[ 9]     z (7,17,19) = <tmp_67> :bat[:oid] rows=8   
#[10]  X_10 (7,7,7) = nil :bat[:oid]  constant  
#[11]    t1 (8,8,17) = <tmp_165> :bat[:void] rows=1   
#[12]  X_12 (8,8,15) = true :bit  constant  
#[13]  X_13 (8,8,8) = true :bit  constant  
#[14]  X_14 (8,8,15) = false :bit  constant  
#[15]    t2 (9,9,17) = <tmp_54> :bat[:void] rows=1   
#[16]    t3 (10,10,17) = <tmp_15> :bat[:void] rows=1   
#[17]    t4 (11,11,17) = <tmp_57> :bat[:void] rows=1   
#[18]    t5 (12,12,17) = <tmp_10> :bat[:void] rows=1   
#[19]    t6 (13,13,17) = <tmp_16> :bat[:void] rows=1   
#[20]    t7 (14,14,17) = <tmp_55> :bat[:void] rows=1   
#[21]    t8 (15,15,17) = <tmp_13> :bat[:void] rows=1   
#[23]     c (19,19,20) = 0 :lng   
#[26]  X_26 (21,21,21) = "done" :str  constant  
#[27]  X_27 (1,16,16) = false :bit   
[ 8 ]

[ "done" ]



# 18:05:41 >  
# 18:05:41 >  Done.
# 18:05:41 >  

