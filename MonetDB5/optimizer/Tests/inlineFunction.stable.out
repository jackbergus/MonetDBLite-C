stdout of test 'inlineFunction` in directory 'monetdb5/optimizer` itself:


# 01:05:28 >  
# 01:05:28 >   mserver5 "--config=/ufs/mk/monet5//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"   --set mapi_open=true --set xrpc_open=true --set mapi_port=35829 --set xrpc_port=48951 --set xrpc_docroot=/ufs/mk/monet5/package/MonetDB5 --set monet_prompt= --trace  --dbname=mTests_src_optimizer  inlineFunction.mal
# 01:05:28 >  

# MonetDB server v5.10.0, based on kernel v1.28.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:31052/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8467/.s.monetdb.31052
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
inline function user.my_case(Av:int):int;
    X3 := calc.==(Av,1);
    res:int  := 0;
barrier X4 := X3;
    X6 := calc.int(100);
    res:int  := X6;
exit X4;
barrier X7 := calc.not(X3);
    X9 := calc.==(Av,2);
barrier X10 := X9;
    X12 := calc.int(200:sht);
    res:int  := X12;
exit X10;
barrier X13 := calc.not(X9);
    X14 := calc.-(1);
    X15 := calc.int(X14);
    res:int  := X15;
exit X13;
exit X7;
    return my_case:int  := res;
end user.my_case;
function user.tst():void;
    z := user.my_case(1);
end user.tst;
function user.main():void;
    io.printf("#result of inline\n");
    mdb.list("user","tst");
end user.main;
#result of inline
function user.tst():void;
    X_5 := true:bit;
    X_6:int  := 0;
    X_6:int  := 100;

# 01:05:28 >  
# 01:05:28 >  Done.
# 01:05:28 >  

