stdout of test 'inline00` in directory 'monetdb5/optimizer` itself:


# 00:18:07 >  
# 00:18:07 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31500 --set xrpc_port=46952 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline00.mal
# 00:18:07 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.help{inline}():void;
    b := bat.new(:oid,:int);
    c := bat.new(:oid,:int);
    bat.append(b,1);
barrier (y,z) := iterator.new(b);
    io.print(y);
catch MALException:str;
exit MALException:str;
exit (y,z);
barrier (x,z) := iterator.new(c);
    io.print(x);
    redo (x,z) := iterator.next(c);
catch MALException:str;
exit MALException:str;
exit (x,z);
end user.help;
function user.qry():void;
    user.help();
end user.qry;
function user.main():void;
    mdb.List("user","qry");
end user.main;
function user.qry():void;               	#[0]  0 <- 
    X_3:bat[:oid,:int] := bat.new(:oid,:int);	#[1] CMDBATnew 3 <- 4 5 
    X_6:bat[:oid,:int] := bat.new(:oid,:int);	#[2] CMDBATnew 6 <- 4 5 
    bat.append(X_3:bat[:oid,:int],1:int);	#[3] BKCappend_val_wrap 7 <- 3 8 
barrier (X_9:oid,X_10:int) := iterator.new(X_3:bat[:oid,:int]);	#[4] ITRbunIterator 9 10 <- 3 
    io.print(X_9:oid);                  	#[5] IOprint_val 11 <- 9 
catch MALException:str;                 	#[6]  12 <- 
exit MALException:str;                  	#[7]  12 <- 
exit (X_9:oid,X_10:int);                	#[8]  9 10 <- 
barrier (X_13:oid,X_10:int) := iterator.new(X_6:bat[:oid,:int]);	#[9] ITRbunIterator 13 10 <- 6 
    io.print(X_13:oid);                 	#[10] IOprint_val 14 <- 13 
    redo (X_13:oid,X_10:int) := iterator.next(X_6:bat[:oid,:int]);	#[11] ITRbunNext 13 10 <- 6 
catch MALException:str;                 	#[12]  12 <- 
exit MALException:str;                  	#[13]  12 <- 
exit (X_13:oid,X_10:int);               	#[14]  13 10 <- 
end user.qry;                           	#[15]  

# 00:18:07 >  
# 00:18:07 >  Done.
# 00:18:07 >  

