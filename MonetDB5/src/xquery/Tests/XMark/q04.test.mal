# Query Q4:
# List the reserves of those open auctions where a certain person
# issued a bid before another person

# FOR    $b IN document("auction.xml")/site/open_auctions/open_auction
# WHERE  $b/bidder/personref[id="person20"] BEFORE
#        $b/bidder/personref[id="person51"]
# RETURN <history> $b/initial/text() </history>

# This time, we stress the textual nature of XML documents by querying
# the tag order in the source document.

#var monet_guide := bat("mxml_guide");

# FOR    $b IN document("auction.xml")/site/open_auctions/open_auction
mg:= mguide.open("auctions.xml");

# just inline the $b path in place
# $b/bidder/personref/id/string@-> id/string@ 
b1:bat[:oid,:oid] := mguide.bind(mg,"/site/open_auctions/open_auction/bidder/personref/@id/string@");
#$b/bidder/personref[id="person20"] -> [id,text()]
t0 := algebra.uselect(b1,"person20");

# similar for second operand
b2:bat[:oid,:oid] := mguide.bind(mg,"/site/open_auctions/open_auction/bidder/personref/@id/string@");
#$b/bidder/personref[id="person51"] -> id/string@
t1 := algebra.uselect(b1,"person51");


# limit to the early bidders
r0 := mguide.before(t0,t1);

mr := mguide.new("result");
# walk back to open_auctions/open_auction
b3 := mguide.ancestor(mg, r0,
	"/site/open_auctions/open_auction/bidder/personref/@id/string@"
	"/site/open_auctions/open_auction/");
# link to the value  open_auction/string@
b4:= mguide.link(mg,b3,
	"/site/open_auctions/open_auction/"
	"/site/open_auctions/open_auction/initial/string@");
mguide.add(mr,"/history",b4);

