@' The contents of this file are subject to the MonetDB Public License
@' Version 1.1 (the "License"); you may not use this file except in
@' compliance with the License. You may obtain a copy of the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
@'
@' Software distributed under the License is distributed on an "AS IS"
@' basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
@' License for the specific language governing rights and limitations
@' under the License.
@'
@' The Original Code is the MonetDB Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2006 CWI.
@' All Rights Reserved.

@f mgcalc
@a N. Nes, M.L. Kersten
@+ MonetDB guide calculator
This module contains the calculator routines.
@mal
module mgcalc;

@-
Arithmetic is slightly more complex then the batcalc
routines, because the operands are not necessarily aligned
@= mgcompute
function @1(A:bat[:oid,:any_1],B:bat[:oid,:any_1]):bat[:oid,:any_1];
	# these instructions should be squeezed into one operation
	Ar := algebra.semijoin(A,B);
	Br := algebra.semijoin(B,Ar);
	As := algebra.sortH(Ar);
	Bs := algebra.sortH(Br);
    return x:bat[:oid,:any_1] := calc.@1(As,Bs);
end @1;
@mal
	@:mgcompute(+)@
	@:mgcompute(-)@
	@:mgcompute(/)@
	@:mgcompute(*)@
	@:mgcompute(mod)@
	@:mgcompute(div)@
@-
@= mgcompare
function @1(A:bat[:oid,:str],B:str):bat[:oid,:str];
    return x:bat[:oid,:str]:= algebra.select(A,@2,@3,@4,@5);
end @1;
@mal
	@:mgcompare(=,B,B,true,true)@
	@:mgcompare(<,nil:str,B,true,false)@
	@:mgcompare(>,B,nil:str,false,true)@
	@:mgcompare(<=,nil:str,B,true,true)@
	@:mgcompare(>=,B,nil:str,true,true)@
@-
The join is the more difficult one, because the
result should be propagated to the path pivots.
@mal
function =(A:bat[:oid,:str],B:bat[:oid,:str]):void;
    Br := bat.reverse(B);
    x:= algebra.join(A,Br);
	A:= algebra.semijoin(A,x);
	xr:= bat.reverse(x);
	B:= algebra.semijoin(B,xr);
end =;

@-
@= mgtheta
function @1(A:bat[:oid,:str],B:bat[:oid,:str]):void;
    Br:= bat.reverse(B);
    x := algebra.thetajoin(A,Br,@2);
	A := algebra.semijoin(A,x);
	xr:= bat.reverse(x);
	B := algebra.semijoin(B,xr);
end @1;
@-
The numerics should be fixed.
@mal
	@:mgtheta(<,1)@
	@:mgtheta(>,2)@
	@:mgtheta(<=,3)@
	@:mgtheta(>=,4)@
