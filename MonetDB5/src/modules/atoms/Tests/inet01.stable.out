stdout of test 'inet01` in directory 'src/modules/atoms` itself:


# 21:51:15 >  
# 21:51:15 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=40798 --set sql_port=59532 --set monet_prompt= --trace --dbname=mTests_src_modules_atoms  inet01.mal </dev/null
# 21:51:15 >  



!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_atoms
# Visit http://monetdb.cwi.nl/ for further information.
#include inet;


#i1 := inet.new("127.0.0.1");
#io.print(i1);
#
#i2 := inet.new("192.168.0.0/24");
#io.print(i2);
#
#i3 := inet.new("192.168/16");
#io.print(i3);
#
#i4 := inet.new("192.168.0.3/24");
#io.print(i4);
#
#i5 := inet.new("/0");
#io.print(i5);
#
#i6 := inet.new("127/32");
#io.print(i6);
#
#i7 := inet.new("127.0.0.0");
#io.print(i7);
#
#e := inet.<(i2, i3);
#io.print(e);
#e := inet.>(i2, i3);
#io.print(e);
#e := inet.=(i6, i1);
#io.print(e);
#e := inet.=(i6, i7);
#io.print(e);
#e := inet.<<(i4, i3);
#io.print(e);
#e := inet.>>=(i6, i7);
#io.print(e);
#
function user.main():void;              #  0 main:void := user.main() 
    i1 := inet.new("127.0.0.1");        #  1 i1:inet := INETnew(_2:str) 
    io.print(i1);                       #  2 _3:void := IOprint_val(i1:inet) 
    i2 := inet.new("192.168.0.0/24");   #  3 i2:inet := INETnew(_5:str) 
    io.print(i2);                       #  4 _6:void := IOprint_val(i2:inet) 
    i3 := inet.new("192.168/16");       #  5 i3:inet := INETnew(_8:str) 
    io.print(i3);                       #  6 _9:void := IOprint_val(i3:inet) 
    i4 := inet.new("192.168.0.3/24");   #  7 i4:inet := INETnew(_11:str) 
    io.print(i4);                       #  8 _12:void := IOprint_val(i4:inet) 
    i5 := inet.new("/0");               #  9 i5:inet := INETnew(_14:str) 
    io.print(i5);                       # 10 _15:void := IOprint_val(i5:inet) 
    i6 := inet.new("127/32");           # 11 i6:inet := INETnew(_17:str) 
    io.print(i6);                       # 12 _18:void := IOprint_val(i6:inet) 
    i7 := inet.new("127.0.0.0");        # 13 i7:inet := INETnew(_20:str) 
    io.print(i7);                       # 14 _21:void := IOprint_val(i7:inet) 
    e := inet.<(i2,i3);                 # 15 e:bit := INET_comp_LT(i2:inet, i3:inet) 
    io.print(e);                        # 16 _23:void := IOprint_val(e:bit) 
    e := inet.>(i2,i3);                 # 17 e:bit := INET_comp_GT(i2:inet, i3:inet) 
    io.print(e);                        # 18 _24:void := IOprint_val(e:bit) 
    e := inet.=(i6,i1);                 # 19 e:bit := INET_comp_EQ(i6:inet, i1:inet) 
    io.print(e);                        # 20 _25:void := IOprint_val(e:bit) 
    e := inet.=(i6,i7);                 # 21 e:bit := INET_comp_EQ(i6:inet, i7:inet) 
    io.print(e);                        # 22 _26:void := IOprint_val(e:bit) 
    e := inet.<<(i4,i3);                # 23 e:bit := INET_comp_CW(i4:inet, i3:inet) 
    io.print(e);                        # 24 _27:void := IOprint_val(e:bit) 
    e := inet.>>=(i6,i7);               # 25 e:bit := INET_comp_CSE(i6:inet, i7:inet) 
    io.print(e);                        # 26 _28:void := IOprint_val(e:bit) 
end main;	# 27  
[ 127.0.0.1 ]
[ 192.168.0.0/24 ]
[ 192.168.0.0/16 ]
[ 192.168.0.3/24 ]
[ 0.0.0.0/0 ]
[ 127.0.0.0 ]
[ 127.0.0.0 ]
[ false ]
[ true ]
[ false ]
[ true ]
[ true ]
[ true ]

# 21:51:15 >  
# 21:51:15 >  Done.
# 21:51:15 >  

