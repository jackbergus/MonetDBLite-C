stdout of test 'inet02` in directory 'src/modules/atoms` itself:


# 21:55:16 >  
# 21:55:16 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=42545 --set sql_port=52474 --set monet_prompt= --trace --dbname=mTests_src_modules_atoms  inet02.mal </dev/null
# 21:55:16 >  



# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_atoms
# Visit http://monetdb.cwi.nl/ for further information.
## these tests are from the PostgreSQL documentation examples
#include inet;
#
#i1 := inet.new("192.168.1.5");
#io.print(i1);
#
#i2 := inet.new("192.168.1.6");
#io.print(i2);
#
#i3 := inet.new("192.168.1/24");
#io.print(i3);
#
#i4 := inet.new("192.168.1.4");
#io.print(i4);
#
#e := inet.<(i1, i2);
#io.print(e);
#e := inet.<=(i1, i1);
#io.print(e);
#e := inet.=(i1, i1);
#io.print(e);
#e := inet.>=(i1, i1);
#io.print(e);
#e := inet.>(i1, i4);
#io.print(e);
#e := inet.!=(i1, i4);
#io.print(e);
#e := inet.<<(i1, i3);
#io.print(e);
#e := inet.<<=(i3, i3);
#io.print(e);
#e := inet.>>(i3, i1);
#io.print(e);
#e := inet.>>=(i3, i3);
#io.print(e);
#
function user.main():void;              #  0 main:void 
# these tests are from the PostgreSQL documentation examples 
    i1 := inet.new("192.168.1.5");      #  2 i1:inet := INETnew(_3:str) 
    io.print(i1);                       #  3 _4:void := IOprint_val(i1:inet) 
    i2 := inet.new("192.168.1.6");      #  4 i2:inet := INETnew(_6:str) 
    io.print(i2);                       #  5 _7:void := IOprint_val(i2:inet) 
    i3 := inet.new("192.168.1/24");     #  6 i3:inet := INETnew(_9:str) 
    io.print(i3);                       #  7 _10:void := IOprint_val(i3:inet) 
    i4 := inet.new("192.168.1.4");      #  8 i4:inet := INETnew(_12:str) 
    io.print(i4);                       #  9 _13:void := IOprint_val(i4:inet) 
    e := inet.<(i1,i2);                 # 10 e:bit := INET_comp_LT(i1:inet, i2:inet) 
    io.print(e);                        # 11 _15:void := IOprint_val(e:bit) 
    e := inet.<=(i1,i1);                # 12 e:bit := INET_comp_LE(i1:inet, i1:inet) 
    io.print(e);                        # 13 _16:void := IOprint_val(e:bit) 
    e := inet.=(i1,i1);                 # 14 e:bit := INET_comp_EQ(i1:inet, i1:inet) 
    io.print(e);                        # 15 _17:void := IOprint_val(e:bit) 
    e := inet.>=(i1,i1);                # 16 e:bit := INET_comp_GE(i1:inet, i1:inet) 
    io.print(e);                        # 17 _18:void := IOprint_val(e:bit) 
    e := inet.>(i1,i4);                 # 18 e:bit := INET_comp_GT(i1:inet, i4:inet) 
    io.print(e);                        # 19 _19:void := IOprint_val(e:bit) 
    e := inet.!=(i1,i4);                # 20 e:bit := INET_comp_NEQ(i1:inet, i4:inet) 
    io.print(e);                        # 21 _20:void := IOprint_val(e:bit) 
    e := inet.<<(i1,i3);                # 22 e:bit := INET_comp_CW(i1:inet, i3:inet) 
    io.print(e);                        # 23 _21:void := IOprint_val(e:bit) 
    e := inet.<<=(i3,i3);               # 24 e:bit := INET_comp_CWE(i3:inet, i3:inet) 
    io.print(e);                        # 25 _22:void := IOprint_val(e:bit) 
    e := inet.>>(i3,i1);                # 26 e:bit := INET_comp_CS(i3:inet, i1:inet) 
    io.print(e);                        # 27 _23:void := IOprint_val(e:bit) 
    e := inet.>>=(i3,i3);               # 28 e:bit := INET_comp_CSE(i3:inet, i3:inet) 
    io.print(e);                        # 29 _24:void := IOprint_val(e:bit) 
end main;	# 30  
[ 192.168.1.5 ]
[ 192.168.1.6 ]
[ 192.168.1.0/24 ]
[ 192.168.1.4 ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]

# 21:55:16 >  
# 21:55:16 >  Done.
# 21:55:16 >  

