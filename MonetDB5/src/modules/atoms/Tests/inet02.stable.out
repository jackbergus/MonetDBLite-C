stdout of test 'inet02` in directory 'src/modules/atoms` itself:


# 21:55:16 >  
# 21:55:16 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=42545 --set sql_port=52474 --set monet_prompt= --trace --dbname=mTests_src_modules_atoms  inet02.mal </dev/null
# 21:55:16 >  



# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_atoms
# Visit http://monetdb.cwi.nl/ for further information.
## these tests are from the PostgreSQL documentation examples
#include inet;
#
#i1 := inet.new("192.168.1.5");
#io.print(i1);
#
#i2 := inet.new("192.168.1.6");
#io.print(i2);
#
#i3 := inet.new("192.168.1/24");
#io.print(i3);
#
#i4 := inet.new("192.168.1.4");
#io.print(i4);
#
#e := inet.<(i1, i2);
#io.print(e);
#e := inet.<=(i1, i1);
#io.print(e);
#e := inet.=(i1, i1);
#io.print(e);
#e := inet.>=(i1, i1);
#io.print(e);
#e := inet.>(i1, i4);
#io.print(e);
#e := inet.!=(i1, i4);
#io.print(e);
#e := inet.<<(i1, i3);
#io.print(e);
#e := inet.<<=(i3, i3);
#io.print(e);
#e := inet.>>(i3, i1);
#io.print(e);
#e := inet.>>=(i3, i3);
#io.print(e);
#
function user.main():void;	# 0  (main:void)
    i1 := inet.new("192.168.1.5");	# 1 INETnew (i1:inet)<-(_2:str)
    io.print(i1);	# 2 IOprint_val (_3:int)<-(i1:inet)
    i2 := inet.new("192.168.1.6");	# 3 INETnew (i2:inet)<-(_5:str)
    io.print(i2);	# 4 IOprint_val (_6:int)<-(i2:inet)
    i3 := inet.new("192.168.1/24");	# 5 INETnew (i3:inet)<-(_8:str)
    io.print(i3);	# 6 IOprint_val (_9:int)<-(i3:inet)
    i4 := inet.new("192.168.1.4");	# 7 INETnew (i4:inet)<-(_11:str)
    io.print(i4);	# 8 IOprint_val (_12:int)<-(i4:inet)
    e := inet.<(i1,i2);	# 9 INET_comp_LT (e:bit)<-(i1:inet)(i2:inet)
    io.print(e);	# 10 IOprint_val (_14:int)<-(e:bit)
    e := inet.<=(i1,i1);	# 11 INET_comp_LE (e:bit)<-(i1:inet)(i1:inet)
    io.print(e);	# 12 IOprint_val (_15:int)<-(e:bit)
    e := inet.=(i1,i1);	# 13 INET_comp_EQ (e:bit)<-(i1:inet)(i1:inet)
    io.print(e);	# 14 IOprint_val (_16:int)<-(e:bit)
    e := inet.>=(i1,i1);	# 15 INET_comp_GE (e:bit)<-(i1:inet)(i1:inet)
    io.print(e);	# 16 IOprint_val (_17:int)<-(e:bit)
    e := inet.>(i1,i4);	# 17 INET_comp_GT (e:bit)<-(i1:inet)(i4:inet)
    io.print(e);	# 18 IOprint_val (_18:int)<-(e:bit)
    e := inet.!=(i1,i4);	# 19 INET_comp_NEQ (e:bit)<-(i1:inet)(i4:inet)
    io.print(e);	# 20 IOprint_val (_19:int)<-(e:bit)
    e := inet.<<(i1,i3);	# 21 INET_comp_CW (e:bit)<-(i1:inet)(i3:inet)
    io.print(e);	# 22 IOprint_val (_20:int)<-(e:bit)
    e := inet.<<=(i3,i3);	# 23 INET_comp_CWE (e:bit)<-(i3:inet)(i3:inet)
    io.print(e);	# 24 IOprint_val (_21:int)<-(e:bit)
    e := inet.>>(i3,i1);	# 25 INET_comp_CS (e:bit)<-(i3:inet)(i1:inet)
    io.print(e);	# 26 IOprint_val (_22:int)<-(e:bit)
    e := inet.>>=(i3,i3);	# 27 INET_comp_CSE (e:bit)<-(i3:inet)(i3:inet)
    io.print(e);	# 28 IOprint_val (_23:int)<-(e:bit)
end main;	# 29  
[ 192.168.1.5 ]
[ 192.168.1.6 ]
[ 192.168.1.0/24 ]
[ 192.168.1.4 ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]

# 21:55:16 >  
# 21:55:16 >  Done.
# 21:55:16 >  

