stdout of test 'inet03` in directory 'src/modules/atoms` itself:


# 21:56:09 >  
# 21:56:09 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=49836 --set sql_port=50914 --set monet_prompt= --trace --dbname=mTests_src_modules_atoms  inet03.mal </dev/null
# 21:56:09 >  



# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_atoms
# Visit http://monetdb.cwi.nl/ for further information.
## these tests are from the PostgreSQL documentation examples
## function tests
#include inet;
#
#i1 := inet.new("192.168.1.5/24");
#io.print(i1);
#
#i2 := inet.broadcast(i1);
#io.print(i2);
#
#i3 := inet.new("192.168.0.1/25");
#io.print(i3);
#
#i4 := inet.broadcast(i3);
#io.print(i4);
#
#i5 := inet.host(i1);
#io.print(i5);
#
#i6 := inet.masklen(i1);
#io.print(i6);
#
#i7 := inet.setmasklen(i1, 16);
#io.print(i7);
#
#i8 := inet.netmask(i1);
#io.print(i8);
#
#i9 := inet.netmask(i3);
#io.print(i9);
#
#i10 := inet.new("192.168.23.20/30");
#io.print(i10);
#
#i11 := inet.hostmask(i10);
#io.print(i11);
#
#i12 := inet.hostmask(i3);
#io.print(i12);
#
#i13 := inet.network(i1);
#io.print(i13);
#
#i14 := inet.network(i3);
#io.print(i14);
#
#i15 := inet.network(i10);
#io.print(i15);
#
#i16 := inet.new("192.168.0.32");
#io.print(i16);
#
#i17 := inet.text(i16);
#io.print(i17);
#
#i18 := inet.new("10.1.0.0/16");
#io.print(i18);
#
#i19 := inet.abbrev(i18);
#io.print(i19);
#
#i20 := inet.abbrev(i3);
#io.print(i20);
#
function user.main():void;              #  0 main:void {G}
# these tests are from the PostgreSQL documentation examples 
# function tests 
    i1 := inet.new("192.168.1.5/24");   #  3 i1:inet := INETnew(_4:str) 
    io.print(i1);                       #  4 _5:void := IOprint_val(i1:inet) 
    i2 := inet.broadcast(i1);           #  5 i2:inet := INETbroadcast(i1:inet) 
    io.print(i2);                       #  6 _7:void := IOprint_val(i2:inet) 
    i3 := inet.new("192.168.0.1/25");   #  7 i3:inet := INETnew(_9:str) 
    io.print(i3);                       #  8 _10:void := IOprint_val(i3:inet) 
    i4 := inet.broadcast(i3);           #  9 i4:inet := INETbroadcast(i3:inet) 
    io.print(i4);                       # 10 _12:void := IOprint_val(i4:inet) 
    i5 := inet.host(i1);                # 11 i5:str := INEThost(i1:inet) {G}
    io.print(i5);                       # 12 _14:void := IOprint_val(i5:str) 
    i6 := inet.masklen(i1);             # 13 i6:int := INETmasklen(i1:inet) 
    io.print(i6);                       # 14 _16:void := IOprint_val(i6:int) 
    i7 := inet.setmasklen(i1,16);       # 15 i7:inet := INETsetmasklen(i1:inet, _18:int) 
    io.print(i7);                       # 16 _19:void := IOprint_val(i7:inet) 
    i8 := inet.netmask(i1);             # 17 i8:inet := INETnetmask(i1:inet) 
    io.print(i8);                       # 18 _21:void := IOprint_val(i8:inet) 
    i9 := inet.netmask(i3);             # 19 i9:inet := INETnetmask(i3:inet) 
    io.print(i9);                       # 20 _23:void := IOprint_val(i9:inet) 
    i10 := inet.new("192.168.23.20/30");# 21 i10:inet := INETnew(_25:str) 
    io.print(i10);                      # 22 _26:void := IOprint_val(i10:inet) 
    i11 := inet.hostmask(i10);          # 23 i11:inet := INEThostmask(i10:inet) 
    io.print(i11);                      # 24 _28:void := IOprint_val(i11:inet) 
    i12 := inet.hostmask(i3);           # 25 i12:inet := INEThostmask(i3:inet) 
    io.print(i12);                      # 26 _30:void := IOprint_val(i12:inet) 
    i13 := inet.network(i1);            # 27 i13:inet := INETnetwork(i1:inet) 
    io.print(i13);                      # 28 _32:void := IOprint_val(i13:inet) 
    i14 := inet.network(i3);            # 29 i14:inet := INETnetwork(i3:inet) 
    io.print(i14);                      # 30 _34:void := IOprint_val(i14:inet) 
    i15 := inet.network(i10);           # 31 i15:inet := INETnetwork(i10:inet) 
    io.print(i15);                      # 32 _36:void := IOprint_val(i15:inet) 
    i16 := inet.new("192.168.0.32");    # 33 i16:inet := INETnew(_38:str) 
    io.print(i16);                      # 34 _39:void := IOprint_val(i16:inet) 
    i17 := inet.text(i16);              # 35 i17:str := INETtext(i16:inet) {G}
    io.print(i17);                      # 36 _41:void := IOprint_val(i17:str) 
    i18 := inet.new("10.1.0.0/16");     # 37 i18:inet := INETnew(_43:str) 
    io.print(i18);                      # 38 _44:void := IOprint_val(i18:inet) 
    i19 := inet.abbrev(i18);            # 39 i19:str := INETabbrev(i18:inet) {G}
    io.print(i19);                      # 40 _46:void := IOprint_val(i19:str) 
    i20 := inet.abbrev(i3);             # 41 i20:str := INETabbrev(i3:inet) {G}
    io.print(i20);                      # 42 _48:void := IOprint_val(i20:str) 
end main;	# 43  
[ 192.168.1.5/24 ]
[ 192.168.1.255/24 ]
[ 192.168.0.1/25 ]
[ 192.168.0.127/25 ]
[ "192.168.1.5" ]
[ 24 ]
[ 192.168.1.5/16 ]
[ 255.255.255.0 ]
[ 255.255.255.128 ]
[ 192.168.23.20/30 ]
[ 0.0.0.3 ]
[ 0.0.0.127 ]
[ 192.168.1.0/24 ]
[ 192.168.0.0/25 ]
[ 192.168.23.20/30 ]
[ 192.168.0.32 ]
[ "192.168.0.32/32" ]
[ 10.1.0.0/16 ]
[ "10.1/16" ]
[ "192.168.0.1/25" ]

# 21:56:09 >  
# 21:56:09 >  Done.
# 21:56:09 >  

