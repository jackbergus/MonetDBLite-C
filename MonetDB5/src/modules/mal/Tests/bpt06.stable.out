stdout of test 'bpt06` in directory 'src/modules/mal` itself:


# 00:03:57 >  
# 00:03:57 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=33330 --set sql_port=49911 --set xquery_port=56575 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  bpt06.mal </dev/null
# 00:03:57 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
##testing deletions from a BAT partition table
#a1:= bbp.new(:void,:int);
#bat.setSequenceBase(a1,0@0);
#a2:= bbp.new(:void,:int);
#bat.setSequenceBase(a2,10@0);
#a3:= bbp.new(:void,:int);
#bat.setSequenceBase(a3,20@0);
#
#barrier (go,i):= mal.newRange(0);
#	bat.insert(a1,nil,i);
#	bat.insert(a2,nil,i);
#	bat.insert(a3,nil,i);
#	redo (go,i):= mal.nextElement(1,10);
#exit (go,i);
#
## add it
#partitions.deposit(a1);
#partitions.deposit(a1,a2);
#partitions.deposit(a1,a3);
#partitions.dump();
#
## delete individuals
#io.print("delete 24");
#partitions.delete(a1,24@0);
#io.print("delete 14");
#partitions.delete(a1,14@0);
#io.print("delete 4");
#partitions.delete(a1,4@0);
#
#io.print("check result");
#barrier (idx,b):= partitions.newIterator(a1);
#	io.print(idx);
#	io.print(b);
#	redo (idx,b):= partitions.hasMoreElements(a1);
#exit idx;
#
#io.print("remove a complete bat");
#partitions.delete(a1,a2);
#io.print("check result");
#barrier (idx,b):= partitions.newIterator(a1);
#	io.print(idx);
#	io.print(b);
#	redo (idx,b):= partitions.hasMoreElements(a1);
#exit idx;
#
#
function user.main():int;	# 0  (main:int)
#testing deletions from a BAT partition table 	# 1  (_2:str)
    a1 := bat.new(:void,:int);	# 2 CMDBATnew (a1:bat[:void,:int])<-(_4:void)(_5:int)
    bat.setSequenceBase(a1,0@0);	# 3 BKCsetSequenceBase (_6:bat[:void,:int])<-(a1:bat[:void,:int])(_7:oid)
    a2 := bat.new(:void,:int);	# 4 CMDBATnew (a2:bat[:void,:int])<-(_4:void)(_5:int)
    bat.setSequenceBase(a2,10@0);	# 5 BKCsetSequenceBase (_9:bat[:void,:int])<-(a2:bat[:void,:int])(_10:oid)
    a3 := bat.new(:void,:int);	# 6 CMDBATnew (a3:bat[:void,:int])<-(_4:void)(_5:int)
    bat.setSequenceBase(a3,20@0);	# 7 BKCsetSequenceBase (_12:bat[:void,:int])<-(a3:bat[:void,:int])(_13:oid)
barrier (go,i):= mal.newRange(0);	# 8 RNGnewRange_int (go:bit)(i:int)<-(_16:int) jump 13
    bat.insert(a1,nil,i);	# 9 BKCinsert_bun (_17:void)<-(a1:bat[:void,:int])(_18:void)(i:int)
    bat.insert(a2,nil,i);	# 10 BKCinsert_bun (_19:void)<-(a2:bat[:void,:int])(_18:void)(i:int)
    bat.insert(a3,nil,i);	# 11 BKCinsert_bun (_20:void)<-(a3:bat[:void,:int])(_18:void)(i:int)
    redo (go,i):= mal.nextElement(1,10);	# 12 RNGnextElement_int (go:bit)(i:int)<-(_21:int)(_22:int) jump 9
exit (go,i);	# 13  (go:bit)(i:int)
# add it 	# 14  (_24:str)
    partitions.deposit(a1);	# 15 BPTdeposit (_25:void)<-(a1:bat[:void,:int])
    partitions.deposit(a1,a2);	# 16 BPTdeposit2 (_26:void)<-(a1:bat[:void,:int])(a2:bat[:void,:int])
    partitions.deposit(a1,a3);	# 17 BPTdeposit2 (_27:void)<-(a1:bat[:void,:int])(a3:bat[:void,:int])
    partitions.dump();	# 18 BPTdump (_28:void)
# delete individuals 	# 19  (_30:str)
    io.print("delete 24");	# 20 IOprint_val (_31:int)<-(_32:str)
    partitions.delete(a1,24@0);	# 21 BPTdelete_oid (_33:bat[:void,:int])<-(a1:bat[:void,:int])(_34:oid)
    io.print("delete 14");	# 22 IOprint_val (_35:int)<-(_36:str)
    partitions.delete(a1,14@0);	# 23 BPTdelete_oid (_37:bat[:void,:int])<-(a1:bat[:void,:int])(_38:oid)
    io.print("delete 4");	# 24 IOprint_val (_39:int)<-(_40:str)
    partitions.delete(a1,4@0);	# 25 BPTdelete_oid (_41:bat[:void,:int])<-(a1:bat[:void,:int])(_42:oid)
    io.print("check result");	# 26 IOprint_val (_43:int)<-(_44:str)
barrier (idx,b):= partitions.newIterator(a1);	# 27 BPTnewIterator (idx:int)(b:bat[:void,:int])<-(a1:bat[:void,:int]) jump 31
    io.print(idx);	# 28 IOprint_val (_47:int)<-(idx:int)
    io.print(b);	# 29 IOprint_val (_48:int)<-(b:bat[:void,:int])
    redo (idx,b):= partitions.hasMoreElements(a1);	# 30 BPThasMoreElements (idx:int)(b:bat[:void,:int])<-(a1:bat[:void,:int]) jump 28
exit idx;	# 31  (idx:int)
    io.print("remove a complete bat");	# 32 IOprint_val (_49:int)<-(_50:str)
    partitions.delete(a1,a2);	# 33 BPTdeleteBAT (_51:bat[:void,:int])<-(a1:bat[:void,:int])(a2:bat[:void,:int])
    io.print("check result");	# 34 IOprint_val (_52:int)<-(_44:str)
barrier (idx,b):= partitions.newIterator(a1);	# 35 BPTnewIterator (idx:int)(b:bat[:void,:int])<-(a1:bat[:void,:int]) jump 39
    io.print(idx);	# 36 IOprint_val (_53:int)<-(idx:int)
    io.print(b);	# 37 IOprint_val (_54:int)<-(b:bat[:void,:int])
    redo (idx,b):= partitions.hasMoreElements(a1);	# 38 BPThasMoreElements (idx:int)(b:bat[:void,:int])<-(a1:bat[:void,:int]) jump 36
exit idx;	# 39  (idx:int)
end main;	# 40  
ptop=3 plimit=1024
[0] bid=13 pid=13 f=0, l=10 prv=-1 nxt=1 cap=-1
[1] bid=13 pid=14 f=10, l=20 prv=0 nxt=2 cap=-1
[2] bid=13 pid=15 f=20, l=30 prv=1 nxt=-1 cap=-1
[ "delete 24" ]
[ "delete 14" ]
[ "delete 4" ]
[ "check result" ]
[ 0 ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 9@0,	  9	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 1 ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 10@0,	  0	  ]
[ 11@0,	  1	  ]
[ 12@0,	  2	  ]
[ 13@0,	  3	  ]
[ 19@0,	  9	  ]
[ 15@0,	  5	  ]
[ 16@0,	  6	  ]
[ 17@0,	  7	  ]
[ 18@0,	  8	  ]
[ 2 ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 20@0,	  0	  ]
[ 21@0,	  1	  ]
[ 22@0,	  2	  ]
[ 23@0,	  3	  ]
[ 29@0,	  9	  ]
[ 25@0,	  5	  ]
[ 26@0,	  6	  ]
[ 27@0,	  7	  ]
[ 28@0,	  8	  ]
[ "remove a complete bat" ]
[ "check result" ]
[ 0 ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 9@0,	  9	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 2 ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 20@0,	  0	  ]
[ 21@0,	  1	  ]
[ 22@0,	  2	  ]
[ 23@0,	  3	  ]
[ 29@0,	  9	  ]
[ 25@0,	  5	  ]
[ 26@0,	  6	  ]
[ 27@0,	  7	  ]
[ 28@0,	  8	  ]

# 00:03:57 >  
# 00:03:57 >  Done.
# 00:03:57 >  

