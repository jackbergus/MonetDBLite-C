stdout of test 'armada01` in directory 'src/modules/mal` itself:


# 20:22:02 >  
# 20:22:02 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/fabian/scratch/monetdb/five/program-x86_64/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/five/program-x86_64/lib/MonetDB5" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/log" --set mapi_port=39587 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  armada01.mal < /dev/null
# 20:22:02 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
#include armada;
#
#b:=bat.new(:str, :str);
#bat.insert(b, "func1", "site1");
#bat.insert(b, "func2", "site2");
#armada.addTrail(b);
#
function user.main():void;	# 0  (main:void)
#line 32 "/ufs/mk/monet5/src/modules/mal/armada.mx" 	# 1  (_1:str)
#pattern open():void 	# 2  (_2:str)
#address ARMADAopen 	# 3  (_3:str)
#comment "Locate and open the Armada box"; 	# 4  (_4:str)
#pattern close():void 	# 5  (_5:str)
#address ARMADAclose 	# 6  (_6:str)
#comment "Close the Armada box"; 	# 7  (_7:str)
#pattern destroy():void 	# 8  (_8:str)
#address ARMADAdestroy 	# 9  (_9:str)
#comment "Destroy the Armada box (irreversible, use with caution!)"; 	# 10  (_10:str)
    armada.prelude();	# 11 ARMADAprelude (_11:void)
    s1 := armada.addSite(127.0.0.1:inet,50000:int,"chain":str,"key":str);	# 12 ARMADAaddSite (s1:oid)<-(_13:inet)(_14:int)(_15:str)(_16:str)
    s2 := armada.addSite(10.0.0.10:inet,50000:int,"chain":str,"key":str);	# 13 ARMADAaddSite (s2:oid)<-(_18:inet)(_14:int)(_15:str)(_16:str)
    b := bat.new(:str,:oid);	# 14 CMDBATnew (b:bat[:str,:oid])<-(_20:str)(_21:oid)
    bat.insert(b,"func1",s1);	# 15 BKCinsert_bun (_22:void)<-(b:bat[:str,:oid])(_23:str)(s1:oid)
    bat.insert(b,"func2",s2);	# 16 BKCinsert_bun (_24:void)<-(b:bat[:str,:oid])(_25:str)(s2:oid)
    armada.addTrail(b);	# 17 ARMADAaddTrailBAT (_26:int)<-(b:bat[:str,:oid])
    f := bbp.bind("armada_func_site");	# 18 CMDbbpbind (f:bat[:any,:any])<-(_28:str)
    s := bbp.bind("armada_step_pre");	# 19 CMDbbpbind (s:bat[:any,:any])<-(_30:str)
    io.print(f);	# 20 IOprint_val (_31:int)<-(f:bat[:any,:any])
    io.print(s);	# 21 IOprint_val (_32:int)<-(s:bat[:any,:any])
end main;	# 22  
#-------------------------#
# h		t		  # name
# str		oid	  # type
#-------------------------#
[ "func1",	  0@0	  ]
[ "func2",	  1@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0,	  nil	  ]
[ 1,	  0	  ]

# 20:22:02 >  
# 20:22:02 >  Done.
# 20:22:02 >  

