stdout of test 'armada01` in directory 'src/modules/mal` itself:


# 20:22:02 >  
# 20:22:02 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/fabian/scratch/monetdb/five/program-x86_64/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/five/program-x86_64/lib/MonetDB5" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/log" --set mapi_port=39587 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  armada01.mal < /dev/null
# 20:22:02 >  

!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# Monet Database Server V4.99.19
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/fabian/scratch/monetdb/five/program-x86_64/etc/MonetDB5.conf
# dbfarm:/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
#include armada;
#
#b:=bat.new(:str, :str);
#bat.insert(b, "func1", "site1");
#bat.insert(b, "func2", "site2");
#armada.addTrail(b);
#
function user.main():void;	# 0  (main:void)
    s1 := armada.addSite(127.0.0.1:inet,50000:int,"chain":str,"key":str);	# 1 ARMADAaddSite (s1:oid)<-(_2:inet)(_3:int)(_4:str)(_5:str)
    s2 := armada.addSite(10.0.0.10:inet,50000:int,"chain":str,"key":str);	# 2 ARMADAaddSite (s2:oid)<-(_7:inet)(_3:int)(_4:str)(_5:str)
    b := bat.new(:str,:oid);	# 3 CMDBATnew (b:bat[:str,:oid])<-(_9:str)(_10:oid)
    bat.insert(b,"func1",s1);	# 4 BKCinsert_bun (_11:void)<-(b:bat[:str,:oid])(_12:str)(s1:oid)
    bat.insert(b,"func2",s2);	# 5 BKCinsert_bun (_13:void)<-(b:bat[:str,:oid])(_14:str)(s2:oid)
    armada.addTrail(b);	# 6 ARMADAaddTrailBAT (_15:int)<-(b:bat[:str,:oid])
    f := bbp.bind("armada_func_site");	# 7 CMDbbpbind (f:bat[:any,:any])<-(_17:str)
    s := bbp.bind("armada_step_pre");	# 8 CMDbbpbind (s:bat[:any,:any])<-(_19:str)
    io.print(f);	# 9 IOprint_val (_20:int)<-(f:bat[:any,:any])
    io.print(s);	# 10 IOprint_val (_21:int)<-(s:bat[:any,:any])
end main;	# 11  
#-------------------------#
# h		t		  # name
# str		oid	  # type
#-------------------------#
[ "func1",	  0@0	  ]
[ "func2",	  1@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0,	  nil	  ]
[ 1,	  0	  ]

# 20:22:02 >  
# 20:22:02 >  Done.
# 20:22:02 >  

