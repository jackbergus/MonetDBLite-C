# Testing the cracker implementation
# testing the crack optimizer
b:= bat.new(:oid,:int);
bat.insert(b,1@0,2);
bat.insert(b,2@0,16);
bat.insert(b,3@0,25);
bat.insert(b,4@0,4);
bat.insert(b,5@0,36);
bat.insert(b,6@0,49);
bat.insert(b,7@0,64);
bat.insert(b,8@0,1);
bat.insert(b,9@0,81);
io.print(b);
crackers.crack(b,25);
io.print("split on 25");
io.print(b);

c:= bat.new(:oid,:int);
bat.insert(c,1@0,2);
bat.insert(c,2@0,16);
bat.insert(c,3@0,25);
bat.insert(c,4@0,4);
bat.insert(c,5@0,36);
bat.insert(c,6@0,49);
bat.insert(c,7@0,64);
bat.insert(c,8@0,1);
bat.insert(c,9@0,81);
crackers.crack(c,27);
io.print("split on 27");
io.print(c);

d:= bat.new(:oid,:int);
bat.insert(d,1@0,2);
bat.insert(d,2@0,16);
bat.insert(d,3@0,25);
bat.insert(d,4@0,4);
bat.insert(d,5@0,36);
bat.insert(d,6@0,49);
bat.insert(d,7@0,64);
bat.insert(d,8@0,1);
bat.insert(d,9@0,81);
crackers.crack(d,81);
io.print("split on 81");
io.print(d);

e:= bat.new(:oid,:int);
bat.insert(e,1@0,2);
bat.insert(e,2@0,16);
bat.insert(e,3@0,25);
bat.insert(e,4@0,4);
bat.insert(e,5@0,36);
bat.insert(e,6@0,49);
bat.insert(e,7@0,64);
bat.insert(e,8@0,1);
bat.insert(e,9@0,81);
crackers.crack(e,1);
io.print("split on 1");
io.print(e);
