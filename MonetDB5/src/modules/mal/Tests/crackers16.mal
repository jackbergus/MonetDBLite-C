# Testing the cracker implementation
# testing the crack optimizer
b:= bat.new(:oid,:int);
bat.insert(b,1@0,2);
bat.insert(b,2@0,36);
bat.insert(b,2@0,33);
bat.insert(b,3@0,25);
bat.insert(b,3@0,12);
bat.insert(b,4@0,4);
bat.insert(b,5@0,9);
bat.insert(b,6@0,49);
bat.insert(b,7@0,64);
bat.insert(b,8@0,1);
bat.insert(b,9@0,81);
io.print(b);

a:=algebra.select(b,9,25);
io.print(a);

c:=algebra.select(b,15,50);
io.print(c);

d:=algebra.select(b,30,64);
io.print(d);

e:=algebra.select(b,2,4);
io.print(e);

f:=algebra.select(b,36);
io.print(f);

g:=algebra.select(b,9,25,true, false);
io.print(g);

h:=algebra.select(b,75,80);
io.print(h);

i:=algebra.select(b,25,90);
io.print(i);

j:=algebra.uselect(b,nil:int,50);
io.print(j);

k:=algebra.select(b,nil:int,70);
io.print(k);

l:=algebra.uselect(b,25,nil:int);
io.print(l);

m:=algebra.select(b,nil:int,40);
io.print(m);

optimizer.crack();
