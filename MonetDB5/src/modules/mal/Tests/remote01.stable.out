stdout of test 'remote01` in directory 'src/modules/mal` itself:


# 09:35:17 >  
# 09:35:17 >  Mtimeout -timeout 60  mserver5 "--config=/ufs/fabian/scratch/monetdb/current/program-x86_64/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/lib:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/bin" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/sqllog" --set "xquery_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/xquerylog" --set mapi_open=true --set mapi_port=37413 --set xrpc_port=46951 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  remote01.mal
# 09:35:17 >  


# MonetDB Server v5.1.0
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
#include remote;
#
## create a connecton to ourself
#remote.create("test", "localhost", 50000, nil:str, "monetdb", "monetdb");
#
## retrieve a value (that for sure won't exist)
#remote.get("test", "b1");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
## should raise an exception
#remote.create("test", "localhost", 50000, nil:str, "monetdb", "monetdb");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
## help testweb a bit, since currently no cleanup is done on server
## shutdown
#remote.destroy("test");
#
## this should fail now
#remote.destroy("test");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
function user.main():void;	# 0  (main:void)
#remote.prelude(); 	# 1  (_1:str)
# ideally we would like to do this, however that's unfortunately 	# 2  (_2:str)
# impossible since variadic stuff doesn't work in functions 	# 3  (_3:str)
#function exec(conn:str, ident:str...):any; 	# 4  (_4:str)
#	id := remote.exec(conn, ident, ...); 	# 5  (_5:str)
#	ret := remote.get(conn, id); 	# 6  (_6:str)
#	return(ret); 	# 7  (_7:str)
#end exec; 	# 8  (_8:str)
# for testweb, we need to ask the server itself how it is available, use 	# 9  (_9:str)
# sabaoth for that 	# 10  (_10:str)
#sabaoth.prelude(); 	# 11  (_11:str)
    h := sabaoth.getLocalConnectionHost();	# 12 SABgetLocalConnectionHost (h:str)
    p := sabaoth.getLocalConnectionPort();	# 13 SABgetLocalConnectionPort (p:int)
# create a connecton to ourself 	# 14  (_14:str)
    remote.create("test",h,p,nil:str,"monetdb","monetdb");	# 15 RMTcreate (_15:void)<-(_16:str)(h:str)(p:int)(_17:str)(_18:str)(_18:str)
# retrieve a value (that for sure won't exist) 	# 16  (_19:str)
    remote.get("test","b1");	# 17 RMTget (_20:any)<-(_16:str)(_21:str)
catch MALException:str ;	# 18  (MALException:str) jump 20
    io.printf("!%s\n",MALException);	# 19 IOprint_formatted_str (_23:void)<-(_24:str)(MALException:str)
exit MALException:str ;	# 20  (MALException:str)
# should raise an exception (the arguments don't matter here) 	# 21  (_25:str)
    remote.create("test","localhost",50000,nil:str,"test","test");	# 22 RMTcreate (_26:void)<-(_16:str)(_27:str)(_28:int)(_17:str)(_16:str)(_16:str)
catch MALException:str ;	# 23  (MALException:str) jump 25
    io.printf("!%s\n",MALException);	# 24 IOprint_formatted_str (_29:void)<-(_24:str)(MALException:str)
exit MALException:str ;	# 25  (MALException:str)
# help testweb a bit, since currently no cleanup is done on server 	# 26  (_30:str)
# shutdown 	# 27  (_31:str)
    remote.destroy("test");	# 28 RMTdestroy (_32:void)<-(_16:str)
# this should fail now 	# 29  (_33:str)
    remote.destroy("test");	# 30 RMTdestroy (_34:void)<-(_16:str)
catch MALException:str ;	# 31  (MALException:str) jump 33
    io.printf("!%s\n",MALException);	# 32 IOprint_formatted_str (_35:void)<-(_24:str)(MALException:str)
exit MALException:str ;	# 33  (MALException:str)
end main;	# 34  
!MALException:remote.get:no such object 'b1'

!MALException:remote.create:a connection with name 'test' already exists
!MALException:remote.destroy:no such connection with name 'test'

# 10:57:19 >  
# 10:57:19 >  Done.
# 10:57:19 >  

