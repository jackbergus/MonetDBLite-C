stdout of test 'remote01` in directory 'src/modules/mal` itself:


# 09:35:17 >  
# 09:35:17 >  Mtimeout -timeout 60  mserver5 "--config=/ufs/fabian/scratch/monetdb/current/program-x86_64/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/lib:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/bin" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/sqllog" --set "xquery_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/xquerylog" --set mapi_open=true --set mapi_port=37413 --set xrpc_port=46951 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  remote01.mal
# 09:35:17 >  


# MonetDB Server v5.1.0
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
#include remote;
#
## create a connecton to ourself
#remote.create("test", "localhost", 50000, nil:str, "monetdb", "monetdb");
#
## retrieve a value (that for sure won't exist)
#remote.get("test", "b1");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
## should raise an exception
#remote.create("test", "localhost", 50000, nil:str, "monetdb", "monetdb");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
## help testweb a bit, since currently no cleanup is done on server
## shutdown
#remote.destroy("test");
#
## this should fail now
#remote.destroy("test");
#catch MALException:str;
#	io.printf("!%s\n",MALException);
#exit MALException;
#
function user.main():void;              #  0 main:void := user.main() {G}
#remote.prelude(); 
# ideally we would like to do this, however that's unfortunately 
# impossible since variadic stuff doesn't work in functions 
#function exec(conn:str, ident:str...):any; 
#	id := remote.exec(conn, ident, ...); 
#	ret := remote.get(conn, id); 
#	return(ret); 
#end exec; 
# for testweb, we need to ask the server itself how it is available, use 
# sabaoth for that 
#sabaoth.prelude(); 
    h := sabaoth.getLocalConnectionHost();# 12 h:str := SABgetLocalConnectionHost() {G}
    p := sabaoth.getLocalConnectionPort();# 13 p:int := SABgetLocalConnectionPort() 
# create a connecton to ourself 
    remote.create("test",h,p,nil:str,"monetdb","monetdb");# 15 _15:void := RMTcreate(_16:str, h:str, p:int, _17:str, _18:str, _18:str) 
# retrieve a value (that for sure won't exist) 
    remote.get("test","b1");            # 17 _20:any := RMTget(_16:str, _21:str) 
catch MALException:str ;                # 18 MALException:str {J20}
    io.printf("!%s\n",MALException);    # 19 _23:void := IOprint_formatted_str(_24:str, MALException:str) 
exit MALException:str ;                 # 20 MALException:str 
# should raise an exception (the arguments don't matter here) 
    remote.create("test","localhost",50000,nil:str,"test","test");# 22 _26:void := RMTcreate(_16:str, _27:str, _28:int, _17:str, _16:str, _16:str) 
catch MALException:str ;                # 23 MALException:str {J25}
    io.printf("!%s\n",MALException);    # 24 _29:void := IOprint_formatted_str(_24:str, MALException:str) 
exit MALException:str ;                 # 25 MALException:str 
# help testweb a bit, since currently no cleanup is done on server 
# shutdown 
    remote.destroy("test");             # 28 _32:void := RMTdestroy(_16:str) 
# this should fail now 
    remote.destroy("test");             # 30 _34:void := RMTdestroy(_16:str) 
catch MALException:str ;                # 31 MALException:str {J33}
    io.printf("!%s\n",MALException);    # 32 _35:void := IOprint_formatted_str(_24:str, MALException:str) 
exit MALException:str ;                 # 33 MALException:str 
end main;	# 34  
!MALException:remote.get:no such object 'b1'

!MALException:remote.create:a connection with name 'test' already exists
!MALException:remote.destroy:no such connection with name 'test'

# 10:57:19 >  
# 10:57:19 >  Done.
# 10:57:19 >  

