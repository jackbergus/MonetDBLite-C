stdout of test 'statistics00` in directory 'src/modules/mal` itself:


# 21:02:28 >  
# 21:02:28 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=32174 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  statistics00.mal < /dev/null
# 21:02:28 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
## Testing the statistics table
#
#b:= bat.new(:int,:int);
#bat.insert(b,1,2);
#bat.setName(b,"dummy");
#
#statistics.open();
#statistics.dump();
## add the bat to the statistics table
#statistics.deposit(b);
#statistics.update();
#statistics.discard("dummy");
#
#m:= statistics.getMin("dummy");
#io.print(m);
#catch MALException:str;
#	io.print(MALException);
#	io.print("could not get minimum from dummy");
#exit MALException;
#
#mx:= statistics.getMax("dummy");
#io.print(mx);
#catch MALException:str;
#	io.print(MALException);
#	io.print("could not get maximum from dummy");
#exit MALException;
#
#
#statistics.dump();
#
function user.main():void;              #  0 main:void := user.main() {G}
# Testing the statistics table 
    b := bat.new(:int,:int);            #  2 b:bat[:int,:int] := CMDBATnew(_3:int, _3:int) {G}
    bat.insert(b,1,2);                  #  3 _4:void := BKCinsert_bun(b:bat[:int,:int], _5:int, _6:int) 
    bat.setName(b,"dummy");             #  4 _7:void := BKCsetName(b:bat[:int,:int], _8:str) 
    statistics.open();                  #  5 _9:void := STATopen() 
    statistics.dump();                  #  6 _10:void := STATdump() 
# add the bat to the statistics table 
    statistics.deposit(b);              #  8 _12:void := STATdeposit(b:bat[:int,:int]) 
    statistics.update();                #  9 _13:void := STATupdate() 
    m := statistics.getMin("dummy");    # 10 m:lng := STATgetMin(_8:str) 
    io.print(m);                        # 11 _15:void := IOprint_val(m:lng) 
catch MALException:str ;                # 12 MALException:str {J15}
    io.print(MALException);             # 13 _17:void := IOprint_val(MALException:str) 
    io.print("could not get minimum from dummy");# 14 _18:void := IOprint_val(_19:str) 
exit MALException:str ;                 # 15 MALException:str 
    mx := statistics.getMax("dummy");   # 16 mx:lng := STATgetMax(_8:str) 
    io.print(mx);                       # 17 _21:void := IOprint_val(mx:lng) 
catch MALException:str ;                # 18 MALException:str {J21}
    io.print(MALException);             # 19 _22:void := IOprint_val(MALException:str) 
    io.print("could not get maximum from dummy");# 20 _23:void := IOprint_val(_24:str) 
exit MALException:str ;                 # 21 MALException:str 
    statistics.discard("dummy");        # 22 _25:void := STATdiscard(_8:str) 
    statistics.dump();                  # 23 _26:void := STATdump() 
end main;	# 24  
#-------------------------------------------------#
# t	t	t	t	t	t	  # name
# str	lng	lng	lng	lng	str	  # type
#-------------------------------------------------#
[ 2 ]
[ 2 ]
#-----------------------------------------------------------------#
# t		t	t	t	t	t		  # name
# str		lng	lng	lng	lng	str		  # type
#-------------------------------------------------#

# 21:02:28 >  
# 21:02:28 >  Done.
# 21:02:28 >  

