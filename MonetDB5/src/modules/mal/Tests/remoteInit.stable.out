stdout of test 'remoteInit` in directory 'src/modules/mal` itself:


# 01:39:39 >  
# 01:39:39 >   mserver5 "--config=/ufs/mk/monet5//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=34180 --set xrpc_port=47788 --set monet_prompt= --trace  --dbname=mTests_src_modules_mal  remoteInit.mal
# 01:39:39 >  

# MonetDB server v5.8.0, based on kernel v1.26.0
# Serving database 'mTests_src_modules_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:34180/
function user.remote_internal_servegetbat(type:str,o:bat[:any_1,:any_2]):void;#  0 remote_internal_servegetbat:void := user.remote_internal_servegetbat(type:str, o:bat[:any_1,:any_2]) {PG}
    t := inspect.getType(o);            #  1 t:str := INSPECTtypeName(o:bat[:any_1,:any_2]) {G}
barrier ifpart := calc.==(type,t);      #  2 ifpart:bit := CALCcompEQstrstr(type:str, t:str) {J6}
    len := aggr.count(o);               #  3 len:wrd := ALGcount_bat(o:bat[:any_1,:any_2]) 
    io.print(len);                      #  4 _6:void := IOprint_val(len:wrd) 
    io.print(o);                        #  5 _7:void := IOprint_val(o:bat[:any_1,:any_2]) 
exit ifpart;                            #  6 ifpart:bit 
barrier ifpart := calc.isnil(type);     #  7 ifpart:bit := CALCisnil_str(type:str) {J9}
    io.printf("!MALException:user.serveget:nil type doesn't match anything\n");#  8 _8:void := IOprintf(_9:str) 
exit ifpart;                            #  9 ifpart:bit 
barrier ifpart := calc.!=(type,t);      # 10 ifpart:bit := CALCcompNEQstrstr(type:str, t:str) {J13}
    io.printf("!MALException:user.serveget:object type (%s) ",t);# 11 _10:void := IOprintf(_11:str, t:str) 
    io.printf("does not match required type (%s)\n",type);# 12 _12:void := IOprintf(_13:str, type:str) 
exit ifpart;                            # 13 ifpart:bit 
end remote_internal_servegetbat;        # 14  
function user.remote_internal_serveget(type:str,o:any):void;#  0 remote_internal_serveget:void := user.remote_internal_serveget(type:str, o:any) {PG}
    t := inspect.getType(o);            #  1 t:str := INSPECTtypeName(o:any) {G}
barrier ifpart := calc.==(type,t);      #  2 ifpart:bit := CALCcompEQstrstr(type:str, t:str) {J4}
    io.print(o);                        #  3 _5:void := IOprint_val(o:any) 
exit ifpart;                            #  4 ifpart:bit 
barrier ifpart := calc.isnil(type);     #  5 ifpart:bit := CALCisnil_str(type:str) {J7}
    io.printf("!MALException:user.serveget:nil type doesn't match anything\n");#  6 _6:void := IOprintf(_7:str) 
exit ifpart;                            #  7 ifpart:bit 
barrier ifpart := calc.!=(type,t);      #  8 ifpart:bit := CALCcompNEQstrstr(type:str, t:str) {J11}
    io.printf("!MALException:user.serveget:object type (%s) ",t);#  9 _8:void := IOprintf(_9:str, t:str) 
    io.printf("does not match required type (%s)\n",type);# 10 _10:void := IOprintf(_11:str, type:str) 
exit ifpart;                            # 11 ifpart:bit 
end remote_internal_serveget;           # 12  
function user.main():void;              #  0 main:void := user.main() {G}
#test basic interaction scheme 
    remote_test_id_0 := bat.new(:int,:str,33);#  2 remote_test_id_0:bat[:int,:str] := CMDBATnewint(_3:int, _4:str, _5:int) {G}
    bat.insert(remote_test_id_0,0:int,"void":str);#  3 _6:bat[:int,:str] := BKCinsert_bun(remote_test_id_0:bat[:int,:str], _7:int, _8:str) {G}
    user.remote_internal_servegetbat("bat[:int,:str]",remote_test_id_0);#  4 _9:void := user.remote_internal_servegetbat(_10:str, remote_test_id_0:bat[:int,:str]) 
end main;                               #  5  
[ 1 ]
#-----------------#
# h	t	  # name
# int	str	  # type
#-----------------#
[ 0,	  "void"  ]

# 01:39:39 >  
# 01:39:39 >  Done.
# 01:39:39 >  

