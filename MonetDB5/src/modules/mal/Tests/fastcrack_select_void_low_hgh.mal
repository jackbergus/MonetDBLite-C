# The first reference case for fast cracking

include microbenchmark;
include crackers;

tuples:=1024;
values:= tuples;
io.printf(" tuples %d\n",tuples);
io.printf(" values %d\n",values);

b:= microbenchmark.uniform(0@0,tuples,values);
size:= bat.getBatSize(b);
io.printf(" BAT size %d\n",size);

n:=100;
t:=0:lng;
barrier (go,i):= (true,0);
	b:= microbenchmark.uniform(0@0,tuples,values);
	e:= algebra.markH(b,0@0); # VID-view
	d:= algebra.copy(e);      # real VID
	low:int:= mmath.rand();
	low := low % values;
	hgh:int:= mmath.rand();
	hgh := hgh % values;
	redo go := low>hgh;

t0:= alarm.usec();
	c:=algebra.select(d,low,hgh);
t1:= alarm.usec();
	time:= t1 - t0;
	t := t + time;
	io.print(values,low,hgh,time);

	values:int:= mmath.rand();
	values:= values % tuples;
	values:= values + 1;

	redo (go,i):= mal.nextElement(1,n);
exit (go,i);

io.print("");
t := t / n;
io.print("VID low,hgh",t);
