stdout of test 'chopper01` in directory 'src/modules/mal` itself:


# 00:03:53 >  
# 00:03:53 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=33330 --set sql_port=49911 --set xquery_port=56575 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  chopper01.mal </dev/null
# 00:03:53 >  

!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
#	t:= bbp.new(:int, :url);
#	cb_a := url.url("http://www.cwi.nl");
#	db_a := bat.insert(t,1,cb_a);
#	eb_a := url.url("http://www.cwi.nl/~monet");
#	fb_a := bat.insert(t,2,eb_a);
#	gb_a := url.url("http://www.cwi.nl/~mk/Acoi/doc/features.html");
#	hb_a := bat.insert(t,3,gb_a);
#	ib_a := url.url("http://www.educ.uva.nl/schoolweb/rocloka.htm");
#	jb_a := bat.insert(t,4,ib_a);
#	kb_a := url.url("http://www.nedstat.nl/cgi-bin/viewstat?name=Planetarium");
#	lb_a := bat.insert(t,5,kb_a);
#	mb_a := url.url("http://www.edgeonline.com/");
#	nb_a := bat.insert(t,6,mb_a);
#	ob_a := url.url("http://robotics.stanford.edu/icons/ ");
#	pb_a := bat.insert(t,7,ob_a);
#	qb_a := io.print("build a table finished");
#	io.print(t);
#
#	rb:= bbp.new(:int,:url);
#	io.print("start loop");
#barrier (mloop:lng,h:int,B2:url) := chopper.newIterator(t);
#	io.print(B2);
#	redo (mloop:lng,h:int,B2:url) := chopper.hasMoreElements(t);
#exit mloop;
#
#
function user.main():void;              #  0 main:void {G}
    t := bat.new(:int,:url);            #  1 t:bat[:int,:url] := CMDBATnew(_2:int, _3:url) {G}
    cb_a := url.url("http://www.cwi.nl");#  2 cb_a:url := URLnew(_5:str) {G}
    db_a := bat.insert(t,1,cb_a);       #  3 db_a:void := BKCinsert_bun(t:bat[:int,:url], _7:int, cb_a:url) 
    eb_a := url.url("http://www.cwi.nl/~monet");#  4 eb_a:url := URLnew(_9:str) {G}
    fb_a := bat.insert(t,2,eb_a);       #  5 fb_a:void := BKCinsert_bun(t:bat[:int,:url], _11:int, eb_a:url) 
    gb_a := url.url("http://www.cwi.nl/~mk/Acoi/doc/features.html");#  6 gb_a:url := URLnew(_13:str) {G}
    hb_a := bat.insert(t,3,gb_a);       #  7 hb_a:void := BKCinsert_bun(t:bat[:int,:url], _15:int, gb_a:url) 
    ib_a := url.url("http://www.educ.uva.nl/schoolweb/rocloka.htm");#  8 ib_a:url := URLnew(_17:str) {G}
    jb_a := bat.insert(t,4,ib_a);       #  9 jb_a:void := BKCinsert_bun(t:bat[:int,:url], _19:int, ib_a:url) 
    kb_a := url.url("http://www.nedstat.nl/cgi-bin/viewstat?name=Planetarium");# 10 kb_a:url := URLnew(_21:str) {G}
    lb_a := bat.insert(t,5,kb_a);       # 11 lb_a:void := BKCinsert_bun(t:bat[:int,:url], _23:int, kb_a:url) 
    mb_a := url.url("http://www.edgeonline.com/");# 12 mb_a:url := URLnew(_25:str) {G}
    nb_a := bat.insert(t,6,mb_a);       # 13 nb_a:void := BKCinsert_bun(t:bat[:int,:url], _27:int, mb_a:url) 
    ob_a := url.url("http://robotics.stanford.edu/icons/ ");# 14 ob_a:url := URLnew(_29:str) {G}
    pb_a := bat.insert(t,7,ob_a);       # 15 pb_a:void := BKCinsert_bun(t:bat[:int,:url], _31:int, ob_a:url) 
    qb_a := io.print("build a table finished");# 16 qb_a:void := IOprint_val(_33:str) 
    io.print(t);                        # 17 _34:void := IOprint_val(t:bat[:int,:url]) 
    rb := bat.new(:int,:url);           # 18 rb:bat[:int,:url] := CMDBATnew(_2:int, _3:url) {G}
    io.print("start loop");             # 19 _36:void := IOprint_val(_37:str) 
barrier (mloop:lng ,h:int ,B2:url ):= bat.newIterator(t);# 20 (mloop:lng, h:int, B2:url) := CHPbunIterator(t:bat[:int,:url]) {GJ23}
    io.print(B2);                       # 21 _41:void := IOprint_val(B2:url) 
    redo (mloop:lng ,h:int ,B2:url ):= bat.hasMoreElements(t);# 22 (mloop:lng, h:int, B2:url) := CHPbunHasMoreElements(t:bat[:int,:url]) {GJ21}
exit mloop:lng ;                        # 23 mloop:lng 
end main;	# 24  
[ "build a table finished" ]
#-------------------------------------------------------------------------#
# h	t								  # name
# int	url								  # type
#-------------------------------------------------------------------------#
[ 1,	  "http://www.cwi.nl"						  ]
[ 2,	  "http://www.cwi.nl/~monet"					  ]
[ 3,	  "http://www.cwi.nl/~mk/Acoi/doc/features.html"		  ]
[ 4,	  "http://www.educ.uva.nl/schoolweb/rocloka.htm"		  ]
[ 5,	  "http://www.nedstat.nl/cgi-bin/viewstat?name=Planetarium"	  ]
[ 6,	  "http://www.edgeonline.com/"					  ]
[ 7,	  "http://robotics.stanford.edu/icons/ "			  ]
[ "start loop" ]
[ "http://www.cwi.nl" ]
[ "http://www.cwi.nl/~monet" ]
[ "http://www.cwi.nl/~mk/Acoi/doc/features.html" ]
[ "http://www.educ.uva.nl/schoolweb/rocloka.htm" ]
[ "http://www.nedstat.nl/cgi-bin/viewstat?name=Planetarium" ]
[ "http://www.edgeonline.com/" ]
[ "http://robotics.stanford.edu/icons/ " ]

# 00:03:53 >  
# 00:03:53 >  Done.
# 00:03:53 >  

