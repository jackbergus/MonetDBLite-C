stdout of test 'ascii_io2` in directory 'src/modules/mal` itself:


# 21:10:47 >  
# 21:10:47 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/monet5/Linux/lib64/MonetDB5/lib:/ufs/mk/monet5/Linux/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/sql_logs" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/xquery_logs" --set mapi_port=37620 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  ascii_io2.mal < /dev/null
# 21:10:47 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
#namebat := bat.new(:void, :str);
#bat.setSequenceBase(namebat,0@0);
#bat.append(namebat,"tmpdocs");
#bat.append(namebat,"tmpterms");
#
#sepbat := bat.new(:void, :str);
#bat.setSequenceBase(sepbat,0@0);
#bat.append(sepbat,",");
#bat.append(sepbat,"\n");
#
#typebat := bat.new(:void, :str);
#bat.setSequenceBase(typebat,0@0);
#bat.append(typebat,"str");
#bat.append(typebat,"str");
#
#len := 20;
#targetdir := unix.getenv("TSTTRGDIR");
#barrier correct:= targetdir == "";
#	targetdir := unix.getenv("PWD");
#	targetdir := targetdir + "/";
#exit correct;
#
#datafile := targetdir + "ascii_io2.load";
#io.printf("#source:%s\n",datafile);
#
#idxbat := tablet.load(namebat, sepbat, typebat, datafile, len);
#io.print(idxbat);
#
#i1 := algebra.fetch(idxbat,0);
#b1 := bbp.find(i1);
#io.print(b1);
#
#i2 := algebra.fetch(idxbat,1); 
#b2 := bbp.find(i2);
#io.print(b2);
#
function user.main():void;	# 0  (main:void)
    namebat := bat.new(:void,:str);	# 1 CMDBATnew (namebat:bat[:void,:str])<-(_2:void)(_3:str)
    bat.setSequenceBase(namebat,0@0);	# 2 BKCsetSequenceBase (_4:bat[:void,:str])<-(namebat:bat[:void,:str])(_5:oid)
    bat.append(namebat,"tmpdocs");	# 3 BKCappend_val_wrap (_6:void)<-(namebat:bat[:void,:str])(_7:str)
    bat.append(namebat,"tmpterms");	# 4 BKCappend_val_wrap (_8:void)<-(namebat:bat[:void,:str])(_9:str)
    sepbat := bat.new(:void,:str);	# 5 CMDBATnew (sepbat:bat[:void,:str])<-(_2:void)(_3:str)
    bat.setSequenceBase(sepbat,0@0);	# 6 BKCsetSequenceBase (_11:bat[:void,:str])<-(sepbat:bat[:void,:str])(_5:oid)
    bat.append(sepbat,",");	# 7 BKCappend_val_wrap (_12:void)<-(sepbat:bat[:void,:str])(_13:str)
    bat.append(sepbat,"\\n");	# 8 BKCappend_val_wrap (_14:void)<-(sepbat:bat[:void,:str])(_15:str)
    typebat := bat.new(:void,:str);	# 9 CMDBATnew (typebat:bat[:void,:str])<-(_2:void)(_3:str)
    bat.setSequenceBase(typebat,0@0);	# 10 BKCsetSequenceBase (_17:bat[:void,:str])<-(typebat:bat[:void,:str])(_5:oid)
    bat.append(typebat,"str");	# 11 BKCappend_val_wrap (_18:void)<-(typebat:bat[:void,:str])(_19:str)
    bat.append(typebat,"str");	# 12 BKCappend_val_wrap (_20:void)<-(typebat:bat[:void,:str])(_19:str)
    len := 20;	# 13  (len:int)<-(_22:int)
    targetdir := unix.getenv("TSTTRGDIR");	# 14 UNIXgetenv (targetdir:str)<-(_24:str)
barrier correct := calc.==(targetdir,"");	# 15 CALCcompEQstrstr (correct:bit)<-(targetdir:str)(_26:str) jump 18
    targetdir := unix.getenv("PWD");	# 16 UNIXgetenv (targetdir:str)<-(_27:str)
    targetdir := calc.+(targetdir,"/");	# 17 CALCstrConcat (targetdir:str)<-(targetdir:str)(_28:str)
exit correct;	# 18  (correct:bit)
    datafile := calc.+(targetdir,"ascii_io2.load");	# 19 CALCstrConcat (datafile:str)<-(targetdir:str)(_30:str)
    io.printf("#source:%s\n",datafile);	# 20 IOprint_formatted_str (_31:int)<-(_32:str)(datafile:str)
    idxbat := tablet.load(namebat,sepbat,typebat,datafile,len);	# 21 CMDtablet_load (idxbat:bat[:str,:BAT])<-(namebat:bat[:void,:str])(sepbat:bat[:void,:str])(typebat:bat[:void,:str])(datafile:str)(len:int)
    io.print(idxbat);	# 22 IOprint_val (_34:int)<-(idxbat:bat[:str,:BAT])
    i1 := algebra.fetch(idxbat,0);	# 23 ALGfetchint (i1:BAT)<-(idxbat:bat[:str,:BAT])(_36:int)
    b1 := bbp.find(i1);	# 24 CMDbbpbindindex (b1:bat[:any,:any])<-(i1:BAT)
    io.print(b1);	# 25 IOprint_val (_38:int)<-(b1:bat[:any,:any])
    i2 := algebra.fetch(idxbat,1);	# 26 ALGfetchint (i2:BAT)<-(idxbat:bat[:str,:BAT])(_40:int)
    b2 := bbp.find(i2);	# 27 CMDbbpbindindex (b2:bat[:any,:any])<-(i2:BAT)
    io.print(b2);	# 28 IOprint_val (_42:int)<-(b2:bat[:any,:any])
end main;	# 29  
#source:/ufs/mk/monet5/Linux/mTests/src/modules/malascii_io2.load
!ERROR: could not open file /ufs/mk/monet5/Linux/mTests/src/modules/malascii_io2.load
!ERROR: MALexception:tablet.load:Failed to load

# 21:10:47 >  
# 21:10:47 >  Done.
# 21:10:47 >  

