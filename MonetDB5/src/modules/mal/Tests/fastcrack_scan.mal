# The first reference case for fast cracking

include microbenchmark;

tuples:= 1; #67108864= 64* 1024*1024
tuples:= tuples * 1024;
tuples:= tuples * 1024;
values:= tuples;
io.printf(" tuples %d\n",tuples);
io.printf(" values %d\n",values);

b:= microbenchmark.uniform(0@0,tuples,values);
size:= bat.getBatSize(b);
io.printf(" BAT size %d\n",size);

n:=20;
t:=0:lng;
barrier (go,i):= (true,0);
	b:= microbenchmark.uniform(0@0,tuples,values);

t0:= alarm.usec();
	c:=algebra.select(b,-2,-1);
t1:= alarm.usec();
	time:= t1 - t0;
	t := t + time;
	v := aggr.count(c);
	io.print(values,-1,time,v);

	values:int:= mmath.rand();
	values:= values % tuples;
	values:= values + 1;

	redo (go,i):= mal.nextElement(1,n);
exit (go,i);

io.print("");
t := t / n;
io.print("scan",t);
