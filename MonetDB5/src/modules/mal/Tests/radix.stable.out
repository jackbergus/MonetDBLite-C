stdout of test 'radix` in directory 'src/modules/mal` itself:


# 13:57:31 >  
# 13:57:31 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=32697 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  radix.mal < /dev/null
# 13:57:31 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
#include radix;
#Bu := radix.uniform(99);
#Bu0 := algebra.project(Bu,nil);
#io.print(Bu0);
#Bu1 := bat.reverse(Bu);
#Bu2 := algebra.project(Bu1,nil);
#Bu3 := algebra.sort(Bu2);
#Bu4 := bat.reverse(Bu3);
#io.print(Bu4);
#Bn := radix.normal(99);
#Bn0 := algebra.project(Bn,nil);
#io.print(Bn0);
#Bn1 := bat.reverse(Bn);
#Bn2 := algebra.project(Bn1,nil);
#Bn3 := algebra.sort(Bn2);
#Bn4 := bat.reverse(Bn3);
#io.print(Bn4);
#
#b := radix.uniform(16); a := algebra.markH(b,0@0);
#
#a0 := radix.radix_cluster(b,1);      b0 := algebra.markH(a0,0@0); c0 := batcalc.and(b0, 1);
#a1 := radix.radix_cluster(b,2);      b1 := algebra.markH(a1,0@0); c1 := batcalc.and(b1, 3);
#a2 := radix.radix_cluster(b,3);      b2 := algebra.markH(a2,0@0); c2 := batcalc.and(b2, 7);
#a3 := radix.radix_cluster(b,2,1);    b3 := algebra.markH(a3,0@0); c3 := batcalc.and(b3, 7);
#a4 := radix.radix_cluster(b,1,2);    b4 := algebra.markH(a4,0@0); c4 := batcalc.and(b4, 7);
#a5 := radix.radix_cluster(b,1,1,1);  b5 := algebra.markH(a5,0@0); c5 := batcalc.and(b5, 7);
#a6 := radix.radix_cluster(b,4);      b6 := algebra.markH(a6,0@0); c6 := batcalc.and(b6,15);
#a7 := radix.radix_cluster(b,-3,1);   b7 := algebra.markH(a7,0@0); c7 := batcalc.and(b7, 8);
#a8 := radix.radix_cluster(b,-2,2);   b8 := algebra.markH(a8,0@0); c8 := batcalc.and(b8,12);
#a9 := radix.radix_cluster(b,-1,1,1); b9 := algebra.markH(a9,0@0); c9 := batcalc.and(b9, 6);
#
#io.print(a,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9);
#io.print(a,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9);
#
#a0 := radix.radix_cluster2(b,1,1,0); b0 := algebra.markH(a0,0@0); c0 := batcalc.and(b0, 1);
#a1 := radix.radix_cluster2(b,1,2,0); b1 := algebra.markH(a1,0@0); c1 := batcalc.and(b1, 3);
#a2 := radix.radix_cluster2(b,1,3,0); b2 := algebra.markH(a2,0@0); c2 := batcalc.and(b2, 7);
#a3 := radix.radix_cluster2(b,2,3,0); b3 := algebra.markH(a3,0@0); c3 := batcalc.and(b3, 7);
#a4 := radix.radix_cluster2(b,2,3,0); b4 := algebra.markH(a4,0@0); c4 := batcalc.and(b4, 7);
#a5 := radix.radix_cluster2(b,3,3,0); b5 := algebra.markH(a5,0@0); c5 := batcalc.and(b5, 7);
#a6 := radix.radix_cluster2(b,1,4,0); b6 := algebra.markH(a6,0@0); c6 := batcalc.and(b6,15);
#a7 := radix.radix_cluster2(b,1,1,3); b7 := algebra.markH(a7,0@0); c7 := batcalc.and(b7, 8);
#a8 := radix.radix_cluster2(b,1,2,2); b8 := algebra.markH(a8,0@0); c8 := batcalc.and(b8,12);
#a9 := radix.radix_cluster2(b,2,2,1); b9 := algebra.markH(a9,0@0); c9 := batcalc.and(b9, 6);
#
#io.print(a,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9);
#io.print(a,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9);
#
#d0 := bat.reverse(b0); e0 := radix.radix_bits(d0); io.print(e0);
#d1 := bat.reverse(b1); e1 := radix.radix_bits(d1); io.print(e1);
#d2 := bat.reverse(b2); e2 := radix.radix_bits(d2); io.print(e2);
#d3 := bat.reverse(b3); e3 := radix.radix_bits(d3); io.print(e3);
#d4 := bat.reverse(b4); e4 := radix.radix_bits(d4); io.print(e4);
#d5 := bat.reverse(b5); e5 := radix.radix_bits(d5); io.print(e5);
#d6 := bat.reverse(b6); e6 := radix.radix_bits(d6); io.print(e6);
#d7 := bat.reverse(b7); e7 := radix.radix_bits(d7); io.print(e7);
#d8 := bat.reverse(b8); e8 := radix.radix_bits(d8); io.print(e8);
#d9 := bat.reverse(b9); e9 := radix.radix_bits(d9); io.print(e9);
#
#rb3d4 := radix.radix_join(b3,d4);
#rb2d5 := radix.radix_join(b2,d5);
#pb3d4 := radix.phash_join(b3,d4);
#pb2d5 := radix.phash_join(b2,d5);
#
#io.print(rb3d4,rb2d5,pb3d4,pb2d5);
#
#l0 := radix.uniform(15); l1 := radix.radix_cluster(l0,2); l := algebra.markH(l1,0@0);
#r0 := radix.uniform(17); r1 := radix.radix_cluster(r0,2); r2 := algebra.markH(r1,0@0); r := bat.reverse(r2);
#
#jlr := algebra.join(l,r);
#rlr := radix.radix_join(l,r);
#rlr2 := radix.radix_join(l,r,2);
#plr := radix.phash_join(l,r);
#plr2 := radix.phash_join(l,r,2);
#
#io.print(jlr,rlr,rlr2,plr,plr2);
#
#
function user.main():void;	# 0  (main:void)
#line 601 "/ufs/mk/monet5/src/modules/mal/radix.mx" 	# 1  (_1:str)
#line 961 "/ufs/mk/monet5/src/modules/mal/radix.mx" 	# 2  (_2:str)
#line 1201 "/ufs/mk/monet5/src/modules/mal/radix.mx" 	# 3  (_3:str)
    Bu := radix.uniform(99);	# 4 M5_RDX_BATuniform_bd (Bu:bat[:oid,:int])<-(_5:int)
    Bu0 := algebra.project(Bu,nil:void);	# 5 CMDBBPproject (Bu0:bat[:oid,:void])<-(Bu:bat[:oid,:int])(_7:void)
    io.print(Bu0);	# 6 IOprint_val (_8:int)<-(Bu0:bat[:oid,:void])
    Bu1 := bat.reverse(Bu);	# 7 BKCreverse (Bu1:bat[:int,:oid])<-(Bu:bat[:oid,:int])
    Bu2 := algebra.project(Bu1,nil:void);	# 8 CMDBBPproject (Bu2:bat[:int,:void])<-(Bu1:bat[:int,:oid])(_7:void)
    Bu3 := algebra.sort(Bu2);	# 9 ALGhsort (Bu3:bat[:int,:void])<-(Bu2:bat[:int,:void])
    Bu4 := bat.reverse(Bu3);	# 10 BKCreverse (Bu4:bat[:void,:int])<-(Bu3:bat[:int,:void])
    io.print(Bu4);	# 11 IOprint_val (_13:int)<-(Bu4:bat[:void,:int])
    Bn := radix.normal(99);	# 12 M5_RDX_BATnormal_bdvm (Bn:bat[:oid,:int])<-(_5:int)
    Bn0 := algebra.project(Bn,nil:void);	# 13 CMDBBPproject (Bn0:bat[:oid,:void])<-(Bn:bat[:oid,:int])(_7:void)
    io.print(Bn0);	# 14 IOprint_val (_16:int)<-(Bn0:bat[:oid,:void])
    Bn1 := bat.reverse(Bn);	# 15 BKCreverse (Bn1:bat[:int,:oid])<-(Bn:bat[:oid,:int])
    Bn2 := algebra.project(Bn1,nil:void);	# 16 CMDBBPproject (Bn2:bat[:int,:void])<-(Bn1:bat[:int,:oid])(_7:void)
    Bn3 := algebra.sort(Bn2);	# 17 ALGhsort (Bn3:bat[:int,:void])<-(Bn2:bat[:int,:void])
    Bn4 := bat.reverse(Bn3);	# 18 BKCreverse (Bn4:bat[:void,:int])<-(Bn3:bat[:int,:void])
    io.print(Bn4);	# 19 IOprint_val (_21:int)<-(Bn4:bat[:void,:int])
    b := radix.uniform(16);	# 20 M5_RDX_BATuniform_bd (b:bat[:oid,:int])<-(_23:int)
    a := algebra.markH(b,0@0);	# 21 ALGmarkHead (a:bat[:void,:int])<-(b:bat[:oid,:int])(_25:oid)
    a0 := radix.radix_cluster(b,1);	# 22 M5_RDX_radix_cluster_lp (a0:bat[:oid,:int])<-(b:bat[:oid,:int])(_27:int)
    b0 := algebra.markH(a0,0@0);	# 23 ALGmarkHead (b0:bat[:void,:int])<-(a0:bat[:oid,:int])(_25:oid)
    c0 := batcalc.and(b0,1);	# 24 CMDbatANDcst_int_int_int (c0:bat[:void,:int])<-(b0:bat[:void,:int])(_27:int)
    a1 := radix.radix_cluster(b,2);	# 25 M5_RDX_radix_cluster_lp (a1:bat[:oid,:int])<-(b:bat[:oid,:int])(_31:int)
    b1 := algebra.markH(a1,0@0);	# 26 ALGmarkHead (b1:bat[:void,:int])<-(a1:bat[:oid,:int])(_25:oid)
    c1 := batcalc.and(b1,3);	# 27 CMDbatANDcst_int_int_int (c1:bat[:void,:int])<-(b1:bat[:void,:int])(_34:int)
    a2 := radix.radix_cluster(b,3);	# 28 M5_RDX_radix_cluster_lp (a2:bat[:oid,:int])<-(b:bat[:oid,:int])(_34:int)
    b2 := algebra.markH(a2,0@0);	# 29 ALGmarkHead (b2:bat[:void,:int])<-(a2:bat[:oid,:int])(_25:oid)
    c2 := batcalc.and(b2,7);	# 30 CMDbatANDcst_int_int_int (c2:bat[:void,:int])<-(b2:bat[:void,:int])(_38:int)
    a3 := radix.radix_cluster(b,2,1);	# 31 M5_RDX_radix_cluster_lp (a3:bat[:oid,:int])<-(b:bat[:oid,:int])(_31:int)(_27:int)
    b3 := algebra.markH(a3,0@0);	# 32 ALGmarkHead (b3:bat[:void,:int])<-(a3:bat[:oid,:int])(_25:oid)
    c3 := batcalc.and(b3,7);	# 33 CMDbatANDcst_int_int_int (c3:bat[:void,:int])<-(b3:bat[:void,:int])(_38:int)
    a4 := radix.radix_cluster(b,1,2);	# 34 M5_RDX_radix_cluster_lp (a4:bat[:oid,:int])<-(b:bat[:oid,:int])(_27:int)(_31:int)
    b4 := algebra.markH(a4,0@0);	# 35 ALGmarkHead (b4:bat[:void,:int])<-(a4:bat[:oid,:int])(_25:oid)
    c4 := batcalc.and(b4,7);	# 36 CMDbatANDcst_int_int_int (c4:bat[:void,:int])<-(b4:bat[:void,:int])(_38:int)
    a5 := radix.radix_cluster(b,1,1,1);	# 37 M5_RDX_radix_cluster_lp (a5:bat[:oid,:int])<-(b:bat[:oid,:int])(_27:int)(_27:int)(_27:int)
    b5 := algebra.markH(a5,0@0);	# 38 ALGmarkHead (b5:bat[:void,:int])<-(a5:bat[:oid,:int])(_25:oid)
    c5 := batcalc.and(b5,7);	# 39 CMDbatANDcst_int_int_int (c5:bat[:void,:int])<-(b5:bat[:void,:int])(_38:int)
    a6 := radix.radix_cluster(b,4);	# 40 M5_RDX_radix_cluster_lp (a6:bat[:oid,:int])<-(b:bat[:oid,:int])(_49:int)
    b6 := algebra.markH(a6,0@0);	# 41 ALGmarkHead (b6:bat[:void,:int])<-(a6:bat[:oid,:int])(_25:oid)
    c6 := batcalc.and(b6,15);	# 42 CMDbatANDcst_int_int_int (c6:bat[:void,:int])<-(b6:bat[:void,:int])(_52:int)
    a7 := radix.radix_cluster(b,-3,1);	# 43 M5_RDX_radix_cluster_lp (a7:bat[:oid,:int])<-(b:bat[:oid,:int])(_54:int)(_27:int)
    b7 := algebra.markH(a7,0@0);	# 44 ALGmarkHead (b7:bat[:void,:int])<-(a7:bat[:oid,:int])(_25:oid)
    c7 := batcalc.and(b7,8);	# 45 CMDbatANDcst_int_int_int (c7:bat[:void,:int])<-(b7:bat[:void,:int])(_57:int)
    a8 := radix.radix_cluster(b,-2,2);	# 46 M5_RDX_radix_cluster_lp (a8:bat[:oid,:int])<-(b:bat[:oid,:int])(_59:int)(_31:int)
    b8 := algebra.markH(a8,0@0);	# 47 ALGmarkHead (b8:bat[:void,:int])<-(a8:bat[:oid,:int])(_25:oid)
    c8 := batcalc.and(b8,12);	# 48 CMDbatANDcst_int_int_int (c8:bat[:void,:int])<-(b8:bat[:void,:int])(_62:int)
    a9 := radix.radix_cluster(b,-1,1,1);	# 49 M5_RDX_radix_cluster_lp (a9:bat[:oid,:int])<-(b:bat[:oid,:int])(_64:int)(_65:int)(_65:int)
    b9 := algebra.markH(a9,0@0);	# 50 ALGmarkHead (b9:bat[:void,:int])<-(a9:bat[:oid,:int])(_67:oid)
    c9 := batcalc.and(b9,6);	# 51 CMDbatANDcst_int_int_int (c9:bat[:void,:int])<-(b9:bat[:void,:int])(_69:int)
    io.print(a,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9);	# 52 IOtable (_70:int)<-(a:bat[:void,:int])(b0:bat[:void,:int])(b1:bat[:void,:int])(b2:bat[:void,:int])(b3:bat[:void,:int])(b4:bat[:void,:int])(b5:bat[:void,:int])(b6:bat[:void,:int])(b7:bat[:void,:int])(b8:bat[:void,:int])(b9:bat[:void,:int])
    io.print(a,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9);	# 53 IOtable (_71:int)<-(a:bat[:void,:int])(c0:bat[:void,:int])(c1:bat[:void,:int])(c2:bat[:void,:int])(c3:bat[:void,:int])(c4:bat[:void,:int])(c5:bat[:void,:int])(c6:bat[:void,:int])(c7:bat[:void,:int])(c8:bat[:void,:int])(c9:bat[:void,:int])
    a0 := radix.radix_cluster2(b,1,1,0);	# 54 M5_RDX_radix_cluster2 (a0:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_65:int)(_72:int)
    b0 := algebra.markH(a0,0@0);	# 55 ALGmarkHead (b0:bat[:void,:int])<-(a0:bat[:oid,:int])(_67:oid)
    c0 := batcalc.and(b0,1);	# 56 CMDbatANDcst_int_int_int (c0:bat[:void,:int])<-(b0:bat[:void,:int])(_65:int)
    a1 := radix.radix_cluster2(b,1,2,0);	# 57 M5_RDX_radix_cluster2 (a1:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_73:int)(_72:int)
    b1 := algebra.markH(a1,0@0);	# 58 ALGmarkHead (b1:bat[:void,:int])<-(a1:bat[:oid,:int])(_67:oid)
    c1 := batcalc.and(b1,3);	# 59 CMDbatANDcst_int_int_int (c1:bat[:void,:int])<-(b1:bat[:void,:int])(_74:int)
    a2 := radix.radix_cluster2(b,1,3,0);	# 60 M5_RDX_radix_cluster2 (a2:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_74:int)(_72:int)
    b2 := algebra.markH(a2,0@0);	# 61 ALGmarkHead (b2:bat[:void,:int])<-(a2:bat[:oid,:int])(_67:oid)
    c2 := batcalc.and(b2,7);	# 62 CMDbatANDcst_int_int_int (c2:bat[:void,:int])<-(b2:bat[:void,:int])(_75:int)
    a3 := radix.radix_cluster2(b,2,3,0);	# 63 M5_RDX_radix_cluster2 (a3:bat[:oid,:int])<-(b:bat[:oid,:int])(_73:int)(_74:int)(_72:int)
    b3 := algebra.markH(a3,0@0);	# 64 ALGmarkHead (b3:bat[:void,:int])<-(a3:bat[:oid,:int])(_67:oid)
    c3 := batcalc.and(b3,7);	# 65 CMDbatANDcst_int_int_int (c3:bat[:void,:int])<-(b3:bat[:void,:int])(_75:int)
    a4 := radix.radix_cluster2(b,2,3,0);	# 66 M5_RDX_radix_cluster2 (a4:bat[:oid,:int])<-(b:bat[:oid,:int])(_73:int)(_74:int)(_72:int)
    b4 := algebra.markH(a4,0@0);	# 67 ALGmarkHead (b4:bat[:void,:int])<-(a4:bat[:oid,:int])(_67:oid)
    c4 := batcalc.and(b4,7);	# 68 CMDbatANDcst_int_int_int (c4:bat[:void,:int])<-(b4:bat[:void,:int])(_75:int)
    a5 := radix.radix_cluster2(b,3,3,0);	# 69 M5_RDX_radix_cluster2 (a5:bat[:oid,:int])<-(b:bat[:oid,:int])(_74:int)(_74:int)(_72:int)
    b5 := algebra.markH(a5,0@0);	# 70 ALGmarkHead (b5:bat[:void,:int])<-(a5:bat[:oid,:int])(_67:oid)
    c5 := batcalc.and(b5,7);	# 71 CMDbatANDcst_int_int_int (c5:bat[:void,:int])<-(b5:bat[:void,:int])(_75:int)
    a6 := radix.radix_cluster2(b,1,4,0);	# 72 M5_RDX_radix_cluster2 (a6:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_49:int)(_72:int)
    b6 := algebra.markH(a6,0@0);	# 73 ALGmarkHead (b6:bat[:void,:int])<-(a6:bat[:oid,:int])(_67:oid)
    c6 := batcalc.and(b6,15);	# 74 CMDbatANDcst_int_int_int (c6:bat[:void,:int])<-(b6:bat[:void,:int])(_52:int)
    a7 := radix.radix_cluster2(b,1,1,3);	# 75 M5_RDX_radix_cluster2 (a7:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_65:int)(_74:int)
    b7 := algebra.markH(a7,0@0);	# 76 ALGmarkHead (b7:bat[:void,:int])<-(a7:bat[:oid,:int])(_67:oid)
    c7 := batcalc.and(b7,8);	# 77 CMDbatANDcst_int_int_int (c7:bat[:void,:int])<-(b7:bat[:void,:int])(_57:int)
    a8 := radix.radix_cluster2(b,1,2,2);	# 78 M5_RDX_radix_cluster2 (a8:bat[:oid,:int])<-(b:bat[:oid,:int])(_65:int)(_73:int)(_73:int)
    b8 := algebra.markH(a8,0@0);	# 79 ALGmarkHead (b8:bat[:void,:int])<-(a8:bat[:oid,:int])(_67:oid)
    c8 := batcalc.and(b8,12);	# 80 CMDbatANDcst_int_int_int (c8:bat[:void,:int])<-(b8:bat[:void,:int])(_62:int)
    a9 := radix.radix_cluster2(b,2,2,1);	# 81 M5_RDX_radix_cluster2 (a9:bat[:oid,:int])<-(b:bat[:oid,:int])(_73:int)(_73:int)(_65:int)
    b9 := algebra.markH(a9,0@0);	# 82 ALGmarkHead (b9:bat[:void,:int])<-(a9:bat[:oid,:int])(_67:oid)
    c9 := batcalc.and(b9,6);	# 83 CMDbatANDcst_int_int_int (c9:bat[:void,:int])<-(b9:bat[:void,:int])(_69:int)
    io.print(a,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9);	# 84 IOtable (_76:int)<-(a:bat[:void,:int])(b0:bat[:void,:int])(b1:bat[:void,:int])(b2:bat[:void,:int])(b3:bat[:void,:int])(b4:bat[:void,:int])(b5:bat[:void,:int])(b6:bat[:void,:int])(b7:bat[:void,:int])(b8:bat[:void,:int])(b9:bat[:void,:int])
    io.print(a,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9);	# 85 IOtable (_77:int)<-(a:bat[:void,:int])(c0:bat[:void,:int])(c1:bat[:void,:int])(c2:bat[:void,:int])(c3:bat[:void,:int])(c4:bat[:void,:int])(c5:bat[:void,:int])(c6:bat[:void,:int])(c7:bat[:void,:int])(c8:bat[:void,:int])(c9:bat[:void,:int])
    d0 := bat.reverse(b0);	# 86 BKCreverse (d0:bat[:int,:void])<-(b0:bat[:void,:int])
    e0 := radix.radix_bits(d0);	# 87 M5_RDX_radix_bits (e0:int)<-(d0:bat[:int,:void])
    io.print(e0);	# 88 IOprint_val (_80:int)<-(e0:int)
    d1 := bat.reverse(b1);	# 89 BKCreverse (d1:bat[:int,:void])<-(b1:bat[:void,:int])
    e1 := radix.radix_bits(d1);	# 90 M5_RDX_radix_bits (e1:int)<-(d1:bat[:int,:void])
    io.print(e1);	# 91 IOprint_val (_83:int)<-(e1:int)
    d2 := bat.reverse(b2);	# 92 BKCreverse (d2:bat[:int,:void])<-(b2:bat[:void,:int])
    e2 := radix.radix_bits(d2);	# 93 M5_RDX_radix_bits (e2:int)<-(d2:bat[:int,:void])
    io.print(e2);	# 94 IOprint_val (_86:int)<-(e2:int)
    d3 := bat.reverse(b3);	# 95 BKCreverse (d3:bat[:int,:void])<-(b3:bat[:void,:int])
    e3 := radix.radix_bits(d3);	# 96 M5_RDX_radix_bits (e3:int)<-(d3:bat[:int,:void])
    io.print(e3);	# 97 IOprint_val (_89:int)<-(e3:int)
    d4 := bat.reverse(b4);	# 98 BKCreverse (d4:bat[:int,:void])<-(b4:bat[:void,:int])
    e4 := radix.radix_bits(d4);	# 99 M5_RDX_radix_bits (e4:int)<-(d4:bat[:int,:void])
    io.print(e4);	# 100 IOprint_val (_92:int)<-(e4:int)
    d5 := bat.reverse(b5);	# 101 BKCreverse (d5:bat[:int,:void])<-(b5:bat[:void,:int])
    e5 := radix.radix_bits(d5);	# 102 M5_RDX_radix_bits (e5:int)<-(d5:bat[:int,:void])
    io.print(e5);	# 103 IOprint_val (_95:int)<-(e5:int)
    d6 := bat.reverse(b6);	# 104 BKCreverse (d6:bat[:int,:void])<-(b6:bat[:void,:int])
    e6 := radix.radix_bits(d6);	# 105 M5_RDX_radix_bits (e6:int)<-(d6:bat[:int,:void])
    io.print(e6);	# 106 IOprint_val (_98:int)<-(e6:int)
    d7 := bat.reverse(b7);	# 107 BKCreverse (d7:bat[:int,:void])<-(b7:bat[:void,:int])
    e7 := radix.radix_bits(d7);	# 108 M5_RDX_radix_bits (e7:int)<-(d7:bat[:int,:void])
    io.print(e7);	# 109 IOprint_val (_101:int)<-(e7:int)
    d8 := bat.reverse(b8);	# 110 BKCreverse (d8:bat[:int,:void])<-(b8:bat[:void,:int])
    e8 := radix.radix_bits(d8);	# 111 M5_RDX_radix_bits (e8:int)<-(d8:bat[:int,:void])
    io.print(e8);	# 112 IOprint_val (_104:int)<-(e8:int)
    d9 := bat.reverse(b9);	# 113 BKCreverse (d9:bat[:int,:void])<-(b9:bat[:void,:int])
    e9 := radix.radix_bits(d9);	# 114 M5_RDX_radix_bits (e9:int)<-(d9:bat[:int,:void])
    io.print(e9);	# 115 IOprint_val (_107:int)<-(e9:int)
    rb3d4 := radix.radix_join(b3,d4);	# 116 M5_RDX_radix_join_xh (rb3d4:bat[:void,:void])<-(b3:bat[:void,:int])(d4:bat[:int,:void])
    rb2d5 := radix.radix_join(b2,d5);	# 117 M5_RDX_radix_join_xh (rb2d5:bat[:void,:void])<-(b2:bat[:void,:int])(d5:bat[:int,:void])
    pb3d4 := radix.phash_join(b3,d4);	# 118 M5_RDX_phash_join_xhc (pb3d4:bat[:void,:void])<-(b3:bat[:void,:int])(d4:bat[:int,:void])
    pb2d5 := radix.phash_join(b2,d5);	# 119 M5_RDX_phash_join_xhc (pb2d5:bat[:void,:void])<-(b2:bat[:void,:int])(d5:bat[:int,:void])
    io.print(rb3d4,rb2d5,pb3d4,pb2d5);	# 120 IOtable (_112:int)<-(rb3d4:bat[:void,:void])(rb2d5:bat[:void,:void])(pb3d4:bat[:void,:void])(pb2d5:bat[:void,:void])
    l0 := radix.uniform(15);	# 121 M5_RDX_BATuniform_bd (l0:bat[:oid,:int])<-(_114:int)
    l1 := radix.radix_cluster(l0,2);	# 122 M5_RDX_radix_cluster_lp (l1:bat[:oid,:int])<-(l0:bat[:oid,:int])(_116:int)
    l := algebra.markH(l1,0@0);	# 123 ALGmarkHead (l:bat[:void,:int])<-(l1:bat[:oid,:int])(_118:oid)
    r0 := radix.uniform(17);	# 124 M5_RDX_BATuniform_bd (r0:bat[:oid,:int])<-(_120:int)
    r1 := radix.radix_cluster(r0,2);	# 125 M5_RDX_radix_cluster_lp (r1:bat[:oid,:int])<-(r0:bat[:oid,:int])(_116:int)
    r2 := algebra.markH(r1,0@0);	# 126 ALGmarkHead (r2:bat[:void,:int])<-(r1:bat[:oid,:int])(_118:oid)
    r := bat.reverse(r2);	# 127 BKCreverse (r:bat[:int,:void])<-(r2:bat[:void,:int])
    jlr := algebra.join(l,r);	# 128 ALGjoin (jlr:bat[:void,:oid])<-(l:bat[:void,:int])(r:bat[:int,:void])
    rlr := radix.radix_join(l,r);	# 129 M5_RDX_radix_join_xh (rlr:bat[:void,:void])<-(l:bat[:void,:int])(r:bat[:int,:void])
    rlr2 := radix.radix_join(l,r,2);	# 130 M5_RDX_radix_join_h (rlr2:bat[:void,:void])<-(l:bat[:void,:int])(r:bat[:int,:void])(_116:int)
    plr := radix.phash_join(l,r);	# 131 M5_RDX_phash_join_xhc (plr:bat[:void,:void])<-(l:bat[:void,:int])(r:bat[:int,:void])
    plr2 := radix.phash_join(l,r,2);	# 132 M5_RDX_phash_join_hc (plr2:bat[:void,:void])<-(l:bat[:void,:int])(r:bat[:int,:void])(_116:int)
    io.print(jlr,rlr,rlr2,plr,plr2);	# 133 IOtable (_129:int)<-(jlr:bat[:void,:oid])(rlr:bat[:void,:void])(rlr2:bat[:void,:void])(plr:bat[:void,:void])(plr2:bat[:void,:void])
end main;	# 134  
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 2@0,	  nil	  ]
[ 3@0,	  nil	  ]
[ 4@0,	  nil	  ]
[ 5@0,	  nil	  ]
[ 6@0,	  nil	  ]
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
[ 12@0,	  nil	  ]
[ 13@0,	  nil	  ]
[ 14@0,	  nil	  ]
[ 15@0,	  nil	  ]
[ 16@0,	  nil	  ]
[ 17@0,	  nil	  ]
[ 18@0,	  nil	  ]
[ 19@0,	  nil	  ]
[ 20@0,	  nil	  ]
[ 21@0,	  nil	  ]
[ 22@0,	  nil	  ]
[ 23@0,	  nil	  ]
[ 24@0,	  nil	  ]
[ 25@0,	  nil	  ]
[ 26@0,	  nil	  ]
[ 27@0,	  nil	  ]
[ 28@0,	  nil	  ]
[ 29@0,	  nil	  ]
[ 30@0,	  nil	  ]
[ 31@0,	  nil	  ]
[ 32@0,	  nil	  ]
[ 33@0,	  nil	  ]
[ 34@0,	  nil	  ]
[ 35@0,	  nil	  ]
[ 36@0,	  nil	  ]
[ 37@0,	  nil	  ]
[ 38@0,	  nil	  ]
[ 39@0,	  nil	  ]
[ 40@0,	  nil	  ]
[ 41@0,	  nil	  ]
[ 42@0,	  nil	  ]
[ 43@0,	  nil	  ]
[ 44@0,	  nil	  ]
[ 45@0,	  nil	  ]
[ 46@0,	  nil	  ]
[ 47@0,	  nil	  ]
[ 48@0,	  nil	  ]
[ 49@0,	  nil	  ]
[ 50@0,	  nil	  ]
[ 51@0,	  nil	  ]
[ 52@0,	  nil	  ]
[ 53@0,	  nil	  ]
[ 54@0,	  nil	  ]
[ 55@0,	  nil	  ]
[ 56@0,	  nil	  ]
[ 57@0,	  nil	  ]
[ 58@0,	  nil	  ]
[ 59@0,	  nil	  ]
[ 60@0,	  nil	  ]
[ 61@0,	  nil	  ]
[ 62@0,	  nil	  ]
[ 63@0,	  nil	  ]
[ 64@0,	  nil	  ]
[ 65@0,	  nil	  ]
[ 66@0,	  nil	  ]
[ 67@0,	  nil	  ]
[ 68@0,	  nil	  ]
[ 69@0,	  nil	  ]
[ 70@0,	  nil	  ]
[ 71@0,	  nil	  ]
[ 72@0,	  nil	  ]
[ 73@0,	  nil	  ]
[ 74@0,	  nil	  ]
[ 75@0,	  nil	  ]
[ 76@0,	  nil	  ]
[ 77@0,	  nil	  ]
[ 78@0,	  nil	  ]
[ 79@0,	  nil	  ]
[ 80@0,	  nil	  ]
[ 81@0,	  nil	  ]
[ 82@0,	  nil	  ]
[ 83@0,	  nil	  ]
[ 84@0,	  nil	  ]
[ 85@0,	  nil	  ]
[ 86@0,	  nil	  ]
[ 87@0,	  nil	  ]
[ 88@0,	  nil	  ]
[ 89@0,	  nil	  ]
[ 90@0,	  nil	  ]
[ 91@0,	  nil	  ]
[ 92@0,	  nil	  ]
[ 93@0,	  nil	  ]
[ 94@0,	  nil	  ]
[ 95@0,	  nil	  ]
[ 96@0,	  nil	  ]
[ 97@0,	  nil	  ]
[ 98@0,	  nil	  ]
#-----------------#
# t	h	  # name
# void	int	  # type
#-----------------#
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]
[ nil,	  3	  ]
[ nil,	  4	  ]
[ nil,	  5	  ]
[ nil,	  6	  ]
[ nil,	  7	  ]
[ nil,	  8	  ]
[ nil,	  9	  ]
[ nil,	  10	  ]
[ nil,	  11	  ]
[ nil,	  12	  ]
[ nil,	  13	  ]
[ nil,	  14	  ]
[ nil,	  15	  ]
[ nil,	  16	  ]
[ nil,	  17	  ]
[ nil,	  18	  ]
[ nil,	  19	  ]
[ nil,	  20	  ]
[ nil,	  21	  ]
[ nil,	  22	  ]
[ nil,	  23	  ]
[ nil,	  24	  ]
[ nil,	  25	  ]
[ nil,	  26	  ]
[ nil,	  27	  ]
[ nil,	  28	  ]
[ nil,	  29	  ]
[ nil,	  30	  ]
[ nil,	  31	  ]
[ nil,	  32	  ]
[ nil,	  33	  ]
[ nil,	  34	  ]
[ nil,	  35	  ]
[ nil,	  36	  ]
[ nil,	  37	  ]
[ nil,	  38	  ]
[ nil,	  39	  ]
[ nil,	  40	  ]
[ nil,	  41	  ]
[ nil,	  42	  ]
[ nil,	  43	  ]
[ nil,	  44	  ]
[ nil,	  45	  ]
[ nil,	  46	  ]
[ nil,	  47	  ]
[ nil,	  48	  ]
[ nil,	  49	  ]
[ nil,	  50	  ]
[ nil,	  51	  ]
[ nil,	  52	  ]
[ nil,	  53	  ]
[ nil,	  54	  ]
[ nil,	  55	  ]
[ nil,	  56	  ]
[ nil,	  57	  ]
[ nil,	  58	  ]
[ nil,	  59	  ]
[ nil,	  60	  ]
[ nil,	  61	  ]
[ nil,	  62	  ]
[ nil,	  63	  ]
[ nil,	  64	  ]
[ nil,	  65	  ]
[ nil,	  66	  ]
[ nil,	  67	  ]
[ nil,	  68	  ]
[ nil,	  69	  ]
[ nil,	  70	  ]
[ nil,	  71	  ]
[ nil,	  72	  ]
[ nil,	  73	  ]
[ nil,	  74	  ]
[ nil,	  75	  ]
[ nil,	  76	  ]
[ nil,	  77	  ]
[ nil,	  78	  ]
[ nil,	  79	  ]
[ nil,	  80	  ]
[ nil,	  81	  ]
[ nil,	  82	  ]
[ nil,	  83	  ]
[ nil,	  84	  ]
[ nil,	  85	  ]
[ nil,	  86	  ]
[ nil,	  87	  ]
[ nil,	  88	  ]
[ nil,	  89	  ]
[ nil,	  90	  ]
[ nil,	  91	  ]
[ nil,	  92	  ]
[ nil,	  93	  ]
[ nil,	  94	  ]
[ nil,	  95	  ]
[ nil,	  96	  ]
[ nil,	  97	  ]
[ nil,	  98	  ]
#-----------------#
# h	t	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  nil	  ]
[ 2@0,	  nil	  ]
[ 3@0,	  nil	  ]
[ 4@0,	  nil	  ]
[ 5@0,	  nil	  ]
[ 6@0,	  nil	  ]
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
[ 12@0,	  nil	  ]
[ 13@0,	  nil	  ]
[ 14@0,	  nil	  ]
[ 15@0,	  nil	  ]
[ 16@0,	  nil	  ]
[ 17@0,	  nil	  ]
[ 18@0,	  nil	  ]
[ 19@0,	  nil	  ]
[ 20@0,	  nil	  ]
[ 21@0,	  nil	  ]
[ 22@0,	  nil	  ]
[ 23@0,	  nil	  ]
[ 24@0,	  nil	  ]
[ 25@0,	  nil	  ]
[ 26@0,	  nil	  ]
[ 27@0,	  nil	  ]
[ 28@0,	  nil	  ]
[ 29@0,	  nil	  ]
[ 30@0,	  nil	  ]
[ 31@0,	  nil	  ]
[ 32@0,	  nil	  ]
[ 33@0,	  nil	  ]
[ 34@0,	  nil	  ]
[ 35@0,	  nil	  ]
[ 36@0,	  nil	  ]
[ 37@0,	  nil	  ]
[ 38@0,	  nil	  ]
[ 39@0,	  nil	  ]
[ 40@0,	  nil	  ]
[ 41@0,	  nil	  ]
[ 42@0,	  nil	  ]
[ 43@0,	  nil	  ]
[ 44@0,	  nil	  ]
[ 45@0,	  nil	  ]
[ 46@0,	  nil	  ]
[ 47@0,	  nil	  ]
[ 48@0,	  nil	  ]
[ 49@0,	  nil	  ]
[ 50@0,	  nil	  ]
[ 51@0,	  nil	  ]
[ 52@0,	  nil	  ]
[ 53@0,	  nil	  ]
[ 54@0,	  nil	  ]
[ 55@0,	  nil	  ]
[ 56@0,	  nil	  ]
[ 57@0,	  nil	  ]
[ 58@0,	  nil	  ]
[ 59@0,	  nil	  ]
[ 60@0,	  nil	  ]
[ 61@0,	  nil	  ]
[ 62@0,	  nil	  ]
[ 63@0,	  nil	  ]
[ 64@0,	  nil	  ]
[ 65@0,	  nil	  ]
[ 66@0,	  nil	  ]
[ 67@0,	  nil	  ]
[ 68@0,	  nil	  ]
[ 69@0,	  nil	  ]
[ 70@0,	  nil	  ]
[ 71@0,	  nil	  ]
[ 72@0,	  nil	  ]
[ 73@0,	  nil	  ]
[ 74@0,	  nil	  ]
[ 75@0,	  nil	  ]
[ 76@0,	  nil	  ]
[ 77@0,	  nil	  ]
[ 78@0,	  nil	  ]
[ 79@0,	  nil	  ]
[ 80@0,	  nil	  ]
[ 81@0,	  nil	  ]
[ 82@0,	  nil	  ]
[ 83@0,	  nil	  ]
[ 84@0,	  nil	  ]
[ 85@0,	  nil	  ]
[ 86@0,	  nil	  ]
[ 87@0,	  nil	  ]
[ 88@0,	  nil	  ]
[ 89@0,	  nil	  ]
[ 90@0,	  nil	  ]
[ 91@0,	  nil	  ]
[ 92@0,	  nil	  ]
[ 93@0,	  nil	  ]
[ 94@0,	  nil	  ]
[ 95@0,	  nil	  ]
[ 96@0,	  nil	  ]
[ 97@0,	  nil	  ]
[ 98@0,	  nil	  ]
#-----------------#
# t	h	  # name
# void	int	  # type
#-----------------#
[ nil,	  34	  ]
[ nil,	  35	  ]
[ nil,	  36	  ]
[ nil,	  37	  ]
[ nil,	  38	  ]
[ nil,	  38	  ]
[ nil,	  39	  ]
[ nil,	  39	  ]
[ nil,	  40	  ]
[ nil,	  40	  ]
[ nil,	  41	  ]
[ nil,	  41	  ]
[ nil,	  42	  ]
[ nil,	  42	  ]
[ nil,	  42	  ]
[ nil,	  43	  ]
[ nil,	  43	  ]
[ nil,	  43	  ]
[ nil,	  44	  ]
[ nil,	  44	  ]
[ nil,	  44	  ]
[ nil,	  45	  ]
[ nil,	  45	  ]
[ nil,	  45	  ]
[ nil,	  46	  ]
[ nil,	  46	  ]
[ nil,	  46	  ]
[ nil,	  46	  ]
[ nil,	  47	  ]
[ nil,	  47	  ]
[ nil,	  47	  ]
[ nil,	  47	  ]
[ nil,	  48	  ]
[ nil,	  48	  ]
[ nil,	  48	  ]
[ nil,	  48	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  49	  ]
[ nil,	  50	  ]
[ nil,	  50	  ]
[ nil,	  50	  ]
[ nil,	  50	  ]
[ nil,	  51	  ]
[ nil,	  51	  ]
[ nil,	  51	  ]
[ nil,	  51	  ]
[ nil,	  52	  ]
[ nil,	  52	  ]
[ nil,	  52	  ]
[ nil,	  52	  ]
[ nil,	  53	  ]
[ nil,	  53	  ]
[ nil,	  53	  ]
[ nil,	  54	  ]
[ nil,	  54	  ]
[ nil,	  54	  ]
[ nil,	  55	  ]
[ nil,	  55	  ]
[ nil,	  55	  ]
[ nil,	  56	  ]
[ nil,	  56	  ]
[ nil,	  56	  ]
[ nil,	  57	  ]
[ nil,	  57	  ]
[ nil,	  58	  ]
[ nil,	  58	  ]
[ nil,	  59	  ]
[ nil,	  59	  ]
[ nil,	  60	  ]
[ nil,	  60	  ]
[ nil,	  61	  ]
[ nil,	  62	  ]
[ nil,	  63	  ]
[ nil,	  64	  ]
#-------------------------------------------------------------------------------------------------#
# t	h	h	h	h	h	h	h	h	h	h	h	  # name
# void	int	int	int	int	int	int	int	int	int	int	int	  # type
#-------------------------------------------------------------------------------------------------#
[ 0@0,	  8,	  8,	  8,	  8,	  8,	  8,	  8,	  0,	  1,	  1,	  8	  ]
[ 1@0,	  13,	  2,	  0,	  0,	  0,	  0,	  0,	  1,	  2,	  2,	  1	  ]
[ 2@0,	  1,	  0,	  12,	  1,	  1,	  1,	  1,	  2,	  0,	  0,	  0	  ]
[ 3@0,	  2,	  6,	  4,	  9,	  9,	  9,	  9,	  3,	  6,	  3,	  9	  ]
[ 4@0,	  0,	  12,	  13,	  2,	  2,	  2,	  2,	  4,	  3,	  6,	  2	  ]
[ 5@0,	  6,	  4,	  1,	  10,	  10,	  10,	  10,	  5,	  4,	  4,	  3	  ]
[ 6@0,	  12,	  14,	  9,	  3,	  3,	  3,	  3,	  6,	  7,	  7,	  10	  ]
[ 7@0,	  3,	  10,	  5,	  11,	  11,	  11,	  11,	  7,	  5,	  5,	  11	  ]
[ 8@0,	  4,	  13,	  2,	  12,	  12,	  12,	  12,	  8,	  8,	  8,	  13	  ]
[ 9@0,	  14,	  1,	  6,	  4,	  4,	  4,	  4,	  9,	  13,	  9,	  12	  ]
[ 10@0,	  9,	  3,	  14,	  13,	  13,	  13,	  13,	  10,	  12,	  10,	  4	  ]
[ 11@0,	  7,	  9,	  10,	  5,	  5,	  5,	  5,	  11,	  14,	  11,	  5	  ]
[ 12@0,	  10,	  7,	  3,	  6,	  6,	  6,	  6,	  12,	  9,	  13,	  6	  ]
[ 13@0,	  15,	  15,	  7,	  14,	  14,	  14,	  14,	  13,	  10,	  12,	  14	  ]
[ 14@0,	  11,	  11,	  15,	  7,	  7,	  7,	  7,	  14,	  15,	  14,	  7	  ]
[ 15@0,	  5,	  5,	  11,	  15,	  15,	  15,	  15,	  15,	  11,	  15,	  15	  ]
#-------------------------------------------------------------------------------------------------#
# t	h	t	t	t	t	t	t	t	t	t	t	  # name
# void	int	int	int	int	int	int	int	int	int	int	int	  # type
#-------------------------------------------------------------------------------------------------#
[ 0@0,	  8,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0	  ]
[ 1@0,	  13,	  0,	  0,	  0,	  0,	  0,	  0,	  1,	  0,	  0,	  0	  ]
[ 2@0,	  1,	  0,	  0,	  1,	  1,	  1,	  1,	  2,	  0,	  0,	  0	  ]
[ 3@0,	  2,	  0,	  0,	  1,	  1,	  1,	  1,	  3,	  0,	  0,	  0	  ]
[ 4@0,	  0,	  0,	  1,	  2,	  2,	  2,	  2,	  4,	  0,	  4,	  2	  ]
[ 5@0,	  6,	  0,	  1,	  2,	  2,	  2,	  2,	  5,	  0,	  4,	  2	  ]
[ 6@0,	  12,	  0,	  1,	  3,	  3,	  3,	  3,	  6,	  0,	  4,	  2	  ]
[ 7@0,	  3,	  0,	  1,	  3,	  3,	  3,	  3,	  7,	  0,	  4,	  2	  ]
[ 8@0,	  4,	  1,	  2,	  4,	  4,	  4,	  4,	  8,	  8,	  8,	  4	  ]
[ 9@0,	  14,	  1,	  2,	  4,	  4,	  4,	  4,	  9,	  8,	  8,	  4	  ]
[ 10@0,	  9,	  1,	  2,	  5,	  5,	  5,	  5,	  10,	  8,	  8,	  4	  ]
[ 11@0,	  7,	  1,	  2,	  5,	  5,	  5,	  5,	  11,	  8,	  8,	  4	  ]
[ 12@0,	  10,	  1,	  3,	  6,	  6,	  6,	  6,	  12,	  8,	  12,	  6	  ]
[ 13@0,	  15,	  1,	  3,	  6,	  6,	  6,	  6,	  13,	  8,	  12,	  6	  ]
[ 14@0,	  11,	  1,	  3,	  7,	  7,	  7,	  7,	  14,	  8,	  12,	  6	  ]
[ 15@0,	  5,	  1,	  3,	  7,	  7,	  7,	  7,	  15,	  8,	  12,	  6	  ]
#-------------------------------------------------------------------------------------------------#
# t	h	h	h	h	h	h	h	h	h	h	h	  # name
# void	int	int	int	int	int	int	int	int	int	int	int	  # type
#-------------------------------------------------------------------------------------------------#
[ 0@0,	  8,	  8,	  8,	  8,	  8,	  8,	  8,	  0,	  1,	  1,	  8	  ]
[ 1@0,	  13,	  2,	  0,	  0,	  0,	  0,	  0,	  1,	  2,	  2,	  1	  ]
[ 2@0,	  1,	  0,	  12,	  1,	  1,	  1,	  1,	  2,	  0,	  0,	  0	  ]
[ 3@0,	  2,	  6,	  4,	  9,	  9,	  9,	  9,	  3,	  6,	  3,	  9	  ]
[ 4@0,	  0,	  12,	  13,	  2,	  2,	  2,	  2,	  4,	  3,	  6,	  2	  ]
[ 5@0,	  6,	  4,	  1,	  10,	  10,	  10,	  10,	  5,	  4,	  4,	  3	  ]
[ 6@0,	  12,	  14,	  9,	  3,	  3,	  3,	  3,	  6,	  7,	  7,	  10	  ]
[ 7@0,	  3,	  10,	  5,	  11,	  11,	  11,	  11,	  7,	  5,	  5,	  11	  ]
[ 8@0,	  4,	  13,	  2,	  12,	  12,	  12,	  12,	  8,	  8,	  8,	  13	  ]
[ 9@0,	  14,	  1,	  6,	  4,	  4,	  4,	  4,	  9,	  13,	  9,	  12	  ]
[ 10@0,	  9,	  3,	  14,	  13,	  13,	  13,	  13,	  10,	  12,	  10,	  4	  ]
[ 11@0,	  7,	  9,	  10,	  5,	  5,	  5,	  5,	  11,	  14,	  11,	  5	  ]
[ 12@0,	  10,	  7,	  3,	  6,	  6,	  6,	  6,	  12,	  9,	  13,	  6	  ]
[ 13@0,	  15,	  15,	  7,	  14,	  14,	  14,	  14,	  13,	  10,	  12,	  14	  ]
[ 14@0,	  11,	  11,	  15,	  7,	  7,	  7,	  7,	  14,	  15,	  14,	  7	  ]
[ 15@0,	  5,	  5,	  11,	  15,	  15,	  15,	  15,	  15,	  11,	  15,	  15	  ]
#-------------------------------------------------------------------------------------------------#
# t	h	t	t	t	t	t	t	t	t	t	t	  # name
# void	int	int	int	int	int	int	int	int	int	int	int	  # type
#-------------------------------------------------------------------------------------------------#
[ 0@0,	  8,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0,	  0	  ]
[ 1@0,	  13,	  0,	  0,	  0,	  0,	  0,	  0,	  1,	  0,	  0,	  0	  ]
[ 2@0,	  1,	  0,	  0,	  1,	  1,	  1,	  1,	  2,	  0,	  0,	  0	  ]
[ 3@0,	  2,	  0,	  0,	  1,	  1,	  1,	  1,	  3,	  0,	  0,	  0	  ]
[ 4@0,	  0,	  0,	  1,	  2,	  2,	  2,	  2,	  4,	  0,	  4,	  2	  ]
[ 5@0,	  6,	  0,	  1,	  2,	  2,	  2,	  2,	  5,	  0,	  4,	  2	  ]
[ 6@0,	  12,	  0,	  1,	  3,	  3,	  3,	  3,	  6,	  0,	  4,	  2	  ]
[ 7@0,	  3,	  0,	  1,	  3,	  3,	  3,	  3,	  7,	  0,	  4,	  2	  ]
[ 8@0,	  4,	  1,	  2,	  4,	  4,	  4,	  4,	  8,	  8,	  8,	  4	  ]
[ 9@0,	  14,	  1,	  2,	  4,	  4,	  4,	  4,	  9,	  8,	  8,	  4	  ]
[ 10@0,	  9,	  1,	  2,	  5,	  5,	  5,	  5,	  10,	  8,	  8,	  4	  ]
[ 11@0,	  7,	  1,	  2,	  5,	  5,	  5,	  5,	  11,	  8,	  8,	  4	  ]
[ 12@0,	  10,	  1,	  3,	  6,	  6,	  6,	  6,	  12,	  8,	  12,	  6	  ]
[ 13@0,	  15,	  1,	  3,	  6,	  6,	  6,	  6,	  13,	  8,	  12,	  6	  ]
[ 14@0,	  11,	  1,	  3,	  7,	  7,	  7,	  7,	  14,	  8,	  12,	  6	  ]
[ 15@0,	  5,	  1,	  3,	  7,	  7,	  7,	  7,	  15,	  8,	  12,	  6	  ]
[ 1 ]
[ 2 ]
[ 3 ]
[ 3 ]
[ 3 ]
[ 3 ]
[ 32 ]
[ 0 ]
[ 0 ]
[ 0 ]
#-----------------------------------------#
# h	t	t	t	t	  # name
# oid	oid	oid	oid	oid	  # type
#-----------------------------------------#
[ 0@0,	  0@0,	  0@0,	  0@0,	  0@0	  ]
[ 1@0,	  1@0,	  1@0,	  1@0,	  1@0	  ]
[ 2@0,	  2@0,	  2@0,	  2@0,	  2@0	  ]
[ 3@0,	  3@0,	  3@0,	  3@0,	  3@0	  ]
[ 4@0,	  4@0,	  4@0,	  4@0,	  4@0	  ]
[ 5@0,	  5@0,	  5@0,	  5@0,	  5@0	  ]
[ 6@0,	  6@0,	  6@0,	  6@0,	  6@0	  ]
[ 7@0,	  7@0,	  7@0,	  7@0,	  7@0	  ]
[ 8@0,	  8@0,	  8@0,	  8@0,	  8@0	  ]
[ 9@0,	  9@0,	  9@0,	  9@0,	  9@0	  ]
[ 10@0,	  10@0,	  10@0,	  10@0,	  10@0	  ]
[ 11@0,	  11@0,	  11@0,	  11@0,	  11@0	  ]
[ 12@0,	  12@0,	  12@0,	  12@0,	  12@0	  ]
[ 13@0,	  13@0,	  13@0,	  13@0,	  13@0	  ]
[ 14@0,	  14@0,	  14@0,	  14@0,	  14@0	  ]
[ 15@0,	  15@0,	  15@0,	  15@0,	  15@0	  ]
#-------------------------------------------------#
# h	t	t	t	t	t	  # name
# oid	oid	oid	oid	oid	oid	  # type
#-------------------------------------------------#
[ 0@0,	  1@0,	  1@0,	  1@0,	  1@0,	  1@0	  ]
[ 1@0,	  3@0,	  3@0,	  3@0,	  3@0,	  3@0	  ]
[ 2@0,	  4@0,	  4@0,	  4@0,	  4@0,	  4@0	  ]
[ 3@0,	  2@0,	  2@0,	  2@0,	  2@0,	  2@0	  ]
[ 4@0,	  5@0,	  5@0,	  5@0,	  5@0,	  5@0	  ]
[ 5@0,	  8@0,	  8@0,	  8@0,	  8@0,	  8@0	  ]
[ 6@0,	  6@0,	  6@0,	  6@0,	  6@0,	  6@0	  ]
[ 7@0,	  7@0,	  7@0,	  7@0,	  7@0,	  7@0	  ]
[ 8@0,	  12@0,	  12@0,	  12@0,	  12@0,	  12@0	  ]
[ 9@0,	  10@0,	  10@0,	  10@0,	  10@0,	  10@0	  ]
[ 10@0,	  9@0,	  9@0,	  9@0,	  9@0,	  9@0	  ]
[ 11@0,	  11@0,	  11@0,	  11@0,	  11@0,	  11@0	  ]
[ 12@0,	  14@0,	  14@0,	  14@0,	  14@0,	  14@0	  ]
[ 13@0,	  15@0,	  15@0,	  15@0,	  15@0,	  15@0	  ]
[ 14@0,	  16@0,	  16@0,	  16@0,	  16@0,	  16@0	  ]

# 13:57:31 >  
# 13:57:31 >  Done.
# 13:57:31 >  

