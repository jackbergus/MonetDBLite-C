include rdf;

targetdir := unix.getenv("TSTTRGDIR");
barrier correct:= targetdir == "";
	targetdir := unix.getenv("PWD");
exit correct;
barrier correct:= targetdir != "";
	targetdir := targetdir + "/";
exit correct;

datafile := targetdir + "rdf.testdata.ttl";
io.printf("#source:%s\n",datafile);

rdf.importGraph(datafile, "turtle", "db", "g", 1024:lng);

xsdtypes:bat[:oid,:str] := bbp.bind("RDFtype2xsd");
io.print("Datatypes");
io.print(xsdtypes);

map:bat[:oid,:str] := bbp.bind("db_g_map");
io.print("Dictionary");
io.print(map);

Spot:bat[:oid,:oid] := bbp.bind("db_g_Spot");
sPot:bat[:oid,:oid] := bbp.bind("db_g_sPot");
spOt:bat[:oid,:oid] := bbp.bind("db_g_spOt");
spoT:bat[:oid,:bte] := bbp.bind("db_g_spoT");

s := algebra.fetchjoin(Spot,map); 
p := algebra.fetchjoin(sPot,map); 
o := algebra.fetchjoin(spOt,map);

io.print("order: SPO");
tablet.page(s,p,o,spoT);

Sopt:bat[:oid,:oid] := bbp.bind("db_g_Sopt");
sOpt:bat[:oid,:oid] := bbp.bind("db_g_sOpt");
soPt:bat[:oid,:oid] := bbp.bind("db_g_soPt");
sopT:bat[:oid,:bte] := bbp.bind("db_g_sopT");

s := algebra.fetchjoin(Sopt,map);
o := algebra.fetchjoin(sOpt,map);
p := algebra.fetchjoin(soPt,map);

io.print("order: SOP");
tablet.page(s,o,p,sopT);

Psot:bat[:oid,:oid] := bbp.bind("db_g_Psot");
pSot:bat[:oid,:oid] := bbp.bind("db_g_pSot");
psOt:bat[:oid,:oid] := bbp.bind("db_g_psOt");
psoT:bat[:oid,:bte] := bbp.bind("db_g_psoT");

p := algebra.fetchjoin(Psot,map); 
s := algebra.fetchjoin(pSot,map); 
o := algebra.fetchjoin(psOt,map);

io.print("order: PSO");
tablet.page(p,s,o,psoT);

Post:bat[:oid,:oid] := bbp.bind("db_g_Post");
pOst:bat[:oid,:oid] := bbp.bind("db_g_pOst");
poSt:bat[:oid,:oid] := bbp.bind("db_g_poSt");
posT:bat[:oid,:bte] := bbp.bind("db_g_posT");

p := algebra.fetchjoin(Post,map); 
o := algebra.fetchjoin(pOst,map); 
s := algebra.fetchjoin(poSt,map);

io.print("order: POS");
tablet.page(p,o,s,posT);

Opst:bat[:oid,:oid] := bbp.bind("db_g_Opst");
oPst:bat[:oid,:oid] := bbp.bind("db_g_oPst");
opSt:bat[:oid,:oid] := bbp.bind("db_g_opSt");
opsT:bat[:oid,:bte] := bbp.bind("db_g_opsT");

o := algebra.fetchjoin(Opst,map); 
p := algebra.fetchjoin(oPst,map); 
s := algebra.fetchjoin(opSt,map);

io.print("order: OPS");
tablet.page(o,p,s,opsT);

Ospt:bat[:oid,:oid] := bbp.bind("db_g_Ospt");
oSpt:bat[:oid,:oid] := bbp.bind("db_g_oSpt");
osPt:bat[:oid,:oid] := bbp.bind("db_g_osPt");
ospT:bat[:oid,:bte] := bbp.bind("db_g_ospT");

o := algebra.fetchjoin(Ospt,map); 
s := algebra.fetchjoin(oSpt,map); 
p := algebra.fetchjoin(osPt,map);

io.print("order: OSP");
tablet.page(o,s,p,ospT);

