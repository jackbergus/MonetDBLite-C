stdout of test 'remote00` in directory 'src/modules/mal` itself:


# 11:27:38 >  
# 11:27:38 >  Mtimeout -timeout 60  mserver5 "--config=/ufs/fabian/scratch/monetdb/current/program-x86_64/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/lib:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib64/MonetDB5/bin" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/sqllog" --set "xquery_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/xquerylog" --set mapi_open=true --set mapi_port=36650 --set xrpc_port=44030 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  remote00.mal
# 11:27:38 >  






# MonetDB Server v5.1.0
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information
## we need this include untill remote is added to the default modules
#include remote;
#
## simply assign a simple value, and let serveget describe it
#b := 1;
#remote.serveget("b");
#
#c := 3.4;
#remote.serveget("c");
#
## we can also describe "complexer" types (a BAT for now)
#d := bat.new(:oid, :str);
#remote.serveget("d");
#
## and a varsized object (like a string) should work too
#g := "Hello world!";
#remote.serveget("g");
#
function user.main():void;              #  0 main:void := user.main() {G}
# we need this include untill remote is added to the default modules 
#remote.prelude(); 
# ideally we would like to do this, however that's unfortunately 
# impossible since variadic stuff doesn't work in functions 
#function exec(conn:str, ident:str...):any; 
#	id := remote.exec(conn, ident, ...); 
#	ret := remote.get(conn, id); 
#	return(ret); 
#end exec; 
# simply assign a simple value, and let serveget describe it 
    b := 1;                             #  2 b:int := _3:int 
    remote.describe("b");               #  3 _4:void := RMTdescribe(_5:str) 
# this one might cause trouble on different platforms due to float 
# handling, we might consider commenting this one out 
    c := 3.4000001;                     #  6 c:flt := _9:flt 
    remote.describe("c");               #  7 _10:void := RMTdescribe(_11:str) 
# we can also describe "complexer" types (a BAT for now) 
    d := bat.new(:oid,:str);            #  9 d:bat[:oid,:str] := CMDBATnew(_14:oid, _15:str) {G}
    remote.describe("d");               # 10 _16:void := RMTdescribe(_17:str) 
# and a varsized object (like a string) should work too 
    g := "Hello world!";                # 12 g:str := _20:str {G}
    remote.describe("g");               # 13 _21:void := RMTdescribe(_22:str) 
end main;                               # 14  
[ "int",	1	]
[ "flt",	3.4000001	]
[ "bat",	"oid",	"str",	0	]
[ "str",	"Hello world!"	]

# 13:29:10 >  
# 13:29:10 >  Done.
# 13:29:10 >  

