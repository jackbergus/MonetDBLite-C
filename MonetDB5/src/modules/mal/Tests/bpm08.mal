#testing sorting of segments
R := bat.new(:oid,:int);
bat.append(R,5);
bat.append(R,3);
bat.append(R,11);
bat.append(R,17);
bat.append(R,1);
bat.append(R,14);

function user.pr(Ra:bat[:any_1,:any_2]):void;
barrier Rp:= bpm.newIterator(Ra);
	io.print(Rp);
	redo Rp:= bpm.hasMoreElements(Ra);
exit Rp;
end pr;


# add the stuff to the BPM and dump it
Ra:= bpm.deposit("myR",R);
user.pr(Ra);

pv:= bat.new(:oid,:int);
bat.append(pv,5);
bat.append(pv,10);

bpm.rangePartitionSort(Ra,pv);
#bpm.dump();
user.pr(Ra);


S:=bat.new(:oid,:flt);
bat.insert(S,1:oid,2.5);
bat.insert(S,2:oid,16.8);
bat.insert(S,5:oid,-1.3);
bat.insert(S,13:oid,8.4);
bat.insert(S,8:oid,3.5);
io.print(S);
Sa:=bpm.deposit("myflt",S);

bpm.partition(Sa,4:flt);
user.pr(Sa);
io.print("After sorting on tail");
bpm.sortPartitions(Sa);
user.pr(Sa);


