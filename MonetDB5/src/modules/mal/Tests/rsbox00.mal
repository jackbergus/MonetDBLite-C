## Test generic ResultSet + rsbox behaviour:
## create two ResultSets, fill one with two BATs and see if everything is
## properly released.

include rsbox;

rs := rsbox.create(1:int, 'u':chr);
rs := rsbox.create(2:int, 't':chr);

resultset.setProperty(rs, 1, "table", "table1");
resultset.setProperty(rs, 1, "schema", "sys");

resultset.setProperty(rs, 2, "width", 1);
resultset.setProperty(rs, 2, "table", "table2");
resultset.setProperty(rs, 2, "schema", "sys");

b1 := bat.new(:void, :str);
bat.insert(b1, nil, "test1");
bat.insert(b1, nil, "test2");
bat.insert(b1, nil, nil:str);

b2 := bat.new(:void, :int);
bat.insert(b2, nil, 2);
bat.insert(b2, nil, nil:int);
bat.insert(b2, nil, 5);

resultset.populateColumn(rs, 1, b1);
resultset.populateColumn(rs, 2, b2);

resultset.writeNextPart(rs);

io.print("Before any cleanup:");
barrier (v,res) := rsbox.newIterator();
	io.print(res);
redo (v,res) := rsbox.hasMoreElements();
exit v;

rsbox.release(rs);

io.print("After release of 'myid':");
barrier (v,res) := rsbox.newIterator();
	io.print(res);
redo (v,res) := rsbox.hasMoreElements();
exit v;

rsbox.releaseAll();

io.print("After a releaseAll:");
barrier (v,res) := rsbox.newIterator();
	io.print(res);
redo (v,res) := rsbox.hasMoreElements();
exit v;

# we did not open, it so why close it?
#rsbox.close();
