stdout of test 'rsbox05` in directory 'src/modules/mal` itself:


# 09:27:17 >  
# 09:27:17 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monet5/program/lib/MonetDB5" --set "gdk_dbfarm=/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monet5/program/var/MonetDB5/log" --set mapi_port=41325 --set sql_port=52541 --set monet_prompt= --trace --dbname=mTests_src_modules_mal  rsbox05.mal </dev/null
# 09:27:17 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/fabian/scratch/monet5/program/etc/MonetDB5.conf
# dbfarm:/ufs/fabian/scratch/monet5/program/var/MonetDB5/dbfarm
# dbname:mTests_src_modules_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Simple test that tests whether `unknown atoms' are currectly printed
## as strings
#
#include rsbox;
#
#b := new(:void, :date);
#insert(b, nil, "1999-05-02":date);
#
#rs := rsbox.create(1, 't');
#populateColumn(rs, 1, b);
#
#writeNextPart(rs);
#
function user.main():void;	# 0  (main:void)
# Simple test that tests whether `unknown atoms' are currectly printed 	# 1  (_1:str)
# as strings 	# 2  (_2:str)
#line 113 "/ufs/mk/monet5/src/modules/mal/rsbox.mx" 	# 3  (_3:str)
# ResultSets themselves should never be serialised to disk.  The 	# 4  (_4:str)
# fromStr and toStr functions merely exist to adhere to the interface 	# 5  (_5:str)
#line 207 "/ufs/mk/monet5/src/modules/mal/rsbox.mx" 	# 6  (_6:str)
#line 208 "/ufs/mk/monet5/src/modules/mal/rsbox.mx" 	# 7  (_7:str)
    b := bat.new(:void,:date);	# 8 CMDBATnew (b:bat[:void,:date])<-(_9:void)(_10:date)
    bat.insert(b,nil:void,1999-05-02:date);	# 9 BKCinsert_bun (_11:void)<-(b:bat[:void,:date])(_12:void)(_13:date)
    rs := rsbox.create(1,'t');	# 10 RSBcreate (rs:resultset)<-(_15:int)(_16:chr)
    resultset.populateColumn(rs,1,b);	# 11 RSpopulateColumn (_17:resultset)<-(rs:resultset)(_15:int)(b:bat[:void,:date])
    resultset.writeNextPart(rs);	# 12 RSwriteNextPart (_18:int)<-(rs:resultset)
end main;	# 13  
&t
$id	1
$columncount	1
$tuplecount	1
$ctype	S
%column	column_1
%table	
%schema	
%type	varchar
%digits	
%scale	
%width	0
[10:1999-05-02

# 09:27:17 >  
# 09:27:17 >  Done.
# 09:27:17 >  

