@' The contents of this file are subject to the MonetDB Public License
@' Version 1.1 (the "License"); you may not use this file except in
@' compliance with the License. You may obtain a copy of the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
@'
@' Software distributed under the License is distributed on an "AS IS"
@' basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
@' License for the specific language governing rights and limitations
@' under the License.
@'
@' The Original Code is the MonetDB Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2006 CWI.
@' All Rights Reserved.

@f mal_init
@a Martin Kersten
@* Mal Startup file
Upon starting the Monet/MAL server we need to initialize the symbol table.
This encompasses loading the signatures of several key modules.
They are listed below. 

Beware, since libraries are loaded dynamically, there is an implicit
dependency. For example, the mapi module initializer uses the bat module.
It should be loaded after the bat module.

The negative effect is that this module is inspected as part of
the function resolution scheme.

@mal

#include pcl;
include mdb;
include unix;
include lock;
include sema;
include alarm;
include mmath;
include streams;

#atom extensions
include blob;
include color;
include str;
include url;
include mtime; 
include inet;

# the kernel stuff to make it work
include bat;
include batExtensions;
include pcre;
include algebra;
include algebraExtensions;
include calc;
include status;
include group;
include aggr;
include array;
include pqueue;
include mkey;

# the hardwired multiplex extensions
include batmath;
include batcalc;
include batstr;
include batcolor;

# MAL related extensions
include clients;
include tablet;
include mal_io;
include factory;
include const; 
include bbp;
include box; 
include pbm;
include mat;
include inspect;
include manual;
include language;
include mserver;

include profiler;
include statistics;

include optimizer;
# here follows all the optimizer modules
include mal_optimizer;
include mal_commonTerms;
include mal_constantExpression;
include mal_costmodel;
include mal_emptyset;
include mal_factorize;
include mal_garbageCollector;
include mal_generators;
include mal_inliners;
include mal_cascade;
include mal_multiplex;
include mal_multitable;
include mal_partitionedQuery;
include mal_peephole;
include mal_qep;
include mal_reduce;
include mal_singleton;
include mal_strengthReduction;

include mal_crack;	#  not in alpha5
include mal_joinselect;	#  not in alpha5
include mal_remoteQueries; # not in alpha5

include chopper;
#include logger;
include transaction;
include partitions;

# less important stuff
include crackers; # not in alpha5
@-
In practice, we have to introduce different startup for each
client group or database.
@c

@-
