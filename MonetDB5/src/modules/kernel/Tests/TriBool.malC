t := true;
f := false;
n := nil:bit;
bl_ := bat.new(:void,:bit);
br_ := bat.new(:void,:bit);
bo_ := bat.new(:void,:bit);
ba_ := bat.new(:void,:bit);
bl := algebra.markH(bl_,0@0);
br := algebra.markH(br_,0@0);
bo := algebra.markH(bo_,0@0);
ba := algebra.markH(ba_,0@0);
bl := bat.append(bl,t);
bl := bat.append(bl,t);
bl := bat.append(bl,t);
bl := bat.append(bl,f);
bl := bat.append(bl,f);
bl := bat.append(bl,f);
bl := bat.append(bl,n);
bl := bat.append(bl,n);
bl := bat.append(bl,n);
br := bat.append(br,t);
br := bat.append(br,f);
br := bat.append(br,n);
br := bat.append(br,t);
br := bat.append(br,f);
br := bat.append(br,n);
br := bat.append(br,t);
br := bat.append(br,f);
br := bat.append(br,n);

io.print(t);
io.print(f);
io.print(n);
io.print(bl,br);

o := calc.or(t,t); bo := bat.append(bo,o);
o := calc.or(t,f); bo := bat.append(bo,o);
o := calc.or(t,n); bo := bat.append(bo,o);
o := calc.or(f,t); bo := bat.append(bo,o);
o := calc.or(f,f); bo := bat.append(bo,o);
o := calc.or(f,n); bo := bat.append(bo,o);
o := calc.or(n,t); bo := bat.append(bo,o);
o := calc.or(n,f); bo := bat.append(bo,o);
o := calc.or(n,n); bo := bat.append(bo,o);
oo := batcalc.or(bl,br);
io.print(bl,br, bo, oo);

a := calc.and(t,t); ba := bat.append(ba,a);
a := calc.and(t,f); ba := bat.append(ba,a);
a := calc.and(t,n); ba := bat.append(ba,a);
a := calc.and(f,t); ba := bat.append(ba,a);
a := calc.and(f,f); ba := bat.append(ba,a);
a := calc.and(f,n); ba := bat.append(ba,a);
a := calc.and(n,t); ba := bat.append(ba,a);
a := calc.and(n,f); ba := bat.append(ba,a);
a := calc.and(n,n); ba := bat.append(ba,a);
aa := batcalc.and(bl,br);
io.print(bl,br, ba, aa);
