stdout of test 'tst801` in directory 'src/mal` itself:


# 14:58:45 >  
# 14:58:45 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib64/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=32222 --set monet_prompt= --trace --dbname=mTests_src_mal  tst801.mal < /dev/null
# 14:58:45 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
##testing simple stuff around type BAT
#z:= bat.new(:int,:int);
#b:= bat.new(:int,:bat);
#bat.insert(b,1,z);
#io.print(b);
#
#io.print(z);
#
#x := algebra.find(b, 0);
##io.print(x);
#x := algebra.find(b, 1);
##io.print(x);
#x := algebra.find(b, 4);
#io.print(x);
#
function user.main():void;              #  0 main:void := user.main() {G}
#testing simple stuff around type BAT 
    y := bat.new(:int,:int);            #  2 y:bat[:int,:int] := CMDBATnew(_3:int, _3:int) {G}
    bat.insert(y,0,0);                  #  3 _4:void := BKCinsert_bun(y:bat[:int,:int], _5:int, _5:int) 
    z := bat.new(:int,:int);            #  4 z:bat[:int,:int] := CMDBATnew(_3:int, _3:int) {G}
    bat.insert(z,1,1);                  #  5 _7:void := BKCinsert_bun(z:bat[:int,:int], _8:int, _8:int) 
    b := bat.new(:int,:BAT);            #  6 b:bat[:int,:BAT] := CMDBATnew(_3:int, _10:BAT) {G}
    bat.insert(b,0,y);                  #  7 _11:void := BKCinsert_bun(b:bat[:int,:BAT], _5:int, y:bat[:int,:int]) 
    bat.insert(b,1,z);                  #  8 _12:void := BKCinsert_bun(b:bat[:int,:BAT], _8:int, z:bat[:int,:int]) 
    io.print(z);                        #  9 _13:void := IOprint_val(z:bat[:int,:int]) 
    x := algebra.find(b,0);             # 10 x:BAT := ALGfind(b:bat[:int,:BAT], _5:int) {G}
#io.print(x); 
    x := algebra.find(b,1);             # 12 x:BAT := ALGfind(b:bat[:int,:BAT], _8:int) {G}
#io.print(x); 
    x := algebra.find(b,4);             # 14 x:BAT := ALGfind(b:bat[:int,:BAT], _17:int) {G}
    io.print(x);                        # 15 _18:void := IOprint_val(x:BAT) 
end main;                               # 16  
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
!MALException:algebra.find:can not find element

# 14:58:46 >  
# 14:58:46 >  Done.
# 14:58:46 >  

