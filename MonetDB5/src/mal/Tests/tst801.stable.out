stdout of test 'tst801` in directory 'src/mal` itself:


# 14:58:45 >  
# 14:58:45 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib64/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=32222 --set monet_prompt= --trace --dbname=mTests_src_mal  tst801.mal < /dev/null
# 14:58:45 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
##testing simple stuff around type BAT
#z:= bat.new(:int,:int);
#b:= bat.new(:int,:bat);
#bat.insert(b,1,z);
#io.print(b);
#
function user.main():void;	# 0  (main:void)
#testing simple stuff around type BAT 	# 1  (_1:str)
    y := bat.new(:int,:int);	# 2 CMDBATnew (y:bat[:int,:int])<-(_3:int)(_3:int)
    bat.insert(y,0,0);	# 3 BKCinsert_bun (_4:void)<-(y:bat[:int,:int])(_5:int)(_5:int)
    z := bat.new(:int,:int);	# 4 CMDBATnew (z:bat[:int,:int])<-(_3:int)(_3:int)
    bat.insert(z,1,1);	# 5 BKCinsert_bun (_7:void)<-(z:bat[:int,:int])(_8:int)(_8:int)
    b := bat.new(:int,:BAT);	# 6 CMDBATnew (b:bat[:int,:BAT])<-(_3:int)(_10:BAT)
    bat.insert(b,0,y);	# 7 BKCinsert_bun (_11:void)<-(b:bat[:int,:BAT])(_5:int)(y:bat[:int,:int])
    bat.insert(b,1,z);	# 8 BKCinsert_bun (_12:void)<-(b:bat[:int,:BAT])(_8:int)(z:bat[:int,:int])
    io.print(b);	# 9 IOprint_val (_13:void)<-(b:bat[:int,:BAT])
    io.print(z);	# 10 IOprint_val (_14:void)<-(z:bat[:int,:int])
    x := algebra.find(b,0);	# 11 ALGfind (x:BAT)<-(b:bat[:int,:BAT])(_5:int)
    io.print(x);	# 12 IOprint_val (_16:void)<-(x:BAT)
    x := algebra.find(b,1);	# 13 ALGfind (x:BAT)<-(b:bat[:int,:BAT])(_8:int)
    io.print(x);	# 14 IOprint_val (_17:void)<-(x:BAT)
    x := algebra.find(b,4);	# 15 ALGfind (x:BAT)<-(b:bat[:int,:BAT])(_18:int)
    io.print(x);	# 16 IOprint_val (_19:void)<-(x:BAT)
end main;	# 17  
#-------------------------#
# h	t		  # name
# int	BAT		  # type
#-------------------------#
[ 0,	  <tmp_7>	  ]
[ 1,	  <tmp_10>	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ <tmp_7> ]
[ <tmp_10> ]
!MALException:algebra.find:can not find element

# 14:58:46 >  
# 14:58:46 >  Done.
# 14:58:46 >  

