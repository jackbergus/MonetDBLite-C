stdout of test 'tst301` in directory 'src/mal` itself:


# 08:01:14 >  
# 08:01:14 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst301.mal </dev/null
# 08:01:14 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##propagate INT exception
#raise	IllegalAccess := 1234;
#	print("should not come here\n");
#catch IllegalAccess;
#	printf("catched %d\n",IllegalAccess);
#exit IllegalAccess;
#
function user.main():int;	# 0  (main:int)
#propagate INT exception 	# 1  (_2:str)
    raise IllegalAccess := 1234;	# 2  (IllegalAccess:int)<-(_4:int)
    io.print("should not come here\n");	# 3 IOprint_val (_5:int)<-(_6:str)
catch IllegalAccess;	# 4  (IllegalAccess:int) jump 6
    io.printf("catched %d\n",IllegalAccess);	# 5 IOprint_formatted_int (_7:int)<-(_8:str)(IllegalAccess:int)
exit IllegalAccess;	# 6  (IllegalAccess:int)
end main;	# 7  
catched 1234

# 08:01:14 >  
# 08:01:14 >  Done.
# 08:01:14 >  

