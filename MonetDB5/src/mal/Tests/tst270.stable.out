stdout of test 'tst270` in directory 'src/mal` itself:


# 08:01:11 >  
# 08:01:11 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst270.mal </dev/null
# 08:01:11 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##Same as tst200, but includes testing of the profiler
#
##profiler.setAll();
#profiler.activate("tick");
#profiler.activate("pc");
#profiler.activate("statement");
##profiler.setFilter("*","*");
#profiler.setFilter("*","insert");
##profiler.setFilter("*","print");
#profiler.openStream("/tmp/MonetEvents");
#
#o:=oid(20000000);
#setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(:int,:int);
#printf("#~BeginVariableOutput~#\n"); 
#binfo:= bat.info(b);
#print(binfo); 
#printf("#~EndVariableOutput~#\n");
#
#profiler.start();
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#print(b,b,b);
#profiler.stop();
#profiler.closeStream();
#
function user.main():void;	# 0  (main:void)
#Same as tst200, but includes testing of the profiler 	# 1  (_1:str)
#profiler.setAll(); 	# 2  (_2:str)
    profiler.activate("ticks");	# 3 CMDactivateProfiler (_3:void)<-(_4:str)
    profiler.activate("pc");	# 4 CMDactivateProfiler (_5:void)<-(_6:str)
    profiler.activate("statement");	# 5 CMDactivateProfiler (_7:void)<-(_8:str)
#profiler.setFilter("*","*"); 	# 6  (_9:str)
    profiler.setFilter("*","insert");	# 7 CMDsetFilterProfiler (_10:void)<-(_11:str)(_12:str)
    profiler.openStream("/tmp/MonetEvents");	# 8 CMDsetProfilerStream (_13:void)<-(_14:str)
    o := calc.oid(20000000);	# 9 CALCint2oid (o:oid)<-(_16:int)
    calc.setoid(o);	# 10 CALCsetoidInc (_17:oid)<-(o:oid)
#test basic functionality of the BAT library. 	# 11  (_18:str)
#focussed on integers 	# 12  (_19:str)
#it includes insertions,deletions,selections, and joins. 	# 13  (_20:str)
    b := bat.new(:int,:int);	# 14 CMDBATnew (b:bat[:int,:int])<-(_22:int)(_23:int)
    io.printf("#~BeginVariableOutput~#\n");	# 15 IOprint_str (_24:void)<-(_25:str)
    binfo := bat.info(b);	# 16 BKCinfo (binfo:bat[:str,:str])<-(b:bat[:int,:int])
    io.print(binfo);	# 17 IOprint_val (_27:void)<-(binfo:bat[:str,:str])
    io.printf("#~EndVariableOutput~#\n");	# 18 IOprint_str (_28:void)<-(_29:str)
    profiler.start();	# 19 CMDstartProfiler (_30:void)
    err := bat.insert(b,1,15);	# 20 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_32:int)(_33:int)
    err := bat.insert(b,2,4);	# 21 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_34:int)(_35:int)
    n0 := calc.int(nil:void);	# 22 CALCnil2int (n0:int)<-(_37:void)
    err := bat.insert(b,3,n0);	# 23 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_38:int)(n0:int)
    err := bat.insert(b,4,16);	# 24 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_35:int)(_39:int)
    err := bat.insert(b,5,25);	# 25 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_40:int)(_41:int)
    err := bat.insert(b,6,36);	# 26 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_42:int)(_43:int)
    err := bat.insert(b,7,49);	# 27 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_44:int)(_45:int)
    err := bat.insert(b,8,64);	# 28 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_46:int)(_47:int)
    err := bat.insert(b,9,n0);	# 29 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_48:int)(n0:int)
    err := bat.insert(b,n0,n0);	# 30 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(n0:int)(n0:int)
    err := bat.insert(b,n0,81);	# 31 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(n0:int)(_49:int)
    io.print(b);	# 32 IOprint_val (_50:void)<-(b:bat[:int,:int])
    io.print(b,b,b);	# 33 IOtable (_51:void)<-(b:bat[:int,:int])(b:bat[:int,:int])(b:bat[:int,:int])
    profiler.stop();	# 34 CMDstopProfiler (_52:void)
    profiler.closeStream();	# 35 CMDcloseProfilerStream (_53:void)
    profiler.cleanup();	# 36 CMDcleanup (_54:void)
end main;	# 37  
#~BeginVariableOutput~#
#-------------------------------------------------#
# h				tmp_5		  # name
# str				str		  # type
#-----------------------------------------#
[ "version",		  "25105"	  ]
[ "batId",		  "tmp_7"	  ]
[ "batCacheid",		  "7"		  ]
[ "batParentid",		  "0"		  ]
[ "batSharecnt",		  "0"		  ]
[ "head",			  "int"		  ]
[ "tail",			  "int"		  ]
[ "batPersistence",		  "transient"	  ]
[ "batRestricted",		  "updatable"	  ]
[ "batRefcnt",			  "1"		  ]
[ "batLRefcnt",			  "1"		  ]
[ "batDirty",			  "dirty"	  ]
[ "batSet",			  "0"		  ]
[ "void_tid",		  "-1"		  ]
[ "void_cnt",			  "0"		  ]
[ "hsorted",		  "65"		  ]
[ "hident",			  "h"		  ]
[ "hdense",			  "0"		  ]
[ "hseqbase",			  "0@0"		  ]
[ "hkey",		  "1"		  ]
[ "hloc",			  "0"		  ]
[ "hvarsized",			  "0"		  ]
[ "halign",			  "20000000"	  ]
[ "hnosorted",		  "0"		  ]
[ "hnosorted_rev",	  "0"		  ]
[ "hnodense",		  "0"		  ]
[ "hnokey[0]",		  "0"		  ]
[ "hnokey[1]",		  "0"		  ]
[ "tident",			  "t"		  ]
[ "tdense",			  "0"		  ]
[ "tseqbase",			  "0@0"		  ]
[ "tsorted",		  "65"		  ]
[ "tkey",		  "1"		  ]
[ "tloc",			  "4"		  ]
[ "tvarsized",			  "0"		  ]
[ "talign",			  "20000001"	  ]
[ "tnosorted",		  "0"		  ]
[ "tnosorted_rev",	  "0"		  ]
[ "tnodense",		  "0"		  ]
[ "tnokey[0]",		  "0"		  ]
[ "tnokey[1]",		  "0"		  ]
[ "batInserted",	  "0"		  ]
[ "batDeleted",			  "0"		  ]
[ "batFirst",		  "0"		  ]
[ "top",		  "0"		  ]
[ "batStamp",		  "4"		  ]
[ "lastUsed",		  "165"		  ]
[ "curStamp",		  "5"		  ]
[ "batCopiedtodisk",		  "0"		  ]
[ "batDirtydesc",	  "dirty"	  ]
[ "batDirtybuns",		  "clean"	  ]
[ "batBuns.free",	  "0"		  ]
[ "batBuns.size",	  "2048"	  ]
[ "batBuns.maxsize",	  "2048"	  ]
[ "batBuns.storage",		  "malloced"	  ]
[ "batBuns.filename",	  "7.buns"	  ]
[ "hheapdirty",			  "clean"	  ]
[ "theapdirty",			  "clean"	  ]
#~EndVariableOutput~#
# Start performance profiling
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
#---------------------------------#
# h	tmp_4	tmp_4	tmp_4	  # name
# int	int	int	int	  # type
#---------------------------------#
[ 1,	  15,	  15,	  15	  ]
[ 2,	  4,	  4,	  4	  ]
[ 3,	  nil,	  nil,	  nil	  ]
[ 4,	  16,	  16,	  16	  ]
[ 5,	  25,	  25,	  25	  ]
[ 6,	  36,	  36,	  36	  ]
[ 7,	  49,	  49,	  49	  ]
[ 8,	  64,	  64,	  64	  ]
[ 9,	  nil,	  nil,	  nil	  ]
# Performance profiling stopped

# 08:01:11 >  
# 08:01:11 >  Done.
# 08:01:11 >  

