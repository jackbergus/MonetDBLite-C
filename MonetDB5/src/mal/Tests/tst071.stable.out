stdout of test 'tst071` in directory 'src/mal` itself:


# 07:58:49 >  
# 07:58:49 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst071.mal </dev/null
# 07:58:49 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## parsing operations with multi-assignments
#function swap(x:int,y:int)(a:int,b:int);
#	a:=y; b:=x;
#	return(a,b);
#
#end swap;
function user.swap(x:int,y:int) (a:int,b:int);	# 0  (a:int)(b:int)<-(x:int)(y:int)
    a := y;	# 1  (a:int)<-(y:int)
    b := x;	# 2  (b:int)<-(x:int)
    return (a,b);	# 3  (a:int)(b:int)
end swap;	# 4  
#
#(x,y):= swap(1,2);
#print(x);
#print(y);
#a:= swap(3,4);
#print(a);
#
!ERROR: 'user.swap' undefined in user.main[5] a:any := user.swap(_9:int, _10:int)
function user.main():void;	# 0  (main:void)
# parsing operations with multi-assignments 	# 1  (_1:str)
    (x,y):= user.swap(1,2);	# 2  (x:int)(y:int)<-(_4:int)(_5:int)
    io.print(x);	# 3 IOprint_val (_6:void)<-(x:int)
    io.print(y);	# 4 IOprint_val (_7:void)<-(y:int)
    a := user.swap(3,4);	# 5  unknown (a:any)<-(_9:int)(_10:int)
    io.print(a);	# 6 IOprint_val (_11:void)<-(a:any)
end main;	# 7  

# 07:58:49 >  
# 07:58:49 >  Done.
# 07:58:49 >  

