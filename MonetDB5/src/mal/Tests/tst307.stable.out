stdout of test 'tst307` in directory 'src/mal` itself:


# 08:01:18 >  
# 08:01:18 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst307.mal </dev/null
# 08:01:18 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##testing exceptions raised in the kernel
#
#b:= new(:int,:int);
#z:= find(b,0);
#print("should not come here anymore");
#catch MALexception;
#	print("catched the exception");
#exit MALexception;
#
function user.main():void;	# 0  (main:void)
#testing exceptions raised in the kernel 	# 1  (_1:str)
    b := bat.new(:int,:int);	# 2 CMDBATnew (b:bat[:int,:int])<-(_3:int)(_3:int)
    z := algebra.find(b,0);	# 3 ALGfind (z:int)<-(b:bat[:int,:int])(_5:int)
    io.print("should not come here anymore");	# 4 IOprint_val (_6:int)<-(_7:str)
catch MALexception;	# 5  (MALexception:any) jump 7
    io.print("catched the exception");	# 6 IOprint_val (_9:int)<-(_10:str)
exit MALexception;	# 7  (MALexception:any)
end main;	# 8  
[ "catched the exception" ]

# 08:01:18 >  
# 08:01:18 >  Done.
# 08:01:18 >  

