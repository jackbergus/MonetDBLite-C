stdout of test 'tst3030` in directory 'src/mal` itself:


# 08:01:16 >  
# 08:01:16 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst3030.mal </dev/null
# 08:01:16 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##Parsing properties and keeping them around
## note the use of the first parameter to obtain property set
#function newsemijoin(A:bat[:int,:any_1], 
#end newsemijoin;
function user.newsemijoin(A:bat[:int,:any_1],B:bat[:int,:any_2]):bat[:int,:any_1];
    return newsemijoin := nil;
end newsemijoin;
#z:= bat.new(:int{sorted=true},:int);
#w:= bat.new(:int{sequence=true},:int);
#w:bat[:int,:int]:= bat.new(:int,:int);
#y:= algebra.sort(w:bat[:int,:int]{sorted=true,dense=true});
#io.print(1);
#y:int{sorted=true}:= algebra.sort(w);
#
!TypeException:user.main[6]:'algebra.sort' undefined in: y:int := algebra.sort(w:bat[:int,:int])

!TypeException:user.main[8]:'algebra.sort' undefined in: y:int := algebra.sort(w:bat[:int,:int])
function user.main():void;
#Parsing properties and keeping them around 
# note the use of the first parameter to obtain property set 
    z := bat.new(:int,:int);
    w:bat[:int,:int]  := bat.new(:int,:int);
    w:bat[:int,:int]  := bat.new(:int,:int);
    y:int  := algebra.sort(w);
    io.print(1);
    y:int  := algebra.sort(w);
end main;

# 08:01:16 >  
# 08:01:16 >  Done.
# 08:01:16 >  

