stdout of test 'tst040` in directory 'src/mal` itself:


# 07:58:43 >  
# 07:58:43 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst040.mal </dev/null
# 07:58:43 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Variables names may be identical to type names, but
## then they also have to bear the same value 
#
#str := "hello";
#int := 1:sht;
#flt := "wrong";
#i   := true;
#
#
#
function user.main():void;	# 0  (main:void)
# Variables names may be identical to type names, but 	# 1  (_1:str)
# then they also have to bear the same value  	# 2  (_2:str)
    str := "hello";	# 3  (str:str)<-(_4:str)
    int := 1:sht;	# 4  (int:sht)<-(_6:sht)
    flt := "wrong";	# 5  (flt:str)<-(_8:str)
    i := true;	# 6  (i:bit)<-(_10:bit)
    w := 32767;	# 7  (w:int)<-(_12:int)
    b := 125;	# 8  (b:int)<-(_14:int)
    c1 := 'a';	# 9  (c1:chr)<-(_16:chr)
    io.print(c1);	# 10 IOprint_val (_17:void)<-(c1:chr)
    c2 := '\012';	# 11  (c2:chr)<-(_19:chr)
    io.print(c2);	# 12 IOprint_val (_20:void)<-(c2:chr)
    c3 := '\011';	# 13  (c3:chr)<-(_22:chr)
    io.print(c3);	# 14 IOprint_val (_23:void)<-(c3:chr)
    c4 := '\012';	# 15  (c4:chr)<-(_19:chr)
    io.print(c4);	# 16 IOprint_val (_25:void)<-(c4:chr)
# test for coercion errors 	# 17  (_26:str)
    x0 := 1:int;	# 18  (x0:int)<-(_28:int)
    io.print(x0);	# 19 IOprint_val (_29:void)<-(x0:int)
    x1 := 3:int;	# 20  (x1:int)<-(_31:int)
    io.print(x1);	# 21 IOprint_val (_32:void)<-(x1:int)
    x2 := "3":str;	# 22  (x2:str)<-(_34:str)
    io.print(x2);	# 23 IOprint_val (_35:void)<-(x2:str)
    x3 := nil:bte;	# 24  (x3:bte)<-(_37:bte)
    x4 := -1:bte;	# 25  (x4:bte)<-(_39:bte)
    x5 := 0:wrd;	# 26  (x5:wrd)<-(_41:wrd)
end main;	# 27  
[ 'a' ]
[ '\012' ]
[ '\011' ]
[ '\012' ]
[ 1 ]
[ 3 ]
[ "3" ]

# 07:58:44 >  
# 07:58:44 >  Done.
# 07:58:44 >  

