stdout of test 'tst010` in directory 'src/mal` itself:


# 22:31:16 >  
# 22:31:16 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=35230 --set sql_port=49695 --set xquery_port=55253 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst010.mal </dev/null
# 22:31:16 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## syntax analysis test for guarded blocks, redo's and leave's
## forcefully end the block, because the parser counts barrier/exit pairs
#barrier	L:= 1;
#	#do it
#	leave Z;	# not known in block
#	redo L;
#exit 	L;
#	redo L;		# outside block
#	leave X;	# outside block
#	redo A;		# outside block
#barrier X:=1;
#	leave L;	# outside block
#	leave X;
#	redo L;		# outside block
#exit	X;
#barrier A:=1;
#	barrier B:= 1;
#		redo A;
#	exit	B;
#	barrier C:=1;
#		leave A;
#	exit 	C;
#
#	exit	B;	# out of order
#	exit	F;	# unknown
#
#	barrier D:=1;
#		leave D;
#		redo  D;  # dead code
#	exit	D;
#	barrier D:=2;		# duplicate block
#	exit	D;
#exit	A;
#barrier  unfinished:= 1;
#	f:=1;
#end;
!ERROR: SyntaxException: user.main[5]: label 'Z' not in guarded block
!ERROR: SyntaxException: user.main[9]: label 'L' not in guarded block
!ERROR: SyntaxException: user.main[11]: label 'X' not in guarded block
!ERROR: SyntaxException: user.main[13]: label 'A' not in guarded block
!ERROR: SyntaxException: user.main[16]: label 'L' not in guarded block
!ERROR: SyntaxException: user.main[19]: label 'L' not in guarded block
!ERROR: SyntaxException: user.main[29]: exit-label 'B' doesnot match 'A'
!ERROR: SyntaxException: user.main[31]: exit-label 'F' without begin-label
!ERROR: SyntaxException: user.main[41]: exit-label 'A' without begin-label
!ERROR: SyntaxException: user.main[44]: begin 'unfinished' without exit in main[45]
function user.main():void;	# 0  (main:void)
# syntax analysis test for guarded blocks, redo's and leave's 	# 1  (_1:str)
# forcefully end the block, because the parser counts barrier/exit pairs 	# 2  (_2:str)
barrier L := 1;	# 3  (L:int)<-(_4:int) jump 8
#do it 	# 4  (_5:str)
    leave Z;	# 5  (Z:any)
# not known in block 	# 6  ($11:str)
    redo L;	# 7  (L:int) jump 4
exit L;	# 8  (L:int)
    redo L;	# 9  (L:int)
# outside block 	# 10  ($13:str)
    leave X;	# 11  (X:int)
# outside block 	# 12  ($13:str)
    redo A;	# 13  (A:int)
# outside block 	# 14  (_8:str)
barrier X := 1;	# 15  (X:int)<-(_4:int) jump 21
    leave L;	# 16  (L:int)
# outside block 	# 17  ($13:str)
    leave X;	# 18  (X:int) jump 21
    redo L;	# 19  (L:int)
# outside block 	# 20  ($13:str)
exit X;	# 21  (X:int)
barrier A := 1;	# 22  (A:int)<-(_4:int) jump 29
barrier B := 1;	# 23  (B:int)<-(_4:int) jump 25
    redo A;	# 24  (A:int)
exit B;	# 25  (B:int)
barrier C := 1;	# 26  (C:int)<-(_4:int) jump 28
    leave A;	# 27  (A:int)
exit C;	# 28  (C:int)
exit B;	# 29  (B:int)
# out of order 	# 30  ($23:str)
exit F;	# 31  (F:any)
# unknown 	# 32  (_15:str)
barrier D := 1;	# 33  (D:int)<-(_4:int) jump 37
    leave D;	# 34  (D:int) jump 37
    redo D;	# 35  (D:int) jump 34
# dead code 	# 36  ($29:str)
exit D;	# 37  (D:int)
barrier D := 2;	# 38  (D:int)<-(_18:int) jump 40
# duplicate block 	# 39  (_19:str)
exit D;	# 40  (D:int)
exit A;	# 41  (A:int)
barrier unfinished := 1;	# 42  (unfinished:int)<-(_4:int)
    f := 1;	# 43  (f:int)<-(_4:int)
end main;	# 44  
#
function user.main():void;	# 0  (main:void)
# syntax analysis test for guarded blocks, redo's and leave's 	# 1  (_1:str)
# forcefully end the block, because the parser counts barrier/exit pairs 	# 2  (_2:str)
barrier L := 1;	# 3  (L:int)<-(_4:int) jump 8
#do it 	# 4  (_5:str)
    leave Z;	# 5  (Z:any)
# not known in block 	# 6  ($11:str)
    redo L;	# 7  (L:int) jump 4
exit L;	# 8  (L:int)
    redo L;	# 9  (L:int)
# outside block 	# 10  ($13:str)
    leave X;	# 11  (X:int)
# outside block 	# 12  ($13:str)
    redo A;	# 13  (A:int)
# outside block 	# 14  (_8:str)
barrier X := 1;	# 15  (X:int)<-(_4:int) jump 21
    leave L;	# 16  (L:int)
# outside block 	# 17  ($13:str)
    leave X;	# 18  (X:int) jump 21
    redo L;	# 19  (L:int)
# outside block 	# 20  ($13:str)
exit X;	# 21  (X:int)
barrier A := 1;	# 22  (A:int)<-(_4:int) jump 29
barrier B := 1;	# 23  (B:int)<-(_4:int) jump 25
    redo A;	# 24  (A:int)
exit B;	# 25  (B:int)
barrier C := 1;	# 26  (C:int)<-(_4:int) jump 28
    leave A;	# 27  (A:int)
exit C;	# 28  (C:int)
exit B;	# 29  (B:int)
# out of order 	# 30  ($23:str)
exit F;	# 31  (F:any)
# unknown 	# 32  (_15:str)
barrier D := 1;	# 33  (D:int)<-(_4:int) jump 37
    leave D;	# 34  (D:int) jump 37
    redo D;	# 35  (D:int) jump 34
# dead code 	# 36  ($29:str)
exit D;	# 37  (D:int)
barrier D := 2;	# 38  (D:int)<-(_18:int) jump 40
# duplicate block 	# 39  (_19:str)
exit D;	# 40  (D:int)
exit A;	# 41  (A:int)
barrier unfinished := 1;	# 42  (unfinished:int)<-(_4:int)
    f := 1;	# 43  (f:int)<-(_4:int)
end main;	# 44  
end main;	# 45  unknown 

# 22:31:16 >  
# 22:31:16 >  Done.
# 22:31:16 >  

