stdout of test 'tst700` in directory 'src/mal` itself:


# 08:01:28 >  
# 08:01:28 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst700.mal </dev/null
# 08:01:28 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## A few system calls
#	print('c');
#	print("hello world");
#	print(0);
#	print(1:lng);
#	print('c');
#	print(true);
#	pi := 3.147;
#	x:=1;
#	print(x);
#	print(pi);
#	printf("hello\n");
#	printf("%5d\n",0);
#	printf("%5d\n",1:lng);
#	printf("%c\n",'c');
#	printf("%-8s\n", true);
#	printf("%6.2f\n",pi);
#	printf("single line %s \n","hello");
#
function user.main():void;	# 0  (main:void)
# A few system calls 	# 1  (_1:str)
    io.print('c');	# 2 IOprint_val (_2:int)<-(_3:chr)
    io.print("hello world");	# 3 IOprint_val (_4:int)<-(_5:str)
    io.print(0);	# 4 IOprint_val (_6:int)<-(_7:int)
    io.print(1:lng);	# 5 IOprint_val (_8:int)<-(_9:lng)
    io.print('c');	# 6 IOprint_val (_10:int)<-(_3:chr)
    io.print(true);	# 7 IOprint_val (_11:int)<-(_12:bit)
    pi := 3.14700007;	# 8  (pi:flt)<-(_14:flt)
    x := 1;	# 9  (x:int)<-(_16:int)
    io.print(x);	# 10 IOprint_val (_17:int)<-(x:int)
    io.print(pi);	# 11 IOprint_val (_18:int)<-(pi:flt)
    io.printf("hello\n");	# 12 IOprint_str (_19:int)<-(_20:str)
    io.printf("%5d\n",0);	# 13 IOprint_formatted_int (_21:int)<-(_22:str)(_7:int)
    io.printf("%5d\n",1:lng);	# 14 IOprint_formatted_lng (_23:int)<-(_22:str)(_9:lng)
    io.printf("%c\n",'c');	# 15 IOprint_formatted_chr (_24:int)<-(_25:str)(_3:chr)
    io.printf("%-8s\n",true);	# 16 IOprint_formatted_bit (_26:int)<-(_27:str)(_12:bit)
    io.printf("%6.2f\n",pi);	# 17 IOprint_formatted_flt (_28:int)<-(_29:str)(pi:flt)
    io.printf("single line %s \n","hello");	# 18 IOprint_formatted_str (_30:int)<-(_31:str)(_32:str)
end main;	# 19  
[ 'c' ]
[ "hello world" ]
[ 0 ]
[ 1 ]
[ 'c' ]
[ true ]
[ 1 ]
[ 3.14700007 ]
hello
    0
    1
c
true    
  3.15
single line hello 

# 08:01:28 >  
# 08:01:28 >  Done.
# 08:01:28 >  

