stdout of test 'tst061` in directory 'src/mal` itself:


# 07:58:48 >  
# 07:58:48 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst061.mal </dev/null
# 07:58:48 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## type coercion and creation
#
#o := oid("999@0");
#os := str(o);
#i := sht(1);
#l := lng(2);
#f := flt(3.4);
#j := sht("1");
#
#d0 := dbl(1.0);
#d1 := dbl(2.0);
#z:= <(d0,2.0:dbl);
#print(z);
#z:= <(d1,2.0:dbl);
#print(z);
#
function user.main():void;              #  0 main:void {G}
# type coercion and creation 
    o := calc.oid("999@0");             #  2 o:oid := CALCstr2oid(_3:str) 
    os := calc.str(o);                  #  3 os:str := CALCoid2str(o:oid) {G}
    i := calc.sht(1);                   #  4 i:sht := CALCint2sht(_6:int) 
    l := calc.lng(2);                   #  5 l:lng := CALCint2lng(_8:int) 
    f := calc.flt(3.4000001);           #  6 f:flt := CALCflt2flt(_10:flt) 
    j := calc.sht("1");                 #  7 j:sht := CALCstr2sht(_12:str) 
    d0 := calc.dbl(1);                  #  8 d0:dbl := CALCflt2dbl(_14:flt) 
    d1 := calc.dbl(2);                  #  9 d1:dbl := CALCflt2dbl(_16:flt) 
    z := calc.<(d0,2:dbl);              # 10 z:bit := CALCcompLTdbldbl(d0:dbl, _18:dbl) 
    io.print(z);                        # 11 _19:void := IOprint_val(z:bit) 
    z := calc.<(d1,2:dbl);              # 12 z:bit := CALCcompLTdbldbl(d1:dbl, _18:dbl) 
    io.print(z);                        # 13 _20:void := IOprint_val(z:bit) 
end main;	# 14  
[ true ]
[ false ]

# 07:58:48 >  
# 07:58:48 >  Done.
# 07:58:48 >  

