stdout of test 'tst1204` in directory 'src/mal` itself:


# 23:39:00 >  
# 23:39:00 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31765 --set xrpc_port=46302 --set monet_prompt= --trace --dbname=mTests_src_mal  tst1204.mal
# 23:39:00 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
### test dayofweek and weeknumber using more than two years as consecutive days
#    date_00:= mtime.date(2000,01,01);
#
#	date_seq:= bat.new(:int,:date);
##var date_seq := bat.new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := calc.<(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := mtime.adddays(date_00,i);
#	bat.insert(date_seq,i,pf_a);
##	date_seq.bat.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#
function user.main():void;              #  0 main:void := user.main() {G}
## test dayofweek and weeknumber using more than two years as consecutive days 
    date_00 := mtime.date(2000,1,1);    #  2 date_00:date := MTIMEdate_create(_3:int, _4:int, _4:int) 
    date_seq := bat.new(:int,:date);    #  3 date_seq:bat[:int,:date] := CMDBATnew(_6:int, _7:date) {G}
#var date_seq := bat.new(int, date); 
    i := -375;                          #  5 i:int := _10:int 
#var i := -375; 
barrier lf_a := true;                   #  7 lf_a:bit := _13:bit {J17}
    i := calc.+(i,1);                   #  8 i:int := CALCbinaryADDintint(i:int, _4:int) 
    of_a := calc.<(i,375);              #  9 of_a:bit := CALCcompLTintint(i:int, _15:int) 
barrier mf_a := of_a;                   # 10 mf_a:bit := of_a:bit {J16}
#while ((i :+= 1) < 375) { 
    pf_a := mtime.adddays(date_00,i);   # 12 pf_a:date := MTIMEdate_adddays(date_00:date, i:int) 
    bat.insert(date_seq,i,pf_a);        # 13 _19:bat[:int,:date] := BKCinsert_bun(date_seq:bat[:int,:date], i:int, pf_a:date) {G}
#	date_seq.bat.insert(i,adddays(date_00,i)); 
    redo lf_a;                          # 15 lf_a:bit {J8}
exit mf_a;                              # 16 mf_a:bit 
exit lf_a;                              # 17 lf_a:bit 
#} 
end main;	# 19  

# 23:39:01 >  
# 23:39:01 >  Done.
# 23:39:01 >  

