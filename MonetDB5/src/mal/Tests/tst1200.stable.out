stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;	# 0  (main:void)
# Mil compiler Version 1.0) 	# 1  (_2:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  (_4:str)
# Predefined code segment 	# 3  (_6:str)
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 4  (_8:str)
#module(monettime,alarm); 	# 5  (_10:str)
    lzone := mtime.tzone("GMT+1");	# 6 MTIMEtzone_fromstr (lzone:tzone)<-(_12:str)
    mtime.tzone_local(lzone);	# 7 MTIMEtzone_set_local (_13:void)<-(lzone:tzone)
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 8  (_15:str)
## test the various ways to create rules 	# 9  (_17:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 10 MTIMErule_fromstr (rule_jan:rule)<-(_19:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 11  (_21:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 12 MTIMErule_fromstr (rule_mar:rule)<-(_23:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 13  (_25:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 14 MTIMErule_fromstr (rule_apr:rule)<-(_27:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 15  (_29:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 16 MTIMErule_fromstr (rule_may:rule)<-(_31:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 17  (_33:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 18 MTIMErule_fromstr (rule_jun:rule)<-(_35:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 19  (_37:str)
    rule_jul := mtime.rule(7,1,1,75);	# 20 MTIMErule_create (rule_jul:rule)<-(_39:int)(_40:int)(_40:int)(_41:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 21  (_43:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 22 MTIMErule_create (rule_aug:rule)<-(_45:int)(_46:int)(_40:int)(_41:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 23  (_48:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 24 MTIMErule_create (rule_sep:rule)<-(_50:int)(_51:int)(_52:int)(_41:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 25  (_54:str)
    rule_oct := mtime.rule(10,31,0,75);	# 26 MTIMErule_create (rule_oct:rule)<-(_56:int)(_57:int)(_58:int)(_41:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 27  (_60:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 28 MTIMErule_create (rule_nov:rule)<-(_62:int)(_51:int)(_63:int)(_41:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 29  (_65:str)
## nil rules 	# 30  (_67:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 31 MTIMErule_create (rule_dec:rule)<-(_69:int)(_70:int)(_58:int)(_41:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 32  (_72:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 33 MTIMErule_fromstr (rule_feb:rule)<-(_74:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 34  (_76:str)
#  	# 35  (_78:str)
    rule_bat := bat.new(:str,:rule,10);	# 36 CMDBATnewint (rule_bat:bat[:str,:rule])<-(_80:str)(_81:rule)(_56:int)
#var rule_bat := bat.new(str,rule,10); 	# 37  (_83:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 38 BKCinsert_bun (_84:void)<-(rule_bat:bat[:str,:rule])(_85:str)(rule_jan:rule)
    bat.insert(rule_bat,"feb",rule_feb);	# 39 BKCinsert_bun (_86:void)<-(rule_bat:bat[:str,:rule])(_87:str)(rule_feb:rule)
    bat.insert(rule_bat,"mar",rule_mar);	# 40 BKCinsert_bun (_88:void)<-(rule_bat:bat[:str,:rule])(_89:str)(rule_mar:rule)
    bat.insert(rule_bat,"apr",rule_apr);	# 41 BKCinsert_bun (_90:void)<-(rule_bat:bat[:str,:rule])(_91:str)(rule_apr:rule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 42  (_93:str)
    bat.insert(rule_bat,"may",rule_may);	# 43 BKCinsert_bun (_94:void)<-(rule_bat:bat[:str,:rule])(_95:str)(rule_may:rule)
    bat.insert(rule_bat,"jun",rule_jun);	# 44 BKCinsert_bun (_96:void)<-(rule_bat:bat[:str,:rule])(_97:str)(rule_jun:rule)
    bat.insert(rule_bat,"jul",rule_jul);	# 45 BKCinsert_bun (_98:void)<-(rule_bat:bat[:str,:rule])(_99:str)(rule_jul:rule)
    bat.insert(rule_bat,"aug",rule_aug);	# 46 BKCinsert_bun (_100:void)<-(rule_bat:bat[:str,:rule])(_101:str)(rule_aug:rule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 47  (_103:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 48 BKCinsert_bun (_104:void)<-(rule_bat:bat[:str,:rule])(_105:str)(rule_sep:rule)
    bat.insert(rule_bat,"oct",rule_oct);	# 49 BKCinsert_bun (_106:void)<-(rule_bat:bat[:str,:rule])(_107:str)(rule_oct:rule)
    bat.insert(rule_bat,"nov",rule_nov);	# 50 BKCinsert_bun (_108:void)<-(rule_bat:bat[:str,:rule])(_109:str)(rule_nov:rule)
    bat.insert(rule_bat,"dec",rule_dec);	# 51 BKCinsert_bun (_110:void)<-(rule_bat:bat[:str,:rule])(_111:str)(rule_dec:rule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 52  (_113:str)
## test the operations on rules 	# 53  (_115:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 54 BKCsetColumn (ma_a:void)<-(rule_bat:bat[:str,:rule])(_117:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 55  (_119:str)
    _1023 := bat.new(:str,:int);	# 56 CMDBATnew (_1023:bat[:str,:int])<-(_1024:str)(_1025:int)
barrier (_1027,_1028,_1029):= chop.newIterator(rule_bat);	# 57 CHPbunIterator (_1027:lng)(_1028:str)(_1029:rule)<-(rule_bat:bat[:str,:rule]) jump 63
    _1031 := mtime.month(_1029);	# 58 MTIMErule_extract_month (_1031:int)<-(_1029:rule)
    bat.insert(_1023,_1028,_1031);	# 59 BKCinsert_bun (_1032:void)<-(_1023:bat[:str,:int])(_1028:str)(_1031:int)
catch MALexception;	# 60  (MALexception:str) jump 61
exit MALexception;	# 61  (MALexception:str)
    redo (_1027,_1028,_1029):= chop.hasMoreElements(rule_bat);	# 62 CHPbunHasMoreElements (_1027:lng)(_1028:str)(_1029:rule)<-(rule_bat:bat[:str,:rule]) jump 58
exit (_1027,_1028,_1029);	# 63  (_1027:lng)(_1028:str)(_1029:rule)
    na_a:bat[:str,:int]  := _1023;	# 64  (na_a:bat[:str,:int])<-(_1023:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 65 BKCsetColumn (oa_a:void)<-(na_a:bat[:str,:int])(_123:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 66  (_125:str)
    _1037 := bat.new(:str,:int);	# 67 CMDBATnew (_1037:bat[:str,:int])<-(_1038:str)(_1039:int)
barrier (_1041,_1042,_1043):= chop.newIterator(rule_bat);	# 68 CHPbunIterator (_1041:lng)(_1042:str)(_1043:rule)<-(rule_bat:bat[:str,:rule]) jump 74
    _1045 := mtime.weekday(_1043);	# 69 MTIMErule_extract_weekday (_1045:int)<-(_1043:rule)
    bat.insert(_1037,_1042,_1045);	# 70 BKCinsert_bun (_1046:void)<-(_1037:bat[:str,:int])(_1042:str)(_1045:int)
catch MALexception;	# 71  (MALexception:str) jump 72
exit MALexception;	# 72  (MALexception:str)
    redo (_1041,_1042,_1043):= chop.hasMoreElements(rule_bat);	# 73 CHPbunHasMoreElements (_1041:lng)(_1042:str)(_1043:rule)<-(rule_bat:bat[:str,:rule]) jump 69
exit (_1041,_1042,_1043);	# 74  (_1041:lng)(_1042:str)(_1043:rule)
    pa_a:bat[:str,:int]  := _1037;	# 75  (pa_a:bat[:str,:int])<-(_1037:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 76 BKCsetColumn (qa_a:void)<-(pa_a:bat[:str,:int])(_129:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 77  (_131:str)
    _1051 := bat.new(:str,:int);	# 78 CMDBATnew (_1051:bat[:str,:int])<-(_1052:str)(_1053:int)
barrier (_1055,_1056,_1057):= chop.newIterator(rule_bat);	# 79 CHPbunIterator (_1055:lng)(_1056:str)(_1057:rule)<-(rule_bat:bat[:str,:rule]) jump 85
    _1059 := mtime.day(_1057);	# 80 MTIMErule_extract_day (_1059:int)<-(_1057:rule)
    bat.insert(_1051,_1056,_1059);	# 81 BKCinsert_bun (_1060:void)<-(_1051:bat[:str,:int])(_1056:str)(_1059:int)
catch MALexception;	# 82  (MALexception:str) jump 83
exit MALexception;	# 83  (MALexception:str)
    redo (_1055,_1056,_1057):= chop.hasMoreElements(rule_bat);	# 84 CHPbunHasMoreElements (_1055:lng)(_1056:str)(_1057:rule)<-(rule_bat:bat[:str,:rule]) jump 80
exit (_1055,_1056,_1057);	# 85  (_1055:lng)(_1056:str)(_1057:rule)
    ra_a:bat[:str,:int]  := _1051;	# 86  (ra_a:bat[:str,:int])<-(_1051:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 87 BKCsetColumn (sa_a:void)<-(ra_a:bat[:str,:int])(_135:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 88  (_137:str)
    _1065 := bat.new(:str,:int);	# 89 CMDBATnew (_1065:bat[:str,:int])<-(_1066:str)(_1067:int)
barrier (_1069,_1070,_1071):= chop.newIterator(rule_bat);	# 90 CHPbunIterator (_1069:lng)(_1070:str)(_1071:rule)<-(rule_bat:bat[:str,:rule]) jump 96
    _1073 := mtime.minutes(_1071);	# 91 MTIMErule_extract_minutes (_1073:int)<-(_1071:rule)
    bat.insert(_1065,_1070,_1073);	# 92 BKCinsert_bun (_1074:void)<-(_1065:bat[:str,:int])(_1070:str)(_1073:int)
catch MALexception;	# 93  (MALexception:str) jump 94
exit MALexception;	# 94  (MALexception:str)
    redo (_1069,_1070,_1071):= chop.hasMoreElements(rule_bat);	# 95 CHPbunHasMoreElements (_1069:lng)(_1070:str)(_1071:rule)<-(rule_bat:bat[:str,:rule]) jump 91
exit (_1069,_1070,_1071);	# 96  (_1069:lng)(_1070:str)(_1071:rule)
    ta_a:bat[:str,:int]  := _1065;	# 97  (ta_a:bat[:str,:int])<-(_1065:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 98 BKCsetColumn (ua_a:void)<-(ta_a:bat[:str,:int])(_141:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 99 IOprint_val (_142:int)<-(_143:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 100 IOtable (va_a:int)<-(rule_bat:bat[:str,:rule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 101  (_146:str)
    bat.setColumn(rule_bat,"rule");	# 102 BKCsetColumn (_147:void)<-(rule_bat:bat[:str,:rule])(_117:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 103  (_119:str)
    _1079 := bat.new(:str,:date);	# 104 CMDBATnew (_1079:bat[:str,:date])<-(_1080:str)(_488:date)
barrier (_1082,_1083,_1084):= chop.newIterator(rule_bat);	# 105 CHPbunIterator (_1082:lng)(_1083:str)(_1084:rule)<-(rule_bat:bat[:str,:rule]) jump 111
    _1086 := mtime.compute(_1084,2001);	# 106 MTIMEcompute_rule_foryear (_1086:date)<-(_1084:rule)(_151:int)
    bat.insert(_1079,_1083,_1086);	# 107 BKCinsert_bun (_1087:void)<-(_1079:bat[:str,:date])(_1083:str)(_1086:date)
catch MALexception;	# 108  (MALexception:str) jump 109
exit MALexception;	# 109  (MALexception:str)
    redo (_1082,_1083,_1084):= chop.hasMoreElements(rule_bat);	# 110 CHPbunHasMoreElements (_1082:lng)(_1083:str)(_1084:rule)<-(rule_bat:bat[:str,:rule]) jump 106
exit (_1082,_1083,_1084);	# 111  (_1082:lng)(_1083:str)(_1084:rule)
    xa_a:bat[:str,:date]  := _1079;	# 112  (xa_a:bat[:str,:date])<-(_1079:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 113 BKCsetColumn (ya_a:void)<-(xa_a:bat[:str,:date])(_153:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 114  (_155:str)
    _1092 := bat.new(:str,:date);	# 115 CMDBATnew (_1092:bat[:str,:date])<-(_1093:str)(_488:date)
barrier (_1095,_1096,_1097):= chop.newIterator(rule_bat);	# 116 CHPbunIterator (_1095:lng)(_1096:str)(_1097:rule)<-(rule_bat:bat[:str,:rule]) jump 122
    _1099 := mtime.compute(_1097,2001);	# 117 MTIMEcompute_rule_foryear (_1099:date)<-(_1097:rule)(_151:int)
    bat.insert(_1092,_1096,_1099);	# 118 BKCinsert_bun (_1100:void)<-(_1092:bat[:str,:date])(_1096:str)(_1099:date)
catch MALexception;	# 119  (MALexception:str) jump 120
exit MALexception;	# 120  (MALexception:str)
    redo (_1095,_1096,_1097):= chop.hasMoreElements(rule_bat);	# 121 CHPbunHasMoreElements (_1095:lng)(_1096:str)(_1097:rule)<-(rule_bat:bat[:str,:rule]) jump 117
exit (_1095,_1096,_1097);	# 122  (_1095:lng)(_1096:str)(_1097:rule)
    ab_a:bat[:str,:date]  := _1092;	# 123  (ab_a:bat[:str,:date])<-(_1092:bat[:str,:date])
    _1105 := bat.new(:str,:int);	# 124 CMDBATnew (_1105:bat[:str,:int])<-(_1106:str)(_1107:int)
barrier (_1109,_1110,_1111):= chop.newIterator(ab_a);	# 125 CHPbunIterator (_1109:lng)(_1110:str)(_1111:date)<-(ab_a:bat[:str,:date]) jump 131
    _1113 := mtime.dayofweek(_1111);	# 126 MTIMEdate_extract_dayofweek (_1113:int)<-(_1111:date)
    bat.insert(_1105,_1110,_1113);	# 127 BKCinsert_bun (_1114:void)<-(_1105:bat[:str,:int])(_1110:str)(_1113:int)
catch MALexception;	# 128  (MALexception:str) jump 129
exit MALexception;	# 129  (MALexception:str)
    redo (_1109,_1110,_1111):= chop.hasMoreElements(ab_a);	# 130 CHPbunHasMoreElements (_1109:lng)(_1110:str)(_1111:date)<-(ab_a:bat[:str,:date]) jump 126
exit (_1109,_1110,_1111);	# 131  (_1109:lng)(_1110:str)(_1111:date)
    bb_a:bat[:str,:int]  := _1105;	# 132  (bb_a:bat[:str,:int])<-(_1105:bat[:str,:int])
    _1119 := bat.new(:str,:str);	# 133 CMDBATnew (_1119:bat[:str,:str])<-(_1120:str)(_1121:str)
barrier (_1123,_1124,_1125):= chop.newIterator(bb_a);	# 134 CHPbunIterator (_1123:lng)(_1124:str)(_1125:int)<-(bb_a:bat[:str,:int]) jump 140
    _1127 := mtime.dayname(_1125);	# 135 MTIMEday_to_str (_1127:str)<-(_1125:int)
    bat.insert(_1119,_1124,_1127);	# 136 BKCinsert_bun (_1128:void)<-(_1119:bat[:str,:str])(_1124:str)(_1127:str)
catch MALexception;	# 137  (MALexception:str) jump 138
exit MALexception;	# 138  (MALexception:str)
    redo (_1123,_1124,_1125):= chop.hasMoreElements(bb_a);	# 139 CHPbunHasMoreElements (_1123:lng)(_1124:str)(_1125:int)<-(bb_a:bat[:str,:int]) jump 135
exit (_1123,_1124,_1125);	# 140  (_1123:lng)(_1124:str)(_1125:int)
    cb_a:bat[:str,:str]  := _1119;	# 141  (cb_a:bat[:str,:str])<-(_1119:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 142 BKCsetColumn (_161:void)<-(cb_a:bat[:str,:str])(_153:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 143  (_163:str)
    _1133 := bat.new(:str,:date);	# 144 CMDBATnew (_1133:bat[:str,:date])<-(_1134:str)(_488:date)
barrier (_1136,_1137,_1138):= chop.newIterator(rule_bat);	# 145 CHPbunIterator (_1136:lng)(_1137:str)(_1138:rule)<-(rule_bat:bat[:str,:rule]) jump 151
    _1140 := mtime.compute(_1138,1999);	# 146 MTIMEcompute_rule_foryear (_1140:date)<-(_1138:rule)(_165:int)
    bat.insert(_1133,_1137,_1140);	# 147 BKCinsert_bun (_1141:void)<-(_1133:bat[:str,:date])(_1137:str)(_1140:date)
catch MALexception;	# 148  (MALexception:str) jump 149
exit MALexception;	# 149  (MALexception:str)
    redo (_1136,_1137,_1138):= chop.hasMoreElements(rule_bat);	# 150 CHPbunHasMoreElements (_1136:lng)(_1137:str)(_1138:rule)<-(rule_bat:bat[:str,:rule]) jump 146
exit (_1136,_1137,_1138);	# 151  (_1136:lng)(_1137:str)(_1138:rule)
    eb_a:bat[:str,:date]  := _1133;	# 152  (eb_a:bat[:str,:date])<-(_1133:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 153 BKCsetColumn (_166:void)<-(eb_a:bat[:str,:date])(_167:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 154  (_169:str)
    _1146 := bat.new(:str,:date);	# 155 CMDBATnew (_1146:bat[:str,:date])<-(_1147:str)(_488:date)
barrier (_1149,_1150,_1151):= chop.newIterator(rule_bat);	# 156 CHPbunIterator (_1149:lng)(_1150:str)(_1151:rule)<-(rule_bat:bat[:str,:rule]) jump 162
    _1153 := mtime.compute(_1151,1999);	# 157 MTIMEcompute_rule_foryear (_1153:date)<-(_1151:rule)(_165:int)
    bat.insert(_1146,_1150,_1153);	# 158 BKCinsert_bun (_1154:void)<-(_1146:bat[:str,:date])(_1150:str)(_1153:date)
catch MALexception;	# 159  (MALexception:str) jump 160
exit MALexception;	# 160  (MALexception:str)
    redo (_1149,_1150,_1151):= chop.hasMoreElements(rule_bat);	# 161 CHPbunHasMoreElements (_1149:lng)(_1150:str)(_1151:rule)<-(rule_bat:bat[:str,:rule]) jump 157
exit (_1149,_1150,_1151);	# 162  (_1149:lng)(_1150:str)(_1151:rule)
    gb_a:bat[:str,:date]  := _1146;	# 163  (gb_a:bat[:str,:date])<-(_1146:bat[:str,:date])
    _1159 := bat.new(:str,:int);	# 164 CMDBATnew (_1159:bat[:str,:int])<-(_1160:str)(_1161:int)
barrier (_1163,_1164,_1165):= chop.newIterator(gb_a);	# 165 CHPbunIterator (_1163:lng)(_1164:str)(_1165:date)<-(gb_a:bat[:str,:date]) jump 171
    _1167 := mtime.dayofweek(_1165);	# 166 MTIMEdate_extract_dayofweek (_1167:int)<-(_1165:date)
    bat.insert(_1159,_1164,_1167);	# 167 BKCinsert_bun (_1168:void)<-(_1159:bat[:str,:int])(_1164:str)(_1167:int)
catch MALexception;	# 168  (MALexception:str) jump 169
exit MALexception;	# 169  (MALexception:str)
    redo (_1163,_1164,_1165):= chop.hasMoreElements(gb_a);	# 170 CHPbunHasMoreElements (_1163:lng)(_1164:str)(_1165:date)<-(gb_a:bat[:str,:date]) jump 166
exit (_1163,_1164,_1165);	# 171  (_1163:lng)(_1164:str)(_1165:date)
    hb_a:bat[:str,:int]  := _1159;	# 172  (hb_a:bat[:str,:int])<-(_1159:bat[:str,:int])
    _1173 := bat.new(:str,:str);	# 173 CMDBATnew (_1173:bat[:str,:str])<-(_1174:str)(_1175:str)
barrier (_1177,_1178,_1179):= chop.newIterator(hb_a);	# 174 CHPbunIterator (_1177:lng)(_1178:str)(_1179:int)<-(hb_a:bat[:str,:int]) jump 180
    _1181 := mtime.dayname(_1179);	# 175 MTIMEday_to_str (_1181:str)<-(_1179:int)
    bat.insert(_1173,_1178,_1181);	# 176 BKCinsert_bun (_1182:void)<-(_1173:bat[:str,:str])(_1178:str)(_1181:str)
catch MALexception;	# 177  (MALexception:str) jump 178
exit MALexception;	# 178  (MALexception:str)
    redo (_1177,_1178,_1179):= chop.hasMoreElements(hb_a);	# 179 CHPbunHasMoreElements (_1177:lng)(_1178:str)(_1179:int)<-(hb_a:bat[:str,:int]) jump 175
exit (_1177,_1178,_1179);	# 180  (_1177:lng)(_1178:str)(_1179:int)
    ib_a:bat[:str,:str]  := _1173;	# 181  (ib_a:bat[:str,:str])<-(_1173:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 182 BKCsetColumn (_173:void)<-(ib_a:bat[:str,:str])(_167:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 183  (_175:str)
    _1187 := bat.new(:str,:date);	# 184 CMDBATnew (_1187:bat[:str,:date])<-(_1188:str)(_488:date)
barrier (_1190,_1191,_1192):= chop.newIterator(rule_bat);	# 185 CHPbunIterator (_1190:lng)(_1191:str)(_1192:rule)<-(rule_bat:bat[:str,:rule]) jump 191
    _1194 := mtime.compute(_1192,1992);	# 186 MTIMEcompute_rule_foryear (_1194:date)<-(_1192:rule)(_177:int)
    bat.insert(_1187,_1191,_1194);	# 187 BKCinsert_bun (_1195:void)<-(_1187:bat[:str,:date])(_1191:str)(_1194:date)
catch MALexception;	# 188  (MALexception:str) jump 189
exit MALexception;	# 189  (MALexception:str)
    redo (_1190,_1191,_1192):= chop.hasMoreElements(rule_bat);	# 190 CHPbunHasMoreElements (_1190:lng)(_1191:str)(_1192:rule)<-(rule_bat:bat[:str,:rule]) jump 186
exit (_1190,_1191,_1192);	# 191  (_1190:lng)(_1191:str)(_1192:rule)
    kb_a:bat[:str,:date]  := _1187;	# 192  (kb_a:bat[:str,:date])<-(_1187:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 193 BKCsetColumn (_178:void)<-(kb_a:bat[:str,:date])(_179:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 194  (_181:str)
    _1200 := bat.new(:str,:date);	# 195 CMDBATnew (_1200:bat[:str,:date])<-(_1201:str)(_488:date)
barrier (_1203,_1204,_1205):= chop.newIterator(rule_bat);	# 196 CHPbunIterator (_1203:lng)(_1204:str)(_1205:rule)<-(rule_bat:bat[:str,:rule]) jump 202
    _1207 := mtime.compute(_1205,1992);	# 197 MTIMEcompute_rule_foryear (_1207:date)<-(_1205:rule)(_177:int)
    bat.insert(_1200,_1204,_1207);	# 198 BKCinsert_bun (_1208:void)<-(_1200:bat[:str,:date])(_1204:str)(_1207:date)
catch MALexception;	# 199  (MALexception:str) jump 200
exit MALexception;	# 200  (MALexception:str)
    redo (_1203,_1204,_1205):= chop.hasMoreElements(rule_bat);	# 201 CHPbunHasMoreElements (_1203:lng)(_1204:str)(_1205:rule)<-(rule_bat:bat[:str,:rule]) jump 197
exit (_1203,_1204,_1205);	# 202  (_1203:lng)(_1204:str)(_1205:rule)
    mb_a:bat[:str,:date]  := _1200;	# 203  (mb_a:bat[:str,:date])<-(_1200:bat[:str,:date])
    _1213 := bat.new(:str,:int);	# 204 CMDBATnew (_1213:bat[:str,:int])<-(_1214:str)(_1215:int)
barrier (_1217,_1218,_1219):= chop.newIterator(mb_a);	# 205 CHPbunIterator (_1217:lng)(_1218:str)(_1219:date)<-(mb_a:bat[:str,:date]) jump 211
    _1221 := mtime.dayofweek(_1219);	# 206 MTIMEdate_extract_dayofweek (_1221:int)<-(_1219:date)
    bat.insert(_1213,_1218,_1221);	# 207 BKCinsert_bun (_1222:void)<-(_1213:bat[:str,:int])(_1218:str)(_1221:int)
catch MALexception;	# 208  (MALexception:str) jump 209
exit MALexception;	# 209  (MALexception:str)
    redo (_1217,_1218,_1219):= chop.hasMoreElements(mb_a);	# 210 CHPbunHasMoreElements (_1217:lng)(_1218:str)(_1219:date)<-(mb_a:bat[:str,:date]) jump 206
exit (_1217,_1218,_1219);	# 211  (_1217:lng)(_1218:str)(_1219:date)
    nb_a:bat[:str,:int]  := _1213;	# 212  (nb_a:bat[:str,:int])<-(_1213:bat[:str,:int])
    _1227 := bat.new(:str,:str);	# 213 CMDBATnew (_1227:bat[:str,:str])<-(_1228:str)(_1229:str)
barrier (_1231,_1232,_1233):= chop.newIterator(nb_a);	# 214 CHPbunIterator (_1231:lng)(_1232:str)(_1233:int)<-(nb_a:bat[:str,:int]) jump 220
    _1235 := mtime.dayname(_1233);	# 215 MTIMEday_to_str (_1235:str)<-(_1233:int)
    bat.insert(_1227,_1232,_1235);	# 216 BKCinsert_bun (_1236:void)<-(_1227:bat[:str,:str])(_1232:str)(_1235:str)
catch MALexception;	# 217  (MALexception:str) jump 218
exit MALexception;	# 218  (MALexception:str)
    redo (_1231,_1232,_1233):= chop.hasMoreElements(nb_a);	# 219 CHPbunHasMoreElements (_1231:lng)(_1232:str)(_1233:int)<-(nb_a:bat[:str,:int]) jump 215
exit (_1231,_1232,_1233);	# 220  (_1231:lng)(_1232:str)(_1233:int)
    ob_a:bat[:str,:str]  := _1227;	# 221  (ob_a:bat[:str,:str])<-(_1227:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 222 BKCsetColumn (_186:void)<-(ob_a:bat[:str,:str])(_179:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 223 IOprint_val (_187:int)<-(_188:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 224 IOtable (qb_a:int)<-(rule_bat:bat[:str,:rule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 225  (_191:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 226 BKCsetColumn (rb_a:void)<-(rule_bat:bat[:str,:rule])(_193:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 227  (_195:str)
    _1241 := bat.new(:str,:date);	# 228 CMDBATnew (_1241:bat[:str,:date])<-(_1242:str)(_488:date)
barrier (_1244,_1245,_1246):= chop.newIterator(rule_bat);	# 229 CHPbunIterator (_1244:lng)(_1245:str)(_1246:rule)<-(rule_bat:bat[:str,:rule]) jump 235
    _1248 := mtime.compute(_1246,1572);	# 230 MTIMEcompute_rule_foryear (_1248:date)<-(_1246:rule)(_197:int)
    bat.insert(_1241,_1245,_1248);	# 231 BKCinsert_bun (_1249:void)<-(_1241:bat[:str,:date])(_1245:str)(_1248:date)
catch MALexception;	# 232  (MALexception:str) jump 233
exit MALexception;	# 233  (MALexception:str)
    redo (_1244,_1245,_1246):= chop.hasMoreElements(rule_bat);	# 234 CHPbunHasMoreElements (_1244:lng)(_1245:str)(_1246:rule)<-(rule_bat:bat[:str,:rule]) jump 230
exit (_1244,_1245,_1246);	# 235  (_1244:lng)(_1245:str)(_1246:rule)
    sb_a:bat[:str,:date]  := _1241;	# 236  (sb_a:bat[:str,:date])<-(_1241:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 237 BKCsetColumn (tb_a:void)<-(sb_a:bat[:str,:date])(_199:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 238  (_201:str)
    _1254 := bat.new(:str,:date);	# 239 CMDBATnew (_1254:bat[:str,:date])<-(_1255:str)(_488:date)
barrier (_1257,_1258,_1259):= chop.newIterator(rule_bat);	# 240 CHPbunIterator (_1257:lng)(_1258:str)(_1259:rule)<-(rule_bat:bat[:str,:rule]) jump 246
    _1261 := mtime.compute(_1259,1572);	# 241 MTIMEcompute_rule_foryear (_1261:date)<-(_1259:rule)(_197:int)
    bat.insert(_1254,_1258,_1261);	# 242 BKCinsert_bun (_1262:void)<-(_1254:bat[:str,:date])(_1258:str)(_1261:date)
catch MALexception;	# 243  (MALexception:str) jump 244
exit MALexception;	# 244  (MALexception:str)
    redo (_1257,_1258,_1259):= chop.hasMoreElements(rule_bat);	# 245 CHPbunHasMoreElements (_1257:lng)(_1258:str)(_1259:rule)<-(rule_bat:bat[:str,:rule]) jump 241
exit (_1257,_1258,_1259);	# 246  (_1257:lng)(_1258:str)(_1259:rule)
    ub_a:bat[:str,:date]  := _1254;	# 247  (ub_a:bat[:str,:date])<-(_1254:bat[:str,:date])
    _1267 := bat.new(:str,:int);	# 248 CMDBATnew (_1267:bat[:str,:int])<-(_1268:str)(_1269:int)
barrier (_1271,_1272,_1273):= chop.newIterator(ub_a);	# 249 CHPbunIterator (_1271:lng)(_1272:str)(_1273:date)<-(ub_a:bat[:str,:date]) jump 255
    _1275 := mtime.dayofweek(_1273);	# 250 MTIMEdate_extract_dayofweek (_1275:int)<-(_1273:date)
    bat.insert(_1267,_1272,_1275);	# 251 BKCinsert_bun (_1276:void)<-(_1267:bat[:str,:int])(_1272:str)(_1275:int)
catch MALexception;	# 252  (MALexception:str) jump 253
exit MALexception;	# 253  (MALexception:str)
    redo (_1271,_1272,_1273):= chop.hasMoreElements(ub_a);	# 254 CHPbunHasMoreElements (_1271:lng)(_1272:str)(_1273:date)<-(ub_a:bat[:str,:date]) jump 250
exit (_1271,_1272,_1273);	# 255  (_1271:lng)(_1272:str)(_1273:date)
    vb_a:bat[:str,:int]  := _1267;	# 256  (vb_a:bat[:str,:int])<-(_1267:bat[:str,:int])
    _1281 := bat.new(:str,:str);	# 257 CMDBATnew (_1281:bat[:str,:str])<-(_1282:str)(_1283:str)
barrier (_1285,_1286,_1287):= chop.newIterator(vb_a);	# 258 CHPbunIterator (_1285:lng)(_1286:str)(_1287:int)<-(vb_a:bat[:str,:int]) jump 264
    _1289 := mtime.dayname(_1287);	# 259 MTIMEday_to_str (_1289:str)<-(_1287:int)
    bat.insert(_1281,_1286,_1289);	# 260 BKCinsert_bun (_1290:void)<-(_1281:bat[:str,:str])(_1286:str)(_1289:str)
catch MALexception;	# 261  (MALexception:str) jump 262
exit MALexception;	# 262  (MALexception:str)
    redo (_1285,_1286,_1287):= chop.hasMoreElements(vb_a);	# 263 CHPbunHasMoreElements (_1285:lng)(_1286:str)(_1287:int)<-(vb_a:bat[:str,:int]) jump 259
exit (_1285,_1286,_1287);	# 264  (_1285:lng)(_1286:str)(_1287:int)
    wb_a:bat[:str,:str]  := _1281;	# 265  (wb_a:bat[:str,:str])<-(_1281:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 266 BKCsetColumn (xb_a:void)<-(wb_a:bat[:str,:str])(_199:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 267  (_209:str)
    _1295 := bat.new(:str,:date);	# 268 CMDBATnew (_1295:bat[:str,:date])<-(_1296:str)(_488:date)
barrier (_1298,_1299,_1300):= chop.newIterator(rule_bat);	# 269 CHPbunIterator (_1298:lng)(_1299:str)(_1300:rule)<-(rule_bat:bat[:str,:rule]) jump 275
    _1302 := mtime.compute(_1300,1);	# 270 MTIMEcompute_rule_foryear (_1302:date)<-(_1300:rule)(_211:int)
    bat.insert(_1295,_1299,_1302);	# 271 BKCinsert_bun (_1303:void)<-(_1295:bat[:str,:date])(_1299:str)(_1302:date)
catch MALexception;	# 272  (MALexception:str) jump 273
exit MALexception;	# 273  (MALexception:str)
    redo (_1298,_1299,_1300):= chop.hasMoreElements(rule_bat);	# 274 CHPbunHasMoreElements (_1298:lng)(_1299:str)(_1300:rule)<-(rule_bat:bat[:str,:rule]) jump 270
exit (_1298,_1299,_1300);	# 275  (_1298:lng)(_1299:str)(_1300:rule)
    yb_a:bat[:str,:date]  := _1295;	# 276  (yb_a:bat[:str,:date])<-(_1295:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 277 BKCsetColumn (ac_a:void)<-(yb_a:bat[:str,:date])(_213:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 278  (_215:str)
    _1308 := bat.new(:str,:date);	# 279 CMDBATnew (_1308:bat[:str,:date])<-(_1309:str)(_488:date)
barrier (_1311,_1312,_1313):= chop.newIterator(rule_bat);	# 280 CHPbunIterator (_1311:lng)(_1312:str)(_1313:rule)<-(rule_bat:bat[:str,:rule]) jump 286
    _1315 := mtime.compute(_1313,1);	# 281 MTIMEcompute_rule_foryear (_1315:date)<-(_1313:rule)(_211:int)
    bat.insert(_1308,_1312,_1315);	# 282 BKCinsert_bun (_1316:void)<-(_1308:bat[:str,:date])(_1312:str)(_1315:date)
catch MALexception;	# 283  (MALexception:str) jump 284
exit MALexception;	# 284  (MALexception:str)
    redo (_1311,_1312,_1313):= chop.hasMoreElements(rule_bat);	# 285 CHPbunHasMoreElements (_1311:lng)(_1312:str)(_1313:rule)<-(rule_bat:bat[:str,:rule]) jump 281
exit (_1311,_1312,_1313);	# 286  (_1311:lng)(_1312:str)(_1313:rule)
    bc_a:bat[:str,:date]  := _1308;	# 287  (bc_a:bat[:str,:date])<-(_1308:bat[:str,:date])
    _1321 := bat.new(:str,:int);	# 288 CMDBATnew (_1321:bat[:str,:int])<-(_1322:str)(_1323:int)
barrier (_1325,_1326,_1327):= chop.newIterator(bc_a);	# 289 CHPbunIterator (_1325:lng)(_1326:str)(_1327:date)<-(bc_a:bat[:str,:date]) jump 295
    _1329 := mtime.dayofweek(_1327);	# 290 MTIMEdate_extract_dayofweek (_1329:int)<-(_1327:date)
    bat.insert(_1321,_1326,_1329);	# 291 BKCinsert_bun (_1330:void)<-(_1321:bat[:str,:int])(_1326:str)(_1329:int)
catch MALexception;	# 292  (MALexception:str) jump 293
exit MALexception;	# 293  (MALexception:str)
    redo (_1325,_1326,_1327):= chop.hasMoreElements(bc_a);	# 294 CHPbunHasMoreElements (_1325:lng)(_1326:str)(_1327:date)<-(bc_a:bat[:str,:date]) jump 290
exit (_1325,_1326,_1327);	# 295  (_1325:lng)(_1326:str)(_1327:date)
    cc_a:bat[:str,:int]  := _1321;	# 296  (cc_a:bat[:str,:int])<-(_1321:bat[:str,:int])
    _1335 := bat.new(:str,:str);	# 297 CMDBATnew (_1335:bat[:str,:str])<-(_1336:str)(_1337:str)
barrier (_1339,_1340,_1341):= chop.newIterator(cc_a);	# 298 CHPbunIterator (_1339:lng)(_1340:str)(_1341:int)<-(cc_a:bat[:str,:int]) jump 304
    _1343 := mtime.dayname(_1341);	# 299 MTIMEday_to_str (_1343:str)<-(_1341:int)
    bat.insert(_1335,_1340,_1343);	# 300 BKCinsert_bun (_1344:void)<-(_1335:bat[:str,:str])(_1340:str)(_1343:str)
catch MALexception;	# 301  (MALexception:str) jump 302
exit MALexception;	# 302  (MALexception:str)
    redo (_1339,_1340,_1341):= chop.hasMoreElements(cc_a);	# 303 CHPbunHasMoreElements (_1339:lng)(_1340:str)(_1341:int)<-(cc_a:bat[:str,:int]) jump 299
exit (_1339,_1340,_1341);	# 304  (_1339:lng)(_1340:str)(_1341:int)
    dc_a:bat[:str,:str]  := _1335;	# 305  (dc_a:bat[:str,:str])<-(_1335:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 306 BKCsetColumn (ec_a:void)<-(dc_a:bat[:str,:str])(_213:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 307  (_222:str)
    _1349 := bat.new(:str,:date);	# 308 CMDBATnew (_1349:bat[:str,:date])<-(_1350:str)(_488:date)
barrier (_1352,_1353,_1354):= chop.newIterator(rule_bat);	# 309 CHPbunIterator (_1352:lng)(_1353:str)(_1354:rule)<-(rule_bat:bat[:str,:rule]) jump 315
    _1356 := mtime.compute(_1354,-2000);	# 310 MTIMEcompute_rule_foryear (_1356:date)<-(_1354:rule)(_224:int)
    bat.insert(_1349,_1353,_1356);	# 311 BKCinsert_bun (_1357:void)<-(_1349:bat[:str,:date])(_1353:str)(_1356:date)
catch MALexception;	# 312  (MALexception:str) jump 313
exit MALexception;	# 313  (MALexception:str)
    redo (_1352,_1353,_1354):= chop.hasMoreElements(rule_bat);	# 314 CHPbunHasMoreElements (_1352:lng)(_1353:str)(_1354:rule)<-(rule_bat:bat[:str,:rule]) jump 310
exit (_1352,_1353,_1354);	# 315  (_1352:lng)(_1353:str)(_1354:rule)
    fc_a:bat[:str,:date]  := _1349;	# 316  (fc_a:bat[:str,:date])<-(_1349:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 317 BKCsetColumn (gc_a:void)<-(fc_a:bat[:str,:date])(_226:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 318  (_228:str)
    _1362 := bat.new(:str,:date);	# 319 CMDBATnew (_1362:bat[:str,:date])<-(_1363:str)(_488:date)
barrier (_1365,_1366,_1367):= chop.newIterator(rule_bat);	# 320 CHPbunIterator (_1365:lng)(_1366:str)(_1367:rule)<-(rule_bat:bat[:str,:rule]) jump 326
    _1369 := mtime.compute(_1367,-2000);	# 321 MTIMEcompute_rule_foryear (_1369:date)<-(_1367:rule)(_224:int)
    bat.insert(_1362,_1366,_1369);	# 322 BKCinsert_bun (_1370:void)<-(_1362:bat[:str,:date])(_1366:str)(_1369:date)
catch MALexception;	# 323  (MALexception:str) jump 324
exit MALexception;	# 324  (MALexception:str)
    redo (_1365,_1366,_1367):= chop.hasMoreElements(rule_bat);	# 325 CHPbunHasMoreElements (_1365:lng)(_1366:str)(_1367:rule)<-(rule_bat:bat[:str,:rule]) jump 321
exit (_1365,_1366,_1367);	# 326  (_1365:lng)(_1366:str)(_1367:rule)
    hc_a:bat[:str,:date]  := _1362;	# 327  (hc_a:bat[:str,:date])<-(_1362:bat[:str,:date])
    _1375 := bat.new(:str,:int);	# 328 CMDBATnew (_1375:bat[:str,:int])<-(_1376:str)(_1377:int)
barrier (_1379,_1380,_1381):= chop.newIterator(hc_a);	# 329 CHPbunIterator (_1379:lng)(_1380:str)(_1381:date)<-(hc_a:bat[:str,:date]) jump 335
    _1383 := mtime.dayofweek(_1381);	# 330 MTIMEdate_extract_dayofweek (_1383:int)<-(_1381:date)
    bat.insert(_1375,_1380,_1383);	# 331 BKCinsert_bun (_1384:void)<-(_1375:bat[:str,:int])(_1380:str)(_1383:int)
catch MALexception;	# 332  (MALexception:str) jump 333
exit MALexception;	# 333  (MALexception:str)
    redo (_1379,_1380,_1381):= chop.hasMoreElements(hc_a);	# 334 CHPbunHasMoreElements (_1379:lng)(_1380:str)(_1381:date)<-(hc_a:bat[:str,:date]) jump 330
exit (_1379,_1380,_1381);	# 335  (_1379:lng)(_1380:str)(_1381:date)
    ic_a:bat[:str,:int]  := _1375;	# 336  (ic_a:bat[:str,:int])<-(_1375:bat[:str,:int])
    _1389 := bat.new(:str,:str);	# 337 CMDBATnew (_1389:bat[:str,:str])<-(_1390:str)(_1391:str)
barrier (_1393,_1394,_1395):= chop.newIterator(ic_a);	# 338 CHPbunIterator (_1393:lng)(_1394:str)(_1395:int)<-(ic_a:bat[:str,:int]) jump 344
    _1397 := mtime.dayname(_1395);	# 339 MTIMEday_to_str (_1397:str)<-(_1395:int)
    bat.insert(_1389,_1394,_1397);	# 340 BKCinsert_bun (_1398:void)<-(_1389:bat[:str,:str])(_1394:str)(_1397:str)
catch MALexception;	# 341  (MALexception:str) jump 342
exit MALexception;	# 342  (MALexception:str)
    redo (_1393,_1394,_1395):= chop.hasMoreElements(ic_a);	# 343 CHPbunHasMoreElements (_1393:lng)(_1394:str)(_1395:int)<-(ic_a:bat[:str,:int]) jump 339
exit (_1393,_1394,_1395);	# 344  (_1393:lng)(_1394:str)(_1395:int)
    jc_a:bat[:str,:str]  := _1389;	# 345  (jc_a:bat[:str,:str])<-(_1389:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 346 BKCsetColumn (kc_a:void)<-(jc_a:bat[:str,:str])(_226:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 347 IOprint_val (_233:int)<-(_234:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 348 IOtable (lc_a:int)<-(rule_bat:bat[:str,:rule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 349  (_237:str)
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 350  (_239:str)
## test the various ways to create tzones, using some of the above created rules 	# 351  (_241:str)
    tzone_00 := mtime.tzone("GMT");	# 352 MTIMEtzone_fromstr (tzone_00:tzone)<-(_243:str)
#var tzone_00 := mtime.tzone("GMT"); 	# 353  (_245:str)
    tzone_01 := mtime.tzone("GMT+01:00");	# 354 MTIMEtzone_fromstr (tzone_01:tzone)<-(_247:str)
#var tzone_01 := mtime.tzone("GMT+01:00"); 	# 355  (_249:str)
    tzone_02 := mtime.tzone("GMT+0100");	# 356 MTIMEtzone_fromstr (tzone_02:tzone)<-(_251:str)
#var tzone_02 := mtime.tzone("GMT+0100"); 	# 357  (_253:str)
    tzone_03 := mtime.tzone(60,rule_oct,rule_mar);	# 358 MTIMEtzone_create_dst (tzone_03:tzone)<-(_255:int)(rule_oct:rule)(rule_mar:rule)
#var tzone_03 := mtime.tzone(60, rule_oct, rule_mar); 	# 359  (_257:str)
    tzone_04 := mtime.tzone(0,rule_jan,rule_aug);	# 360 MTIMEtzone_create_dst (tzone_04:tzone)<-(_259:int)(rule_jan:rule)(rule_aug:rule)
#var tzone_04 := mtime.tzone(0, rule_jan, rule_aug); 	# 361  (_261:str)
    tzone_05 := mtime.tzone(-97,rule_oct,rule_apr);	# 362 MTIMEtzone_create_dst (tzone_05:tzone)<-(_263:int)(rule_oct:rule)(rule_apr:rule)
#var tzone_05 := mtime.tzone(-97, rule_oct, rule_apr); 	# 363  (_265:str)
    tzone_06 := mtime.tzone(-97,rule_may,rule_sep);	# 364 MTIMEtzone_create_dst (tzone_06:tzone)<-(_263:int)(rule_may:rule)(rule_sep:rule)
#var tzone_06 := mtime.tzone(-97, rule_may, rule_sep); 	# 365  (_268:str)
    mc_a := calc.*(23,60);	# 366 CALCbinaryMULintint (mc_a:int)<-(_270:int)(_255:int)
    tzone_07 := mtime.tzone(mc_a,rule_apr,rule_nov);	# 367 MTIMEtzone_create_dst (tzone_07:tzone)<-(mc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_07 := mtime.tzone(23*60, rule_apr, rule_nov); 	# 368  (_273:str)
    nc_a := calc.*(-23,59);	# 369 CALCbinaryMULintint (nc_a:int)<-(_275:int)(_276:int)
    oc_a := calc.-(nc_a,59);	# 370 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)(_276:int)
    tzone_08 := mtime.tzone(oc_a);	# 371 MTIMEtzone_create (tzone_08:tzone)<-(oc_a:int)
#var tzone_08 := mtime.tzone((-23*59) - 59); 	# 372  (_280:str)
    tzone_09 := mtime.tzone(0);	# 373 MTIMEtzone_create (tzone_09:tzone)<-(_259:int)
#var tzone_09 := mtime.tzone(0); 	# 374  (_283:str)
    tzone_10 := mtime.tzone(-60);	# 375 MTIMEtzone_create (tzone_10:tzone)<-(_285:int)
#var tzone_10 := mtime.tzone(-60); 	# 376  (_287:str)
    pc_a := calc.*(23,60);	# 377 CALCbinaryMULintint (pc_a:int)<-(_270:int)(_289:int)
    qc_a := calc.+(pc_a,59);	# 378 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)(_276:int)
    tzone_11 := mtime.tzone(qc_a);	# 379 MTIMEtzone_create (tzone_11:tzone)<-(qc_a:int)
#var tzone_11 := mtime.tzone((23*60)+59); 	# 380  (_293:str)
    tzone_12 := mtime.tzone(60);	# 381 MTIMEtzone_create (tzone_12:tzone)<-(_289:int)
#var tzone_12 := mtime.tzone(60); 	# 382  (_296:str)
## nil tzones 	# 383  (_298:str)
    tzone_13 := mtime.tzone(60,rule_feb,rule_dec);	# 384 MTIMEtzone_create_dst (tzone_13:tzone)<-(_289:int)(rule_feb:rule)(rule_dec:rule)
#var tzone_13 := mtime.tzone(60, rule_feb, rule_dec); 	# 385  (_301:str)
    rc_a := calc.*(24,60);	# 386 CALCbinaryMULintint (rc_a:int)<-(_303:int)(_289:int)
    tzone_15 := mtime.tzone(rc_a,rule_apr,rule_nov);	# 387 MTIMEtzone_create_dst (tzone_15:tzone)<-(rc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_15 := mtime.tzone(24*60, rule_apr, rule_nov); 	# 388  (_306:str)
    tzone_bat := bat.new(:oid,:tzone);	# 389 CMDBATnew (tzone_bat:bat[:oid,:tzone])<-(_308:oid)(_309:tzone)
#var tzone_bat := bat.new(oid,tzone); 	# 390  (_311:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 391 BKCinsert_bun_oid_any (_312:void)<-(tzone_bat:bat[:oid,:tzone])(_313:oid)(tzone_00:tzone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 392 BKCinsert_bun_oid_any (_314:void)<-(tzone_bat:bat[:oid,:tzone])(_315:oid)(tzone_01:tzone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 393 BKCinsert_bun_oid_any (_316:void)<-(tzone_bat:bat[:oid,:tzone])(_317:oid)(tzone_02:tzone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 394  (_319:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 395 BKCinsert_bun_oid_any (_320:void)<-(tzone_bat:bat[:oid,:tzone])(_321:oid)(tzone_03:tzone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 396 BKCinsert_bun_oid_any (_322:void)<-(tzone_bat:bat[:oid,:tzone])(_323:oid)(tzone_04:tzone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 397 BKCinsert_bun_oid_any (_324:void)<-(tzone_bat:bat[:oid,:tzone])(_325:oid)(tzone_05:tzone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 398  (_327:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 399 BKCinsert_bun_oid_any (_328:void)<-(tzone_bat:bat[:oid,:tzone])(_329:oid)(tzone_06:tzone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 400 BKCinsert_bun_oid_any (_330:void)<-(tzone_bat:bat[:oid,:tzone])(_331:oid)(tzone_07:tzone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 401 BKCinsert_bun_oid_any (_332:void)<-(tzone_bat:bat[:oid,:tzone])(_333:oid)(tzone_08:tzone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 402  (_335:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 403 BKCinsert_bun_oid_any (_336:void)<-(tzone_bat:bat[:oid,:tzone])(_337:oid)(tzone_09:tzone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 404 BKCinsert_bun_oid_any (_338:void)<-(tzone_bat:bat[:oid,:tzone])(_339:oid)(tzone_10:tzone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 405 BKCinsert_bun_oid_any (_340:void)<-(tzone_bat:bat[:oid,:tzone])(_341:oid)(tzone_11:tzone)
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 406  (_343:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 407 BKCinsert_bun_oid_any (_344:void)<-(tzone_bat:bat[:oid,:tzone])(_345:oid)(tzone_12:tzone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 408 BKCinsert_bun_oid_any (_346:void)<-(tzone_bat:bat[:oid,:tzone])(_347:oid)(tzone_13:tzone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 409 BKCinsert_bun_oid_any (_348:void)<-(tzone_bat:bat[:oid,:tzone])(_349:oid)(tzone_15:tzone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 410  (_351:str)
## test the operations on tzones 	# 411  (_353:str)
    bat.setName(tzone_bat,"tzone");	# 412 BKCsetName (_354:void)<-(tzone_bat:bat[:oid,:tzone])(_355:str)
#io.print(tzone_bat); 	# 413  (_357:str)
#io.print("start error"); 	# 414  (_359:str)
#x:= getRefCount(tzone_bat); 	# 415  (_361:str)
#io.print(x); 	# 416  (_363:str)
#jd_a := io.print(tzone_bat); 	# 417  (_365:str)
#io.print("end"); 	# 418  (_367:str)
#io.print(x); 	# 419  (_363:str)
#x:= getRefCount(tzone_bat); 	# 420  (_361:str)
    io.print(tzone_bat);	# 421 IOprint_val (_370:int)<-(tzone_bat:bat[:oid,:tzone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 422  (_372:str)
    _1403 := bat.new(:oid,:int);	# 423 CMDBATnew (_1403:bat[:oid,:int])<-(_308:oid)(_1404:int)
barrier (_1406,_1407,_1408):= chop.newIterator(tzone_bat);	# 424 CHPbunIterator (_1406:lng)(_1407:oid)(_1408:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 430
    _1410 := mtime.minutes(_1408);	# 425 MTIMEtzone_extract_minutes (_1410:int)<-(_1408:tzone)
    bat.insert(_1403,_1407,_1410);	# 426 BKCinsert_bun_oid_any (_1411:void)<-(_1403:bat[:oid,:int])(_1407:oid)(_1410:int)
catch MALexception;	# 427  (MALexception:str) jump 428
exit MALexception;	# 428  (MALexception:str)
    redo (_1406,_1407,_1408):= chop.hasMoreElements(tzone_bat);	# 429 CHPbunHasMoreElements (_1406:lng)(_1407:oid)(_1408:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 425
exit (_1406,_1407,_1408);	# 430  (_1406:lng)(_1407:oid)(_1408:tzone)
    kd_a:bat[:oid,:int]  := _1403;	# 431  (kd_a:bat[:oid,:int])<-(_1403:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 432 BKCsetColumn (_375:void)<-(kd_a:bat[:oid,:int])(_376:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 433  (_378:str)
    _1416 := bat.new(:oid,:rule);	# 434 CMDBATnew (_1416:bat[:oid,:rule])<-(_308:oid)(_81:rule)
barrier (_1418,_1419,_1420):= chop.newIterator(tzone_bat);	# 435 CHPbunIterator (_1418:lng)(_1419:oid)(_1420:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 441
    _1422 := mtime.start_dst(_1420);	# 436 MTIMEtzone_extract_start (_1422:rule)<-(_1420:tzone)
    bat.insert(_1416,_1419,_1422);	# 437 BKCinsert_bun_oid_any (_1423:void)<-(_1416:bat[:oid,:rule])(_1419:oid)(_1422:rule)
catch MALexception;	# 438  (MALexception:str) jump 439
exit MALexception;	# 439  (MALexception:str)
    redo (_1418,_1419,_1420):= chop.hasMoreElements(tzone_bat);	# 440 CHPbunHasMoreElements (_1418:lng)(_1419:oid)(_1420:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 436
exit (_1418,_1419,_1420);	# 441  (_1418:lng)(_1419:oid)(_1420:tzone)
    md_a:bat[:oid,:rule]  := _1416;	# 442  (md_a:bat[:oid,:rule])<-(_1416:bat[:oid,:rule])
    bat.setColumn(md_a,"start_dst");	# 443 BKCsetColumn (_381:void)<-(md_a:bat[:oid,:rule])(_382:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 444  (_384:str)
    _1428 := bat.new(:oid,:rule);	# 445 CMDBATnew (_1428:bat[:oid,:rule])<-(_308:oid)(_81:rule)
barrier (_1430,_1431,_1432):= chop.newIterator(tzone_bat);	# 446 CHPbunIterator (_1430:lng)(_1431:oid)(_1432:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 452
    _1434 := mtime.end_dst(_1432);	# 447 MTIMEtzone_extract_end (_1434:rule)<-(_1432:tzone)
    bat.insert(_1428,_1431,_1434);	# 448 BKCinsert_bun_oid_any (_1435:void)<-(_1428:bat[:oid,:rule])(_1431:oid)(_1434:rule)
catch MALexception;	# 449  (MALexception:str) jump 450
exit MALexception;	# 450  (MALexception:str)
    redo (_1430,_1431,_1432):= chop.hasMoreElements(tzone_bat);	# 451 CHPbunHasMoreElements (_1430:lng)(_1431:oid)(_1432:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 447
exit (_1430,_1431,_1432);	# 452  (_1430:lng)(_1431:oid)(_1432:tzone)
    od_a:bat[:oid,:rule]  := _1428;	# 453  (od_a:bat[:oid,:rule])<-(_1428:bat[:oid,:rule])
    bat.setColumn(od_a,"end_dst");	# 454 BKCsetColumn (_387:void)<-(od_a:bat[:oid,:rule])(_388:str)
    io.print("print(kd_a,md_a,od_a)");	# 455 IOprint_val (_389:int)<-(_390:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 456 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:rule])(od_a:bat[:oid,:rule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 457  (_393:str)
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 458  (_395:str)
## test the various ways to create dates 	# 459  (_397:str)
    date_00 := mtime.date(2000,1,1);	# 460 MTIMEdate_create (date_00:date)<-(_399:int)(_400:int)(_400:int)
#var date_00 := date(2000,01,01); 	# 461  (_402:str)
    date_01 := mtime.date("5000-JAN-01");	# 462 MTIMEdate_fromstr (date_01:date)<-(_404:str)
#var date_01 := date("5000-JAN-01"); 	# 463  (_406:str)
    date_02 := mtime.date("1968-FEBR-29");	# 464 MTIMEdate_fromstr (date_02:date)<-(_408:str)
#var date_02 := date("1968-FEBR-29"); 	# 465  (_410:str)
    date_03 := mtime.date("1-MARCH-01");	# 466 MTIMEdate_fromstr (date_03:date)<-(_412:str)
#var date_03 := date("1-MARCH-01"); 	# 467  (_414:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 468 MTIMEdate_fromstr (date_04:date)<-(_416:str)
#var date_04 := date("-5867411-JAN-1"); 	# 469  (_418:str)
    date_05 := mtime.date("-768/octobe/01");	# 470 MTIMEdate_fromstr (date_05:date)<-(_420:str)
#var date_05 := date("-768/octobe/01"); 	# 471  (_422:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 472 MTIMEdate_fromstr (date_06:date)<-(_424:str)
#var date_06 := date("5000\\novembe\\01"); 	# 473  (_426:str)
    date_07 := mtime.date("-1999/jun/01");	# 474 MTIMEdate_fromstr (date_07:date)<-(_428:str)
#var date_07 := date("-1999/jun/01"); 	# 475  (_430:str)
    date_08 := mtime.date("2000-jul-14");	# 476 MTIMEdate_fromstr (date_08:date)<-(_432:str)
#var date_08 := date("2000-jul-14"); 	# 477  (_434:str)
    date_09 := mtime.date("1999-sept-01");	# 478 MTIMEdate_fromstr (date_09:date)<-(_436:str)
#var date_09 := date("1999-sept-01"); 	# 479  (_438:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 480 MTIMEdate_fromstr (date_10:date)<-(_440:str)
#var date_10 := date("1998-decemBeR-01"); 	# 481  (_442:str)
    date_11 := mtime.date("1953 may                01");	# 482 MTIMEdate_fromstr (date_11:date)<-(_444:str)
#var date_11 := date("1953 may                01"); 	# 483  (_446:str)
    date_12 := mtime.date("5867411-DEC-31");	# 484 MTIMEdate_fromstr (date_12:date)<-(_448:str)
#var date_12 := date("5867411-DEC-31"); 	# 485  (_450:str)
## nil dates 	# 486  (_452:str)
    date_13 := mtime.date(1996,13,1);	# 487 MTIMEdate_create (date_13:date)<-(_454:int)(_455:int)(_456:int)
#var date_13 := date(1996,13,1); 	# 488  (_458:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 489 MTIMEdate_fromstr (date_14:date)<-(_460:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 490  (_462:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 491 MTIMEdate_fromstr (date_15:date)<-(_464:str)
#var date_15 := date("1999-JANUARI-01"); 	# 492  (_466:str)
    date_16 := mtime.date("1999-FEBR-29");	# 493 MTIMEdate_fromstr (date_16:date)<-(_468:str)
#var date_16 := date("1999-FEBR-29"); 	# 494  (_470:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 495 MTIMEdate_fromstr (date_17:date)<-(_472:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 496  (_474:str)
    date_18 := mtime.date("5000\novembe31");	# 497 MTIMEdate_fromstr (date_18:date)<-(_476:str)
#var date_18 := date("5000\novembe\31"); 	# 498  (_478:str)
    date_19 := mtime.date("nil");	# 499 MTIMEdate_fromstr (date_19:date)<-(_480:str)
#var date_19 := date("nil"); 	# 500  (_482:str)
    date_20 := mtime.date("1999-sept-31");	# 501 MTIMEdate_fromstr (date_20:date)<-(_484:str)
#var date_20 := date("1999-sept-31"); 	# 502  (_486:str)
    date_bat := bat.new(:oid,:date);	# 503 CMDBATnew (date_bat:bat[:oid,:date])<-(_308:oid)(_488:date)
#var date_bat := bat.new(oid,date); 	# 504  (_490:str)
    bat.insert(date_bat,0@0,date_00);	# 505 BKCinsert_bun_oid_any (_491:void)<-(date_bat:bat[:oid,:date])(_492:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 506 BKCinsert_bun_oid_any (_493:void)<-(date_bat:bat[:oid,:date])(_494:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 507 BKCinsert_bun_oid_any (_495:void)<-(date_bat:bat[:oid,:date])(_496:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 508  (_498:str)
    bat.insert(date_bat,3@0,date_03);	# 509 BKCinsert_bun_oid_any (_499:void)<-(date_bat:bat[:oid,:date])(_500:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 510 BKCinsert_bun_oid_any (_501:void)<-(date_bat:bat[:oid,:date])(_502:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 511 BKCinsert_bun_oid_any (_503:void)<-(date_bat:bat[:oid,:date])(_504:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 512  (_506:str)
    bat.insert(date_bat,6@0,date_06);	# 513 BKCinsert_bun_oid_any (_507:void)<-(date_bat:bat[:oid,:date])(_508:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 514 BKCinsert_bun_oid_any (_509:void)<-(date_bat:bat[:oid,:date])(_510:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 515 BKCinsert_bun_oid_any (_511:void)<-(date_bat:bat[:oid,:date])(_512:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 516  (_514:str)
    bat.insert(date_bat,9@0,date_09);	# 517 BKCinsert_bun_oid_any (_515:void)<-(date_bat:bat[:oid,:date])(_516:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 518 BKCinsert_bun_oid_any (_517:void)<-(date_bat:bat[:oid,:date])(_518:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 519 BKCinsert_bun_oid_any (_519:void)<-(date_bat:bat[:oid,:date])(_520:oid)(date_11:date)
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 520  (_522:str)
    bat.insert(date_bat,12@0,date_12);	# 521 BKCinsert_bun_oid_any (_523:void)<-(date_bat:bat[:oid,:date])(_524:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 522 BKCinsert_bun_oid_any (_525:void)<-(date_bat:bat[:oid,:date])(_526:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 523 BKCinsert_bun_oid_any (_527:void)<-(date_bat:bat[:oid,:date])(_528:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 524  (_530:str)
    bat.insert(date_bat,15@0,date_15);	# 525 BKCinsert_bun_oid_any (_531:void)<-(date_bat:bat[:oid,:date])(_532:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 526 BKCinsert_bun_oid_any (_533:void)<-(date_bat:bat[:oid,:date])(_534:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 527 BKCinsert_bun_oid_any (_535:void)<-(date_bat:bat[:oid,:date])(_536:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 528  (_538:str)
    bat.insert(date_bat,18@0,date_18);	# 529 BKCinsert_bun_oid_any (_539:void)<-(date_bat:bat[:oid,:date])(_540:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 530 BKCinsert_bun_oid_any (_541:void)<-(date_bat:bat[:oid,:date])(_542:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 531 BKCinsert_bun_oid_any (_543:void)<-(date_bat:bat[:oid,:date])(_544:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 532  (_546:str)
## test the operations on dates 	# 533  (_548:str)
    ne_a := bat.setColumn(date_bat,"date");	# 534 BKCsetColumn (ne_a:void)<-(date_bat:bat[:oid,:date])(_550:str)
#io.print(date_bat.bat.setColumn("date"), 	# 535  (_552:str)
    _1440 := bat.new(:oid,:int);	# 536 CMDBATnew (_1440:bat[:oid,:int])<-(_308:oid)(_1441:int)
barrier (_1443,_1444,_1445):= chop.newIterator(date_bat);	# 537 CHPbunIterator (_1443:lng)(_1444:oid)(_1445:date)<-(date_bat:bat[:oid,:date]) jump 543
    _1447 := mtime.year(_1445);	# 538 MTIMEdate_extract_year (_1447:int)<-(_1445:date)
    bat.insert(_1440,_1444,_1447);	# 539 BKCinsert_bun_oid_any (_1448:void)<-(_1440:bat[:oid,:int])(_1444:oid)(_1447:int)
catch MALexception;	# 540  (MALexception:str) jump 541
exit MALexception;	# 541  (MALexception:str)
    redo (_1443,_1444,_1445):= chop.hasMoreElements(date_bat);	# 542 CHPbunHasMoreElements (_1443:lng)(_1444:oid)(_1445:date)<-(date_bat:bat[:oid,:date]) jump 538
exit (_1443,_1444,_1445);	# 543  (_1443:lng)(_1444:oid)(_1445:date)
    oe_a:bat[:oid,:int]  := _1440;	# 544  (oe_a:bat[:oid,:int])<-(_1440:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 545 BKCsetColumn (pe_a:void)<-(oe_a:bat[:oid,:int])(_556:str)
#      [year](date_bat).bat.setColumn("year"), 	# 546  (_558:str)
    _1453 := bat.new(:oid,:int);	# 547 CMDBATnew (_1453:bat[:oid,:int])<-(_308:oid)(_1454:int)
barrier (_1456,_1457,_1458):= chop.newIterator(date_bat);	# 548 CHPbunIterator (_1456:lng)(_1457:oid)(_1458:date)<-(date_bat:bat[:oid,:date]) jump 554
    _1460 := mtime.day(_1458);	# 549 MTIMEdate_extract_day (_1460:int)<-(_1458:date)
    bat.insert(_1453,_1457,_1460);	# 550 BKCinsert_bun_oid_any (_1461:void)<-(_1453:bat[:oid,:int])(_1457:oid)(_1460:int)
catch MALexception;	# 551  (MALexception:str) jump 552
exit MALexception;	# 552  (MALexception:str)
    redo (_1456,_1457,_1458):= chop.hasMoreElements(date_bat);	# 553 CHPbunHasMoreElements (_1456:lng)(_1457:oid)(_1458:date)<-(date_bat:bat[:oid,:date]) jump 549
exit (_1456,_1457,_1458);	# 554  (_1456:lng)(_1457:oid)(_1458:date)
    qe_a:bat[:oid,:int]  := _1453;	# 555  (qe_a:bat[:oid,:int])<-(_1453:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 556 BKCsetColumn (re_a:void)<-(qe_a:bat[:oid,:int])(_562:str)
#      [day](date_bat).bat.setColumn("day"), 	# 557  (_564:str)
    _1466 := bat.new(:oid,:int);	# 558 CMDBATnew (_1466:bat[:oid,:int])<-(_308:oid)(_1467:int)
barrier (_1469,_1470,_1471):= chop.newIterator(date_bat);	# 559 CHPbunIterator (_1469:lng)(_1470:oid)(_1471:date)<-(date_bat:bat[:oid,:date]) jump 565
    _1473 := mtime.month(_1471);	# 560 MTIMEdate_extract_month (_1473:int)<-(_1471:date)
    bat.insert(_1466,_1470,_1473);	# 561 BKCinsert_bun_oid_any (_1474:void)<-(_1466:bat[:oid,:int])(_1470:oid)(_1473:int)
catch MALexception;	# 562  (MALexception:str) jump 563
exit MALexception;	# 563  (MALexception:str)
    redo (_1469,_1470,_1471):= chop.hasMoreElements(date_bat);	# 564 CHPbunHasMoreElements (_1469:lng)(_1470:oid)(_1471:date)<-(date_bat:bat[:oid,:date]) jump 560
exit (_1469,_1470,_1471);	# 565  (_1469:lng)(_1470:oid)(_1471:date)
    se_a:bat[:oid,:int]  := _1466;	# 566  (se_a:bat[:oid,:int])<-(_1466:bat[:oid,:int])
    _1479 := bat.new(:oid,:str);	# 567 CMDBATnew (_1479:bat[:oid,:str])<-(_308:oid)(_1480:str)
barrier (_1482,_1483,_1484):= chop.newIterator(se_a);	# 568 CHPbunIterator (_1482:lng)(_1483:oid)(_1484:int)<-(se_a:bat[:oid,:int]) jump 574
    _1486 := mtime.monthname(_1484);	# 569 MTIMEmonth_to_str (_1486:str)<-(_1484:int)
    bat.insert(_1479,_1483,_1486);	# 570 BKCinsert_bun_oid_str (_1487:void)<-(_1479:bat[:oid,:str])(_1483:oid)(_1486:str)
catch MALexception;	# 571  (MALexception:str) jump 572
exit MALexception;	# 572  (MALexception:str)
    redo (_1482,_1483,_1484):= chop.hasMoreElements(se_a);	# 573 CHPbunHasMoreElements (_1482:lng)(_1483:oid)(_1484:int)<-(se_a:bat[:oid,:int]) jump 569
exit (_1482,_1483,_1484);	# 574  (_1482:lng)(_1483:oid)(_1484:int)
    te_a:bat[:oid,:str]  := _1479;	# 575  (te_a:bat[:oid,:str])<-(_1479:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 576 BKCsetColumn (ue_a:void)<-(te_a:bat[:oid,:str])(_570:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 577  (_572:str)
    _1492 := bat.new(:oid,:int);	# 578 CMDBATnew (_1492:bat[:oid,:int])<-(_308:oid)(_1493:int)
barrier (_1495,_1496,_1497):= chop.newIterator(date_bat);	# 579 CHPbunIterator (_1495:lng)(_1496:oid)(_1497:date)<-(date_bat:bat[:oid,:date]) jump 585
    _1499 := mtime.month(_1497);	# 580 MTIMEdate_extract_month (_1499:int)<-(_1497:date)
    bat.insert(_1492,_1496,_1499);	# 581 BKCinsert_bun_oid_any (_1500:void)<-(_1492:bat[:oid,:int])(_1496:oid)(_1499:int)
catch MALexception;	# 582  (MALexception:str) jump 583
exit MALexception;	# 583  (MALexception:str)
    redo (_1495,_1496,_1497):= chop.hasMoreElements(date_bat);	# 584 CHPbunHasMoreElements (_1495:lng)(_1496:oid)(_1497:date)<-(date_bat:bat[:oid,:date]) jump 580
exit (_1495,_1496,_1497);	# 585  (_1495:lng)(_1496:oid)(_1497:date)
    ve_a:bat[:oid,:int]  := _1492;	# 586  (ve_a:bat[:oid,:int])<-(_1492:bat[:oid,:int])
    _1505 := bat.new(:oid,:str);	# 587 CMDBATnew (_1505:bat[:oid,:str])<-(_308:oid)(_1506:str)
barrier (_1508,_1509,_1510):= chop.newIterator(ve_a);	# 588 CHPbunIterator (_1508:lng)(_1509:oid)(_1510:int)<-(ve_a:bat[:oid,:int]) jump 594
    _1512 := mtime.monthname(_1510);	# 589 MTIMEmonth_to_str (_1512:str)<-(_1510:int)
    bat.insert(_1505,_1509,_1512);	# 590 BKCinsert_bun_oid_str (_1513:void)<-(_1505:bat[:oid,:str])(_1509:oid)(_1512:str)
catch MALexception;	# 591  (MALexception:str) jump 592
exit MALexception;	# 592  (MALexception:str)
    redo (_1508,_1509,_1510):= chop.hasMoreElements(ve_a);	# 593 CHPbunHasMoreElements (_1508:lng)(_1509:oid)(_1510:int)<-(ve_a:bat[:oid,:int]) jump 589
exit (_1508,_1509,_1510);	# 594  (_1508:lng)(_1509:oid)(_1510:int)
    we_a:bat[:oid,:str]  := _1505;	# 595  (we_a:bat[:oid,:str])<-(_1505:bat[:oid,:str])
    _1518 := bat.new(:oid,:int);	# 596 CMDBATnew (_1518:bat[:oid,:int])<-(_308:oid)(_1519:int)
barrier (_1521,_1522,_1523):= chop.newIterator(we_a);	# 597 CHPbunIterator (_1521:lng)(_1522:oid)(_1523:str)<-(we_a:bat[:oid,:str]) jump 603
    _1525 := mtime.monthnum(_1523);	# 598 MTIMEmonth_from_str (_1525:int)<-(_1523:str)
    bat.insert(_1518,_1522,_1525);	# 599 BKCinsert_bun_oid_any (_1526:void)<-(_1518:bat[:oid,:int])(_1522:oid)(_1525:int)
catch MALexception;	# 600  (MALexception:str) jump 601
exit MALexception;	# 601  (MALexception:str)
    redo (_1521,_1522,_1523):= chop.hasMoreElements(we_a);	# 602 CHPbunHasMoreElements (_1521:lng)(_1522:oid)(_1523:str)<-(we_a:bat[:oid,:str]) jump 598
exit (_1521,_1522,_1523);	# 603  (_1521:lng)(_1522:oid)(_1523:str)
    xe_a:bat[:oid,:int]  := _1518;	# 604  (xe_a:bat[:oid,:int])<-(_1518:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 605 BKCsetColumn (ye_a:void)<-(xe_a:bat[:oid,:int])(_578:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 606 IOprint_val (_579:int)<-(_580:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 607 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 608  (_583:str)
    _1531 := bat.new(:oid,:date);	# 609 CMDBATnew (_1531:bat[:oid,:date])<-(_308:oid)(_488:date)
barrier (_1533,_1534,_1535):= chop.newIterator(date_bat);	# 610 CHPbunIterator (_1533:lng)(_1534:oid)(_1535:date)<-(date_bat:bat[:oid,:date]) jump 616
    _1537 := mtime.addyears(_1535,-100);	# 611 MTIMEdate_addyears (_1537:date)<-(_1535:date)(_586:int)
    bat.insert(_1531,_1534,_1537);	# 612 BKCinsert_bun_oid_any (_1538:void)<-(_1531:bat[:oid,:date])(_1534:oid)(_1537:date)
catch MALexception;	# 613  (MALexception:str) jump 614
exit MALexception;	# 614  (MALexception:str)
    redo (_1533,_1534,_1535):= chop.hasMoreElements(date_bat);	# 615 CHPbunHasMoreElements (_1533:lng)(_1534:oid)(_1535:date)<-(date_bat:bat[:oid,:date]) jump 611
exit (_1533,_1534,_1535);	# 616  (_1533:lng)(_1534:oid)(_1535:date)
    date_addyears:bat[:oid,:date]  := _1531;	# 617  (date_addyears:bat[:oid,:date])<-(_1531:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 618  (_588:str)
    _1543 := bat.new(:oid,:date);	# 619 CMDBATnew (_1543:bat[:oid,:date])<-(_308:oid)(_488:date)
barrier (_1545,_1546,_1547):= chop.newIterator(date_bat);	# 620 CHPbunIterator (_1545:lng)(_1546:oid)(_1547:date)<-(date_bat:bat[:oid,:date]) jump 626
    _1549 := mtime.addmonths(_1547,1);	# 621 MTIMEdate_addmonths (_1549:date)<-(_1547:date)(_591:int)
    bat.insert(_1543,_1546,_1549);	# 622 BKCinsert_bun_oid_any (_1550:void)<-(_1543:bat[:oid,:date])(_1546:oid)(_1549:date)
catch MALexception;	# 623  (MALexception:str) jump 624
exit MALexception;	# 624  (MALexception:str)
    redo (_1545,_1546,_1547):= chop.hasMoreElements(date_bat);	# 625 CHPbunHasMoreElements (_1545:lng)(_1546:oid)(_1547:date)<-(date_bat:bat[:oid,:date]) jump 621
exit (_1545,_1546,_1547);	# 626  (_1545:lng)(_1546:oid)(_1547:date)
    date_addmonths:bat[:oid,:date]  := _1543;	# 627  (date_addmonths:bat[:oid,:date])<-(_1543:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 628  (_593:str)
    bat.setColumn(date_bat,"date");	# 629 BKCsetColumn (_594:void)<-(date_bat:bat[:oid,:date])(_595:str)
#io.print(date_bat.bat.setColumn("date"), 	# 630  (_597:str)
    bat.setColumn(date_addyears,"min100y");	# 631 BKCsetColumn (_598:void)<-(date_addyears:bat[:oid,:date])(_599:str)
#      date_addyears.bat.setColumn("min100y"), 	# 632  (_601:str)
    _1555 := bat.new(:oid,:int);	# 633 CMDBATnew (_1555:bat[:oid,:int])<-(_308:oid)(_1556:int)
barrier (_1558,_1559,_1560):= chop.newIterator(date_addyears);	# 634 CHPbunIterator (_1558:lng)(_1559:oid)(_1560:date)<-(date_addyears:bat[:oid,:date]) jump 641
    _1562 := algebra.find(date_bat,_1559);	# 635 ALGfind (_1562:date)<-(date_bat:bat[:oid,:date])(_1559:oid)
    _1564 := mtime.diff(_1560,_1562);	# 636 MTIMEdate_diff (_1564:int)<-(_1560:date)(_1562:date)
    bat.insert(_1555,_1559,_1564);	# 637 BKCinsert_bun_oid_any (_1565:void)<-(_1555:bat[:oid,:int])(_1559:oid)(_1564:int)
catch MALexception;	# 638  (MALexception:str) jump 639
exit MALexception;	# 639  (MALexception:str)
    redo (_1558,_1559,_1560):= chop.hasMoreElements(date_addyears);	# 640 CHPbunHasMoreElements (_1558:lng)(_1559:oid)(_1560:date)<-(date_addyears:bat[:oid,:date]) jump 635
exit (_1558,_1559,_1560);	# 641  (_1558:lng)(_1559:oid)(_1560:date)
    df_a:bat[:oid,:int]  := _1555;	# 642  (df_a:bat[:oid,:int])<-(_1555:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 643 BKCsetColumn (_604:void)<-(df_a:bat[:oid,:int])(_605:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 644 IOprint_val (_606:int)<-(_607:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 645 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 646  (_610:str)
    bat.setColumn(date_bat,"date");	# 647 BKCsetColumn (_611:void)<-(date_bat:bat[:oid,:date])(_595:str)
#io.print(date_bat.bat.setColumn("date"), 	# 648  (_597:str)
    bat.setColumn(date_addmonths,"plus1m");	# 649 BKCsetColumn (_613:void)<-(date_addmonths:bat[:oid,:date])(_614:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 650  (_616:str)
    _1570 := bat.new(:oid,:int);	# 651 CMDBATnew (_1570:bat[:oid,:int])<-(_308:oid)(_1571:int)
barrier (_1573,_1574,_1575):= chop.newIterator(date_addmonths);	# 652 CHPbunIterator (_1573:lng)(_1574:oid)(_1575:date)<-(date_addmonths:bat[:oid,:date]) jump 659
    _1577 := algebra.find(date_bat,_1574);	# 653 ALGfind (_1577:date)<-(date_bat:bat[:oid,:date])(_1574:oid)
    _1579 := mtime.diff(_1575,_1577);	# 654 MTIMEdate_diff (_1579:int)<-(_1575:date)(_1577:date)
    bat.insert(_1570,_1574,_1579);	# 655 BKCinsert_bun_oid_any (_1580:void)<-(_1570:bat[:oid,:int])(_1574:oid)(_1579:int)
catch MALexception;	# 656  (MALexception:str) jump 657
exit MALexception;	# 657  (MALexception:str)
    redo (_1573,_1574,_1575):= chop.hasMoreElements(date_addmonths);	# 658 CHPbunHasMoreElements (_1573:lng)(_1574:oid)(_1575:date)<-(date_addmonths:bat[:oid,:date]) jump 653
exit (_1573,_1574,_1575);	# 659  (_1573:lng)(_1574:oid)(_1575:date)
    if_a:bat[:oid,:int]  := _1570;	# 660  (if_a:bat[:oid,:int])<-(_1570:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 661 BKCsetColumn (_618:void)<-(if_a:bat[:oid,:int])(_605:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 662 IOprint_val (_619:int)<-(_620:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 663 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 664  (_623:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 665  (_625:str)
    date_seq := bat.new(:int,:date);	# 666 CMDBATnew (date_seq:bat[:int,:date])<-(_627:int)(_488:date)
#var date_seq := bat.new(int, date); 	# 667  (_629:str)
    i := -375;	# 668  (i:int)<-(_631:int)
#var i := -375; 	# 669  (_633:str)
barrier lf_a := true;	# 670  (lf_a:bit)<-(_635:bit) jump 680
    i := calc.+(i,1);	# 671 CALCbinaryADDintint (i:int)<-(i:int)(_636:int)
    of_a := calc.<(i,375);	# 672 CALCcompLTintint (of_a:bit)<-(i:int)(_638:int)
barrier mf_a := of_a;	# 673  (mf_a:bit)<-(of_a:bit) jump 679
#while ((i :+= 1) < 375) { 	# 674  (_641:str)
    pf_a := mtime.adddays(date_00,i);	# 675 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 676 BKCinsert_bun (_643:void)<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 677  (_645:str)
    redo lf_a;	# 678  (lf_a:bit) jump 671
exit mf_a;	# 679  (mf_a:bit)
exit lf_a;	# 680  (lf_a:bit)
#} 	# 681  (_647:str)
    rf_a := bat.setColumn(date_seq,"date");	# 682 BKCsetColumn (rf_a:void)<-(date_seq:bat[:int,:date])(_649:str)
#io.print(date_seq.bat.setColumn("date"), 	# 683  (_651:str)
    _1585 := bat.new(:int,:int);	# 684 CMDBATnew (_1585:bat[:int,:int])<-(_1586:int)(_1587:int)
barrier (_1589,_1590,_1591):= chop.newIterator(date_seq);	# 685 CHPbunIterator (_1589:lng)(_1590:int)(_1591:date)<-(date_seq:bat[:int,:date]) jump 691
    _1593 := mtime.weekofyear(_1591);	# 686 MTIMEdate_extract_weekofyear (_1593:int)<-(_1591:date)
    bat.insert(_1585,_1590,_1593);	# 687 BKCinsert_bun_int_int (_1594:void)<-(_1585:bat[:int,:int])(_1590:int)(_1593:int)
catch MALexception;	# 688  (MALexception:str) jump 689
exit MALexception;	# 689  (MALexception:str)
    redo (_1589,_1590,_1591):= chop.hasMoreElements(date_seq);	# 690 CHPbunHasMoreElements (_1589:lng)(_1590:int)(_1591:date)<-(date_seq:bat[:int,:date]) jump 686
exit (_1589,_1590,_1591);	# 691  (_1589:lng)(_1590:int)(_1591:date)
    sf_a:bat[:int,:int]  := _1585;	# 692  (sf_a:bat[:int,:int])<-(_1585:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 693 BKCsetColumn (tf_a:void)<-(sf_a:bat[:int,:int])(_655:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 694  (_657:str)
    _1599 := bat.new(:int,:int);	# 695 CMDBATnew (_1599:bat[:int,:int])<-(_1600:int)(_1601:int)
barrier (_1603,_1604,_1605):= chop.newIterator(date_seq);	# 696 CHPbunIterator (_1603:lng)(_1604:int)(_1605:date)<-(date_seq:bat[:int,:date]) jump 702
    _1607 := mtime.dayofweek(_1605);	# 697 MTIMEdate_extract_dayofweek (_1607:int)<-(_1605:date)
    bat.insert(_1599,_1604,_1607);	# 698 BKCinsert_bun_int_int (_1608:void)<-(_1599:bat[:int,:int])(_1604:int)(_1607:int)
catch MALexception;	# 699  (MALexception:str) jump 700
exit MALexception;	# 700  (MALexception:str)
    redo (_1603,_1604,_1605):= chop.hasMoreElements(date_seq);	# 701 CHPbunHasMoreElements (_1603:lng)(_1604:int)(_1605:date)<-(date_seq:bat[:int,:date]) jump 697
exit (_1603,_1604,_1605);	# 702  (_1603:lng)(_1604:int)(_1605:date)
    uf_a:bat[:int,:int]  := _1599;	# 703  (uf_a:bat[:int,:int])<-(_1599:bat[:int,:int])
    _1613 := bat.new(:int,:str);	# 704 CMDBATnew (_1613:bat[:int,:str])<-(_1614:int)(_1615:str)
barrier (_1617,_1618,_1619):= chop.newIterator(uf_a);	# 705 CHPbunIterator (_1617:lng)(_1618:int)(_1619:int)<-(uf_a:bat[:int,:int]) jump 711
    _1621 := mtime.dayname(_1619);	# 706 MTIMEday_to_str (_1621:str)<-(_1619:int)
    bat.insert(_1613,_1618,_1621);	# 707 BKCinsert_bun (_1622:void)<-(_1613:bat[:int,:str])(_1618:int)(_1621:str)
catch MALexception;	# 708  (MALexception:str) jump 709
exit MALexception;	# 709  (MALexception:str)
    redo (_1617,_1618,_1619):= chop.hasMoreElements(uf_a);	# 710 CHPbunHasMoreElements (_1617:lng)(_1618:int)(_1619:int)<-(uf_a:bat[:int,:int]) jump 706
exit (_1617,_1618,_1619);	# 711  (_1617:lng)(_1618:int)(_1619:int)
    vf_a:bat[:int,:str]  := _1613;	# 712  (vf_a:bat[:int,:str])<-(_1613:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 713 BKCsetColumn (wf_a:void)<-(vf_a:bat[:int,:str])(_663:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 714  (_665:str)
    _1627 := bat.new(:int,:int);	# 715 CMDBATnew (_1627:bat[:int,:int])<-(_1628:int)(_1629:int)
barrier (_1631,_1632,_1633):= chop.newIterator(date_seq);	# 716 CHPbunIterator (_1631:lng)(_1632:int)(_1633:date)<-(date_seq:bat[:int,:date]) jump 722
    _1635 := mtime.dayofweek(_1633);	# 717 MTIMEdate_extract_dayofweek (_1635:int)<-(_1633:date)
    bat.insert(_1627,_1632,_1635);	# 718 BKCinsert_bun_int_int (_1636:void)<-(_1627:bat[:int,:int])(_1632:int)(_1635:int)
catch MALexception;	# 719  (MALexception:str) jump 720
exit MALexception;	# 720  (MALexception:str)
    redo (_1631,_1632,_1633):= chop.hasMoreElements(date_seq);	# 721 CHPbunHasMoreElements (_1631:lng)(_1632:int)(_1633:date)<-(date_seq:bat[:int,:date]) jump 717
exit (_1631,_1632,_1633);	# 722  (_1631:lng)(_1632:int)(_1633:date)
    xf_a:bat[:int,:int]  := _1627;	# 723  (xf_a:bat[:int,:int])<-(_1627:bat[:int,:int])
    _1641 := bat.new(:int,:str);	# 724 CMDBATnew (_1641:bat[:int,:str])<-(_1642:int)(_1643:str)
barrier (_1645,_1646,_1647):= chop.newIterator(xf_a);	# 725 CHPbunIterator (_1645:lng)(_1646:int)(_1647:int)<-(xf_a:bat[:int,:int]) jump 731
    _1649 := mtime.dayname(_1647);	# 726 MTIMEday_to_str (_1649:str)<-(_1647:int)
    bat.insert(_1641,_1646,_1649);	# 727 BKCinsert_bun (_1650:void)<-(_1641:bat[:int,:str])(_1646:int)(_1649:str)
catch MALexception;	# 728  (MALexception:str) jump 729
exit MALexception;	# 729  (MALexception:str)
    redo (_1645,_1646,_1647):= chop.hasMoreElements(xf_a);	# 730 CHPbunHasMoreElements (_1645:lng)(_1646:int)(_1647:int)<-(xf_a:bat[:int,:int]) jump 726
exit (_1645,_1646,_1647);	# 731  (_1645:lng)(_1646:int)(_1647:int)
    yf_a:bat[:int,:str]  := _1641;	# 732  (yf_a:bat[:int,:str])<-(_1641:bat[:int,:str])
    _1655 := bat.new(:int,:int);	# 733 CMDBATnew (_1655:bat[:int,:int])<-(_1656:int)(_1657:int)
barrier (_1659,_1660,_1661):= chop.newIterator(yf_a);	# 734 CHPbunIterator (_1659:lng)(_1660:int)(_1661:str)<-(yf_a:bat[:int,:str]) jump 740
    _1663 := mtime.daynum(_1661);	# 735 MTIMEday_from_str (_1663:int)<-(_1661:str)
    bat.insert(_1655,_1660,_1663);	# 736 BKCinsert_bun_int_int (_1664:void)<-(_1655:bat[:int,:int])(_1660:int)(_1663:int)
catch MALexception;	# 737  (MALexception:str) jump 738
exit MALexception;	# 738  (MALexception:str)
    redo (_1659,_1660,_1661):= chop.hasMoreElements(yf_a);	# 739 CHPbunHasMoreElements (_1659:lng)(_1660:int)(_1661:str)<-(yf_a:bat[:int,:str]) jump 735
exit (_1659,_1660,_1661);	# 740  (_1659:lng)(_1660:int)(_1661:str)
    ag_a:bat[:int,:int]  := _1655;	# 741  (ag_a:bat[:int,:int])<-(_1655:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 742 BKCsetColumn (bg_a:void)<-(ag_a:bat[:int,:int])(_671:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 743  (_673:str)
    _1669 := bat.new(:int,:int);	# 744 CMDBATnew (_1669:bat[:int,:int])<-(_1670:int)(_1671:int)
barrier (_1673,_1674,_1675):= chop.newIterator(date_seq);	# 745 CHPbunIterator (_1673:lng)(_1674:int)(_1675:date)<-(date_seq:bat[:int,:date]) jump 751
    _1677 := mtime.dayofyear(_1675);	# 746 MTIMEdate_extract_dayofyear (_1677:int)<-(_1675:date)
    bat.insert(_1669,_1674,_1677);	# 747 BKCinsert_bun_int_int (_1678:void)<-(_1669:bat[:int,:int])(_1674:int)(_1677:int)
catch MALexception;	# 748  (MALexception:str) jump 749
exit MALexception;	# 749  (MALexception:str)
    redo (_1673,_1674,_1675):= chop.hasMoreElements(date_seq);	# 750 CHPbunHasMoreElements (_1673:lng)(_1674:int)(_1675:date)<-(date_seq:bat[:int,:date]) jump 746
exit (_1673,_1674,_1675);	# 751  (_1673:lng)(_1674:int)(_1675:date)
    cg_a:bat[:int,:int]  := _1669;	# 752  (cg_a:bat[:int,:int])<-(_1669:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 753 BKCsetColumn (dg_a:void)<-(cg_a:bat[:int,:int])(_677:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 754 IOprint_val (_678:int)<-(_679:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 755 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 756  (_682:str)
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 757  (_684:str)
## test the various ways top create daytimes 	# 758  (_686:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 759 MTIMEdaytime_create (daytime_00:daytime)<-(_688:int)(_689:int)(_689:int)(_690:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 760  (_692:str)
    daytime_01 := mtime.daytime("23:59");	# 761 MTIMEdaytime_fromstr (daytime_01:daytime)<-(_694:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 762  (_696:str)
    daytime_02 := mtime.daytime("00:00");	# 763 MTIMEdaytime_fromstr (daytime_02:daytime)<-(_698:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 764  (_700:str)
    daytime_03 := mtime.daytime("23:59:59");	# 765 MTIMEdaytime_fromstr (daytime_03:daytime)<-(_702:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 766  (_704:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 767 MTIMEdaytime_fromstr (daytime_04:daytime)<-(_706:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 768  (_708:str)
    daytime_05 := mtime.daytime("00:00:00");	# 769 MTIMEdaytime_fromstr (daytime_05:daytime)<-(_710:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 770  (_712:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 771 MTIMEdaytime_fromstr (daytime_06:daytime)<-(_714:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 772  (_716:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 773 MTIMEdaytime_fromstr (daytime_07:daytime)<-(_718:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 774  (_720:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 775 MTIMEdaytime_fromstr (daytime_08:daytime)<-(_722:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 776  (_724:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 777 MTIMEdaytime_fromstr (daytime_09:daytime)<-(_726:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 778  (_728:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 779 MTIMEdaytime_fromstr (daytime_10:daytime)<-(_730:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 780  (_732:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 781 MTIMEdaytime_fromstr (daytime_11:daytime)<-(_734:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 782  (_736:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 783 MTIMEdaytime_fromstr (daytime_12:daytime)<-(_738:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 784  (_740:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 785 MTIMEdaytime_fromstr (daytime_13:daytime)<-(_742:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 786  (_744:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 787 MTIMEdaytime_fromstr (daytime_14:daytime)<-(_746:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 788  (_748:str)
## nil daytimes 	# 789  (_750:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 790 MTIMEdaytime_create (daytime_15:daytime)<-(_752:int)(_753:int)(_753:int)(_754:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 791  (_756:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 792 MTIMEdaytime_create (daytime_16:daytime)<-(_758:int)(_759:int)(_753:int)(_754:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 793  (_761:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 794 MTIMEdaytime_create (daytime_17:daytime)<-(_758:int)(_753:int)(_759:int)(_754:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 795  (_764:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 796 MTIMEdaytime_create (daytime_18:daytime)<-(_758:int)(_753:int)(_759:int)(_766:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 797  (_768:str)
    daytime_19 := mtime.daytime("nil");	# 798 MTIMEdaytime_fromstr (daytime_19:daytime)<-(_770:str)
#var daytime_19 := mtime.daytime("nil"); 	# 799  (_772:str)
    daytime_bat := bat.new(:oid,:daytime);	# 800 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-(_308:oid)(_774:daytime)
#var daytime_bat := bat.new(oid,daytime); 	# 801  (_776:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 802 BKCinsert_bun_oid_any (_777:void)<-(daytime_bat:bat[:oid,:daytime])(_778:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 803 BKCinsert_bun_oid_any (_779:void)<-(daytime_bat:bat[:oid,:daytime])(_780:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 804 BKCinsert_bun_oid_any (_781:void)<-(daytime_bat:bat[:oid,:daytime])(_782:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 805  (_784:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 806 BKCinsert_bun_oid_any (_785:void)<-(daytime_bat:bat[:oid,:daytime])(_786:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 807 BKCinsert_bun_oid_any (_787:void)<-(daytime_bat:bat[:oid,:daytime])(_788:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 808 BKCinsert_bun_oid_any (_789:void)<-(daytime_bat:bat[:oid,:daytime])(_790:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 809  (_792:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 810 BKCinsert_bun_oid_any (_793:void)<-(daytime_bat:bat[:oid,:daytime])(_794:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 811 BKCinsert_bun_oid_any (_795:void)<-(daytime_bat:bat[:oid,:daytime])(_796:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 812 BKCinsert_bun_oid_any (_797:void)<-(daytime_bat:bat[:oid,:daytime])(_798:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 813  (_800:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 814 BKCinsert_bun_oid_any (_801:void)<-(daytime_bat:bat[:oid,:daytime])(_802:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 815 BKCinsert_bun_oid_any (_803:void)<-(daytime_bat:bat[:oid,:daytime])(_804:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 816 BKCinsert_bun_oid_any (_805:void)<-(daytime_bat:bat[:oid,:daytime])(_806:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 817  (_808:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 818 BKCinsert_bun_oid_any (_809:void)<-(daytime_bat:bat[:oid,:daytime])(_810:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 819 BKCinsert_bun_oid_any (_811:void)<-(daytime_bat:bat[:oid,:daytime])(_812:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 820 BKCinsert_bun_oid_any (_813:void)<-(daytime_bat:bat[:oid,:daytime])(_814:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 821  (_816:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 822 BKCinsert_bun_oid_any (_817:void)<-(daytime_bat:bat[:oid,:daytime])(_818:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 823 BKCinsert_bun_oid_any (_819:void)<-(daytime_bat:bat[:oid,:daytime])(_820:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 824 BKCinsert_bun_oid_any (_821:void)<-(daytime_bat:bat[:oid,:daytime])(_822:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 825  (_824:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 826 BKCinsert_bun_oid_any (_825:void)<-(daytime_bat:bat[:oid,:daytime])(_826:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 827 BKCinsert_bun_oid_any (_827:void)<-(daytime_bat:bat[:oid,:daytime])(_828:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 828  (_830:str)
    bat.setColumn(daytime_bat,"daytime");	# 829 BKCsetColumn (_831:void)<-(daytime_bat:bat[:oid,:daytime])(_832:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 830  (_834:str)
    _1683 := bat.new(:oid,:int);	# 831 CMDBATnew (_1683:bat[:oid,:int])<-(_308:oid)(_1684:int)
barrier (_1686,_1687,_1688):= chop.newIterator(daytime_bat);	# 832 CHPbunIterator (_1686:lng)(_1687:oid)(_1688:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 838
    _1690 := mtime.hours(_1688);	# 833 MTIMEdaytime_extract_hours (_1690:int)<-(_1688:daytime)
    bat.insert(_1683,_1687,_1690);	# 834 BKCinsert_bun_oid_any (_1691:void)<-(_1683:bat[:oid,:int])(_1687:oid)(_1690:int)
catch MALexception;	# 835  (MALexception:str) jump 836
exit MALexception;	# 836  (MALexception:str)
    redo (_1686,_1687,_1688):= chop.hasMoreElements(daytime_bat);	# 837 CHPbunHasMoreElements (_1686:lng)(_1687:oid)(_1688:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 833
exit (_1686,_1687,_1688);	# 838  (_1686:lng)(_1687:oid)(_1688:daytime)
    bh_a:bat[:oid,:int]  := _1683;	# 839  (bh_a:bat[:oid,:int])<-(_1683:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 840 BKCsetColumn (_837:void)<-(bh_a:bat[:oid,:int])(_838:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 841  (_840:str)
    _1696 := bat.new(:oid,:int);	# 842 CMDBATnew (_1696:bat[:oid,:int])<-(_308:oid)(_1697:int)
barrier (_1699,_1700,_1701):= chop.newIterator(daytime_bat);	# 843 CHPbunIterator (_1699:lng)(_1700:oid)(_1701:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 849
    _1703 := mtime.minutes(_1701);	# 844 MTIMEdaytime_extract_minutes (_1703:int)<-(_1701:daytime)
    bat.insert(_1696,_1700,_1703);	# 845 BKCinsert_bun_oid_any (_1704:void)<-(_1696:bat[:oid,:int])(_1700:oid)(_1703:int)
catch MALexception;	# 846  (MALexception:str) jump 847
exit MALexception;	# 847  (MALexception:str)
    redo (_1699,_1700,_1701):= chop.hasMoreElements(daytime_bat);	# 848 CHPbunHasMoreElements (_1699:lng)(_1700:oid)(_1701:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 844
exit (_1699,_1700,_1701);	# 849  (_1699:lng)(_1700:oid)(_1701:daytime)
    dh_a:bat[:oid,:int]  := _1696;	# 850  (dh_a:bat[:oid,:int])<-(_1696:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 851 BKCsetColumn (_843:void)<-(dh_a:bat[:oid,:int])(_844:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 852  (_846:str)
    _1709 := bat.new(:oid,:int);	# 853 CMDBATnew (_1709:bat[:oid,:int])<-(_308:oid)(_1710:int)
barrier (_1712,_1713,_1714):= chop.newIterator(daytime_bat);	# 854 CHPbunIterator (_1712:lng)(_1713:oid)(_1714:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 860
    _1716 := mtime.seconds(_1714);	# 855 MTIMEdaytime_extract_seconds (_1716:int)<-(_1714:daytime)
    bat.insert(_1709,_1713,_1716);	# 856 BKCinsert_bun_oid_any (_1717:void)<-(_1709:bat[:oid,:int])(_1713:oid)(_1716:int)
catch MALexception;	# 857  (MALexception:str) jump 858
exit MALexception;	# 858  (MALexception:str)
    redo (_1712,_1713,_1714):= chop.hasMoreElements(daytime_bat);	# 859 CHPbunHasMoreElements (_1712:lng)(_1713:oid)(_1714:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 855
exit (_1712,_1713,_1714);	# 860  (_1712:lng)(_1713:oid)(_1714:daytime)
    fh_a:bat[:oid,:int]  := _1709;	# 861  (fh_a:bat[:oid,:int])<-(_1709:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 862 BKCsetColumn (_849:void)<-(fh_a:bat[:oid,:int])(_850:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 863  (_852:str)
    _1722 := bat.new(:oid,:int);	# 864 CMDBATnew (_1722:bat[:oid,:int])<-(_308:oid)(_1723:int)
barrier (_1725,_1726,_1727):= chop.newIterator(daytime_bat);	# 865 CHPbunIterator (_1725:lng)(_1726:oid)(_1727:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 871
    _1729 := mtime.milliseconds(_1727);	# 866 MTIMEdaytime_extract_milliseconds (_1729:int)<-(_1727:daytime)
    bat.insert(_1722,_1726,_1729);	# 867 BKCinsert_bun_oid_any (_1730:void)<-(_1722:bat[:oid,:int])(_1726:oid)(_1729:int)
catch MALexception;	# 868  (MALexception:str) jump 869
exit MALexception;	# 869  (MALexception:str)
    redo (_1725,_1726,_1727):= chop.hasMoreElements(daytime_bat);	# 870 CHPbunHasMoreElements (_1725:lng)(_1726:oid)(_1727:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 866
exit (_1725,_1726,_1727);	# 871  (_1725:lng)(_1726:oid)(_1727:daytime)
    hh_a:bat[:oid,:int]  := _1722;	# 872  (hh_a:bat[:oid,:int])<-(_1722:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 873 BKCsetColumn (_855:void)<-(hh_a:bat[:oid,:int])(_856:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 874 IOprint_val (_857:int)<-(_858:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 875 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 876  (_861:str)
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 877  (_863:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 878  (_865:str)
# Skipped due to coercion implication 	# 879  (_867:str)
    _1735 := bat.new(:oid,:timestamp);	# 880 CMDBATnew (_1735:bat[:oid,:timestamp])<-(_308:oid)(_1736:timestamp)
barrier (_1738,_1739,_1740):= chop.newIterator(date_bat);	# 881 CHPbunIterator (_1738:lng)(_1739:oid)(_1740:date)<-(date_bat:bat[:oid,:date]) jump 889
    _1742 := algebra.find(daytime_bat,_1739);	# 882 ALGfind (_1742:daytime)<-(daytime_bat:bat[:oid,:daytime])(_1739:oid)
    _1744 := algebra.find(tzone_bat,_1739);	# 883 ALGfind (_1744:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1739:oid)
    _1746 := mtime.timestamp(_1740,_1742,_1744);	# 884 MTIMEtimestamp_create (_1746:timestamp)<-(_1740:date)(_1742:daytime)(_1744:tzone)
    bat.insert(_1735,_1739,_1746);	# 885 BKCinsert_bun_oid_any (_1747:void)<-(_1735:bat[:oid,:timestamp])(_1739:oid)(_1746:timestamp)
catch MALexception;	# 886  (MALexception:str) jump 887
exit MALexception;	# 887  (MALexception:str)
    redo (_1738,_1739,_1740):= chop.hasMoreElements(date_bat);	# 888 CHPbunHasMoreElements (_1738:lng)(_1739:oid)(_1740:date)<-(date_bat:bat[:oid,:date]) jump 882
exit (_1738,_1739,_1740);	# 889  (_1738:lng)(_1739:oid)(_1740:date)
    kh_a:bat[:oid,:timestamp]  := _1735;	# 890  (kh_a:bat[:oid,:timestamp])<-(_1735:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 891  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 892 BKCsetWriteMode (_871:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 893  (_873:str)
## KILL 	# 894  (_875:str)
## var timestamp_now := timestamp(epoch()); 	# 895  (_877:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 896  (_879:str)
## test the timestamp operations 	# 897  (_881:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 898 BKCsetColumn (_882:void)<-(timestamp_bat:bat[:oid,:timestamp])(_883:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 899  (_885:str)
    _1752 := bat.new(:oid,:date);	# 900 CMDBATnew (_1752:bat[:oid,:date])<-(_308:oid)(_488:date)
barrier (_1754,_1755,_1756):= chop.newIterator(timestamp_bat);	# 901 CHPbunIterator (_1754:lng)(_1755:oid)(_1756:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 908
    _1758 := algebra.find(tzone_bat,_1755);	# 902 ALGfind (_1758:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1755:oid)
    _1760 := mtime.date(_1756,_1758);	# 903 MTIMEtimestamp_extract_date (_1760:date)<-(_1756:timestamp)(_1758:tzone)
    bat.insert(_1752,_1755,_1760);	# 904 BKCinsert_bun_oid_any (_1761:void)<-(_1752:bat[:oid,:date])(_1755:oid)(_1760:date)
catch MALexception;	# 905  (MALexception:str) jump 906
exit MALexception;	# 906  (MALexception:str)
    redo (_1754,_1755,_1756):= chop.hasMoreElements(timestamp_bat);	# 907 CHPbunHasMoreElements (_1754:lng)(_1755:oid)(_1756:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 902
exit (_1754,_1755,_1756);	# 908  (_1754:lng)(_1755:oid)(_1756:timestamp)
    mh_a:bat[:oid,:date]  := _1752;	# 909  (mh_a:bat[:oid,:date])<-(_1752:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 910 BKCsetColumn (_888:void)<-(mh_a:bat[:oid,:date])(_889:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 911  (_891:str)
    _1766 := bat.new(:oid,:daytime);	# 912 CMDBATnew (_1766:bat[:oid,:daytime])<-(_308:oid)(_774:daytime)
barrier (_1768,_1769,_1770):= chop.newIterator(timestamp_bat);	# 913 CHPbunIterator (_1768:lng)(_1769:oid)(_1770:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 920
    _1772 := algebra.find(tzone_bat,_1769);	# 914 ALGfind (_1772:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1769:oid)
    _1774 := mtime.daytime(_1770,_1772);	# 915 MTIMEtimestamp_extract_daytime (_1774:daytime)<-(_1770:timestamp)(_1772:tzone)
    bat.insert(_1766,_1769,_1774);	# 916 BKCinsert_bun_oid_any (_1775:void)<-(_1766:bat[:oid,:daytime])(_1769:oid)(_1774:daytime)
catch MALexception;	# 917  (MALexception:str) jump 918
exit MALexception;	# 918  (MALexception:str)
    redo (_1768,_1769,_1770):= chop.hasMoreElements(timestamp_bat);	# 919 CHPbunHasMoreElements (_1768:lng)(_1769:oid)(_1770:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 914
exit (_1768,_1769,_1770);	# 920  (_1768:lng)(_1769:oid)(_1770:timestamp)
    oh_a:bat[:oid,:daytime]  := _1766;	# 921  (oh_a:bat[:oid,:daytime])<-(_1766:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 922 BKCsetColumn (_894:void)<-(oh_a:bat[:oid,:daytime])(_895:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 923 IOprint_val (_896:int)<-(_897:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 924 IOtable (_898:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 925  (_900:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 926 BKCsetColumn (rh_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_883:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 927  (_885:str)
    timezones:bat[:str,:tzone]  := bbp.bind("timezones");	# 928 CMDbbpbind (timezones:bat[:str,:tzone])<-(_904:str)
    io.print("print(timezones)");	# 929 IOprint_val (_905:int)<-(_906:str)
    io.print(timezones);	# 930 IOprint_val (_907:int)<-(timezones:bat[:str,:tzone])
    sh_a:tzone  := algebra.find(timezones,"Wake Island");	# 931 ALGfind (sh_a:tzone)<-(timezones:bat[:str,:tzone])(_909:str)
    _1780 := bat.new(:oid,:date);	# 932 CMDBATnew (_1780:bat[:oid,:date])<-(_308:oid)(_488:date)
barrier (_1782,_1783,_1784):= chop.newIterator(timestamp_bat);	# 933 CHPbunIterator (_1782:lng)(_1783:oid)(_1784:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 939
    _1786 := mtime.date(_1784,sh_a);	# 934 MTIMEtimestamp_extract_date (_1786:date)<-(_1784:timestamp)(sh_a:tzone)
    bat.insert(_1780,_1783,_1786);	# 935 BKCinsert_bun_oid_any (_1787:void)<-(_1780:bat[:oid,:date])(_1783:oid)(_1786:date)
catch MALexception;	# 936  (MALexception:str) jump 937
exit MALexception;	# 937  (MALexception:str)
    redo (_1782,_1783,_1784):= chop.hasMoreElements(timestamp_bat);	# 938 CHPbunHasMoreElements (_1782:lng)(_1783:oid)(_1784:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 934
exit (_1782,_1783,_1784);	# 939  (_1782:lng)(_1783:oid)(_1784:timestamp)
    th_a:bat[:oid,:date]  := _1780;	# 940  (th_a:bat[:oid,:date])<-(_1780:bat[:oid,:date])
    bat.setColumn(th_a,"Wake Island");	# 941 BKCsetColumn (_911:void)<-(th_a:bat[:oid,:date])(_909:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 942  (_913:str)
    vh_a:tzone  := algebra.find(timezones,"Wake Island");	# 943 ALGfind (vh_a:tzone)<-(timezones:bat[:str,:tzone])(_909:str)
    _1792 := bat.new(:oid,:daytime);	# 944 CMDBATnew (_1792:bat[:oid,:daytime])<-(_308:oid)(_774:daytime)
barrier (_1794,_1795,_1796):= chop.newIterator(timestamp_bat);	# 945 CHPbunIterator (_1794:lng)(_1795:oid)(_1796:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 951
    _1798 := mtime.daytime(_1796,vh_a);	# 946 MTIMEtimestamp_extract_daytime (_1798:daytime)<-(_1796:timestamp)(vh_a:tzone)
    bat.insert(_1792,_1795,_1798);	# 947 BKCinsert_bun_oid_any (_1799:void)<-(_1792:bat[:oid,:daytime])(_1795:oid)(_1798:daytime)
catch MALexception;	# 948  (MALexception:str) jump 949
exit MALexception;	# 949  (MALexception:str)
    redo (_1794,_1795,_1796):= chop.hasMoreElements(timestamp_bat);	# 950 CHPbunHasMoreElements (_1794:lng)(_1795:oid)(_1796:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 946
exit (_1794,_1795,_1796);	# 951  (_1794:lng)(_1795:oid)(_1796:timestamp)
    wh_a:bat[:oid,:daytime]  := _1792;	# 952  (wh_a:bat[:oid,:daytime])<-(_1792:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 953  (_917:str)
    xh_a:tzone  := algebra.find(timezones,"American Samoa");	# 954 ALGfind (xh_a:tzone)<-(timezones:bat[:str,:tzone])(_919:str)
    _1804 := bat.new(:oid,:date);	# 955 CMDBATnew (_1804:bat[:oid,:date])<-(_308:oid)(_488:date)
barrier (_1806,_1807,_1808):= chop.newIterator(timestamp_bat);	# 956 CHPbunIterator (_1806:lng)(_1807:oid)(_1808:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 962
    _1810 := mtime.date(_1808,xh_a);	# 957 MTIMEtimestamp_extract_date (_1810:date)<-(_1808:timestamp)(xh_a:tzone)
    bat.insert(_1804,_1807,_1810);	# 958 BKCinsert_bun_oid_any (_1811:void)<-(_1804:bat[:oid,:date])(_1807:oid)(_1810:date)
catch MALexception;	# 959  (MALexception:str) jump 960
exit MALexception;	# 960  (MALexception:str)
    redo (_1806,_1807,_1808):= chop.hasMoreElements(timestamp_bat);	# 961 CHPbunHasMoreElements (_1806:lng)(_1807:oid)(_1808:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 957
exit (_1806,_1807,_1808);	# 962  (_1806:lng)(_1807:oid)(_1808:timestamp)
    yh_a:bat[:oid,:date]  := _1804;	# 963  (yh_a:bat[:oid,:date])<-(_1804:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 964 BKCsetColumn (ai_a:void)<-(yh_a:bat[:oid,:date])(_919:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 965  (_924:str)
    bi_a:tzone  := algebra.find(timezones,"American Samoa");	# 966 ALGfind (bi_a:tzone)<-(timezones:bat[:str,:tzone])(_919:str)
    _1816 := bat.new(:oid,:daytime);	# 967 CMDBATnew (_1816:bat[:oid,:daytime])<-(_308:oid)(_774:daytime)
barrier (_1818,_1819,_1820):= chop.newIterator(timestamp_bat);	# 968 CHPbunIterator (_1818:lng)(_1819:oid)(_1820:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 974
    _1822 := mtime.daytime(_1820,bi_a);	# 969 MTIMEtimestamp_extract_daytime (_1822:daytime)<-(_1820:timestamp)(bi_a:tzone)
    bat.insert(_1816,_1819,_1822);	# 970 BKCinsert_bun_oid_any (_1823:void)<-(_1816:bat[:oid,:daytime])(_1819:oid)(_1822:daytime)
catch MALexception;	# 971  (MALexception:str) jump 972
exit MALexception;	# 972  (MALexception:str)
    redo (_1818,_1819,_1820):= chop.hasMoreElements(timestamp_bat);	# 973 CHPbunHasMoreElements (_1818:lng)(_1819:oid)(_1820:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 969
exit (_1818,_1819,_1820);	# 974  (_1818:lng)(_1819:oid)(_1820:timestamp)
    ci_a:bat[:oid,:daytime]  := _1816;	# 975  (ci_a:bat[:oid,:daytime])<-(_1816:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 976 IOprint_val (_928:int)<-(_929:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 977 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 978  (_932:str)
    ei_a := calc.*(60,1000);	# 979 CALCbinaryMULintint (ei_a:int)<-(_934:int)(_935:int)
    fi_a := calc.*(60,ei_a);	# 980 CALCbinaryMULintint (fi_a:int)<-(_934:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 981 CALCbinaryMULintint (gi_a:int)<-(_938:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 982 CALCint2lng (hi_a:lng)<-(gi_a:int)
    _1828 := bat.new(:oid,:timestamp);	# 983 CMDBATnew (_1828:bat[:oid,:timestamp])<-(_308:oid)(_1736:timestamp)
barrier (_1830,_1831,_1832):= chop.newIterator(timestamp_bat);	# 984 CHPbunIterator (_1830:lng)(_1831:oid)(_1832:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 990
    _1834 := mtime.add(_1832,hi_a);	# 985 MTIMEtimestamp_add (_1834:timestamp)<-(_1832:timestamp)(hi_a:lng)
    bat.insert(_1828,_1831,_1834);	# 986 BKCinsert_bun_oid_any (_1835:void)<-(_1828:bat[:oid,:timestamp])(_1831:oid)(_1834:timestamp)
catch MALexception;	# 987  (MALexception:str) jump 988
exit MALexception;	# 988  (MALexception:str)
    redo (_1830,_1831,_1832):= chop.hasMoreElements(timestamp_bat);	# 989 CHPbunHasMoreElements (_1830:lng)(_1831:oid)(_1832:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 985
exit (_1830,_1831,_1832);	# 990  (_1830:lng)(_1831:oid)(_1832:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := _1828;	# 991  (timestamp_plus:bat[:oid,:timestamp])<-(_1828:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 992  (_943:str)
    ii_a := calc.*(-60,1000);	# 993 CALCbinaryMULintint (ii_a:int)<-(_945:int)(_935:int)
    ji_a := calc.lng(ii_a);	# 994 CALCint2lng (ji_a:lng)<-(ii_a:int)
    _1840 := bat.new(:oid,:timestamp);	# 995 CMDBATnew (_1840:bat[:oid,:timestamp])<-(_308:oid)(_1736:timestamp)
barrier (_1842,_1843,_1844):= chop.newIterator(timestamp_bat);	# 996 CHPbunIterator (_1842:lng)(_1843:oid)(_1844:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1002
    _1846 := mtime.add(_1844,ji_a);	# 997 MTIMEtimestamp_add (_1846:timestamp)<-(_1844:timestamp)(ji_a:lng)
    bat.insert(_1840,_1843,_1846);	# 998 BKCinsert_bun_oid_any (_1847:void)<-(_1840:bat[:oid,:timestamp])(_1843:oid)(_1846:timestamp)
catch MALexception;	# 999  (MALexception:str) jump 1000
exit MALexception;	# 1000  (MALexception:str)
    redo (_1842,_1843,_1844):= chop.hasMoreElements(timestamp_bat);	# 1001 CHPbunHasMoreElements (_1842:lng)(_1843:oid)(_1844:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 997
exit (_1842,_1843,_1844);	# 1002  (_1842:lng)(_1843:oid)(_1844:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := _1840;	# 1003  (timestamp_minus:bat[:oid,:timestamp])<-(_1840:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 1004  (_949:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1005 BKCsetColumn (ki_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_951:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1006  (_953:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1007 BKCsetColumn (li_a:void)<-(timestamp_plus:bat[:oid,:timestamp])(_955:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1008  (_957:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1009 BKCsetColumn (mi_a:void)<-(timestamp_minus:bat[:oid,:timestamp])(_959:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1010  (_961:str)
    _1852 := bat.new(:oid,:lng);	# 1011 CMDBATnew (_1852:bat[:oid,:lng])<-(_308:oid)(_1853:lng)
barrier (_1855,_1856,_1857):= chop.newIterator(timestamp_plus);	# 1012 CHPbunIterator (_1855:lng)(_1856:oid)(_1857:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1019
    _1859 := algebra.find(timestamp_minus,_1856);	# 1013 ALGfind (_1859:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])(_1856:oid)
    _1861 := mtime.diff(_1857,_1859);	# 1014 MTIMEtimestamp_diff (_1861:lng)<-(_1857:timestamp)(_1859:timestamp)
    bat.insert(_1852,_1856,_1861);	# 1015 BKCinsert_bun_oid_any (_1862:void)<-(_1852:bat[:oid,:lng])(_1856:oid)(_1861:lng)
catch MALexception;	# 1016  (MALexception:str) jump 1017
exit MALexception;	# 1017  (MALexception:str)
    redo (_1855,_1856,_1857):= chop.hasMoreElements(timestamp_plus);	# 1018 CHPbunHasMoreElements (_1855:lng)(_1856:oid)(_1857:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1013
exit (_1855,_1856,_1857);	# 1019  (_1855:lng)(_1856:oid)(_1857:timestamp)
    ni_a:bat[:oid,:lng]  := _1852;	# 1020  (ni_a:bat[:oid,:lng])<-(_1852:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1021 CALCbinaryMULintint (oi_a:int)<-(_934:int)(_935:int)
    pi_a := calc.*(60,oi_a);	# 1022 CALCbinaryMULintint (pi_a:int)<-(_934:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1023 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1024 CMDbatDIVcst_lng_lng_lng (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1025 BKCsetColumn (si_a:void)<-(ri_a:bat[:oid,:lng])(_969:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1026 IOprint_val (_970:int)<-(_971:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1027 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1028  (_974:str)
    ui_a:tzone  := algebra.find(timezones,"West/Europe");	# 1029 ALGfind (ui_a:tzone)<-(timezones:bat[:str,:tzone])(_976:str)
    _1867 := bat.new(:int,:timestamp);	# 1030 CMDBATnew (_1867:bat[:int,:timestamp])<-(_1868:int)(_1736:timestamp)
barrier (_1870,_1871,_1872):= chop.newIterator(date_seq);	# 1031 CHPbunIterator (_1870:lng)(_1871:int)(_1872:date)<-(date_seq:bat[:int,:date]) jump 1037
    _1874 := mtime.timestamp(_1872,daytime_00,ui_a);	# 1032 MTIMEtimestamp_create (_1874:timestamp)<-(_1872:date)(daytime_00:daytime)(ui_a:tzone)
    bat.insert(_1867,_1871,_1874);	# 1033 BKCinsert_bun (_1875:void)<-(_1867:bat[:int,:timestamp])(_1871:int)(_1874:timestamp)
catch MALexception;	# 1034  (MALexception:str) jump 1035
exit MALexception;	# 1035  (MALexception:str)
    redo (_1870,_1871,_1872):= chop.hasMoreElements(date_seq);	# 1036 CHPbunHasMoreElements (_1870:lng)(_1871:int)(_1872:date)<-(date_seq:bat[:int,:date]) jump 1032
exit (_1870,_1871,_1872);	# 1037  (_1870:lng)(_1871:int)(_1872:date)
    timestamp_eur:bat[:int,:timestamp]  := _1867;	# 1038  (timestamp_eur:bat[:int,:timestamp])<-(_1867:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1039  (_980:str)
    vi_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1040 ALGfind (vi_a:tzone)<-(timezones:bat[:str,:tzone])(_982:str)
    _1880 := bat.new(:int,:timestamp);	# 1041 CMDBATnew (_1880:bat[:int,:timestamp])<-(_1881:int)(_1736:timestamp)
barrier (_1883,_1884,_1885):= chop.newIterator(date_seq);	# 1042 CHPbunIterator (_1883:lng)(_1884:int)(_1885:date)<-(date_seq:bat[:int,:date]) jump 1048
    _1887 := mtime.timestamp(_1885,daytime_00,vi_a);	# 1043 MTIMEtimestamp_create (_1887:timestamp)<-(_1885:date)(daytime_00:daytime)(vi_a:tzone)
    bat.insert(_1880,_1884,_1887);	# 1044 BKCinsert_bun (_1888:void)<-(_1880:bat[:int,:timestamp])(_1884:int)(_1887:timestamp)
catch MALexception;	# 1045  (MALexception:str) jump 1046
exit MALexception;	# 1046  (MALexception:str)
    redo (_1883,_1884,_1885):= chop.hasMoreElements(date_seq);	# 1047 CHPbunHasMoreElements (_1883:lng)(_1884:int)(_1885:date)<-(date_seq:bat[:int,:date]) jump 1043
exit (_1883,_1884,_1885);	# 1048  (_1883:lng)(_1884:int)(_1885:date)
    timestamp_bra:bat[:int,:timestamp]  := _1880;	# 1049  (timestamp_bra:bat[:int,:timestamp])<-(_1880:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1050  (_985:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1051 BKCsetColumn (wi_a:void)<-(date_seq:bat[:int,:date])(_987:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1052  (_989:str)
    _1893 := bat.new(:int,:int);	# 1053 CMDBATnew (_1893:bat[:int,:int])<-(_1894:int)(_1895:int)
barrier (_1897,_1898,_1899):= chop.newIterator(date_seq);	# 1054 CHPbunIterator (_1897:lng)(_1898:int)(_1899:date)<-(date_seq:bat[:int,:date]) jump 1060
    _1901 := mtime.dayofweek(_1899);	# 1055 MTIMEdate_extract_dayofweek (_1901:int)<-(_1899:date)
    bat.insert(_1893,_1898,_1901);	# 1056 BKCinsert_bun_int_int (_1902:void)<-(_1893:bat[:int,:int])(_1898:int)(_1901:int)
catch MALexception;	# 1057  (MALexception:str) jump 1058
exit MALexception;	# 1058  (MALexception:str)
    redo (_1897,_1898,_1899):= chop.hasMoreElements(date_seq);	# 1059 CHPbunHasMoreElements (_1897:lng)(_1898:int)(_1899:date)<-(date_seq:bat[:int,:date]) jump 1055
exit (_1897,_1898,_1899);	# 1060  (_1897:lng)(_1898:int)(_1899:date)
    xi_a:bat[:int,:int]  := _1893;	# 1061  (xi_a:bat[:int,:int])<-(_1893:bat[:int,:int])
    _1907 := bat.new(:int,:str);	# 1062 CMDBATnew (_1907:bat[:int,:str])<-(_1908:int)(_1909:str)
barrier (_1911,_1912,_1913):= chop.newIterator(xi_a);	# 1063 CHPbunIterator (_1911:lng)(_1912:int)(_1913:int)<-(xi_a:bat[:int,:int]) jump 1069
    _1915 := mtime.dayname(_1913);	# 1064 MTIMEday_to_str (_1915:str)<-(_1913:int)
    bat.insert(_1907,_1912,_1915);	# 1065 BKCinsert_bun (_1916:void)<-(_1907:bat[:int,:str])(_1912:int)(_1915:str)
catch MALexception;	# 1066  (MALexception:str) jump 1067
exit MALexception;	# 1067  (MALexception:str)
    redo (_1911,_1912,_1913):= chop.hasMoreElements(xi_a);	# 1068 CHPbunHasMoreElements (_1911:lng)(_1912:int)(_1913:int)<-(xi_a:bat[:int,:int]) jump 1064
exit (_1911,_1912,_1913);	# 1069  (_1911:lng)(_1912:int)(_1913:int)
    yi_a:bat[:int,:str]  := _1907;	# 1070  (yi_a:bat[:int,:str])<-(_1907:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1071 BKCsetColumn (aj_a:void)<-(yi_a:bat[:int,:str])(_995:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1072  (_997:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1073 BKCsetColumn (bj_a:void)<-(timestamp_eur:bat[:int,:timestamp])(_976:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1074  (_1000:str)
    cj_a:tzone  := algebra.find(timezones,"West/Europe");	# 1075 ALGfind (cj_a:tzone)<-(timezones:bat[:str,:tzone])(_976:str)
    _1921 := bat.new(:int,:bit);	# 1076 CMDBATnew (_1921:bat[:int,:bit])<-(_1922:int)(_1923:bit)
barrier (_1925,_1926,_1927):= chop.newIterator(timestamp_eur);	# 1077 CHPbunIterator (_1925:lng)(_1926:int)(_1927:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1083
    _1929 := mtime.dst(_1927,cj_a);	# 1078 MTIMEtimestamp_inside_dst (_1929:bit)<-(_1927:timestamp)(cj_a:tzone)
    bat.insert(_1921,_1926,_1929);	# 1079 BKCinsert_bun (_1930:void)<-(_1921:bat[:int,:bit])(_1926:int)(_1929:bit)
catch MALexception;	# 1080  (MALexception:str) jump 1081
exit MALexception;	# 1081  (MALexception:str)
    redo (_1925,_1926,_1927):= chop.hasMoreElements(timestamp_eur);	# 1082 CHPbunHasMoreElements (_1925:lng)(_1926:int)(_1927:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1078
exit (_1925,_1926,_1927);	# 1083  (_1925:lng)(_1926:int)(_1927:timestamp)
    dj_a:bat[:int,:bit]  := _1921;	# 1084  (dj_a:bat[:int,:bit])<-(_1921:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1085 BKCsetColumn (ej_a:void)<-(dj_a:bat[:int,:bit])(_1005:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1086  (_1007:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1087 BKCsetColumn (fj_a:void)<-(timestamp_bra:bat[:int,:timestamp])(_982:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1088  (_1010:str)
    gj_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1089 ALGfind (gj_a:tzone)<-(timezones:bat[:str,:tzone])(_982:str)
    _1935 := bat.new(:int,:bit);	# 1090 CMDBATnew (_1935:bat[:int,:bit])<-(_1936:int)(_1937:bit)
barrier (_1939,_1940,_1941):= chop.newIterator(timestamp_bra);	# 1091 CHPbunIterator (_1939:lng)(_1940:int)(_1941:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1097
    _1943 := mtime.dst(_1941,gj_a);	# 1092 MTIMEtimestamp_inside_dst (_1943:bit)<-(_1941:timestamp)(gj_a:tzone)
    bat.insert(_1935,_1940,_1943);	# 1093 BKCinsert_bun (_1944:void)<-(_1935:bat[:int,:bit])(_1940:int)(_1943:bit)
catch MALexception;	# 1094  (MALexception:str) jump 1095
exit MALexception;	# 1095  (MALexception:str)
    redo (_1939,_1940,_1941):= chop.hasMoreElements(timestamp_bra);	# 1096 CHPbunHasMoreElements (_1939:lng)(_1940:int)(_1941:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1092
exit (_1939,_1940,_1941);	# 1097  (_1939:lng)(_1940:int)(_1941:timestamp)
    hj_a:bat[:int,:bit]  := _1935;	# 1098  (hj_a:bat[:int,:bit])<-(_1935:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1099 BKCsetColumn (ij_a:void)<-(hj_a:bat[:int,:bit])(_1005:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1100 IOprint_val (_1014:int)<-(_1015:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1101 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1102  (_1018:str)
#quit; 	# 1103  (_1020:str)
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 1104  (_1022:str)
end main;	# 1105  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

