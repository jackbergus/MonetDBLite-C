stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;	# 0  (main:void)
# Mil compiler Version 1.0) 	# 1  (_1:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  (_2:str)
# Predefined code segment 	# 3  (_3:str)
#module(monettime,alarm); 	# 4  (_4:str)
    lzone := mtime.timezone("GMT+1");	# 5 MTIMEtzone_fromstr (lzone:timezone)<-(_6:str)
    mtime.timezone_local(lzone);	# 6 MTIMEtzone_set_local (_7:void)<-(lzone:timezone)
## test the various ways to create rules 	# 7  (_8:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 8 MTIMErule_fromstr (rule_jan:zrule)<-(_10:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 9  (_11:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 10 MTIMErule_fromstr (rule_mar:zrule)<-(_13:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 11  (_14:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 12 MTIMErule_fromstr (rule_apr:zrule)<-(_16:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 13  (_17:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 14 MTIMErule_fromstr (rule_may:zrule)<-(_19:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 15  (_20:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 16 MTIMErule_fromstr (rule_jun:zrule)<-(_22:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 17  (_23:str)
    rule_jul := mtime.rule(7,1,1,75);	# 18 MTIMErule_create (rule_jul:zrule)<-(_25:int)(_26:int)(_26:int)(_27:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 19  (_28:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 20 MTIMErule_create (rule_aug:zrule)<-(_30:int)(_31:int)(_26:int)(_27:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 21  (_32:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 22 MTIMErule_create (rule_sep:zrule)<-(_34:int)(_35:int)(_36:int)(_27:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 23  (_37:str)
    rule_oct := mtime.rule(10,31,0,75);	# 24 MTIMErule_create (rule_oct:zrule)<-(_39:int)(_40:int)(_41:int)(_27:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 25  (_42:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 26 MTIMErule_create (rule_nov:zrule)<-(_44:int)(_35:int)(_45:int)(_27:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 27  (_46:str)
## nil rules 	# 28  (_47:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 29 MTIMErule_create (rule_dec:zrule)<-(_49:int)(_50:int)(_41:int)(_27:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 30  (_51:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 31 MTIMErule_fromstr (rule_feb:zrule)<-(_53:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 32  (_54:str)
#  	# 33  (_55:str)
    rule_bat := bat.new(:str,:zrule,10);	# 34 CMDBATnewint (rule_bat:bat[:str,:zrule])<-(_57:str)(_58:zrule)(_39:int)
#var rule_bat := bat.new(str,rule,10); 	# 35  (_59:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 36 BKCinsert_bun (_60:void)<-(rule_bat:bat[:str,:zrule])(_61:str)(rule_jan:zrule)
    bat.insert(rule_bat,"feb",rule_feb);	# 37 BKCinsert_bun (_62:void)<-(rule_bat:bat[:str,:zrule])(_63:str)(rule_feb:zrule)
    bat.insert(rule_bat,"mar",rule_mar);	# 38 BKCinsert_bun (_64:void)<-(rule_bat:bat[:str,:zrule])(_65:str)(rule_mar:zrule)
    bat.insert(rule_bat,"apr",rule_apr);	# 39 BKCinsert_bun (_66:void)<-(rule_bat:bat[:str,:zrule])(_67:str)(rule_apr:zrule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 40  (_68:str)
    bat.insert(rule_bat,"may",rule_may);	# 41 BKCinsert_bun (_69:void)<-(rule_bat:bat[:str,:zrule])(_70:str)(rule_may:zrule)
    bat.insert(rule_bat,"jun",rule_jun);	# 42 BKCinsert_bun (_71:void)<-(rule_bat:bat[:str,:zrule])(_72:str)(rule_jun:zrule)
    bat.insert(rule_bat,"jul",rule_jul);	# 43 BKCinsert_bun (_73:void)<-(rule_bat:bat[:str,:zrule])(_74:str)(rule_jul:zrule)
    bat.insert(rule_bat,"aug",rule_aug);	# 44 BKCinsert_bun (_75:void)<-(rule_bat:bat[:str,:zrule])(_76:str)(rule_aug:zrule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 45  (_77:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 46 BKCinsert_bun (_78:void)<-(rule_bat:bat[:str,:zrule])(_79:str)(rule_sep:zrule)
    bat.insert(rule_bat,"oct",rule_oct);	# 47 BKCinsert_bun (_80:void)<-(rule_bat:bat[:str,:zrule])(_81:str)(rule_oct:zrule)
    bat.insert(rule_bat,"nov",rule_nov);	# 48 BKCinsert_bun (_82:void)<-(rule_bat:bat[:str,:zrule])(_83:str)(rule_nov:zrule)
    bat.insert(rule_bat,"dec",rule_dec);	# 49 BKCinsert_bun (_84:void)<-(rule_bat:bat[:str,:zrule])(_85:str)(rule_dec:zrule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 50  (_86:str)
## test the operations on rules 	# 51  (_87:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 52 BKCsetColumn (ma_a:void)<-(rule_bat:bat[:str,:zrule])(_89:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 53  (_90:str)
    _806 := bat.new(:str,:int);	# 54 CMDBATnew (_806:bat[:str,:int])<-(_807:str)(_808:int)
barrier (_810,_811,_812):= bat.newIterator(rule_bat);	# 55 CHPbunIterator (_810:lng)(_811:str)(_812:zrule)<-(rule_bat:bat[:str,:zrule]) jump 61
    _814 := mtime.month(_812);	# 56 MTIMErule_extract_month (_814:int)<-(_812:zrule)
    bat.insert(_806,_811,_814);	# 57 BKCinsert_bun (_815:void)<-(_806:bat[:str,:int])(_811:str)(_814:int)
catch MALexception:str ;	# 58  (MALexception:str) jump 59
exit MALexception:str ;	# 59  (MALexception:str)
    redo (_810,_811,_812):= bat.hasMoreElements(rule_bat);	# 60 CHPbunHasMoreElements (_810:lng)(_811:str)(_812:zrule)<-(rule_bat:bat[:str,:zrule]) jump 56
exit (_810,_811,_812);	# 61  (_810:lng)(_811:str)(_812:zrule)
    na_a:bat[:str,:int]  := _806;	# 62  (na_a:bat[:str,:int])<-(_806:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 63 BKCsetColumn (oa_a:void)<-(na_a:bat[:str,:int])(_94:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 64  (_95:str)
    _820 := bat.new(:str,:int);	# 65 CMDBATnew (_820:bat[:str,:int])<-(_821:str)(_822:int)
barrier (_824,_825,_826):= bat.newIterator(rule_bat);	# 66 CHPbunIterator (_824:lng)(_825:str)(_826:zrule)<-(rule_bat:bat[:str,:zrule]) jump 72
    _828 := mtime.weekday(_826);	# 67 MTIMErule_extract_weekday (_828:int)<-(_826:zrule)
    bat.insert(_820,_825,_828);	# 68 BKCinsert_bun (_829:void)<-(_820:bat[:str,:int])(_825:str)(_828:int)
catch MALexception:str ;	# 69  (MALexception:str) jump 70
exit MALexception:str ;	# 70  (MALexception:str)
    redo (_824,_825,_826):= bat.hasMoreElements(rule_bat);	# 71 CHPbunHasMoreElements (_824:lng)(_825:str)(_826:zrule)<-(rule_bat:bat[:str,:zrule]) jump 67
exit (_824,_825,_826);	# 72  (_824:lng)(_825:str)(_826:zrule)
    pa_a:bat[:str,:int]  := _820;	# 73  (pa_a:bat[:str,:int])<-(_820:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 74 BKCsetColumn (qa_a:void)<-(pa_a:bat[:str,:int])(_99:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 75  (_100:str)
    _834 := bat.new(:str,:int);	# 76 CMDBATnew (_834:bat[:str,:int])<-(_835:str)(_836:int)
barrier (_838,_839,_840):= bat.newIterator(rule_bat);	# 77 CHPbunIterator (_838:lng)(_839:str)(_840:zrule)<-(rule_bat:bat[:str,:zrule]) jump 83
    _842 := mtime.day(_840);	# 78 MTIMErule_extract_day (_842:int)<-(_840:zrule)
    bat.insert(_834,_839,_842);	# 79 BKCinsert_bun (_843:void)<-(_834:bat[:str,:int])(_839:str)(_842:int)
catch MALexception:str ;	# 80  (MALexception:str) jump 81
exit MALexception:str ;	# 81  (MALexception:str)
    redo (_838,_839,_840):= bat.hasMoreElements(rule_bat);	# 82 CHPbunHasMoreElements (_838:lng)(_839:str)(_840:zrule)<-(rule_bat:bat[:str,:zrule]) jump 78
exit (_838,_839,_840);	# 83  (_838:lng)(_839:str)(_840:zrule)
    ra_a:bat[:str,:int]  := _834;	# 84  (ra_a:bat[:str,:int])<-(_834:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 85 BKCsetColumn (sa_a:void)<-(ra_a:bat[:str,:int])(_104:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 86  (_105:str)
    _848 := bat.new(:str,:int);	# 87 CMDBATnew (_848:bat[:str,:int])<-(_849:str)(_850:int)
barrier (_852,_853,_854):= bat.newIterator(rule_bat);	# 88 CHPbunIterator (_852:lng)(_853:str)(_854:zrule)<-(rule_bat:bat[:str,:zrule]) jump 94
    _856 := mtime.minutes(_854);	# 89 MTIMErule_extract_minutes (_856:int)<-(_854:zrule)
    bat.insert(_848,_853,_856);	# 90 BKCinsert_bun (_857:void)<-(_848:bat[:str,:int])(_853:str)(_856:int)
catch MALexception:str ;	# 91  (MALexception:str) jump 92
exit MALexception:str ;	# 92  (MALexception:str)
    redo (_852,_853,_854):= bat.hasMoreElements(rule_bat);	# 93 CHPbunHasMoreElements (_852:lng)(_853:str)(_854:zrule)<-(rule_bat:bat[:str,:zrule]) jump 89
exit (_852,_853,_854);	# 94  (_852:lng)(_853:str)(_854:zrule)
    ta_a:bat[:str,:int]  := _848;	# 95  (ta_a:bat[:str,:int])<-(_848:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 96 BKCsetColumn (ua_a:void)<-(ta_a:bat[:str,:int])(_109:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 97 IOprint_val (_110:int)<-(_111:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 98 IOtable (va_a:int)<-(rule_bat:bat[:str,:zrule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 99  (_113:str)
    bat.setColumn(rule_bat,"rule");	# 100 BKCsetColumn (_114:void)<-(rule_bat:bat[:str,:zrule])(_89:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 101  (_90:str)
    _862 := bat.new(:str,:date);	# 102 CMDBATnew (_862:bat[:str,:date])<-(_863:str)(_378:date)
barrier (_865,_866,_867):= bat.newIterator(rule_bat);	# 103 CHPbunIterator (_865:lng)(_866:str)(_867:zrule)<-(rule_bat:bat[:str,:zrule]) jump 109
    _869 := mtime.compute(_867,2001);	# 104 MTIMEcompute_rule_foryear (_869:date)<-(_867:zrule)(_117:int)
    bat.insert(_862,_866,_869);	# 105 BKCinsert_bun (_870:void)<-(_862:bat[:str,:date])(_866:str)(_869:date)
catch MALexception:str ;	# 106  (MALexception:str) jump 107
exit MALexception:str ;	# 107  (MALexception:str)
    redo (_865,_866,_867):= bat.hasMoreElements(rule_bat);	# 108 CHPbunHasMoreElements (_865:lng)(_866:str)(_867:zrule)<-(rule_bat:bat[:str,:zrule]) jump 104
exit (_865,_866,_867);	# 109  (_865:lng)(_866:str)(_867:zrule)
    xa_a:bat[:str,:date]  := _862;	# 110  (xa_a:bat[:str,:date])<-(_862:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 111 BKCsetColumn (ya_a:void)<-(xa_a:bat[:str,:date])(_119:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 112  (_120:str)
    _875 := bat.new(:str,:date);	# 113 CMDBATnew (_875:bat[:str,:date])<-(_876:str)(_378:date)
barrier (_878,_879,_880):= bat.newIterator(rule_bat);	# 114 CHPbunIterator (_878:lng)(_879:str)(_880:zrule)<-(rule_bat:bat[:str,:zrule]) jump 120
    _882 := mtime.compute(_880,2001);	# 115 MTIMEcompute_rule_foryear (_882:date)<-(_880:zrule)(_117:int)
    bat.insert(_875,_879,_882);	# 116 BKCinsert_bun (_883:void)<-(_875:bat[:str,:date])(_879:str)(_882:date)
catch MALexception:str ;	# 117  (MALexception:str) jump 118
exit MALexception:str ;	# 118  (MALexception:str)
    redo (_878,_879,_880):= bat.hasMoreElements(rule_bat);	# 119 CHPbunHasMoreElements (_878:lng)(_879:str)(_880:zrule)<-(rule_bat:bat[:str,:zrule]) jump 115
exit (_878,_879,_880);	# 120  (_878:lng)(_879:str)(_880:zrule)
    ab_a:bat[:str,:date]  := _875;	# 121  (ab_a:bat[:str,:date])<-(_875:bat[:str,:date])
    _888 := bat.new(:str,:int);	# 122 CMDBATnew (_888:bat[:str,:int])<-(_889:str)(_890:int)
barrier (_892,_893,_894):= bat.newIterator(ab_a);	# 123 CHPbunIterator (_892:lng)(_893:str)(_894:date)<-(ab_a:bat[:str,:date]) jump 129
    _896 := mtime.dayofweek(_894);	# 124 MTIMEdate_extract_dayofweek (_896:int)<-(_894:date)
    bat.insert(_888,_893,_896);	# 125 BKCinsert_bun (_897:void)<-(_888:bat[:str,:int])(_893:str)(_896:int)
catch MALexception:str ;	# 126  (MALexception:str) jump 127
exit MALexception:str ;	# 127  (MALexception:str)
    redo (_892,_893,_894):= bat.hasMoreElements(ab_a);	# 128 CHPbunHasMoreElements (_892:lng)(_893:str)(_894:date)<-(ab_a:bat[:str,:date]) jump 124
exit (_892,_893,_894);	# 129  (_892:lng)(_893:str)(_894:date)
    bb_a:bat[:str,:int]  := _888;	# 130  (bb_a:bat[:str,:int])<-(_888:bat[:str,:int])
    _902 := bat.new(:str,:str);	# 131 CMDBATnew (_902:bat[:str,:str])<-(_903:str)(_904:str)
barrier (_906,_907,_908):= bat.newIterator(bb_a);	# 132 CHPbunIterator (_906:lng)(_907:str)(_908:int)<-(bb_a:bat[:str,:int]) jump 138
    _910 := mtime.dayname(_908);	# 133 MTIMEday_to_str (_910:str)<-(_908:int)
    bat.insert(_902,_907,_910);	# 134 BKCinsert_bun (_911:void)<-(_902:bat[:str,:str])(_907:str)(_910:str)
catch MALexception:str ;	# 135  (MALexception:str) jump 136
exit MALexception:str ;	# 136  (MALexception:str)
    redo (_906,_907,_908):= bat.hasMoreElements(bb_a);	# 137 CHPbunHasMoreElements (_906:lng)(_907:str)(_908:int)<-(bb_a:bat[:str,:int]) jump 133
exit (_906,_907,_908);	# 138  (_906:lng)(_907:str)(_908:int)
    cb_a:bat[:str,:str]  := _902;	# 139  (cb_a:bat[:str,:str])<-(_902:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 140 BKCsetColumn (_126:void)<-(cb_a:bat[:str,:str])(_119:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 141  (_127:str)
    _916 := bat.new(:str,:date);	# 142 CMDBATnew (_916:bat[:str,:date])<-(_917:str)(_378:date)
barrier (_919,_920,_921):= bat.newIterator(rule_bat);	# 143 CHPbunIterator (_919:lng)(_920:str)(_921:zrule)<-(rule_bat:bat[:str,:zrule]) jump 149
    _923 := mtime.compute(_921,1999);	# 144 MTIMEcompute_rule_foryear (_923:date)<-(_921:zrule)(_129:int)
    bat.insert(_916,_920,_923);	# 145 BKCinsert_bun (_924:void)<-(_916:bat[:str,:date])(_920:str)(_923:date)
catch MALexception:str ;	# 146  (MALexception:str) jump 147
exit MALexception:str ;	# 147  (MALexception:str)
    redo (_919,_920,_921):= bat.hasMoreElements(rule_bat);	# 148 CHPbunHasMoreElements (_919:lng)(_920:str)(_921:zrule)<-(rule_bat:bat[:str,:zrule]) jump 144
exit (_919,_920,_921);	# 149  (_919:lng)(_920:str)(_921:zrule)
    eb_a:bat[:str,:date]  := _916;	# 150  (eb_a:bat[:str,:date])<-(_916:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 151 BKCsetColumn (_130:void)<-(eb_a:bat[:str,:date])(_131:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 152  (_132:str)
    _929 := bat.new(:str,:date);	# 153 CMDBATnew (_929:bat[:str,:date])<-(_930:str)(_378:date)
barrier (_932,_933,_934):= bat.newIterator(rule_bat);	# 154 CHPbunIterator (_932:lng)(_933:str)(_934:zrule)<-(rule_bat:bat[:str,:zrule]) jump 160
    _936 := mtime.compute(_934,1999);	# 155 MTIMEcompute_rule_foryear (_936:date)<-(_934:zrule)(_129:int)
    bat.insert(_929,_933,_936);	# 156 BKCinsert_bun (_937:void)<-(_929:bat[:str,:date])(_933:str)(_936:date)
catch MALexception:str ;	# 157  (MALexception:str) jump 158
exit MALexception:str ;	# 158  (MALexception:str)
    redo (_932,_933,_934):= bat.hasMoreElements(rule_bat);	# 159 CHPbunHasMoreElements (_932:lng)(_933:str)(_934:zrule)<-(rule_bat:bat[:str,:zrule]) jump 155
exit (_932,_933,_934);	# 160  (_932:lng)(_933:str)(_934:zrule)
    gb_a:bat[:str,:date]  := _929;	# 161  (gb_a:bat[:str,:date])<-(_929:bat[:str,:date])
    _942 := bat.new(:str,:int);	# 162 CMDBATnew (_942:bat[:str,:int])<-(_943:str)(_944:int)
barrier (_946,_947,_948):= bat.newIterator(gb_a);	# 163 CHPbunIterator (_946:lng)(_947:str)(_948:date)<-(gb_a:bat[:str,:date]) jump 169
    _950 := mtime.dayofweek(_948);	# 164 MTIMEdate_extract_dayofweek (_950:int)<-(_948:date)
    bat.insert(_942,_947,_950);	# 165 BKCinsert_bun (_951:void)<-(_942:bat[:str,:int])(_947:str)(_950:int)
catch MALexception:str ;	# 166  (MALexception:str) jump 167
exit MALexception:str ;	# 167  (MALexception:str)
    redo (_946,_947,_948):= bat.hasMoreElements(gb_a);	# 168 CHPbunHasMoreElements (_946:lng)(_947:str)(_948:date)<-(gb_a:bat[:str,:date]) jump 164
exit (_946,_947,_948);	# 169  (_946:lng)(_947:str)(_948:date)
    hb_a:bat[:str,:int]  := _942;	# 170  (hb_a:bat[:str,:int])<-(_942:bat[:str,:int])
    _956 := bat.new(:str,:str);	# 171 CMDBATnew (_956:bat[:str,:str])<-(_957:str)(_958:str)
barrier (_960,_961,_962):= bat.newIterator(hb_a);	# 172 CHPbunIterator (_960:lng)(_961:str)(_962:int)<-(hb_a:bat[:str,:int]) jump 178
    _964 := mtime.dayname(_962);	# 173 MTIMEday_to_str (_964:str)<-(_962:int)
    bat.insert(_956,_961,_964);	# 174 BKCinsert_bun (_965:void)<-(_956:bat[:str,:str])(_961:str)(_964:str)
catch MALexception:str ;	# 175  (MALexception:str) jump 176
exit MALexception:str ;	# 176  (MALexception:str)
    redo (_960,_961,_962):= bat.hasMoreElements(hb_a);	# 177 CHPbunHasMoreElements (_960:lng)(_961:str)(_962:int)<-(hb_a:bat[:str,:int]) jump 173
exit (_960,_961,_962);	# 178  (_960:lng)(_961:str)(_962:int)
    ib_a:bat[:str,:str]  := _956;	# 179  (ib_a:bat[:str,:str])<-(_956:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 180 BKCsetColumn (_136:void)<-(ib_a:bat[:str,:str])(_131:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 181  (_137:str)
    _970 := bat.new(:str,:date);	# 182 CMDBATnew (_970:bat[:str,:date])<-(_971:str)(_378:date)
barrier (_973,_974,_975):= bat.newIterator(rule_bat);	# 183 CHPbunIterator (_973:lng)(_974:str)(_975:zrule)<-(rule_bat:bat[:str,:zrule]) jump 189
    _977 := mtime.compute(_975,1992);	# 184 MTIMEcompute_rule_foryear (_977:date)<-(_975:zrule)(_139:int)
    bat.insert(_970,_974,_977);	# 185 BKCinsert_bun (_978:void)<-(_970:bat[:str,:date])(_974:str)(_977:date)
catch MALexception:str ;	# 186  (MALexception:str) jump 187
exit MALexception:str ;	# 187  (MALexception:str)
    redo (_973,_974,_975):= bat.hasMoreElements(rule_bat);	# 188 CHPbunHasMoreElements (_973:lng)(_974:str)(_975:zrule)<-(rule_bat:bat[:str,:zrule]) jump 184
exit (_973,_974,_975);	# 189  (_973:lng)(_974:str)(_975:zrule)
    kb_a:bat[:str,:date]  := _970;	# 190  (kb_a:bat[:str,:date])<-(_970:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 191 BKCsetColumn (_140:void)<-(kb_a:bat[:str,:date])(_141:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 192  (_142:str)
    _983 := bat.new(:str,:date);	# 193 CMDBATnew (_983:bat[:str,:date])<-(_984:str)(_378:date)
barrier (_986,_987,_988):= bat.newIterator(rule_bat);	# 194 CHPbunIterator (_986:lng)(_987:str)(_988:zrule)<-(rule_bat:bat[:str,:zrule]) jump 200
    _990 := mtime.compute(_988,1992);	# 195 MTIMEcompute_rule_foryear (_990:date)<-(_988:zrule)(_139:int)
    bat.insert(_983,_987,_990);	# 196 BKCinsert_bun (_991:void)<-(_983:bat[:str,:date])(_987:str)(_990:date)
catch MALexception:str ;	# 197  (MALexception:str) jump 198
exit MALexception:str ;	# 198  (MALexception:str)
    redo (_986,_987,_988):= bat.hasMoreElements(rule_bat);	# 199 CHPbunHasMoreElements (_986:lng)(_987:str)(_988:zrule)<-(rule_bat:bat[:str,:zrule]) jump 195
exit (_986,_987,_988);	# 200  (_986:lng)(_987:str)(_988:zrule)
    mb_a:bat[:str,:date]  := _983;	# 201  (mb_a:bat[:str,:date])<-(_983:bat[:str,:date])
    _996 := bat.new(:str,:int);	# 202 CMDBATnew (_996:bat[:str,:int])<-(_997:str)(_998:int)
barrier (_1000,_1001,_1002):= bat.newIterator(mb_a);	# 203 CHPbunIterator (_1000:lng)(_1001:str)(_1002:date)<-(mb_a:bat[:str,:date]) jump 209
    _1004 := mtime.dayofweek(_1002);	# 204 MTIMEdate_extract_dayofweek (_1004:int)<-(_1002:date)
    bat.insert(_996,_1001,_1004);	# 205 BKCinsert_bun (_1005:void)<-(_996:bat[:str,:int])(_1001:str)(_1004:int)
catch MALexception:str ;	# 206  (MALexception:str) jump 207
exit MALexception:str ;	# 207  (MALexception:str)
    redo (_1000,_1001,_1002):= bat.hasMoreElements(mb_a);	# 208 CHPbunHasMoreElements (_1000:lng)(_1001:str)(_1002:date)<-(mb_a:bat[:str,:date]) jump 204
exit (_1000,_1001,_1002);	# 209  (_1000:lng)(_1001:str)(_1002:date)
    nb_a:bat[:str,:int]  := _996;	# 210  (nb_a:bat[:str,:int])<-(_996:bat[:str,:int])
    _1010 := bat.new(:str,:str);	# 211 CMDBATnew (_1010:bat[:str,:str])<-(_1011:str)(_1012:str)
barrier (_1014,_1015,_1016):= bat.newIterator(nb_a);	# 212 CHPbunIterator (_1014:lng)(_1015:str)(_1016:int)<-(nb_a:bat[:str,:int]) jump 218
    _1018 := mtime.dayname(_1016);	# 213 MTIMEday_to_str (_1018:str)<-(_1016:int)
    bat.insert(_1010,_1015,_1018);	# 214 BKCinsert_bun (_1019:void)<-(_1010:bat[:str,:str])(_1015:str)(_1018:str)
catch MALexception:str ;	# 215  (MALexception:str) jump 216
exit MALexception:str ;	# 216  (MALexception:str)
    redo (_1014,_1015,_1016):= bat.hasMoreElements(nb_a);	# 217 CHPbunHasMoreElements (_1014:lng)(_1015:str)(_1016:int)<-(nb_a:bat[:str,:int]) jump 213
exit (_1014,_1015,_1016);	# 218  (_1014:lng)(_1015:str)(_1016:int)
    ob_a:bat[:str,:str]  := _1010;	# 219  (ob_a:bat[:str,:str])<-(_1010:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 220 BKCsetColumn (_146:void)<-(ob_a:bat[:str,:str])(_141:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 221 IOprint_val (_147:int)<-(_148:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 222 IOtable (qb_a:int)<-(rule_bat:bat[:str,:zrule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 223  (_150:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 224 BKCsetColumn (rb_a:void)<-(rule_bat:bat[:str,:zrule])(_152:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 225  (_153:str)
    _1024 := bat.new(:str,:date);	# 226 CMDBATnew (_1024:bat[:str,:date])<-(_1025:str)(_378:date)
barrier (_1027,_1028,_1029):= bat.newIterator(rule_bat);	# 227 CHPbunIterator (_1027:lng)(_1028:str)(_1029:zrule)<-(rule_bat:bat[:str,:zrule]) jump 233
    _1031 := mtime.compute(_1029,1572);	# 228 MTIMEcompute_rule_foryear (_1031:date)<-(_1029:zrule)(_156:int)
    bat.insert(_1024,_1028,_1031);	# 229 BKCinsert_bun (_1032:void)<-(_1024:bat[:str,:date])(_1028:str)(_1031:date)
catch MALexception:str ;	# 230  (MALexception:str) jump 231
exit MALexception:str ;	# 231  (MALexception:str)
    redo (_1027,_1028,_1029):= bat.hasMoreElements(rule_bat);	# 232 CHPbunHasMoreElements (_1027:lng)(_1028:str)(_1029:zrule)<-(rule_bat:bat[:str,:zrule]) jump 228
exit (_1027,_1028,_1029);	# 233  (_1027:lng)(_1028:str)(_1029:zrule)
    sb_a:bat[:str,:date]  := _1024;	# 234  (sb_a:bat[:str,:date])<-(_1024:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 235 BKCsetColumn (tb_a:void)<-(sb_a:bat[:str,:date])(_158:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 236  (_159:str)
    _1037 := bat.new(:str,:date);	# 237 CMDBATnew (_1037:bat[:str,:date])<-(_1038:str)(_378:date)
barrier (_1040,_1041,_1042):= bat.newIterator(rule_bat);	# 238 CHPbunIterator (_1040:lng)(_1041:str)(_1042:zrule)<-(rule_bat:bat[:str,:zrule]) jump 244
    _1044 := mtime.compute(_1042,1572);	# 239 MTIMEcompute_rule_foryear (_1044:date)<-(_1042:zrule)(_156:int)
    bat.insert(_1037,_1041,_1044);	# 240 BKCinsert_bun (_1045:void)<-(_1037:bat[:str,:date])(_1041:str)(_1044:date)
catch MALexception:str ;	# 241  (MALexception:str) jump 242
exit MALexception:str ;	# 242  (MALexception:str)
    redo (_1040,_1041,_1042):= bat.hasMoreElements(rule_bat);	# 243 CHPbunHasMoreElements (_1040:lng)(_1041:str)(_1042:zrule)<-(rule_bat:bat[:str,:zrule]) jump 239
exit (_1040,_1041,_1042);	# 244  (_1040:lng)(_1041:str)(_1042:zrule)
    ub_a:bat[:str,:date]  := _1037;	# 245  (ub_a:bat[:str,:date])<-(_1037:bat[:str,:date])
    _1050 := bat.new(:str,:int);	# 246 CMDBATnew (_1050:bat[:str,:int])<-(_1051:str)(_1052:int)
barrier (_1054,_1055,_1056):= bat.newIterator(ub_a);	# 247 CHPbunIterator (_1054:lng)(_1055:str)(_1056:date)<-(ub_a:bat[:str,:date]) jump 253
    _1058 := mtime.dayofweek(_1056);	# 248 MTIMEdate_extract_dayofweek (_1058:int)<-(_1056:date)
    bat.insert(_1050,_1055,_1058);	# 249 BKCinsert_bun (_1059:void)<-(_1050:bat[:str,:int])(_1055:str)(_1058:int)
catch MALexception:str ;	# 250  (MALexception:str) jump 251
exit MALexception:str ;	# 251  (MALexception:str)
    redo (_1054,_1055,_1056):= bat.hasMoreElements(ub_a);	# 252 CHPbunHasMoreElements (_1054:lng)(_1055:str)(_1056:date)<-(ub_a:bat[:str,:date]) jump 248
exit (_1054,_1055,_1056);	# 253  (_1054:lng)(_1055:str)(_1056:date)
    vb_a:bat[:str,:int]  := _1050;	# 254  (vb_a:bat[:str,:int])<-(_1050:bat[:str,:int])
    _1064 := bat.new(:str,:str);	# 255 CMDBATnew (_1064:bat[:str,:str])<-(_1065:str)(_1066:str)
barrier (_1068,_1069,_1070):= bat.newIterator(vb_a);	# 256 CHPbunIterator (_1068:lng)(_1069:str)(_1070:int)<-(vb_a:bat[:str,:int]) jump 262
    _1072 := mtime.dayname(_1070);	# 257 MTIMEday_to_str (_1072:str)<-(_1070:int)
    bat.insert(_1064,_1069,_1072);	# 258 BKCinsert_bun (_1073:void)<-(_1064:bat[:str,:str])(_1069:str)(_1072:str)
catch MALexception:str ;	# 259  (MALexception:str) jump 260
exit MALexception:str ;	# 260  (MALexception:str)
    redo (_1068,_1069,_1070):= bat.hasMoreElements(vb_a);	# 261 CHPbunHasMoreElements (_1068:lng)(_1069:str)(_1070:int)<-(vb_a:bat[:str,:int]) jump 257
exit (_1068,_1069,_1070);	# 262  (_1068:lng)(_1069:str)(_1070:int)
    wb_a:bat[:str,:str]  := _1064;	# 263  (wb_a:bat[:str,:str])<-(_1064:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 264 BKCsetColumn (xb_a:void)<-(wb_a:bat[:str,:str])(_158:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 265  (_166:str)
    _1078 := bat.new(:str,:date);	# 266 CMDBATnew (_1078:bat[:str,:date])<-(_1079:str)(_378:date)
barrier (_1081,_1082,_1083):= bat.newIterator(rule_bat);	# 267 CHPbunIterator (_1081:lng)(_1082:str)(_1083:zrule)<-(rule_bat:bat[:str,:zrule]) jump 273
    _1085 := mtime.compute(_1083,1);	# 268 MTIMEcompute_rule_foryear (_1085:date)<-(_1083:zrule)(_168:int)
    bat.insert(_1078,_1082,_1085);	# 269 BKCinsert_bun (_1086:void)<-(_1078:bat[:str,:date])(_1082:str)(_1085:date)
catch MALexception:str ;	# 270  (MALexception:str) jump 271
exit MALexception:str ;	# 271  (MALexception:str)
    redo (_1081,_1082,_1083):= bat.hasMoreElements(rule_bat);	# 272 CHPbunHasMoreElements (_1081:lng)(_1082:str)(_1083:zrule)<-(rule_bat:bat[:str,:zrule]) jump 268
exit (_1081,_1082,_1083);	# 273  (_1081:lng)(_1082:str)(_1083:zrule)
    yb_a:bat[:str,:date]  := _1078;	# 274  (yb_a:bat[:str,:date])<-(_1078:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 275 BKCsetColumn (ac_a:void)<-(yb_a:bat[:str,:date])(_170:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 276  (_171:str)
    _1091 := bat.new(:str,:date);	# 277 CMDBATnew (_1091:bat[:str,:date])<-(_1092:str)(_378:date)
barrier (_1094,_1095,_1096):= bat.newIterator(rule_bat);	# 278 CHPbunIterator (_1094:lng)(_1095:str)(_1096:zrule)<-(rule_bat:bat[:str,:zrule]) jump 284
    _1098 := mtime.compute(_1096,1);	# 279 MTIMEcompute_rule_foryear (_1098:date)<-(_1096:zrule)(_168:int)
    bat.insert(_1091,_1095,_1098);	# 280 BKCinsert_bun (_1099:void)<-(_1091:bat[:str,:date])(_1095:str)(_1098:date)
catch MALexception:str ;	# 281  (MALexception:str) jump 282
exit MALexception:str ;	# 282  (MALexception:str)
    redo (_1094,_1095,_1096):= bat.hasMoreElements(rule_bat);	# 283 CHPbunHasMoreElements (_1094:lng)(_1095:str)(_1096:zrule)<-(rule_bat:bat[:str,:zrule]) jump 279
exit (_1094,_1095,_1096);	# 284  (_1094:lng)(_1095:str)(_1096:zrule)
    bc_a:bat[:str,:date]  := _1091;	# 285  (bc_a:bat[:str,:date])<-(_1091:bat[:str,:date])
    _1104 := bat.new(:str,:int);	# 286 CMDBATnew (_1104:bat[:str,:int])<-(_1105:str)(_1106:int)
barrier (_1108,_1109,_1110):= bat.newIterator(bc_a);	# 287 CHPbunIterator (_1108:lng)(_1109:str)(_1110:date)<-(bc_a:bat[:str,:date]) jump 293
    _1112 := mtime.dayofweek(_1110);	# 288 MTIMEdate_extract_dayofweek (_1112:int)<-(_1110:date)
    bat.insert(_1104,_1109,_1112);	# 289 BKCinsert_bun (_1113:void)<-(_1104:bat[:str,:int])(_1109:str)(_1112:int)
catch MALexception:str ;	# 290  (MALexception:str) jump 291
exit MALexception:str ;	# 291  (MALexception:str)
    redo (_1108,_1109,_1110):= bat.hasMoreElements(bc_a);	# 292 CHPbunHasMoreElements (_1108:lng)(_1109:str)(_1110:date)<-(bc_a:bat[:str,:date]) jump 288
exit (_1108,_1109,_1110);	# 293  (_1108:lng)(_1109:str)(_1110:date)
    cc_a:bat[:str,:int]  := _1104;	# 294  (cc_a:bat[:str,:int])<-(_1104:bat[:str,:int])
    _1118 := bat.new(:str,:str);	# 295 CMDBATnew (_1118:bat[:str,:str])<-(_1119:str)(_1120:str)
barrier (_1122,_1123,_1124):= bat.newIterator(cc_a);	# 296 CHPbunIterator (_1122:lng)(_1123:str)(_1124:int)<-(cc_a:bat[:str,:int]) jump 302
    _1126 := mtime.dayname(_1124);	# 297 MTIMEday_to_str (_1126:str)<-(_1124:int)
    bat.insert(_1118,_1123,_1126);	# 298 BKCinsert_bun (_1127:void)<-(_1118:bat[:str,:str])(_1123:str)(_1126:str)
catch MALexception:str ;	# 299  (MALexception:str) jump 300
exit MALexception:str ;	# 300  (MALexception:str)
    redo (_1122,_1123,_1124):= bat.hasMoreElements(cc_a);	# 301 CHPbunHasMoreElements (_1122:lng)(_1123:str)(_1124:int)<-(cc_a:bat[:str,:int]) jump 297
exit (_1122,_1123,_1124);	# 302  (_1122:lng)(_1123:str)(_1124:int)
    dc_a:bat[:str,:str]  := _1118;	# 303  (dc_a:bat[:str,:str])<-(_1118:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 304 BKCsetColumn (ec_a:void)<-(dc_a:bat[:str,:str])(_170:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 305  (_176:str)
    _1132 := bat.new(:str,:date);	# 306 CMDBATnew (_1132:bat[:str,:date])<-(_1133:str)(_378:date)
barrier (_1135,_1136,_1137):= bat.newIterator(rule_bat);	# 307 CHPbunIterator (_1135:lng)(_1136:str)(_1137:zrule)<-(rule_bat:bat[:str,:zrule]) jump 313
    _1139 := mtime.compute(_1137,-2000);	# 308 MTIMEcompute_rule_foryear (_1139:date)<-(_1137:zrule)(_178:int)
    bat.insert(_1132,_1136,_1139);	# 309 BKCinsert_bun (_1140:void)<-(_1132:bat[:str,:date])(_1136:str)(_1139:date)
catch MALexception:str ;	# 310  (MALexception:str) jump 311
exit MALexception:str ;	# 311  (MALexception:str)
    redo (_1135,_1136,_1137):= bat.hasMoreElements(rule_bat);	# 312 CHPbunHasMoreElements (_1135:lng)(_1136:str)(_1137:zrule)<-(rule_bat:bat[:str,:zrule]) jump 308
exit (_1135,_1136,_1137);	# 313  (_1135:lng)(_1136:str)(_1137:zrule)
    fc_a:bat[:str,:date]  := _1132;	# 314  (fc_a:bat[:str,:date])<-(_1132:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 315 BKCsetColumn (gc_a:void)<-(fc_a:bat[:str,:date])(_180:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 316  (_181:str)
    _1145 := bat.new(:str,:date);	# 317 CMDBATnew (_1145:bat[:str,:date])<-(_1146:str)(_378:date)
barrier (_1148,_1149,_1150):= bat.newIterator(rule_bat);	# 318 CHPbunIterator (_1148:lng)(_1149:str)(_1150:zrule)<-(rule_bat:bat[:str,:zrule]) jump 324
    _1152 := mtime.compute(_1150,-2000);	# 319 MTIMEcompute_rule_foryear (_1152:date)<-(_1150:zrule)(_178:int)
    bat.insert(_1145,_1149,_1152);	# 320 BKCinsert_bun (_1153:void)<-(_1145:bat[:str,:date])(_1149:str)(_1152:date)
catch MALexception:str ;	# 321  (MALexception:str) jump 322
exit MALexception:str ;	# 322  (MALexception:str)
    redo (_1148,_1149,_1150):= bat.hasMoreElements(rule_bat);	# 323 CHPbunHasMoreElements (_1148:lng)(_1149:str)(_1150:zrule)<-(rule_bat:bat[:str,:zrule]) jump 319
exit (_1148,_1149,_1150);	# 324  (_1148:lng)(_1149:str)(_1150:zrule)
    hc_a:bat[:str,:date]  := _1145;	# 325  (hc_a:bat[:str,:date])<-(_1145:bat[:str,:date])
    _1158 := bat.new(:str,:int);	# 326 CMDBATnew (_1158:bat[:str,:int])<-(_1159:str)(_1160:int)
barrier (_1162,_1163,_1164):= bat.newIterator(hc_a);	# 327 CHPbunIterator (_1162:lng)(_1163:str)(_1164:date)<-(hc_a:bat[:str,:date]) jump 333
    _1166 := mtime.dayofweek(_1164);	# 328 MTIMEdate_extract_dayofweek (_1166:int)<-(_1164:date)
    bat.insert(_1158,_1163,_1166);	# 329 BKCinsert_bun (_1167:void)<-(_1158:bat[:str,:int])(_1163:str)(_1166:int)
catch MALexception:str ;	# 330  (MALexception:str) jump 331
exit MALexception:str ;	# 331  (MALexception:str)
    redo (_1162,_1163,_1164):= bat.hasMoreElements(hc_a);	# 332 CHPbunHasMoreElements (_1162:lng)(_1163:str)(_1164:date)<-(hc_a:bat[:str,:date]) jump 328
exit (_1162,_1163,_1164);	# 333  (_1162:lng)(_1163:str)(_1164:date)
    ic_a:bat[:str,:int]  := _1158;	# 334  (ic_a:bat[:str,:int])<-(_1158:bat[:str,:int])
    _1172 := bat.new(:str,:str);	# 335 CMDBATnew (_1172:bat[:str,:str])<-(_1173:str)(_1174:str)
barrier (_1176,_1177,_1178):= bat.newIterator(ic_a);	# 336 CHPbunIterator (_1176:lng)(_1177:str)(_1178:int)<-(ic_a:bat[:str,:int]) jump 342
    _1180 := mtime.dayname(_1178);	# 337 MTIMEday_to_str (_1180:str)<-(_1178:int)
    bat.insert(_1172,_1177,_1180);	# 338 BKCinsert_bun (_1181:void)<-(_1172:bat[:str,:str])(_1177:str)(_1180:str)
catch MALexception:str ;	# 339  (MALexception:str) jump 340
exit MALexception:str ;	# 340  (MALexception:str)
    redo (_1176,_1177,_1178):= bat.hasMoreElements(ic_a);	# 341 CHPbunHasMoreElements (_1176:lng)(_1177:str)(_1178:int)<-(ic_a:bat[:str,:int]) jump 337
exit (_1176,_1177,_1178);	# 342  (_1176:lng)(_1177:str)(_1178:int)
    jc_a:bat[:str,:str]  := _1172;	# 343  (jc_a:bat[:str,:str])<-(_1172:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 344 BKCsetColumn (kc_a:void)<-(jc_a:bat[:str,:str])(_180:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 345 IOprint_val (_186:int)<-(_187:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 346 IOtable (lc_a:int)<-(rule_bat:bat[:str,:zrule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 347  (_189:str)
## test the various ways to create timezones, using some of the above created rules 	# 348  (_190:str)
    tzone_00 := mtime.timezone("GMT");	# 349 MTIMEtzone_fromstr (tzone_00:timezone)<-(_192:str)
#var tzone_00 := mtime.timezone("GMT"); 	# 350  (_193:str)
    tzone_01 := mtime.timezone("GMT+01:00");	# 351 MTIMEtzone_fromstr (tzone_01:timezone)<-(_195:str)
#var tzone_01 := mtime.timezone("GMT+01:00"); 	# 352  (_196:str)
    tzone_02 := mtime.timezone("GMT+0100");	# 353 MTIMEtzone_fromstr (tzone_02:timezone)<-(_198:str)
#var tzone_02 := mtime.timezone("GMT+0100"); 	# 354  (_199:str)
    tzone_03 := mtime.timezone(60,rule_oct,rule_mar);	# 355 MTIMEtzone_create_dst (tzone_03:timezone)<-(_201:int)(rule_oct:zrule)(rule_mar:zrule)
#var tzone_03 := mtime.timezone(60, rule_oct, rule_mar); 	# 356  (_202:str)
    tzone_04 := mtime.timezone(0,rule_jan,rule_aug);	# 357 MTIMEtzone_create_dst (tzone_04:timezone)<-(_204:int)(rule_jan:zrule)(rule_aug:zrule)
#var tzone_04 := mtime.timezone(0, rule_jan, rule_aug); 	# 358  (_205:str)
    tzone_05 := mtime.timezone(-97,rule_oct,rule_apr);	# 359 MTIMEtzone_create_dst (tzone_05:timezone)<-(_207:int)(rule_oct:zrule)(rule_apr:zrule)
#var tzone_05 := mtime.timezone(-97, rule_oct, rule_apr); 	# 360  (_208:str)
    tzone_06 := mtime.timezone(-97,rule_may,rule_sep);	# 361 MTIMEtzone_create_dst (tzone_06:timezone)<-(_207:int)(rule_may:zrule)(rule_sep:zrule)
#var tzone_06 := mtime.timezone(-97, rule_may, rule_sep); 	# 362  (_210:str)
    mc_a := calc.*(23,60);	# 363 CALCbinaryMULintint (mc_a:int)<-(_212:int)(_201:int)
    tzone_07 := mtime.timezone(mc_a,rule_apr,rule_nov);	# 364 MTIMEtzone_create_dst (tzone_07:timezone)<-(mc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_07 := mtime.timezone(23*60, rule_apr, rule_nov); 	# 365  (_214:str)
    nc_a := calc.*(-23,59);	# 366 CALCbinaryMULintint (nc_a:int)<-(_216:int)(_217:int)
    oc_a := calc.-(nc_a,59);	# 367 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)(_217:int)
    tzone_08 := mtime.timezone(oc_a);	# 368 MTIMEtzone_create (tzone_08:timezone)<-(oc_a:int)
#var tzone_08 := mtime.timezone((-23*59) - 59); 	# 369  (_220:str)
    tzone_09 := mtime.timezone(0);	# 370 MTIMEtzone_create (tzone_09:timezone)<-(_204:int)
#var tzone_09 := mtime.timezone(0); 	# 371  (_222:str)
    tzone_10 := mtime.timezone(-60);	# 372 MTIMEtzone_create (tzone_10:timezone)<-(_224:int)
#var tzone_10 := mtime.timezone(-60); 	# 373  (_225:str)
    pc_a := calc.*(23,60);	# 374 CALCbinaryMULintint (pc_a:int)<-(_212:int)(_201:int)
    qc_a := calc.+(pc_a,59);	# 375 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)(_217:int)
    tzone_11 := mtime.timezone(qc_a);	# 376 MTIMEtzone_create (tzone_11:timezone)<-(qc_a:int)
#var tzone_11 := mtime.timezone((23*60)+59); 	# 377  (_229:str)
    tzone_12 := mtime.timezone(60);	# 378 MTIMEtzone_create (tzone_12:timezone)<-(_201:int)
#var tzone_12 := mtime.timezone(60); 	# 379  (_231:str)
## nil tzones 	# 380  (_232:str)
    tzone_13 := mtime.timezone(60,rule_feb,rule_dec);	# 381 MTIMEtzone_create_dst (tzone_13:timezone)<-(_201:int)(rule_feb:zrule)(rule_dec:zrule)
#var tzone_13 := mtime.timezone(60, rule_feb, rule_dec); 	# 382  (_234:str)
    rc_a := calc.*(24,60);	# 383 CALCbinaryMULintint (rc_a:int)<-(_236:int)(_201:int)
    tzone_15 := mtime.timezone(rc_a,rule_apr,rule_nov);	# 384 MTIMEtzone_create_dst (tzone_15:timezone)<-(rc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_15 := mtime.timezone(24*60, rule_apr, rule_nov); 	# 385  (_238:str)
    tzone_bat := bat.new(:oid,:timezone);	# 386 CMDBATnew (tzone_bat:bat[:oid,:timezone])<-(_240:oid)(_241:timezone)
#var tzone_bat := bat.new(oid,tzone); 	# 387  (_242:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 388 BKCinsert_bun (_243:void)<-(tzone_bat:bat[:oid,:timezone])(_244:oid)(tzone_00:timezone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 389 BKCinsert_bun (_245:void)<-(tzone_bat:bat[:oid,:timezone])(_246:oid)(tzone_01:timezone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 390 BKCinsert_bun (_247:void)<-(tzone_bat:bat[:oid,:timezone])(_248:oid)(tzone_02:timezone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 391  (_249:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 392 BKCinsert_bun (_250:void)<-(tzone_bat:bat[:oid,:timezone])(_251:oid)(tzone_03:timezone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 393 BKCinsert_bun (_252:void)<-(tzone_bat:bat[:oid,:timezone])(_253:oid)(tzone_04:timezone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 394 BKCinsert_bun (_254:void)<-(tzone_bat:bat[:oid,:timezone])(_255:oid)(tzone_05:timezone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 395  (_256:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 396 BKCinsert_bun (_257:void)<-(tzone_bat:bat[:oid,:timezone])(_258:oid)(tzone_06:timezone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 397 BKCinsert_bun (_259:void)<-(tzone_bat:bat[:oid,:timezone])(_260:oid)(tzone_07:timezone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 398 BKCinsert_bun (_261:void)<-(tzone_bat:bat[:oid,:timezone])(_262:oid)(tzone_08:timezone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 399  (_263:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 400 BKCinsert_bun (_264:void)<-(tzone_bat:bat[:oid,:timezone])(_265:oid)(tzone_09:timezone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 401 BKCinsert_bun (_266:void)<-(tzone_bat:bat[:oid,:timezone])(_267:oid)(tzone_10:timezone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 402 BKCinsert_bun (_268:void)<-(tzone_bat:bat[:oid,:timezone])(_269:oid)(tzone_11:timezone)
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 403  (_270:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 404 BKCinsert_bun (_271:void)<-(tzone_bat:bat[:oid,:timezone])(_272:oid)(tzone_12:timezone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 405 BKCinsert_bun (_273:void)<-(tzone_bat:bat[:oid,:timezone])(_274:oid)(tzone_13:timezone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 406 BKCinsert_bun (_275:void)<-(tzone_bat:bat[:oid,:timezone])(_276:oid)(tzone_15:timezone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 407  (_277:str)
## test the operations on tzones 	# 408  (_278:str)
    bat.setName(tzone_bat,"timezone");	# 409 BKCsetName (_279:void)<-(tzone_bat:bat[:oid,:timezone])(_280:str)
#io.print(tzone_bat); 	# 410  (_281:str)
#io.print("start error"); 	# 411  (_282:str)
#x:= getRefCount(tzone_bat); 	# 412  (_283:str)
#io.print(x); 	# 413  (_284:str)
#jd_a := io.print(tzone_bat); 	# 414  (_285:str)
#io.print("end"); 	# 415  (_286:str)
#io.print(x); 	# 416  (_284:str)
#x:= getRefCount(tzone_bat); 	# 417  (_283:str)
    io.print("tzone_bat");	# 418 IOprint_val (_287:int)<-(_288:str)
    io.print(tzone_bat);	# 419 IOprint_val (_289:int)<-(tzone_bat:bat[:oid,:timezone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 420  (_290:str)
    _1186 := bat.new(:oid,:int);	# 421 CMDBATnew (_1186:bat[:oid,:int])<-(_240:oid)(_1187:int)
barrier (_1189,_1190,_1191):= bat.newIterator(tzone_bat);	# 422 CHPbunIterator (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 428
    _1193 := mtime.minutes(_1191);	# 423 MTIMEtzone_extract_minutes (_1193:int)<-(_1191:timezone)
    bat.insert(_1186,_1190,_1193);	# 424 BKCinsert_bun (_1194:void)<-(_1186:bat[:oid,:int])(_1190:oid)(_1193:int)
catch MALexception:str ;	# 425  (MALexception:str) jump 426
exit MALexception:str ;	# 426  (MALexception:str)
    redo (_1189,_1190,_1191):= bat.hasMoreElements(tzone_bat);	# 427 CHPbunHasMoreElements (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 423
exit (_1189,_1190,_1191);	# 428  (_1189:lng)(_1190:oid)(_1191:timezone)
    kd_a:bat[:oid,:int]  := _1186;	# 429  (kd_a:bat[:oid,:int])<-(_1186:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 430 BKCsetColumn (_293:void)<-(kd_a:bat[:oid,:int])(_294:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 431  (_295:str)
    _1199 := bat.new(:oid,:zrule);	# 432 CMDBATnew (_1199:bat[:oid,:zrule])<-(_240:oid)(_58:zrule)
barrier (_1201,_1202,_1203):= bat.newIterator(tzone_bat);	# 433 CHPbunIterator (_1201:lng)(_1202:oid)(_1203:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 439
    _1205 := mtime.start_dst(_1203);	# 434 MTIMEtzone_extract_start (_1205:zrule)<-(_1203:timezone)
    bat.insert(_1199,_1202,_1205);	# 435 BKCinsert_bun (_1206:void)<-(_1199:bat[:oid,:zrule])(_1202:oid)(_1205:zrule)
catch MALexception:str ;	# 436  (MALexception:str) jump 437
exit MALexception:str ;	# 437  (MALexception:str)
    redo (_1201,_1202,_1203):= bat.hasMoreElements(tzone_bat);	# 438 CHPbunHasMoreElements (_1201:lng)(_1202:oid)(_1203:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 434
exit (_1201,_1202,_1203);	# 439  (_1201:lng)(_1202:oid)(_1203:timezone)
    md_a:bat[:oid,:zrule]  := _1199;	# 440  (md_a:bat[:oid,:zrule])<-(_1199:bat[:oid,:zrule])
    bat.setColumn(md_a,"start_dst");	# 441 BKCsetColumn (_298:void)<-(md_a:bat[:oid,:zrule])(_299:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 442  (_300:str)
    _1211 := bat.new(:oid,:zrule);	# 443 CMDBATnew (_1211:bat[:oid,:zrule])<-(_240:oid)(_58:zrule)
barrier (_1213,_1214,_1215):= bat.newIterator(tzone_bat);	# 444 CHPbunIterator (_1213:lng)(_1214:oid)(_1215:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 450
    _1217 := mtime.end_dst(_1215);	# 445 MTIMEtzone_extract_end (_1217:zrule)<-(_1215:timezone)
    bat.insert(_1211,_1214,_1217);	# 446 BKCinsert_bun (_1218:void)<-(_1211:bat[:oid,:zrule])(_1214:oid)(_1217:zrule)
catch MALexception:str ;	# 447  (MALexception:str) jump 448
exit MALexception:str ;	# 448  (MALexception:str)
    redo (_1213,_1214,_1215):= bat.hasMoreElements(tzone_bat);	# 449 CHPbunHasMoreElements (_1213:lng)(_1214:oid)(_1215:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 445
exit (_1213,_1214,_1215);	# 450  (_1213:lng)(_1214:oid)(_1215:timezone)
    od_a:bat[:oid,:zrule]  := _1211;	# 451  (od_a:bat[:oid,:zrule])<-(_1211:bat[:oid,:zrule])
    bat.setColumn(od_a,"end_dst");	# 452 BKCsetColumn (_303:void)<-(od_a:bat[:oid,:zrule])(_304:str)
    io.print("print(kd_a,md_a,od_a)");	# 453 IOprint_val (_305:int)<-(_306:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 454 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:zrule])(od_a:bat[:oid,:zrule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 455  (_308:str)
## test the various ways to create dates 	# 456  (_309:str)
    date_00 := mtime.date(2000,1,1);	# 457 MTIMEdate_create (date_00:date)<-(_311:int)(_312:int)(_312:int)
#var date_00 := date(2000,01,01); 	# 458  (_313:str)
    date_01 := mtime.date("5000-JAN-01");	# 459 MTIMEdate_fromstr (date_01:date)<-(_315:str)
#var date_01 := date("5000-JAN-01"); 	# 460  (_316:str)
    date_02 := mtime.date("1968-FEBR-29");	# 461 MTIMEdate_fromstr (date_02:date)<-(_318:str)
#var date_02 := date("1968-FEBR-29"); 	# 462  (_319:str)
    date_03 := mtime.date("1-MARCH-01");	# 463 MTIMEdate_fromstr (date_03:date)<-(_321:str)
#var date_03 := date("1-MARCH-01"); 	# 464  (_322:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 465 MTIMEdate_fromstr (date_04:date)<-(_324:str)
#var date_04 := date("-5867411-JAN-1"); 	# 466  (_325:str)
    date_05 := mtime.date("-768/octobe/01");	# 467 MTIMEdate_fromstr (date_05:date)<-(_327:str)
#var date_05 := date("-768/octobe/01"); 	# 468  (_328:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 469 MTIMEdate_fromstr (date_06:date)<-(_330:str)
#var date_06 := date("5000\\novembe\\01"); 	# 470  (_331:str)
    date_07 := mtime.date("-1999/jun/01");	# 471 MTIMEdate_fromstr (date_07:date)<-(_333:str)
#var date_07 := date("-1999/jun/01"); 	# 472  (_334:str)
    date_08 := mtime.date("2000-jul-14");	# 473 MTIMEdate_fromstr (date_08:date)<-(_336:str)
#var date_08 := date("2000-jul-14"); 	# 474  (_337:str)
    date_09 := mtime.date("1999-sept-01");	# 475 MTIMEdate_fromstr (date_09:date)<-(_339:str)
#var date_09 := date("1999-sept-01"); 	# 476  (_340:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 477 MTIMEdate_fromstr (date_10:date)<-(_342:str)
#var date_10 := date("1998-decemBeR-01"); 	# 478  (_343:str)
    date_11 := mtime.date("1953 may                01");	# 479 MTIMEdate_fromstr (date_11:date)<-(_345:str)
#var date_11 := date("1953 may                01"); 	# 480  (_346:str)
    date_12 := mtime.date("5867411-DEC-31");	# 481 MTIMEdate_fromstr (date_12:date)<-(_348:str)
#var date_12 := date("5867411-DEC-31"); 	# 482  (_349:str)
## nil dates 	# 483  (_350:str)
    date_13 := mtime.date(1996,13,1);	# 484 MTIMEdate_create (date_13:date)<-(_352:int)(_353:int)(_354:int)
#var date_13 := date(1996,13,1); 	# 485  (_355:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 486 MTIMEdate_fromstr (date_14:date)<-(_357:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 487  (_358:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 488 MTIMEdate_fromstr (date_15:date)<-(_360:str)
#var date_15 := date("1999-JANUARI-01"); 	# 489  (_361:str)
    date_16 := mtime.date("1999-FEBR-29");	# 490 MTIMEdate_fromstr (date_16:date)<-(_363:str)
#var date_16 := date("1999-FEBR-29"); 	# 491  (_364:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 492 MTIMEdate_fromstr (date_17:date)<-(_366:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 493  (_367:str)
    date_18 := mtime.date("5000\novembe31");	# 494 MTIMEdate_fromstr (date_18:date)<-(_369:str)
#var date_18 := date("5000\novembe\31"); 	# 495  (_370:str)
    date_19 := mtime.date("nil");	# 496 MTIMEdate_fromstr (date_19:date)<-(_372:str)
#var date_19 := date("nil"); 	# 497  (_373:str)
    date_20 := mtime.date("1999-sept-31");	# 498 MTIMEdate_fromstr (date_20:date)<-(_375:str)
#var date_20 := date("1999-sept-31"); 	# 499  (_376:str)
    date_bat := bat.new(:oid,:date);	# 500 CMDBATnew (date_bat:bat[:oid,:date])<-(_240:oid)(_378:date)
#var date_bat := bat.new(oid,date); 	# 501  (_379:str)
    bat.insert(date_bat,0@0,date_00);	# 502 BKCinsert_bun (_380:void)<-(date_bat:bat[:oid,:date])(_381:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 503 BKCinsert_bun (_382:void)<-(date_bat:bat[:oid,:date])(_383:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 504 BKCinsert_bun (_384:void)<-(date_bat:bat[:oid,:date])(_385:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 505  (_386:str)
    bat.insert(date_bat,3@0,date_03);	# 506 BKCinsert_bun (_387:void)<-(date_bat:bat[:oid,:date])(_388:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 507 BKCinsert_bun (_389:void)<-(date_bat:bat[:oid,:date])(_390:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 508 BKCinsert_bun (_391:void)<-(date_bat:bat[:oid,:date])(_392:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 509  (_393:str)
    bat.insert(date_bat,6@0,date_06);	# 510 BKCinsert_bun (_394:void)<-(date_bat:bat[:oid,:date])(_395:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 511 BKCinsert_bun (_396:void)<-(date_bat:bat[:oid,:date])(_397:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 512 BKCinsert_bun (_398:void)<-(date_bat:bat[:oid,:date])(_399:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 513  (_400:str)
    bat.insert(date_bat,9@0,date_09);	# 514 BKCinsert_bun (_401:void)<-(date_bat:bat[:oid,:date])(_402:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 515 BKCinsert_bun (_403:void)<-(date_bat:bat[:oid,:date])(_404:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 516 BKCinsert_bun (_405:void)<-(date_bat:bat[:oid,:date])(_406:oid)(date_11:date)
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 517  (_407:str)
    bat.insert(date_bat,12@0,date_12);	# 518 BKCinsert_bun (_408:void)<-(date_bat:bat[:oid,:date])(_409:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 519 BKCinsert_bun (_410:void)<-(date_bat:bat[:oid,:date])(_411:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 520 BKCinsert_bun (_412:void)<-(date_bat:bat[:oid,:date])(_413:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 521  (_414:str)
    bat.insert(date_bat,15@0,date_15);	# 522 BKCinsert_bun (_415:void)<-(date_bat:bat[:oid,:date])(_416:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 523 BKCinsert_bun (_417:void)<-(date_bat:bat[:oid,:date])(_418:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 524 BKCinsert_bun (_419:void)<-(date_bat:bat[:oid,:date])(_420:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 525  (_421:str)
    bat.insert(date_bat,18@0,date_18);	# 526 BKCinsert_bun (_422:void)<-(date_bat:bat[:oid,:date])(_423:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 527 BKCinsert_bun (_424:void)<-(date_bat:bat[:oid,:date])(_425:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 528 BKCinsert_bun (_426:void)<-(date_bat:bat[:oid,:date])(_427:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 529  (_428:str)
## test the operations on dates 	# 530  (_429:str)
    ne_a := bat.setColumn(date_bat,"date");	# 531 BKCsetColumn (ne_a:void)<-(date_bat:bat[:oid,:date])(_431:str)
#io.print(date_bat.bat.setColumn("date"), 	# 532  (_432:str)
    _1223 := bat.new(:oid,:int);	# 533 CMDBATnew (_1223:bat[:oid,:int])<-(_240:oid)(_1224:int)
barrier (_1226,_1227,_1228):= bat.newIterator(date_bat);	# 534 CHPbunIterator (_1226:lng)(_1227:oid)(_1228:date)<-(date_bat:bat[:oid,:date]) jump 540
    _1230 := mtime.year(_1228);	# 535 MTIMEdate_extract_year (_1230:int)<-(_1228:date)
    bat.insert(_1223,_1227,_1230);	# 536 BKCinsert_bun (_1231:void)<-(_1223:bat[:oid,:int])(_1227:oid)(_1230:int)
catch MALexception:str ;	# 537  (MALexception:str) jump 538
exit MALexception:str ;	# 538  (MALexception:str)
    redo (_1226,_1227,_1228):= bat.hasMoreElements(date_bat);	# 539 CHPbunHasMoreElements (_1226:lng)(_1227:oid)(_1228:date)<-(date_bat:bat[:oid,:date]) jump 535
exit (_1226,_1227,_1228);	# 540  (_1226:lng)(_1227:oid)(_1228:date)
    oe_a:bat[:oid,:int]  := _1223;	# 541  (oe_a:bat[:oid,:int])<-(_1223:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 542 BKCsetColumn (pe_a:void)<-(oe_a:bat[:oid,:int])(_436:str)
#      [year](date_bat).bat.setColumn("year"), 	# 543  (_437:str)
    _1236 := bat.new(:oid,:int);	# 544 CMDBATnew (_1236:bat[:oid,:int])<-(_240:oid)(_1237:int)
barrier (_1239,_1240,_1241):= bat.newIterator(date_bat);	# 545 CHPbunIterator (_1239:lng)(_1240:oid)(_1241:date)<-(date_bat:bat[:oid,:date]) jump 551
    _1243 := mtime.day(_1241);	# 546 MTIMEdate_extract_day (_1243:int)<-(_1241:date)
    bat.insert(_1236,_1240,_1243);	# 547 BKCinsert_bun (_1244:void)<-(_1236:bat[:oid,:int])(_1240:oid)(_1243:int)
catch MALexception:str ;	# 548  (MALexception:str) jump 549
exit MALexception:str ;	# 549  (MALexception:str)
    redo (_1239,_1240,_1241):= bat.hasMoreElements(date_bat);	# 550 CHPbunHasMoreElements (_1239:lng)(_1240:oid)(_1241:date)<-(date_bat:bat[:oid,:date]) jump 546
exit (_1239,_1240,_1241);	# 551  (_1239:lng)(_1240:oid)(_1241:date)
    qe_a:bat[:oid,:int]  := _1236;	# 552  (qe_a:bat[:oid,:int])<-(_1236:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 553 BKCsetColumn (re_a:void)<-(qe_a:bat[:oid,:int])(_441:str)
#      [day](date_bat).bat.setColumn("day"), 	# 554  (_442:str)
    _1249 := bat.new(:oid,:int);	# 555 CMDBATnew (_1249:bat[:oid,:int])<-(_240:oid)(_1250:int)
barrier (_1252,_1253,_1254):= bat.newIterator(date_bat);	# 556 CHPbunIterator (_1252:lng)(_1253:oid)(_1254:date)<-(date_bat:bat[:oid,:date]) jump 562
    _1256 := mtime.month(_1254);	# 557 MTIMEdate_extract_month (_1256:int)<-(_1254:date)
    bat.insert(_1249,_1253,_1256);	# 558 BKCinsert_bun (_1257:void)<-(_1249:bat[:oid,:int])(_1253:oid)(_1256:int)
catch MALexception:str ;	# 559  (MALexception:str) jump 560
exit MALexception:str ;	# 560  (MALexception:str)
    redo (_1252,_1253,_1254):= bat.hasMoreElements(date_bat);	# 561 CHPbunHasMoreElements (_1252:lng)(_1253:oid)(_1254:date)<-(date_bat:bat[:oid,:date]) jump 557
exit (_1252,_1253,_1254);	# 562  (_1252:lng)(_1253:oid)(_1254:date)
    se_a:bat[:oid,:int]  := _1249;	# 563  (se_a:bat[:oid,:int])<-(_1249:bat[:oid,:int])
    _1262 := bat.new(:oid,:str);	# 564 CMDBATnew (_1262:bat[:oid,:str])<-(_240:oid)(_1263:str)
barrier (_1265,_1266,_1267):= bat.newIterator(se_a);	# 565 CHPbunIterator (_1265:lng)(_1266:oid)(_1267:int)<-(se_a:bat[:oid,:int]) jump 571
    _1269 := mtime.monthname(_1267);	# 566 MTIMEmonth_to_str (_1269:str)<-(_1267:int)
    bat.insert(_1262,_1266,_1269);	# 567 BKCinsert_bun (_1270:void)<-(_1262:bat[:oid,:str])(_1266:oid)(_1269:str)
catch MALexception:str ;	# 568  (MALexception:str) jump 569
exit MALexception:str ;	# 569  (MALexception:str)
    redo (_1265,_1266,_1267):= bat.hasMoreElements(se_a);	# 570 CHPbunHasMoreElements (_1265:lng)(_1266:oid)(_1267:int)<-(se_a:bat[:oid,:int]) jump 566
exit (_1265,_1266,_1267);	# 571  (_1265:lng)(_1266:oid)(_1267:int)
    te_a:bat[:oid,:str]  := _1262;	# 572  (te_a:bat[:oid,:str])<-(_1262:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 573 BKCsetColumn (ue_a:void)<-(te_a:bat[:oid,:str])(_448:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 574  (_449:str)
    _1275 := bat.new(:oid,:int);	# 575 CMDBATnew (_1275:bat[:oid,:int])<-(_240:oid)(_1276:int)
barrier (_1278,_1279,_1280):= bat.newIterator(date_bat);	# 576 CHPbunIterator (_1278:lng)(_1279:oid)(_1280:date)<-(date_bat:bat[:oid,:date]) jump 582
    _1282 := mtime.month(_1280);	# 577 MTIMEdate_extract_month (_1282:int)<-(_1280:date)
    bat.insert(_1275,_1279,_1282);	# 578 BKCinsert_bun (_1283:void)<-(_1275:bat[:oid,:int])(_1279:oid)(_1282:int)
catch MALexception:str ;	# 579  (MALexception:str) jump 580
exit MALexception:str ;	# 580  (MALexception:str)
    redo (_1278,_1279,_1280):= bat.hasMoreElements(date_bat);	# 581 CHPbunHasMoreElements (_1278:lng)(_1279:oid)(_1280:date)<-(date_bat:bat[:oid,:date]) jump 577
exit (_1278,_1279,_1280);	# 582  (_1278:lng)(_1279:oid)(_1280:date)
    ve_a:bat[:oid,:int]  := _1275;	# 583  (ve_a:bat[:oid,:int])<-(_1275:bat[:oid,:int])
    _1288 := bat.new(:oid,:str);	# 584 CMDBATnew (_1288:bat[:oid,:str])<-(_240:oid)(_1289:str)
barrier (_1291,_1292,_1293):= bat.newIterator(ve_a);	# 585 CHPbunIterator (_1291:lng)(_1292:oid)(_1293:int)<-(ve_a:bat[:oid,:int]) jump 591
    _1295 := mtime.monthname(_1293);	# 586 MTIMEmonth_to_str (_1295:str)<-(_1293:int)
    bat.insert(_1288,_1292,_1295);	# 587 BKCinsert_bun (_1296:void)<-(_1288:bat[:oid,:str])(_1292:oid)(_1295:str)
catch MALexception:str ;	# 588  (MALexception:str) jump 589
exit MALexception:str ;	# 589  (MALexception:str)
    redo (_1291,_1292,_1293):= bat.hasMoreElements(ve_a);	# 590 CHPbunHasMoreElements (_1291:lng)(_1292:oid)(_1293:int)<-(ve_a:bat[:oid,:int]) jump 586
exit (_1291,_1292,_1293);	# 591  (_1291:lng)(_1292:oid)(_1293:int)
    we_a:bat[:oid,:str]  := _1288;	# 592  (we_a:bat[:oid,:str])<-(_1288:bat[:oid,:str])
    _1301 := bat.new(:oid,:int);	# 593 CMDBATnew (_1301:bat[:oid,:int])<-(_240:oid)(_1302:int)
barrier (_1304,_1305,_1306):= bat.newIterator(we_a);	# 594 CHPbunIterator (_1304:lng)(_1305:oid)(_1306:str)<-(we_a:bat[:oid,:str]) jump 600
    _1308 := mtime.monthnum(_1306);	# 595 MTIMEmonth_from_str (_1308:int)<-(_1306:str)
    bat.insert(_1301,_1305,_1308);	# 596 BKCinsert_bun (_1309:void)<-(_1301:bat[:oid,:int])(_1305:oid)(_1308:int)
catch MALexception:str ;	# 597  (MALexception:str) jump 598
exit MALexception:str ;	# 598  (MALexception:str)
    redo (_1304,_1305,_1306):= bat.hasMoreElements(we_a);	# 599 CHPbunHasMoreElements (_1304:lng)(_1305:oid)(_1306:str)<-(we_a:bat[:oid,:str]) jump 595
exit (_1304,_1305,_1306);	# 600  (_1304:lng)(_1305:oid)(_1306:str)
    xe_a:bat[:oid,:int]  := _1301;	# 601  (xe_a:bat[:oid,:int])<-(_1301:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 602 BKCsetColumn (ye_a:void)<-(xe_a:bat[:oid,:int])(_455:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 603 IOprint_val (_456:int)<-(_457:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 604 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 605  (_459:str)
    _1314 := bat.new(:oid,:date);	# 606 CMDBATnew (_1314:bat[:oid,:date])<-(_240:oid)(_378:date)
barrier (_1316,_1317,_1318):= bat.newIterator(date_bat);	# 607 CHPbunIterator (_1316:lng)(_1317:oid)(_1318:date)<-(date_bat:bat[:oid,:date]) jump 613
    _1320 := mtime.addyears(_1318,-100);	# 608 MTIMEdate_addyears (_1320:date)<-(_1318:date)(_462:int)
    bat.insert(_1314,_1317,_1320);	# 609 BKCinsert_bun (_1321:void)<-(_1314:bat[:oid,:date])(_1317:oid)(_1320:date)
catch MALexception:str ;	# 610  (MALexception:str) jump 611
exit MALexception:str ;	# 611  (MALexception:str)
    redo (_1316,_1317,_1318):= bat.hasMoreElements(date_bat);	# 612 CHPbunHasMoreElements (_1316:lng)(_1317:oid)(_1318:date)<-(date_bat:bat[:oid,:date]) jump 608
exit (_1316,_1317,_1318);	# 613  (_1316:lng)(_1317:oid)(_1318:date)
    date_addyears:bat[:oid,:date]  := _1314;	# 614  (date_addyears:bat[:oid,:date])<-(_1314:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 615  (_463:str)
    _1326 := bat.new(:oid,:date);	# 616 CMDBATnew (_1326:bat[:oid,:date])<-(_240:oid)(_378:date)
barrier (_1328,_1329,_1330):= bat.newIterator(date_bat);	# 617 CHPbunIterator (_1328:lng)(_1329:oid)(_1330:date)<-(date_bat:bat[:oid,:date]) jump 623
    _1332 := mtime.addmonths(_1330,1);	# 618 MTIMEdate_addmonths (_1332:date)<-(_1330:date)(_466:int)
    bat.insert(_1326,_1329,_1332);	# 619 BKCinsert_bun (_1333:void)<-(_1326:bat[:oid,:date])(_1329:oid)(_1332:date)
catch MALexception:str ;	# 620  (MALexception:str) jump 621
exit MALexception:str ;	# 621  (MALexception:str)
    redo (_1328,_1329,_1330):= bat.hasMoreElements(date_bat);	# 622 CHPbunHasMoreElements (_1328:lng)(_1329:oid)(_1330:date)<-(date_bat:bat[:oid,:date]) jump 618
exit (_1328,_1329,_1330);	# 623  (_1328:lng)(_1329:oid)(_1330:date)
    date_addmonths:bat[:oid,:date]  := _1326;	# 624  (date_addmonths:bat[:oid,:date])<-(_1326:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 625  (_467:str)
    bat.setColumn(date_bat,"date");	# 626 BKCsetColumn (_468:void)<-(date_bat:bat[:oid,:date])(_469:str)
#io.print(date_bat.bat.setColumn("date"), 	# 627  (_470:str)
    bat.setColumn(date_addyears,"min100y");	# 628 BKCsetColumn (_471:void)<-(date_addyears:bat[:oid,:date])(_472:str)
#      date_addyears.bat.setColumn("min100y"), 	# 629  (_473:str)
    _1338 := bat.new(:oid,:int);	# 630 CMDBATnew (_1338:bat[:oid,:int])<-(_240:oid)(_1339:int)
barrier (_1341,_1342,_1343):= bat.newIterator(date_addyears);	# 631 CHPbunIterator (_1341:lng)(_1342:oid)(_1343:date)<-(date_addyears:bat[:oid,:date]) jump 638
    _1345 := algebra.find(date_bat,_1342);	# 632 ALGfind (_1345:date)<-(date_bat:bat[:oid,:date])(_1342:oid)
    _1347 := mtime.diff(_1343,_1345);	# 633 MTIMEdate_diff (_1347:int)<-(_1343:date)(_1345:date)
    bat.insert(_1338,_1342,_1347);	# 634 BKCinsert_bun (_1348:void)<-(_1338:bat[:oid,:int])(_1342:oid)(_1347:int)
catch MALexception:str ;	# 635  (MALexception:str) jump 636
exit MALexception:str ;	# 636  (MALexception:str)
    redo (_1341,_1342,_1343):= bat.hasMoreElements(date_addyears);	# 637 CHPbunHasMoreElements (_1341:lng)(_1342:oid)(_1343:date)<-(date_addyears:bat[:oid,:date]) jump 632
exit (_1341,_1342,_1343);	# 638  (_1341:lng)(_1342:oid)(_1343:date)
    df_a:bat[:oid,:int]  := _1338;	# 639  (df_a:bat[:oid,:int])<-(_1338:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 640 BKCsetColumn (_476:void)<-(df_a:bat[:oid,:int])(_477:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 641 IOprint_val (_478:int)<-(_479:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 642 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 643  (_481:str)
    bat.setColumn(date_bat,"date");	# 644 BKCsetColumn (_482:void)<-(date_bat:bat[:oid,:date])(_469:str)
#io.print(date_bat.bat.setColumn("date"), 	# 645  (_470:str)
    bat.setColumn(date_addmonths,"plus1m");	# 646 BKCsetColumn (_483:void)<-(date_addmonths:bat[:oid,:date])(_484:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 647  (_485:str)
    _1353 := bat.new(:oid,:int);	# 648 CMDBATnew (_1353:bat[:oid,:int])<-(_240:oid)(_1354:int)
barrier (_1356,_1357,_1358):= bat.newIterator(date_addmonths);	# 649 CHPbunIterator (_1356:lng)(_1357:oid)(_1358:date)<-(date_addmonths:bat[:oid,:date]) jump 656
    _1360 := algebra.find(date_bat,_1357);	# 650 ALGfind (_1360:date)<-(date_bat:bat[:oid,:date])(_1357:oid)
    _1362 := mtime.diff(_1358,_1360);	# 651 MTIMEdate_diff (_1362:int)<-(_1358:date)(_1360:date)
    bat.insert(_1353,_1357,_1362);	# 652 BKCinsert_bun (_1363:void)<-(_1353:bat[:oid,:int])(_1357:oid)(_1362:int)
catch MALexception:str ;	# 653  (MALexception:str) jump 654
exit MALexception:str ;	# 654  (MALexception:str)
    redo (_1356,_1357,_1358):= bat.hasMoreElements(date_addmonths);	# 655 CHPbunHasMoreElements (_1356:lng)(_1357:oid)(_1358:date)<-(date_addmonths:bat[:oid,:date]) jump 650
exit (_1356,_1357,_1358);	# 656  (_1356:lng)(_1357:oid)(_1358:date)
    if_a:bat[:oid,:int]  := _1353;	# 657  (if_a:bat[:oid,:int])<-(_1353:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 658 BKCsetColumn (_487:void)<-(if_a:bat[:oid,:int])(_477:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 659 IOprint_val (_488:int)<-(_489:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 660 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 661  (_491:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 662  (_492:str)
    date_seq := bat.new(:int,:date);	# 663 CMDBATnew (date_seq:bat[:int,:date])<-(_494:int)(_378:date)
#var date_seq := bat.new(int, date); 	# 664  (_495:str)
    i := -375;	# 665  (i:int)<-(_497:int)
#var i := -375; 	# 666  (_498:str)
barrier lf_a := true;	# 667  (lf_a:bit)<-(_500:bit) jump 677
    i := calc.+(i,1);	# 668 CALCbinaryADDintint (i:int)<-(i:int)(_466:int)
    of_a := calc.<(i,375);	# 669 CALCcompLTintint (of_a:bit)<-(i:int)(_502:int)
barrier mf_a := of_a;	# 670  (mf_a:bit)<-(of_a:bit) jump 676
#while ((i :+= 1) < 375) { 	# 671  (_504:str)
    pf_a := mtime.adddays(date_00,i);	# 672 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 673 BKCinsert_bun (_506:void)<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 674  (_507:str)
    redo lf_a;	# 675  (lf_a:bit) jump 668
exit mf_a;	# 676  (mf_a:bit)
exit lf_a;	# 677  (lf_a:bit)
#} 	# 678  (_508:str)
    rf_a := bat.setColumn(date_seq,"date");	# 679 BKCsetColumn (rf_a:void)<-(date_seq:bat[:int,:date])(_510:str)
#io.print(date_seq.bat.setColumn("date"), 	# 680  (_511:str)
    _1368 := bat.new(:int,:int);	# 681 CMDBATnew (_1368:bat[:int,:int])<-(_1369:int)(_1370:int)
barrier (_1372,_1373,_1374):= bat.newIterator(date_seq);	# 682 CHPbunIterator (_1372:lng)(_1373:int)(_1374:date)<-(date_seq:bat[:int,:date]) jump 688
    _1376 := mtime.weekofyear(_1374);	# 683 MTIMEdate_extract_weekofyear (_1376:int)<-(_1374:date)
    bat.insert(_1368,_1373,_1376);	# 684 BKCinsert_bun (_1377:void)<-(_1368:bat[:int,:int])(_1373:int)(_1376:int)
catch MALexception:str ;	# 685  (MALexception:str) jump 686
exit MALexception:str ;	# 686  (MALexception:str)
    redo (_1372,_1373,_1374):= bat.hasMoreElements(date_seq);	# 687 CHPbunHasMoreElements (_1372:lng)(_1373:int)(_1374:date)<-(date_seq:bat[:int,:date]) jump 683
exit (_1372,_1373,_1374);	# 688  (_1372:lng)(_1373:int)(_1374:date)
    sf_a:bat[:int,:int]  := _1368;	# 689  (sf_a:bat[:int,:int])<-(_1368:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 690 BKCsetColumn (tf_a:void)<-(sf_a:bat[:int,:int])(_515:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 691  (_516:str)
    _1382 := bat.new(:int,:int);	# 692 CMDBATnew (_1382:bat[:int,:int])<-(_1383:int)(_1384:int)
barrier (_1386,_1387,_1388):= bat.newIterator(date_seq);	# 693 CHPbunIterator (_1386:lng)(_1387:int)(_1388:date)<-(date_seq:bat[:int,:date]) jump 699
    _1390 := mtime.dayofweek(_1388);	# 694 MTIMEdate_extract_dayofweek (_1390:int)<-(_1388:date)
    bat.insert(_1382,_1387,_1390);	# 695 BKCinsert_bun (_1391:void)<-(_1382:bat[:int,:int])(_1387:int)(_1390:int)
catch MALexception:str ;	# 696  (MALexception:str) jump 697
exit MALexception:str ;	# 697  (MALexception:str)
    redo (_1386,_1387,_1388):= bat.hasMoreElements(date_seq);	# 698 CHPbunHasMoreElements (_1386:lng)(_1387:int)(_1388:date)<-(date_seq:bat[:int,:date]) jump 694
exit (_1386,_1387,_1388);	# 699  (_1386:lng)(_1387:int)(_1388:date)
    uf_a:bat[:int,:int]  := _1382;	# 700  (uf_a:bat[:int,:int])<-(_1382:bat[:int,:int])
    _1396 := bat.new(:int,:str);	# 701 CMDBATnew (_1396:bat[:int,:str])<-(_1397:int)(_1398:str)
barrier (_1400,_1401,_1402):= bat.newIterator(uf_a);	# 702 CHPbunIterator (_1400:lng)(_1401:int)(_1402:int)<-(uf_a:bat[:int,:int]) jump 708
    _1404 := mtime.dayname(_1402);	# 703 MTIMEday_to_str (_1404:str)<-(_1402:int)
    bat.insert(_1396,_1401,_1404);	# 704 BKCinsert_bun (_1405:void)<-(_1396:bat[:int,:str])(_1401:int)(_1404:str)
catch MALexception:str ;	# 705  (MALexception:str) jump 706
exit MALexception:str ;	# 706  (MALexception:str)
    redo (_1400,_1401,_1402):= bat.hasMoreElements(uf_a);	# 707 CHPbunHasMoreElements (_1400:lng)(_1401:int)(_1402:int)<-(uf_a:bat[:int,:int]) jump 703
exit (_1400,_1401,_1402);	# 708  (_1400:lng)(_1401:int)(_1402:int)
    vf_a:bat[:int,:str]  := _1396;	# 709  (vf_a:bat[:int,:str])<-(_1396:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 710 BKCsetColumn (wf_a:void)<-(vf_a:bat[:int,:str])(_522:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 711  (_523:str)
    _1410 := bat.new(:int,:int);	# 712 CMDBATnew (_1410:bat[:int,:int])<-(_1411:int)(_1412:int)
barrier (_1414,_1415,_1416):= bat.newIterator(date_seq);	# 713 CHPbunIterator (_1414:lng)(_1415:int)(_1416:date)<-(date_seq:bat[:int,:date]) jump 719
    _1418 := mtime.dayofweek(_1416);	# 714 MTIMEdate_extract_dayofweek (_1418:int)<-(_1416:date)
    bat.insert(_1410,_1415,_1418);	# 715 BKCinsert_bun (_1419:void)<-(_1410:bat[:int,:int])(_1415:int)(_1418:int)
catch MALexception:str ;	# 716  (MALexception:str) jump 717
exit MALexception:str ;	# 717  (MALexception:str)
    redo (_1414,_1415,_1416):= bat.hasMoreElements(date_seq);	# 718 CHPbunHasMoreElements (_1414:lng)(_1415:int)(_1416:date)<-(date_seq:bat[:int,:date]) jump 714
exit (_1414,_1415,_1416);	# 719  (_1414:lng)(_1415:int)(_1416:date)
    xf_a:bat[:int,:int]  := _1410;	# 720  (xf_a:bat[:int,:int])<-(_1410:bat[:int,:int])
    _1424 := bat.new(:int,:str);	# 721 CMDBATnew (_1424:bat[:int,:str])<-(_1425:int)(_1426:str)
barrier (_1428,_1429,_1430):= bat.newIterator(xf_a);	# 722 CHPbunIterator (_1428:lng)(_1429:int)(_1430:int)<-(xf_a:bat[:int,:int]) jump 728
    _1432 := mtime.dayname(_1430);	# 723 MTIMEday_to_str (_1432:str)<-(_1430:int)
    bat.insert(_1424,_1429,_1432);	# 724 BKCinsert_bun (_1433:void)<-(_1424:bat[:int,:str])(_1429:int)(_1432:str)
catch MALexception:str ;	# 725  (MALexception:str) jump 726
exit MALexception:str ;	# 726  (MALexception:str)
    redo (_1428,_1429,_1430):= bat.hasMoreElements(xf_a);	# 727 CHPbunHasMoreElements (_1428:lng)(_1429:int)(_1430:int)<-(xf_a:bat[:int,:int]) jump 723
exit (_1428,_1429,_1430);	# 728  (_1428:lng)(_1429:int)(_1430:int)
    yf_a:bat[:int,:str]  := _1424;	# 729  (yf_a:bat[:int,:str])<-(_1424:bat[:int,:str])
    _1438 := bat.new(:int,:int);	# 730 CMDBATnew (_1438:bat[:int,:int])<-(_1439:int)(_1440:int)
barrier (_1442,_1443,_1444):= bat.newIterator(yf_a);	# 731 CHPbunIterator (_1442:lng)(_1443:int)(_1444:str)<-(yf_a:bat[:int,:str]) jump 737
    _1446 := mtime.daynum(_1444);	# 732 MTIMEday_from_str (_1446:int)<-(_1444:str)
    bat.insert(_1438,_1443,_1446);	# 733 BKCinsert_bun (_1447:void)<-(_1438:bat[:int,:int])(_1443:int)(_1446:int)
catch MALexception:str ;	# 734  (MALexception:str) jump 735
exit MALexception:str ;	# 735  (MALexception:str)
    redo (_1442,_1443,_1444):= bat.hasMoreElements(yf_a);	# 736 CHPbunHasMoreElements (_1442:lng)(_1443:int)(_1444:str)<-(yf_a:bat[:int,:str]) jump 732
exit (_1442,_1443,_1444);	# 737  (_1442:lng)(_1443:int)(_1444:str)
    ag_a:bat[:int,:int]  := _1438;	# 738  (ag_a:bat[:int,:int])<-(_1438:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 739 BKCsetColumn (bg_a:void)<-(ag_a:bat[:int,:int])(_529:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 740  (_530:str)
    _1452 := bat.new(:int,:int);	# 741 CMDBATnew (_1452:bat[:int,:int])<-(_1453:int)(_1454:int)
barrier (_1456,_1457,_1458):= bat.newIterator(date_seq);	# 742 CHPbunIterator (_1456:lng)(_1457:int)(_1458:date)<-(date_seq:bat[:int,:date]) jump 748
    _1460 := mtime.dayofyear(_1458);	# 743 MTIMEdate_extract_dayofyear (_1460:int)<-(_1458:date)
    bat.insert(_1452,_1457,_1460);	# 744 BKCinsert_bun (_1461:void)<-(_1452:bat[:int,:int])(_1457:int)(_1460:int)
catch MALexception:str ;	# 745  (MALexception:str) jump 746
exit MALexception:str ;	# 746  (MALexception:str)
    redo (_1456,_1457,_1458):= bat.hasMoreElements(date_seq);	# 747 CHPbunHasMoreElements (_1456:lng)(_1457:int)(_1458:date)<-(date_seq:bat[:int,:date]) jump 743
exit (_1456,_1457,_1458);	# 748  (_1456:lng)(_1457:int)(_1458:date)
    cg_a:bat[:int,:int]  := _1452;	# 749  (cg_a:bat[:int,:int])<-(_1452:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 750 BKCsetColumn (dg_a:void)<-(cg_a:bat[:int,:int])(_534:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 751 IOprint_val (_535:int)<-(_536:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 752 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 753  (_538:str)
## test the various ways top create daytimes 	# 754  (_539:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 755 MTIMEdaytime_create (daytime_00:daytime)<-(_541:int)(_542:int)(_542:int)(_543:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 756  (_544:str)
    daytime_01 := mtime.daytime("23:59");	# 757 MTIMEdaytime_fromstr (daytime_01:daytime)<-(_546:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 758  (_547:str)
    daytime_02 := mtime.daytime("00:00");	# 759 MTIMEdaytime_fromstr (daytime_02:daytime)<-(_549:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 760  (_550:str)
    daytime_03 := mtime.daytime("23:59:59");	# 761 MTIMEdaytime_fromstr (daytime_03:daytime)<-(_552:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 762  (_553:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 763 MTIMEdaytime_fromstr (daytime_04:daytime)<-(_555:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 764  (_556:str)
    daytime_05 := mtime.daytime("00:00:00");	# 765 MTIMEdaytime_fromstr (daytime_05:daytime)<-(_558:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 766  (_559:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 767 MTIMEdaytime_fromstr (daytime_06:daytime)<-(_561:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 768  (_562:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 769 MTIMEdaytime_fromstr (daytime_07:daytime)<-(_564:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 770  (_565:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 771 MTIMEdaytime_fromstr (daytime_08:daytime)<-(_567:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 772  (_568:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 773 MTIMEdaytime_fromstr (daytime_09:daytime)<-(_570:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 774  (_571:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 775 MTIMEdaytime_fromstr (daytime_10:daytime)<-(_573:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 776  (_574:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 777 MTIMEdaytime_fromstr (daytime_11:daytime)<-(_576:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 778  (_577:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 779 MTIMEdaytime_fromstr (daytime_12:daytime)<-(_579:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 780  (_580:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 781 MTIMEdaytime_fromstr (daytime_13:daytime)<-(_582:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 782  (_583:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 783 MTIMEdaytime_fromstr (daytime_14:daytime)<-(_585:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 784  (_586:str)
## nil daytimes 	# 785  (_587:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 786 MTIMEdaytime_create (daytime_15:daytime)<-(_589:int)(_590:int)(_590:int)(_591:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 787  (_592:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 788 MTIMEdaytime_create (daytime_16:daytime)<-(_594:int)(_595:int)(_590:int)(_591:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 789  (_596:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 790 MTIMEdaytime_create (daytime_17:daytime)<-(_594:int)(_590:int)(_595:int)(_591:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 791  (_598:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 792 MTIMEdaytime_create (daytime_18:daytime)<-(_594:int)(_590:int)(_595:int)(_600:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 793  (_601:str)
    daytime_19 := mtime.daytime("nil");	# 794 MTIMEdaytime_fromstr (daytime_19:daytime)<-(_603:str)
#var daytime_19 := mtime.daytime("nil"); 	# 795  (_604:str)
    daytime_bat := bat.new(:oid,:daytime);	# 796 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-(_240:oid)(_606:daytime)
#var daytime_bat := bat.new(oid,daytime); 	# 797  (_607:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 798 BKCinsert_bun (_608:void)<-(daytime_bat:bat[:oid,:daytime])(_609:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 799 BKCinsert_bun (_610:void)<-(daytime_bat:bat[:oid,:daytime])(_611:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 800 BKCinsert_bun (_612:void)<-(daytime_bat:bat[:oid,:daytime])(_613:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 801  (_614:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 802 BKCinsert_bun (_615:void)<-(daytime_bat:bat[:oid,:daytime])(_616:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 803 BKCinsert_bun (_617:void)<-(daytime_bat:bat[:oid,:daytime])(_618:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 804 BKCinsert_bun (_619:void)<-(daytime_bat:bat[:oid,:daytime])(_620:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 805  (_621:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 806 BKCinsert_bun (_622:void)<-(daytime_bat:bat[:oid,:daytime])(_623:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 807 BKCinsert_bun (_624:void)<-(daytime_bat:bat[:oid,:daytime])(_625:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 808 BKCinsert_bun (_626:void)<-(daytime_bat:bat[:oid,:daytime])(_627:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 809  (_628:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 810 BKCinsert_bun (_629:void)<-(daytime_bat:bat[:oid,:daytime])(_630:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 811 BKCinsert_bun (_631:void)<-(daytime_bat:bat[:oid,:daytime])(_632:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 812 BKCinsert_bun (_633:void)<-(daytime_bat:bat[:oid,:daytime])(_634:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 813  (_635:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 814 BKCinsert_bun (_636:void)<-(daytime_bat:bat[:oid,:daytime])(_637:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 815 BKCinsert_bun (_638:void)<-(daytime_bat:bat[:oid,:daytime])(_639:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 816 BKCinsert_bun (_640:void)<-(daytime_bat:bat[:oid,:daytime])(_641:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 817  (_642:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 818 BKCinsert_bun (_643:void)<-(daytime_bat:bat[:oid,:daytime])(_644:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 819 BKCinsert_bun (_645:void)<-(daytime_bat:bat[:oid,:daytime])(_646:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 820 BKCinsert_bun (_647:void)<-(daytime_bat:bat[:oid,:daytime])(_648:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 821  (_649:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 822 BKCinsert_bun (_650:void)<-(daytime_bat:bat[:oid,:daytime])(_651:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 823 BKCinsert_bun (_652:void)<-(daytime_bat:bat[:oid,:daytime])(_653:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 824  (_654:str)
    bat.setColumn(daytime_bat,"daytime");	# 825 BKCsetColumn (_655:void)<-(daytime_bat:bat[:oid,:daytime])(_656:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 826  (_657:str)
    _1466 := bat.new(:oid,:int);	# 827 CMDBATnew (_1466:bat[:oid,:int])<-(_240:oid)(_1467:int)
barrier (_1469,_1470,_1471):= bat.newIterator(daytime_bat);	# 828 CHPbunIterator (_1469:lng)(_1470:oid)(_1471:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 834
    _1473 := mtime.hours(_1471);	# 829 MTIMEdaytime_extract_hours (_1473:int)<-(_1471:daytime)
    bat.insert(_1466,_1470,_1473);	# 830 BKCinsert_bun (_1474:void)<-(_1466:bat[:oid,:int])(_1470:oid)(_1473:int)
catch MALexception:str ;	# 831  (MALexception:str) jump 832
exit MALexception:str ;	# 832  (MALexception:str)
    redo (_1469,_1470,_1471):= bat.hasMoreElements(daytime_bat);	# 833 CHPbunHasMoreElements (_1469:lng)(_1470:oid)(_1471:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 829
exit (_1469,_1470,_1471);	# 834  (_1469:lng)(_1470:oid)(_1471:daytime)
    bh_a:bat[:oid,:int]  := _1466;	# 835  (bh_a:bat[:oid,:int])<-(_1466:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 836 BKCsetColumn (_660:void)<-(bh_a:bat[:oid,:int])(_661:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 837  (_662:str)
    _1479 := bat.new(:oid,:int);	# 838 CMDBATnew (_1479:bat[:oid,:int])<-(_240:oid)(_1480:int)
barrier (_1482,_1483,_1484):= bat.newIterator(daytime_bat);	# 839 CHPbunIterator (_1482:lng)(_1483:oid)(_1484:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 845
    _1486 := mtime.minutes(_1484);	# 840 MTIMEdaytime_extract_minutes (_1486:int)<-(_1484:daytime)
    bat.insert(_1479,_1483,_1486);	# 841 BKCinsert_bun (_1487:void)<-(_1479:bat[:oid,:int])(_1483:oid)(_1486:int)
catch MALexception:str ;	# 842  (MALexception:str) jump 843
exit MALexception:str ;	# 843  (MALexception:str)
    redo (_1482,_1483,_1484):= bat.hasMoreElements(daytime_bat);	# 844 CHPbunHasMoreElements (_1482:lng)(_1483:oid)(_1484:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 840
exit (_1482,_1483,_1484);	# 845  (_1482:lng)(_1483:oid)(_1484:daytime)
    dh_a:bat[:oid,:int]  := _1479;	# 846  (dh_a:bat[:oid,:int])<-(_1479:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 847 BKCsetColumn (_665:void)<-(dh_a:bat[:oid,:int])(_666:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 848  (_667:str)
    _1492 := bat.new(:oid,:int);	# 849 CMDBATnew (_1492:bat[:oid,:int])<-(_240:oid)(_1493:int)
barrier (_1495,_1496,_1497):= bat.newIterator(daytime_bat);	# 850 CHPbunIterator (_1495:lng)(_1496:oid)(_1497:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 856
    _1499 := mtime.seconds(_1497);	# 851 MTIMEdaytime_extract_seconds (_1499:int)<-(_1497:daytime)
    bat.insert(_1492,_1496,_1499);	# 852 BKCinsert_bun (_1500:void)<-(_1492:bat[:oid,:int])(_1496:oid)(_1499:int)
catch MALexception:str ;	# 853  (MALexception:str) jump 854
exit MALexception:str ;	# 854  (MALexception:str)
    redo (_1495,_1496,_1497):= bat.hasMoreElements(daytime_bat);	# 855 CHPbunHasMoreElements (_1495:lng)(_1496:oid)(_1497:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 851
exit (_1495,_1496,_1497);	# 856  (_1495:lng)(_1496:oid)(_1497:daytime)
    fh_a:bat[:oid,:int]  := _1492;	# 857  (fh_a:bat[:oid,:int])<-(_1492:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 858 BKCsetColumn (_670:void)<-(fh_a:bat[:oid,:int])(_671:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 859  (_672:str)
    _1505 := bat.new(:oid,:int);	# 860 CMDBATnew (_1505:bat[:oid,:int])<-(_240:oid)(_1506:int)
barrier (_1508,_1509,_1510):= bat.newIterator(daytime_bat);	# 861 CHPbunIterator (_1508:lng)(_1509:oid)(_1510:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 867
    _1512 := mtime.milliseconds(_1510);	# 862 MTIMEdaytime_extract_milliseconds (_1512:int)<-(_1510:daytime)
    bat.insert(_1505,_1509,_1512);	# 863 BKCinsert_bun (_1513:void)<-(_1505:bat[:oid,:int])(_1509:oid)(_1512:int)
catch MALexception:str ;	# 864  (MALexception:str) jump 865
exit MALexception:str ;	# 865  (MALexception:str)
    redo (_1508,_1509,_1510):= bat.hasMoreElements(daytime_bat);	# 866 CHPbunHasMoreElements (_1508:lng)(_1509:oid)(_1510:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 862
exit (_1508,_1509,_1510);	# 867  (_1508:lng)(_1509:oid)(_1510:daytime)
    hh_a:bat[:oid,:int]  := _1505;	# 868  (hh_a:bat[:oid,:int])<-(_1505:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 869 BKCsetColumn (_675:void)<-(hh_a:bat[:oid,:int])(_676:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 870 IOprint_val (_677:int)<-(_678:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 871 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 872  (_680:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 873  (_681:str)
# Skipped due to coercion implication 	# 874  (_682:str)
    _1518 := bat.new(:oid,:timestamp);	# 875 CMDBATnew (_1518:bat[:oid,:timestamp])<-(_240:oid)(_1519:timestamp)
barrier (_1521,_1522,_1523):= bat.newIterator(date_bat);	# 876 CHPbunIterator (_1521:lng)(_1522:oid)(_1523:date)<-(date_bat:bat[:oid,:date]) jump 884
    _1525 := algebra.find(daytime_bat,_1522);	# 877 ALGfind (_1525:daytime)<-(daytime_bat:bat[:oid,:daytime])(_1522:oid)
    _1527 := algebra.find(tzone_bat,_1522);	# 878 ALGfind (_1527:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1522:oid)
    _1529 := mtime.timestamp(_1523,_1525,_1527);	# 879 MTIMEtimestamp_create (_1529:timestamp)<-(_1523:date)(_1525:daytime)(_1527:timezone)
    bat.insert(_1518,_1522,_1529);	# 880 BKCinsert_bun (_1530:void)<-(_1518:bat[:oid,:timestamp])(_1522:oid)(_1529:timestamp)
catch MALexception:str ;	# 881  (MALexception:str) jump 882
exit MALexception:str ;	# 882  (MALexception:str)
    redo (_1521,_1522,_1523):= bat.hasMoreElements(date_bat);	# 883 CHPbunHasMoreElements (_1521:lng)(_1522:oid)(_1523:date)<-(date_bat:bat[:oid,:date]) jump 877
exit (_1521,_1522,_1523);	# 884  (_1521:lng)(_1522:oid)(_1523:date)
    kh_a:bat[:oid,:timestamp]  := _1518;	# 885  (kh_a:bat[:oid,:timestamp])<-(_1518:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 886  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 887 BKCsetWriteMode (_686:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 888  (_687:str)
## KILL 	# 889  (_688:str)
## var timestamp_now := timestamp(epoch()); 	# 890  (_689:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 891  (_690:str)
## test the timestamp operations 	# 892  (_691:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 893 BKCsetColumn (_692:void)<-(timestamp_bat:bat[:oid,:timestamp])(_693:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 894  (_694:str)
    _1535 := bat.new(:oid,:date);	# 895 CMDBATnew (_1535:bat[:oid,:date])<-(_240:oid)(_378:date)
barrier (_1537,_1538,_1539):= bat.newIterator(timestamp_bat);	# 896 CHPbunIterator (_1537:lng)(_1538:oid)(_1539:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 903
    _1541 := algebra.find(tzone_bat,_1538);	# 897 ALGfind (_1541:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1538:oid)
    _1543 := mtime.date(_1539,_1541);	# 898 MTIMEtimestamp_extract_date (_1543:date)<-(_1539:timestamp)(_1541:timezone)
    bat.insert(_1535,_1538,_1543);	# 899 BKCinsert_bun (_1544:void)<-(_1535:bat[:oid,:date])(_1538:oid)(_1543:date)
catch MALexception:str ;	# 900  (MALexception:str) jump 901
exit MALexception:str ;	# 901  (MALexception:str)
    redo (_1537,_1538,_1539):= bat.hasMoreElements(timestamp_bat);	# 902 CHPbunHasMoreElements (_1537:lng)(_1538:oid)(_1539:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 897
exit (_1537,_1538,_1539);	# 903  (_1537:lng)(_1538:oid)(_1539:timestamp)
    mh_a:bat[:oid,:date]  := _1535;	# 904  (mh_a:bat[:oid,:date])<-(_1535:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 905 BKCsetColumn (_697:void)<-(mh_a:bat[:oid,:date])(_698:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 906  (_699:str)
    _1549 := bat.new(:oid,:daytime);	# 907 CMDBATnew (_1549:bat[:oid,:daytime])<-(_240:oid)(_606:daytime)
barrier (_1551,_1552,_1553):= bat.newIterator(timestamp_bat);	# 908 CHPbunIterator (_1551:lng)(_1552:oid)(_1553:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 915
    _1555 := algebra.find(tzone_bat,_1552);	# 909 ALGfind (_1555:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1552:oid)
    _1557 := mtime.daytime(_1553,_1555);	# 910 MTIMEtimestamp_extract_daytime (_1557:daytime)<-(_1553:timestamp)(_1555:timezone)
    bat.insert(_1549,_1552,_1557);	# 911 BKCinsert_bun (_1558:void)<-(_1549:bat[:oid,:daytime])(_1552:oid)(_1557:daytime)
catch MALexception:str ;	# 912  (MALexception:str) jump 913
exit MALexception:str ;	# 913  (MALexception:str)
    redo (_1551,_1552,_1553):= bat.hasMoreElements(timestamp_bat);	# 914 CHPbunHasMoreElements (_1551:lng)(_1552:oid)(_1553:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 909
exit (_1551,_1552,_1553);	# 915  (_1551:lng)(_1552:oid)(_1553:timestamp)
    oh_a:bat[:oid,:daytime]  := _1549;	# 916  (oh_a:bat[:oid,:daytime])<-(_1549:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 917 BKCsetColumn (_702:void)<-(oh_a:bat[:oid,:daytime])(_703:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 918 IOprint_val (_704:int)<-(_705:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 919 IOtable (_706:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 920  (_707:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 921 BKCsetColumn (rh_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_693:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 922  (_694:str)
    timezones:bat[:str,:timezone]  := bbp.bind("timezones");	# 923 CMDbbpbind (timezones:bat[:str,:timezone])<-(_710:str)
    io.print("print(timezones)");	# 924 IOprint_val (_711:int)<-(_712:str)
    io.print(timezones);	# 925 IOprint_val (_713:int)<-(timezones:bat[:str,:timezone])
    sh_a:timezone  := algebra.find(timezones,"Wake Island");	# 926 ALGfind (sh_a:timezone)<-(timezones:bat[:str,:timezone])(_715:str)
    _1563 := bat.new(:oid,:date);	# 927 CMDBATnew (_1563:bat[:oid,:date])<-(_240:oid)(_378:date)
barrier (_1565,_1566,_1567):= bat.newIterator(timestamp_bat);	# 928 CHPbunIterator (_1565:lng)(_1566:oid)(_1567:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 934
    _1569 := mtime.date(_1567,sh_a);	# 929 MTIMEtimestamp_extract_date (_1569:date)<-(_1567:timestamp)(sh_a:timezone)
    bat.insert(_1563,_1566,_1569);	# 930 BKCinsert_bun (_1570:void)<-(_1563:bat[:oid,:date])(_1566:oid)(_1569:date)
catch MALexception:str ;	# 931  (MALexception:str) jump 932
exit MALexception:str ;	# 932  (MALexception:str)
    redo (_1565,_1566,_1567):= bat.hasMoreElements(timestamp_bat);	# 933 CHPbunHasMoreElements (_1565:lng)(_1566:oid)(_1567:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 929
exit (_1565,_1566,_1567);	# 934  (_1565:lng)(_1566:oid)(_1567:timestamp)
    th_a:bat[:oid,:date]  := _1563;	# 935  (th_a:bat[:oid,:date])<-(_1563:bat[:oid,:date])
    bat.setColumn(th_a,"Wake Island");	# 936 BKCsetColumn (_717:void)<-(th_a:bat[:oid,:date])(_715:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 937  (_718:str)
    vh_a:timezone  := algebra.find(timezones,"Wake Island");	# 938 ALGfind (vh_a:timezone)<-(timezones:bat[:str,:timezone])(_715:str)
    _1575 := bat.new(:oid,:daytime);	# 939 CMDBATnew (_1575:bat[:oid,:daytime])<-(_240:oid)(_606:daytime)
barrier (_1577,_1578,_1579):= bat.newIterator(timestamp_bat);	# 940 CHPbunIterator (_1577:lng)(_1578:oid)(_1579:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 946
    _1581 := mtime.daytime(_1579,vh_a);	# 941 MTIMEtimestamp_extract_daytime (_1581:daytime)<-(_1579:timestamp)(vh_a:timezone)
    bat.insert(_1575,_1578,_1581);	# 942 BKCinsert_bun (_1582:void)<-(_1575:bat[:oid,:daytime])(_1578:oid)(_1581:daytime)
catch MALexception:str ;	# 943  (MALexception:str) jump 944
exit MALexception:str ;	# 944  (MALexception:str)
    redo (_1577,_1578,_1579):= bat.hasMoreElements(timestamp_bat);	# 945 CHPbunHasMoreElements (_1577:lng)(_1578:oid)(_1579:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 941
exit (_1577,_1578,_1579);	# 946  (_1577:lng)(_1578:oid)(_1579:timestamp)
    wh_a:bat[:oid,:daytime]  := _1575;	# 947  (wh_a:bat[:oid,:daytime])<-(_1575:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 948  (_721:str)
    xh_a:timezone  := algebra.find(timezones,"American Samoa");	# 949 ALGfind (xh_a:timezone)<-(timezones:bat[:str,:timezone])(_723:str)
    _1587 := bat.new(:oid,:date);	# 950 CMDBATnew (_1587:bat[:oid,:date])<-(_240:oid)(_378:date)
barrier (_1589,_1590,_1591):= bat.newIterator(timestamp_bat);	# 951 CHPbunIterator (_1589:lng)(_1590:oid)(_1591:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 957
    _1593 := mtime.date(_1591,xh_a);	# 952 MTIMEtimestamp_extract_date (_1593:date)<-(_1591:timestamp)(xh_a:timezone)
    bat.insert(_1587,_1590,_1593);	# 953 BKCinsert_bun (_1594:void)<-(_1587:bat[:oid,:date])(_1590:oid)(_1593:date)
catch MALexception:str ;	# 954  (MALexception:str) jump 955
exit MALexception:str ;	# 955  (MALexception:str)
    redo (_1589,_1590,_1591):= bat.hasMoreElements(timestamp_bat);	# 956 CHPbunHasMoreElements (_1589:lng)(_1590:oid)(_1591:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 952
exit (_1589,_1590,_1591);	# 957  (_1589:lng)(_1590:oid)(_1591:timestamp)
    yh_a:bat[:oid,:date]  := _1587;	# 958  (yh_a:bat[:oid,:date])<-(_1587:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 959 BKCsetColumn (ai_a:void)<-(yh_a:bat[:oid,:date])(_723:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 960  (_726:str)
    bi_a:timezone  := algebra.find(timezones,"American Samoa");	# 961 ALGfind (bi_a:timezone)<-(timezones:bat[:str,:timezone])(_723:str)
    _1599 := bat.new(:oid,:daytime);	# 962 CMDBATnew (_1599:bat[:oid,:daytime])<-(_240:oid)(_606:daytime)
barrier (_1601,_1602,_1603):= bat.newIterator(timestamp_bat);	# 963 CHPbunIterator (_1601:lng)(_1602:oid)(_1603:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 969
    _1605 := mtime.daytime(_1603,bi_a);	# 964 MTIMEtimestamp_extract_daytime (_1605:daytime)<-(_1603:timestamp)(bi_a:timezone)
    bat.insert(_1599,_1602,_1605);	# 965 BKCinsert_bun (_1606:void)<-(_1599:bat[:oid,:daytime])(_1602:oid)(_1605:daytime)
catch MALexception:str ;	# 966  (MALexception:str) jump 967
exit MALexception:str ;	# 967  (MALexception:str)
    redo (_1601,_1602,_1603):= bat.hasMoreElements(timestamp_bat);	# 968 CHPbunHasMoreElements (_1601:lng)(_1602:oid)(_1603:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 964
exit (_1601,_1602,_1603);	# 969  (_1601:lng)(_1602:oid)(_1603:timestamp)
    ci_a:bat[:oid,:daytime]  := _1599;	# 970  (ci_a:bat[:oid,:daytime])<-(_1599:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 971 IOprint_val (_729:int)<-(_730:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 972 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 973  (_732:str)
    ei_a := calc.*(60,1000);	# 974 CALCbinaryMULintint (ei_a:int)<-(_734:int)(_735:int)
    fi_a := calc.*(60,ei_a);	# 975 CALCbinaryMULintint (fi_a:int)<-(_734:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 976 CALCbinaryMULintint (gi_a:int)<-(_738:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 977 CALCint2lng (hi_a:lng)<-(gi_a:int)
    _1611 := bat.new(:oid,:timestamp);	# 978 CMDBATnew (_1611:bat[:oid,:timestamp])<-(_240:oid)(_1519:timestamp)
barrier (_1613,_1614,_1615):= bat.newIterator(timestamp_bat);	# 979 CHPbunIterator (_1613:lng)(_1614:oid)(_1615:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 985
    _1617 := mtime.add(_1615,hi_a);	# 980 MTIMEtimestamp_add (_1617:timestamp)<-(_1615:timestamp)(hi_a:lng)
    bat.insert(_1611,_1614,_1617);	# 981 BKCinsert_bun (_1618:void)<-(_1611:bat[:oid,:timestamp])(_1614:oid)(_1617:timestamp)
catch MALexception:str ;	# 982  (MALexception:str) jump 983
exit MALexception:str ;	# 983  (MALexception:str)
    redo (_1613,_1614,_1615):= bat.hasMoreElements(timestamp_bat);	# 984 CHPbunHasMoreElements (_1613:lng)(_1614:oid)(_1615:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 980
exit (_1613,_1614,_1615);	# 985  (_1613:lng)(_1614:oid)(_1615:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := _1611;	# 986  (timestamp_plus:bat[:oid,:timestamp])<-(_1611:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 987  (_742:str)
    ii_a := calc.*(-60,1000);	# 988 CALCbinaryMULintint (ii_a:int)<-(_744:int)(_735:int)
    ji_a := calc.lng(ii_a);	# 989 CALCint2lng (ji_a:lng)<-(ii_a:int)
    _1623 := bat.new(:oid,:timestamp);	# 990 CMDBATnew (_1623:bat[:oid,:timestamp])<-(_240:oid)(_1519:timestamp)
barrier (_1625,_1626,_1627):= bat.newIterator(timestamp_bat);	# 991 CHPbunIterator (_1625:lng)(_1626:oid)(_1627:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 997
    _1629 := mtime.add(_1627,ji_a);	# 992 MTIMEtimestamp_add (_1629:timestamp)<-(_1627:timestamp)(ji_a:lng)
    bat.insert(_1623,_1626,_1629);	# 993 BKCinsert_bun (_1630:void)<-(_1623:bat[:oid,:timestamp])(_1626:oid)(_1629:timestamp)
catch MALexception:str ;	# 994  (MALexception:str) jump 995
exit MALexception:str ;	# 995  (MALexception:str)
    redo (_1625,_1626,_1627):= bat.hasMoreElements(timestamp_bat);	# 996 CHPbunHasMoreElements (_1625:lng)(_1626:oid)(_1627:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 992
exit (_1625,_1626,_1627);	# 997  (_1625:lng)(_1626:oid)(_1627:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := _1623;	# 998  (timestamp_minus:bat[:oid,:timestamp])<-(_1623:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 999  (_747:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1000 BKCsetColumn (ki_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_749:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1001  (_750:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1002 BKCsetColumn (li_a:void)<-(timestamp_plus:bat[:oid,:timestamp])(_752:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1003  (_753:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1004 BKCsetColumn (mi_a:void)<-(timestamp_minus:bat[:oid,:timestamp])(_755:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1005  (_756:str)
    _1635 := bat.new(:oid,:lng);	# 1006 CMDBATnew (_1635:bat[:oid,:lng])<-(_240:oid)(_1636:lng)
barrier (_1638,_1639,_1640):= bat.newIterator(timestamp_plus);	# 1007 CHPbunIterator (_1638:lng)(_1639:oid)(_1640:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1014
    _1642 := algebra.find(timestamp_minus,_1639);	# 1008 ALGfind (_1642:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])(_1639:oid)
    _1644 := mtime.diff(_1640,_1642);	# 1009 MTIMEtimestamp_diff (_1644:lng)<-(_1640:timestamp)(_1642:timestamp)
    bat.insert(_1635,_1639,_1644);	# 1010 BKCinsert_bun (_1645:void)<-(_1635:bat[:oid,:lng])(_1639:oid)(_1644:lng)
catch MALexception:str ;	# 1011  (MALexception:str) jump 1012
exit MALexception:str ;	# 1012  (MALexception:str)
    redo (_1638,_1639,_1640):= bat.hasMoreElements(timestamp_plus);	# 1013 CHPbunHasMoreElements (_1638:lng)(_1639:oid)(_1640:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1008
exit (_1638,_1639,_1640);	# 1014  (_1638:lng)(_1639:oid)(_1640:timestamp)
    ni_a:bat[:oid,:lng]  := _1635;	# 1015  (ni_a:bat[:oid,:lng])<-(_1635:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1016 CALCbinaryMULintint (oi_a:int)<-(_734:int)(_735:int)
    pi_a := calc.*(60,oi_a);	# 1017 CALCbinaryMULintint (pi_a:int)<-(_734:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1018 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1019 CMDbatDIVcst_lng_lng_lng (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1020 BKCsetColumn (si_a:void)<-(ri_a:bat[:oid,:lng])(_764:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1021 IOprint_val (_765:int)<-(_766:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1022 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1023  (_768:str)
    ui_a:timezone  := algebra.find(timezones,"West/Europe");	# 1024 ALGfind (ui_a:timezone)<-(timezones:bat[:str,:timezone])(_770:str)
    _1650 := bat.new(:int,:timestamp);	# 1025 CMDBATnew (_1650:bat[:int,:timestamp])<-(_1651:int)(_1519:timestamp)
barrier (_1653,_1654,_1655):= bat.newIterator(date_seq);	# 1026 CHPbunIterator (_1653:lng)(_1654:int)(_1655:date)<-(date_seq:bat[:int,:date]) jump 1032
    _1657 := mtime.timestamp(_1655,daytime_00,ui_a);	# 1027 MTIMEtimestamp_create (_1657:timestamp)<-(_1655:date)(daytime_00:daytime)(ui_a:timezone)
    bat.insert(_1650,_1654,_1657);	# 1028 BKCinsert_bun (_1658:void)<-(_1650:bat[:int,:timestamp])(_1654:int)(_1657:timestamp)
catch MALexception:str ;	# 1029  (MALexception:str) jump 1030
exit MALexception:str ;	# 1030  (MALexception:str)
    redo (_1653,_1654,_1655):= bat.hasMoreElements(date_seq);	# 1031 CHPbunHasMoreElements (_1653:lng)(_1654:int)(_1655:date)<-(date_seq:bat[:int,:date]) jump 1027
exit (_1653,_1654,_1655);	# 1032  (_1653:lng)(_1654:int)(_1655:date)
    timestamp_eur:bat[:int,:timestamp]  := _1650;	# 1033  (timestamp_eur:bat[:int,:timestamp])<-(_1650:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1034  (_773:str)
    vi_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1035 ALGfind (vi_a:timezone)<-(timezones:bat[:str,:timezone])(_775:str)
    _1663 := bat.new(:int,:timestamp);	# 1036 CMDBATnew (_1663:bat[:int,:timestamp])<-(_1664:int)(_1519:timestamp)
barrier (_1666,_1667,_1668):= bat.newIterator(date_seq);	# 1037 CHPbunIterator (_1666:lng)(_1667:int)(_1668:date)<-(date_seq:bat[:int,:date]) jump 1043
    _1670 := mtime.timestamp(_1668,daytime_00,vi_a);	# 1038 MTIMEtimestamp_create (_1670:timestamp)<-(_1668:date)(daytime_00:daytime)(vi_a:timezone)
    bat.insert(_1663,_1667,_1670);	# 1039 BKCinsert_bun (_1671:void)<-(_1663:bat[:int,:timestamp])(_1667:int)(_1670:timestamp)
catch MALexception:str ;	# 1040  (MALexception:str) jump 1041
exit MALexception:str ;	# 1041  (MALexception:str)
    redo (_1666,_1667,_1668):= bat.hasMoreElements(date_seq);	# 1042 CHPbunHasMoreElements (_1666:lng)(_1667:int)(_1668:date)<-(date_seq:bat[:int,:date]) jump 1038
exit (_1666,_1667,_1668);	# 1043  (_1666:lng)(_1667:int)(_1668:date)
    timestamp_bra:bat[:int,:timestamp]  := _1663;	# 1044  (timestamp_bra:bat[:int,:timestamp])<-(_1663:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1045  (_777:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1046 BKCsetColumn (wi_a:void)<-(date_seq:bat[:int,:date])(_779:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1047  (_780:str)
    _1676 := bat.new(:int,:int);	# 1048 CMDBATnew (_1676:bat[:int,:int])<-(_1677:int)(_1678:int)
barrier (_1680,_1681,_1682):= bat.newIterator(date_seq);	# 1049 CHPbunIterator (_1680:lng)(_1681:int)(_1682:date)<-(date_seq:bat[:int,:date]) jump 1055
    _1684 := mtime.dayofweek(_1682);	# 1050 MTIMEdate_extract_dayofweek (_1684:int)<-(_1682:date)
    bat.insert(_1676,_1681,_1684);	# 1051 BKCinsert_bun (_1685:void)<-(_1676:bat[:int,:int])(_1681:int)(_1684:int)
catch MALexception:str ;	# 1052  (MALexception:str) jump 1053
exit MALexception:str ;	# 1053  (MALexception:str)
    redo (_1680,_1681,_1682):= bat.hasMoreElements(date_seq);	# 1054 CHPbunHasMoreElements (_1680:lng)(_1681:int)(_1682:date)<-(date_seq:bat[:int,:date]) jump 1050
exit (_1680,_1681,_1682);	# 1055  (_1680:lng)(_1681:int)(_1682:date)
    xi_a:bat[:int,:int]  := _1676;	# 1056  (xi_a:bat[:int,:int])<-(_1676:bat[:int,:int])
    _1690 := bat.new(:int,:str);	# 1057 CMDBATnew (_1690:bat[:int,:str])<-(_1691:int)(_1692:str)
barrier (_1694,_1695,_1696):= bat.newIterator(xi_a);	# 1058 CHPbunIterator (_1694:lng)(_1695:int)(_1696:int)<-(xi_a:bat[:int,:int]) jump 1064
    _1698 := mtime.dayname(_1696);	# 1059 MTIMEday_to_str (_1698:str)<-(_1696:int)
    bat.insert(_1690,_1695,_1698);	# 1060 BKCinsert_bun (_1699:void)<-(_1690:bat[:int,:str])(_1695:int)(_1698:str)
catch MALexception:str ;	# 1061  (MALexception:str) jump 1062
exit MALexception:str ;	# 1062  (MALexception:str)
    redo (_1694,_1695,_1696):= bat.hasMoreElements(xi_a);	# 1063 CHPbunHasMoreElements (_1694:lng)(_1695:int)(_1696:int)<-(xi_a:bat[:int,:int]) jump 1059
exit (_1694,_1695,_1696);	# 1064  (_1694:lng)(_1695:int)(_1696:int)
    yi_a:bat[:int,:str]  := _1690;	# 1065  (yi_a:bat[:int,:str])<-(_1690:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1066 BKCsetColumn (aj_a:void)<-(yi_a:bat[:int,:str])(_786:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1067  (_787:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1068 BKCsetColumn (bj_a:void)<-(timestamp_eur:bat[:int,:timestamp])(_770:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1069  (_789:str)
    cj_a:timezone  := algebra.find(timezones,"West/Europe");	# 1070 ALGfind (cj_a:timezone)<-(timezones:bat[:str,:timezone])(_770:str)
    _1704 := bat.new(:int,:bit);	# 1071 CMDBATnew (_1704:bat[:int,:bit])<-(_1705:int)(_1706:bit)
barrier (_1708,_1709,_1710):= bat.newIterator(timestamp_eur);	# 1072 CHPbunIterator (_1708:lng)(_1709:int)(_1710:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1078
    _1712 := mtime.dst(_1710,cj_a);	# 1073 MTIMEtimestamp_inside_dst (_1712:bit)<-(_1710:timestamp)(cj_a:timezone)
    bat.insert(_1704,_1709,_1712);	# 1074 BKCinsert_bun (_1713:void)<-(_1704:bat[:int,:bit])(_1709:int)(_1712:bit)
catch MALexception:str ;	# 1075  (MALexception:str) jump 1076
exit MALexception:str ;	# 1076  (MALexception:str)
    redo (_1708,_1709,_1710):= bat.hasMoreElements(timestamp_eur);	# 1077 CHPbunHasMoreElements (_1708:lng)(_1709:int)(_1710:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1073
exit (_1708,_1709,_1710);	# 1078  (_1708:lng)(_1709:int)(_1710:timestamp)
    dj_a:bat[:int,:bit]  := _1704;	# 1079  (dj_a:bat[:int,:bit])<-(_1704:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1080 BKCsetColumn (ej_a:void)<-(dj_a:bat[:int,:bit])(_794:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1081  (_795:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1082 BKCsetColumn (fj_a:void)<-(timestamp_bra:bat[:int,:timestamp])(_775:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1083  (_797:str)
    gj_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1084 ALGfind (gj_a:timezone)<-(timezones:bat[:str,:timezone])(_775:str)
    _1718 := bat.new(:int,:bit);	# 1085 CMDBATnew (_1718:bat[:int,:bit])<-(_1719:int)(_1720:bit)
barrier (_1722,_1723,_1724):= bat.newIterator(timestamp_bra);	# 1086 CHPbunIterator (_1722:lng)(_1723:int)(_1724:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1092
    _1726 := mtime.dst(_1724,gj_a);	# 1087 MTIMEtimestamp_inside_dst (_1726:bit)<-(_1724:timestamp)(gj_a:timezone)
    bat.insert(_1718,_1723,_1726);	# 1088 BKCinsert_bun (_1727:void)<-(_1718:bat[:int,:bit])(_1723:int)(_1726:bit)
catch MALexception:str ;	# 1089  (MALexception:str) jump 1090
exit MALexception:str ;	# 1090  (MALexception:str)
    redo (_1722,_1723,_1724):= bat.hasMoreElements(timestamp_bra);	# 1091 CHPbunHasMoreElements (_1722:lng)(_1723:int)(_1724:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1087
exit (_1722,_1723,_1724);	# 1092  (_1722:lng)(_1723:int)(_1724:timestamp)
    hj_a:bat[:int,:bit]  := _1718;	# 1093  (hj_a:bat[:int,:bit])<-(_1718:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1094 BKCsetColumn (ij_a:void)<-(hj_a:bat[:int,:bit])(_794:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1095 IOprint_val (_801:int)<-(_802:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1096 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1097  (_804:str)
#quit; 	# 1098  (_805:str)
end main;	# 1099  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "tzone_bat" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

