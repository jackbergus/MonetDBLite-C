stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;	# 0  (main:void)
# Mil compiler Version 1.0) 	# 1  (_1:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  (_2:str)
# Predefined code segment 	# 3  (_3:str)
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 4  (_4:str)
#module(monettime,alarm); 	# 5  (_5:str)
    lzone := mtime.timezone("GMT+1");	# 6 MTIMEtzone_fromstr (lzone:timezone)<-(_7:str)
    mtime.timezone_local(lzone);	# 7 MTIMEtzone_set_local (_8:void)<-(lzone:timezone)
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 8  (_9:str)
## test the various ways to create rules 	# 9  (_10:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 10 MTIMErule_fromstr (rule_jan:zrule)<-(_12:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 11  (_13:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 12 MTIMErule_fromstr (rule_mar:zrule)<-(_15:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 13  (_16:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 14 MTIMErule_fromstr (rule_apr:zrule)<-(_18:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 15  (_19:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 16 MTIMErule_fromstr (rule_may:zrule)<-(_21:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 17  (_22:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 18 MTIMErule_fromstr (rule_jun:zrule)<-(_24:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 19  (_25:str)
    rule_jul := mtime.rule(7,1,1,75);	# 20 MTIMErule_create (rule_jul:zrule)<-(_27:int)(_28:int)(_28:int)(_29:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 21  (_30:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 22 MTIMErule_create (rule_aug:zrule)<-(_32:int)(_33:int)(_28:int)(_29:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 23  (_34:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 24 MTIMErule_create (rule_sep:zrule)<-(_36:int)(_37:int)(_38:int)(_29:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 25  (_39:str)
    rule_oct := mtime.rule(10,31,0,75);	# 26 MTIMErule_create (rule_oct:zrule)<-(_41:int)(_42:int)(_43:int)(_29:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 27  (_44:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 28 MTIMErule_create (rule_nov:zrule)<-(_46:int)(_37:int)(_47:int)(_29:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 29  (_48:str)
## nil rules 	# 30  (_49:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 31 MTIMErule_create (rule_dec:zrule)<-(_51:int)(_52:int)(_43:int)(_29:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 32  (_53:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 33 MTIMErule_fromstr (rule_feb:zrule)<-(_55:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 34  (_56:str)
#  	# 35  (_57:str)
    rule_bat := bat.new(:str,:zrule,10);	# 36 CMDBATnewint (rule_bat:bat[:str,:zrule])<-(_59:str)(_60:zrule)(_41:int)
#var rule_bat := bat.new(str,rule,10); 	# 37  (_61:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 38 BKCinsert_bun (_62:void)<-(rule_bat:bat[:str,:zrule])(_63:str)(rule_jan:zrule)
    bat.insert(rule_bat,"feb",rule_feb);	# 39 BKCinsert_bun (_64:void)<-(rule_bat:bat[:str,:zrule])(_65:str)(rule_feb:zrule)
    bat.insert(rule_bat,"mar",rule_mar);	# 40 BKCinsert_bun (_66:void)<-(rule_bat:bat[:str,:zrule])(_67:str)(rule_mar:zrule)
    bat.insert(rule_bat,"apr",rule_apr);	# 41 BKCinsert_bun (_68:void)<-(rule_bat:bat[:str,:zrule])(_69:str)(rule_apr:zrule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 42  (_70:str)
    bat.insert(rule_bat,"may",rule_may);	# 43 BKCinsert_bun (_71:void)<-(rule_bat:bat[:str,:zrule])(_72:str)(rule_may:zrule)
    bat.insert(rule_bat,"jun",rule_jun);	# 44 BKCinsert_bun (_73:void)<-(rule_bat:bat[:str,:zrule])(_74:str)(rule_jun:zrule)
    bat.insert(rule_bat,"jul",rule_jul);	# 45 BKCinsert_bun (_75:void)<-(rule_bat:bat[:str,:zrule])(_76:str)(rule_jul:zrule)
    bat.insert(rule_bat,"aug",rule_aug);	# 46 BKCinsert_bun (_77:void)<-(rule_bat:bat[:str,:zrule])(_78:str)(rule_aug:zrule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 47  (_79:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 48 BKCinsert_bun (_80:void)<-(rule_bat:bat[:str,:zrule])(_81:str)(rule_sep:zrule)
    bat.insert(rule_bat,"oct",rule_oct);	# 49 BKCinsert_bun (_82:void)<-(rule_bat:bat[:str,:zrule])(_83:str)(rule_oct:zrule)
    bat.insert(rule_bat,"nov",rule_nov);	# 50 BKCinsert_bun (_84:void)<-(rule_bat:bat[:str,:zrule])(_85:str)(rule_nov:zrule)
    bat.insert(rule_bat,"dec",rule_dec);	# 51 BKCinsert_bun (_86:void)<-(rule_bat:bat[:str,:zrule])(_87:str)(rule_dec:zrule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 52  (_88:str)
## test the operations on rules 	# 53  (_89:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 54 BKCsetColumn (ma_a:void)<-(rule_bat:bat[:str,:zrule])(_91:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 55  (_92:str)
    _798 := bat.new(nil:str,nil:int);	# 56 CMDBATnew (_798:bat[:str,:int])<-(_799:str)(_800:int)
barrier (_802,_803,_804):= bat.newIterator(rule_bat);	# 57 CHPbunIterator (_802:lng)(_803:str)(_804:zrule)<-(rule_bat:bat[:str,:zrule]) jump 64
    _806 := mtime.month(_804);	# 58 MTIMErule_extract_month (_806:int)<-(_804:zrule)
    bat.insert(_798,_803,_806);	# 59 BKCinsert_bun (_807:void)<-(_798:bat[:str,:int])(_803:str)(_806:int)
    redo (_802,_803,_804):= bat.hasMoreElements(rule_bat);	# 60 CHPbunHasMoreElements (_802:lng)(_803:str)(_804:zrule)<-(rule_bat:bat[:str,:zrule]) jump 58
catch MALException:str ;	# 61  (MALException:str) jump 63
    redo (_802,_803,_804):= bat.hasMoreElements(rule_bat);	# 62 CHPbunHasMoreElements (_802:lng)(_803:str)(_804:zrule)<-(rule_bat:bat[:str,:zrule]) jump 58
exit MALException:str ;	# 63  (MALException:str)
exit (_802,_803,_804);	# 64  (_802:lng)(_803:str)(_804:zrule)
    na_a:bat[:str,:int]  := _798;	# 65  (na_a:bat[:str,:int])<-(_798:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 66 BKCsetColumn (oa_a:void)<-(na_a:bat[:str,:int])(_95:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 67  (_97:str)
    _813 := bat.new(nil:str,nil:int);	# 68 CMDBATnew (_813:bat[:str,:int])<-(_799:str)(_800:int)
barrier (_815,_816,_817):= bat.newIterator(rule_bat);	# 69 CHPbunIterator (_815:lng)(_816:str)(_817:zrule)<-(rule_bat:bat[:str,:zrule]) jump 76
    _819 := mtime.weekday(_817);	# 70 MTIMErule_extract_weekday (_819:int)<-(_817:zrule)
    bat.insert(_813,_816,_819);	# 71 BKCinsert_bun (_820:void)<-(_813:bat[:str,:int])(_816:str)(_819:int)
    redo (_815,_816,_817):= bat.hasMoreElements(rule_bat);	# 72 CHPbunHasMoreElements (_815:lng)(_816:str)(_817:zrule)<-(rule_bat:bat[:str,:zrule]) jump 70
catch MALException:str ;	# 73  (MALException:str) jump 75
    redo (_815,_816,_817):= bat.hasMoreElements(rule_bat);	# 74 CHPbunHasMoreElements (_815:lng)(_816:str)(_817:zrule)<-(rule_bat:bat[:str,:zrule]) jump 70
exit MALException:str ;	# 75  (MALException:str)
exit (_815,_816,_817);	# 76  (_815:lng)(_816:str)(_817:zrule)
    pa_a:bat[:str,:int]  := _813;	# 77  (pa_a:bat[:str,:int])<-(_813:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 78 BKCsetColumn (qa_a:void)<-(pa_a:bat[:str,:int])(_99:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 79  (_101:str)
    _826 := bat.new(nil:str,nil:int);	# 80 CMDBATnew (_826:bat[:str,:int])<-(_799:str)(_800:int)
barrier (_828,_829,_830):= bat.newIterator(rule_bat);	# 81 CHPbunIterator (_828:lng)(_829:str)(_830:zrule)<-(rule_bat:bat[:str,:zrule]) jump 88
    _832 := mtime.day(_830);	# 82 MTIMErule_extract_day (_832:int)<-(_830:zrule)
    bat.insert(_826,_829,_832);	# 83 BKCinsert_bun (_833:void)<-(_826:bat[:str,:int])(_829:str)(_832:int)
    redo (_828,_829,_830):= bat.hasMoreElements(rule_bat);	# 84 CHPbunHasMoreElements (_828:lng)(_829:str)(_830:zrule)<-(rule_bat:bat[:str,:zrule]) jump 82
catch MALException:str ;	# 85  (MALException:str) jump 87
    redo (_828,_829,_830):= bat.hasMoreElements(rule_bat);	# 86 CHPbunHasMoreElements (_828:lng)(_829:str)(_830:zrule)<-(rule_bat:bat[:str,:zrule]) jump 82
exit MALException:str ;	# 87  (MALException:str)
exit (_828,_829,_830);	# 88  (_828:lng)(_829:str)(_830:zrule)
    ra_a:bat[:str,:int]  := _826;	# 89  (ra_a:bat[:str,:int])<-(_826:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 90 BKCsetColumn (sa_a:void)<-(ra_a:bat[:str,:int])(_103:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 91  (_105:str)
    _839 := bat.new(nil:str,nil:int);	# 92 CMDBATnew (_839:bat[:str,:int])<-(_840:str)(_841:int)
barrier (_843,_844,_845):= bat.newIterator(rule_bat);	# 93 CHPbunIterator (_843:lng)(_844:str)(_845:zrule)<-(rule_bat:bat[:str,:zrule]) jump 100
    _847 := mtime.minutes(_845);	# 94 MTIMErule_extract_minutes (_847:int)<-(_845:zrule)
    bat.insert(_839,_844,_847);	# 95 BKCinsert_bun (_848:void)<-(_839:bat[:str,:int])(_844:str)(_847:int)
    redo (_843,_844,_845):= bat.hasMoreElements(rule_bat);	# 96 CHPbunHasMoreElements (_843:lng)(_844:str)(_845:zrule)<-(rule_bat:bat[:str,:zrule]) jump 94
catch MALException:str ;	# 97  (MALException:str) jump 99
    redo (_843,_844,_845):= bat.hasMoreElements(rule_bat);	# 98 CHPbunHasMoreElements (_843:lng)(_844:str)(_845:zrule)<-(rule_bat:bat[:str,:zrule]) jump 94
exit MALException:str ;	# 99  (MALException:str)
exit (_843,_844,_845);	# 100  (_843:lng)(_844:str)(_845:zrule)
    ta_a:bat[:str,:int]  := _839;	# 101  (ta_a:bat[:str,:int])<-(_839:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 102 BKCsetColumn (ua_a:void)<-(ta_a:bat[:str,:int])(_107:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 103 IOprint_val (_109:void)<-(_110:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 104 IOtable (va_a:void)<-(rule_bat:bat[:str,:zrule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 105  (_112:str)
    bat.setColumn(rule_bat,"rule");	# 106 BKCsetColumn (_113:void)<-(rule_bat:bat[:str,:zrule])(_91:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 107  (_92:str)
    _854 := bat.new(nil:str,nil:date);	# 108 CMDBATnew (_854:bat[:str,:date])<-(_840:str)(_855:date)
barrier (_857,_858,_859):= bat.newIterator(rule_bat);	# 109 CHPbunIterator (_857:lng)(_858:str)(_859:zrule)<-(rule_bat:bat[:str,:zrule]) jump 116
    _861 := mtime.compute(_859,2001);	# 110 MTIMEcompute_rule_foryear (_861:date)<-(_859:zrule)(_116:int)
    bat.insert(_854,_858,_861);	# 111 BKCinsert_bun (_862:void)<-(_854:bat[:str,:date])(_858:str)(_861:date)
    redo (_857,_858,_859):= bat.hasMoreElements(rule_bat);	# 112 CHPbunHasMoreElements (_857:lng)(_858:str)(_859:zrule)<-(rule_bat:bat[:str,:zrule]) jump 110
catch MALException:str ;	# 113  (MALException:str) jump 115
    redo (_857,_858,_859):= bat.hasMoreElements(rule_bat);	# 114 CHPbunHasMoreElements (_857:lng)(_858:str)(_859:zrule)<-(rule_bat:bat[:str,:zrule]) jump 110
exit MALException:str ;	# 115  (MALException:str)
exit (_857,_858,_859);	# 116  (_857:lng)(_858:str)(_859:zrule)
    xa_a:bat[:str,:date]  := _854;	# 117  (xa_a:bat[:str,:date])<-(_854:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 118 BKCsetColumn (ya_a:void)<-(xa_a:bat[:str,:date])(_118:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 119  (_119:str)
    _868 := bat.new(nil:str,nil:date);	# 120 CMDBATnew (_868:bat[:str,:date])<-(_840:str)(_855:date)
barrier (_870,_871,_872):= bat.newIterator(rule_bat);	# 121 CHPbunIterator (_870:lng)(_871:str)(_872:zrule)<-(rule_bat:bat[:str,:zrule]) jump 128
    _874 := mtime.compute(_872,2001);	# 122 MTIMEcompute_rule_foryear (_874:date)<-(_872:zrule)(_116:int)
    bat.insert(_868,_871,_874);	# 123 BKCinsert_bun (_875:void)<-(_868:bat[:str,:date])(_871:str)(_874:date)
    redo (_870,_871,_872):= bat.hasMoreElements(rule_bat);	# 124 CHPbunHasMoreElements (_870:lng)(_871:str)(_872:zrule)<-(rule_bat:bat[:str,:zrule]) jump 122
catch MALException:str ;	# 125  (MALException:str) jump 127
    redo (_870,_871,_872):= bat.hasMoreElements(rule_bat);	# 126 CHPbunHasMoreElements (_870:lng)(_871:str)(_872:zrule)<-(rule_bat:bat[:str,:zrule]) jump 122
exit MALException:str ;	# 127  (MALException:str)
exit (_870,_871,_872);	# 128  (_870:lng)(_871:str)(_872:zrule)
    ab_a:bat[:str,:date]  := _868;	# 129  (ab_a:bat[:str,:date])<-(_868:bat[:str,:date])
    _881 := bat.new(nil:str,nil:int);	# 130 CMDBATnew (_881:bat[:str,:int])<-(_882:str)(_883:int)
barrier (_885,_886,_887):= bat.newIterator(ab_a);	# 131 CHPbunIterator (_885:lng)(_886:str)(_887:date)<-(ab_a:bat[:str,:date]) jump 138
    _889 := mtime.dayofweek(_887);	# 132 MTIMEdate_extract_dayofweek (_889:int)<-(_887:date)
    bat.insert(_881,_886,_889);	# 133 BKCinsert_bun (_890:void)<-(_881:bat[:str,:int])(_886:str)(_889:int)
    redo (_885,_886,_887):= bat.hasMoreElements(ab_a);	# 134 CHPbunHasMoreElements (_885:lng)(_886:str)(_887:date)<-(ab_a:bat[:str,:date]) jump 132
catch MALException:str ;	# 135  (MALException:str) jump 137
    redo (_885,_886,_887):= bat.hasMoreElements(ab_a);	# 136 CHPbunHasMoreElements (_885:lng)(_886:str)(_887:date)<-(ab_a:bat[:str,:date]) jump 132
exit MALException:str ;	# 137  (MALException:str)
exit (_885,_886,_887);	# 138  (_885:lng)(_886:str)(_887:date)
    bb_a:bat[:str,:int]  := _881;	# 139  (bb_a:bat[:str,:int])<-(_881:bat[:str,:int])
    _896 := bat.new(nil:str,nil:str);	# 140 CMDBATnew (_896:bat[:str,:str])<-(_882:str)(_882:str)
barrier (_898,_899,_900):= bat.newIterator(bb_a);	# 141 CHPbunIterator (_898:lng)(_899:str)(_900:int)<-(bb_a:bat[:str,:int]) jump 148
    _902 := mtime.dayname(_900);	# 142 MTIMEday_to_str (_902:str)<-(_900:int)
    bat.insert(_896,_899,_902);	# 143 BKCinsert_bun (_903:void)<-(_896:bat[:str,:str])(_899:str)(_902:str)
    redo (_898,_899,_900):= bat.hasMoreElements(bb_a);	# 144 CHPbunHasMoreElements (_898:lng)(_899:str)(_900:int)<-(bb_a:bat[:str,:int]) jump 142
catch MALException:str ;	# 145  (MALException:str) jump 147
    redo (_898,_899,_900):= bat.hasMoreElements(bb_a);	# 146 CHPbunHasMoreElements (_898:lng)(_899:str)(_900:int)<-(bb_a:bat[:str,:int]) jump 142
exit MALException:str ;	# 147  (MALException:str)
exit (_898,_899,_900);	# 148  (_898:lng)(_899:str)(_900:int)
    cb_a:bat[:str,:str]  := _896;	# 149  (cb_a:bat[:str,:str])<-(_896:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 150 BKCsetColumn (_125:void)<-(cb_a:bat[:str,:str])(_118:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 151  (_126:str)
    _909 := bat.new(nil:str,nil:date);	# 152 CMDBATnew (_909:bat[:str,:date])<-(_882:str)(_910:date)
barrier (_912,_913,_914):= bat.newIterator(rule_bat);	# 153 CHPbunIterator (_912:lng)(_913:str)(_914:zrule)<-(rule_bat:bat[:str,:zrule]) jump 160
    _916 := mtime.compute(_914,1999);	# 154 MTIMEcompute_rule_foryear (_916:date)<-(_914:zrule)(_128:int)
    bat.insert(_909,_913,_916);	# 155 BKCinsert_bun (_917:void)<-(_909:bat[:str,:date])(_913:str)(_916:date)
    redo (_912,_913,_914):= bat.hasMoreElements(rule_bat);	# 156 CHPbunHasMoreElements (_912:lng)(_913:str)(_914:zrule)<-(rule_bat:bat[:str,:zrule]) jump 154
catch MALException:str ;	# 157  (MALException:str) jump 159
    redo (_912,_913,_914):= bat.hasMoreElements(rule_bat);	# 158 CHPbunHasMoreElements (_912:lng)(_913:str)(_914:zrule)<-(rule_bat:bat[:str,:zrule]) jump 154
exit MALException:str ;	# 159  (MALException:str)
exit (_912,_913,_914);	# 160  (_912:lng)(_913:str)(_914:zrule)
    eb_a:bat[:str,:date]  := _909;	# 161  (eb_a:bat[:str,:date])<-(_909:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 162 BKCsetColumn (_129:void)<-(eb_a:bat[:str,:date])(_130:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 163  (_131:str)
    _923 := bat.new(nil:str,nil:date);	# 164 CMDBATnew (_923:bat[:str,:date])<-(_924:str)(_910:date)
barrier (_926,_927,_928):= bat.newIterator(rule_bat);	# 165 CHPbunIterator (_926:lng)(_927:str)(_928:zrule)<-(rule_bat:bat[:str,:zrule]) jump 172
    _930 := mtime.compute(_928,1999);	# 166 MTIMEcompute_rule_foryear (_930:date)<-(_928:zrule)(_128:int)
    bat.insert(_923,_927,_930);	# 167 BKCinsert_bun (_931:void)<-(_923:bat[:str,:date])(_927:str)(_930:date)
    redo (_926,_927,_928):= bat.hasMoreElements(rule_bat);	# 168 CHPbunHasMoreElements (_926:lng)(_927:str)(_928:zrule)<-(rule_bat:bat[:str,:zrule]) jump 166
catch MALException:str ;	# 169  (MALException:str) jump 171
    redo (_926,_927,_928):= bat.hasMoreElements(rule_bat);	# 170 CHPbunHasMoreElements (_926:lng)(_927:str)(_928:zrule)<-(rule_bat:bat[:str,:zrule]) jump 166
exit MALException:str ;	# 171  (MALException:str)
exit (_926,_927,_928);	# 172  (_926:lng)(_927:str)(_928:zrule)
    gb_a:bat[:str,:date]  := _923;	# 173  (gb_a:bat[:str,:date])<-(_923:bat[:str,:date])
    _937 := bat.new(nil:str,nil:int);	# 174 CMDBATnew (_937:bat[:str,:int])<-(_924:str)(_938:int)
barrier (_940,_941,_942):= bat.newIterator(gb_a);	# 175 CHPbunIterator (_940:lng)(_941:str)(_942:date)<-(gb_a:bat[:str,:date]) jump 182
    _944 := mtime.dayofweek(_942);	# 176 MTIMEdate_extract_dayofweek (_944:int)<-(_942:date)
    bat.insert(_937,_941,_944);	# 177 BKCinsert_bun (_945:void)<-(_937:bat[:str,:int])(_941:str)(_944:int)
    redo (_940,_941,_942):= bat.hasMoreElements(gb_a);	# 178 CHPbunHasMoreElements (_940:lng)(_941:str)(_942:date)<-(gb_a:bat[:str,:date]) jump 176
catch MALException:str ;	# 179  (MALException:str) jump 181
    redo (_940,_941,_942):= bat.hasMoreElements(gb_a);	# 180 CHPbunHasMoreElements (_940:lng)(_941:str)(_942:date)<-(gb_a:bat[:str,:date]) jump 176
exit MALException:str ;	# 181  (MALException:str)
exit (_940,_941,_942);	# 182  (_940:lng)(_941:str)(_942:date)
    hb_a:bat[:str,:int]  := _937;	# 183  (hb_a:bat[:str,:int])<-(_937:bat[:str,:int])
    _951 := bat.new(nil:str,nil:str);	# 184 CMDBATnew (_951:bat[:str,:str])<-(_924:str)(_924:str)
barrier (_953,_954,_955):= bat.newIterator(hb_a);	# 185 CHPbunIterator (_953:lng)(_954:str)(_955:int)<-(hb_a:bat[:str,:int]) jump 192
    _957 := mtime.dayname(_955);	# 186 MTIMEday_to_str (_957:str)<-(_955:int)
    bat.insert(_951,_954,_957);	# 187 BKCinsert_bun (_958:void)<-(_951:bat[:str,:str])(_954:str)(_957:str)
    redo (_953,_954,_955):= bat.hasMoreElements(hb_a);	# 188 CHPbunHasMoreElements (_953:lng)(_954:str)(_955:int)<-(hb_a:bat[:str,:int]) jump 186
catch MALException:str ;	# 189  (MALException:str) jump 191
    redo (_953,_954,_955):= bat.hasMoreElements(hb_a);	# 190 CHPbunHasMoreElements (_953:lng)(_954:str)(_955:int)<-(hb_a:bat[:str,:int]) jump 186
exit MALException:str ;	# 191  (MALException:str)
exit (_953,_954,_955);	# 192  (_953:lng)(_954:str)(_955:int)
    ib_a:bat[:str,:str]  := _951;	# 193  (ib_a:bat[:str,:str])<-(_951:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 194 BKCsetColumn (_136:void)<-(ib_a:bat[:str,:str])(_130:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 195  (_137:str)
    _964 := bat.new(nil:str,nil:date);	# 196 CMDBATnew (_964:bat[:str,:date])<-(_965:str)(_966:date)
barrier (_968,_969,_970):= bat.newIterator(rule_bat);	# 197 CHPbunIterator (_968:lng)(_969:str)(_970:zrule)<-(rule_bat:bat[:str,:zrule]) jump 204
    _972 := mtime.compute(_970,1992);	# 198 MTIMEcompute_rule_foryear (_972:date)<-(_970:zrule)(_139:int)
    bat.insert(_964,_969,_972);	# 199 BKCinsert_bun (_973:void)<-(_964:bat[:str,:date])(_969:str)(_972:date)
    redo (_968,_969,_970):= bat.hasMoreElements(rule_bat);	# 200 CHPbunHasMoreElements (_968:lng)(_969:str)(_970:zrule)<-(rule_bat:bat[:str,:zrule]) jump 198
catch MALException:str ;	# 201  (MALException:str) jump 203
    redo (_968,_969,_970):= bat.hasMoreElements(rule_bat);	# 202 CHPbunHasMoreElements (_968:lng)(_969:str)(_970:zrule)<-(rule_bat:bat[:str,:zrule]) jump 198
exit MALException:str ;	# 203  (MALException:str)
exit (_968,_969,_970);	# 204  (_968:lng)(_969:str)(_970:zrule)
    kb_a:bat[:str,:date]  := _964;	# 205  (kb_a:bat[:str,:date])<-(_964:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 206 BKCsetColumn (_140:void)<-(kb_a:bat[:str,:date])(_141:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 207  (_142:str)
    _979 := bat.new(nil:str,nil:date);	# 208 CMDBATnew (_979:bat[:str,:date])<-(_965:str)(_966:date)
barrier (_981,_982,_983):= bat.newIterator(rule_bat);	# 209 CHPbunIterator (_981:lng)(_982:str)(_983:zrule)<-(rule_bat:bat[:str,:zrule]) jump 216
    _985 := mtime.compute(_983,1992);	# 210 MTIMEcompute_rule_foryear (_985:date)<-(_983:zrule)(_139:int)
    bat.insert(_979,_982,_985);	# 211 BKCinsert_bun (_986:void)<-(_979:bat[:str,:date])(_982:str)(_985:date)
    redo (_981,_982,_983):= bat.hasMoreElements(rule_bat);	# 212 CHPbunHasMoreElements (_981:lng)(_982:str)(_983:zrule)<-(rule_bat:bat[:str,:zrule]) jump 210
catch MALException:str ;	# 213  (MALException:str) jump 215
    redo (_981,_982,_983):= bat.hasMoreElements(rule_bat);	# 214 CHPbunHasMoreElements (_981:lng)(_982:str)(_983:zrule)<-(rule_bat:bat[:str,:zrule]) jump 210
exit MALException:str ;	# 215  (MALException:str)
exit (_981,_982,_983);	# 216  (_981:lng)(_982:str)(_983:zrule)
    mb_a:bat[:str,:date]  := _979;	# 217  (mb_a:bat[:str,:date])<-(_979:bat[:str,:date])
    _992 := bat.new(nil:str,nil:int);	# 218 CMDBATnew (_992:bat[:str,:int])<-(_965:str)(_993:int)
barrier (_995,_996,_997):= bat.newIterator(mb_a);	# 219 CHPbunIterator (_995:lng)(_996:str)(_997:date)<-(mb_a:bat[:str,:date]) jump 226
    _999 := mtime.dayofweek(_997);	# 220 MTIMEdate_extract_dayofweek (_999:int)<-(_997:date)
    bat.insert(_992,_996,_999);	# 221 BKCinsert_bun (_1000:void)<-(_992:bat[:str,:int])(_996:str)(_999:int)
    redo (_995,_996,_997):= bat.hasMoreElements(mb_a);	# 222 CHPbunHasMoreElements (_995:lng)(_996:str)(_997:date)<-(mb_a:bat[:str,:date]) jump 220
catch MALException:str ;	# 223  (MALException:str) jump 225
    redo (_995,_996,_997):= bat.hasMoreElements(mb_a);	# 224 CHPbunHasMoreElements (_995:lng)(_996:str)(_997:date)<-(mb_a:bat[:str,:date]) jump 220
exit MALException:str ;	# 225  (MALException:str)
exit (_995,_996,_997);	# 226  (_995:lng)(_996:str)(_997:date)
    nb_a:bat[:str,:int]  := _992;	# 227  (nb_a:bat[:str,:int])<-(_992:bat[:str,:int])
    _1006 := bat.new(nil:str,nil:str);	# 228 CMDBATnew (_1006:bat[:str,:str])<-(_1007:str)(_1007:str)
barrier (_1009,_1010,_1011):= bat.newIterator(nb_a);	# 229 CHPbunIterator (_1009:lng)(_1010:str)(_1011:int)<-(nb_a:bat[:str,:int]) jump 236
    _1013 := mtime.dayname(_1011);	# 230 MTIMEday_to_str (_1013:str)<-(_1011:int)
    bat.insert(_1006,_1010,_1013);	# 231 BKCinsert_bun (_1014:void)<-(_1006:bat[:str,:str])(_1010:str)(_1013:str)
    redo (_1009,_1010,_1011):= bat.hasMoreElements(nb_a);	# 232 CHPbunHasMoreElements (_1009:lng)(_1010:str)(_1011:int)<-(nb_a:bat[:str,:int]) jump 230
catch MALException:str ;	# 233  (MALException:str) jump 235
    redo (_1009,_1010,_1011):= bat.hasMoreElements(nb_a);	# 234 CHPbunHasMoreElements (_1009:lng)(_1010:str)(_1011:int)<-(nb_a:bat[:str,:int]) jump 230
exit MALException:str ;	# 235  (MALException:str)
exit (_1009,_1010,_1011);	# 236  (_1009:lng)(_1010:str)(_1011:int)
    ob_a:bat[:str,:str]  := _1006;	# 237  (ob_a:bat[:str,:str])<-(_1006:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 238 BKCsetColumn (_146:void)<-(ob_a:bat[:str,:str])(_141:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 239 IOprint_val (_147:void)<-(_148:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 240 IOtable (qb_a:void)<-(rule_bat:bat[:str,:zrule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 241  (_150:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 242 BKCsetColumn (rb_a:void)<-(rule_bat:bat[:str,:zrule])(_152:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 243  (_153:str)
    _1020 := bat.new(nil:str,nil:date);	# 244 CMDBATnew (_1020:bat[:str,:date])<-(_1007:str)(_1021:date)
barrier (_1023,_1024,_1025):= bat.newIterator(rule_bat);	# 245 CHPbunIterator (_1023:lng)(_1024:str)(_1025:zrule)<-(rule_bat:bat[:str,:zrule]) jump 252
    _1027 := mtime.compute(_1025,1572);	# 246 MTIMEcompute_rule_foryear (_1027:date)<-(_1025:zrule)(_156:int)
    bat.insert(_1020,_1024,_1027);	# 247 BKCinsert_bun (_1028:void)<-(_1020:bat[:str,:date])(_1024:str)(_1027:date)
    redo (_1023,_1024,_1025):= bat.hasMoreElements(rule_bat);	# 248 CHPbunHasMoreElements (_1023:lng)(_1024:str)(_1025:zrule)<-(rule_bat:bat[:str,:zrule]) jump 246
catch MALException:str ;	# 249  (MALException:str) jump 251
    redo (_1023,_1024,_1025):= bat.hasMoreElements(rule_bat);	# 250 CHPbunHasMoreElements (_1023:lng)(_1024:str)(_1025:zrule)<-(rule_bat:bat[:str,:zrule]) jump 246
exit MALException:str ;	# 251  (MALException:str)
exit (_1023,_1024,_1025);	# 252  (_1023:lng)(_1024:str)(_1025:zrule)
    sb_a:bat[:str,:date]  := _1020;	# 253  (sb_a:bat[:str,:date])<-(_1020:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 254 BKCsetColumn (tb_a:void)<-(sb_a:bat[:str,:date])(_158:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 255  (_159:str)
    _1034 := bat.new(nil:str,nil:date);	# 256 CMDBATnew (_1034:bat[:str,:date])<-(_1007:str)(_1021:date)
barrier (_1036,_1037,_1038):= bat.newIterator(rule_bat);	# 257 CHPbunIterator (_1036:lng)(_1037:str)(_1038:zrule)<-(rule_bat:bat[:str,:zrule]) jump 264
    _1040 := mtime.compute(_1038,1572);	# 258 MTIMEcompute_rule_foryear (_1040:date)<-(_1038:zrule)(_156:int)
    bat.insert(_1034,_1037,_1040);	# 259 BKCinsert_bun (_1041:void)<-(_1034:bat[:str,:date])(_1037:str)(_1040:date)
    redo (_1036,_1037,_1038):= bat.hasMoreElements(rule_bat);	# 260 CHPbunHasMoreElements (_1036:lng)(_1037:str)(_1038:zrule)<-(rule_bat:bat[:str,:zrule]) jump 258
catch MALException:str ;	# 261  (MALException:str) jump 263
    redo (_1036,_1037,_1038):= bat.hasMoreElements(rule_bat);	# 262 CHPbunHasMoreElements (_1036:lng)(_1037:str)(_1038:zrule)<-(rule_bat:bat[:str,:zrule]) jump 258
exit MALException:str ;	# 263  (MALException:str)
exit (_1036,_1037,_1038);	# 264  (_1036:lng)(_1037:str)(_1038:zrule)
    ub_a:bat[:str,:date]  := _1034;	# 265  (ub_a:bat[:str,:date])<-(_1034:bat[:str,:date])
    _1047 := bat.new(nil:str,nil:int);	# 266 CMDBATnew (_1047:bat[:str,:int])<-(_1048:str)(_1049:int)
barrier (_1051,_1052,_1053):= bat.newIterator(ub_a);	# 267 CHPbunIterator (_1051:lng)(_1052:str)(_1053:date)<-(ub_a:bat[:str,:date]) jump 274
    _1055 := mtime.dayofweek(_1053);	# 268 MTIMEdate_extract_dayofweek (_1055:int)<-(_1053:date)
    bat.insert(_1047,_1052,_1055);	# 269 BKCinsert_bun (_1056:void)<-(_1047:bat[:str,:int])(_1052:str)(_1055:int)
    redo (_1051,_1052,_1053):= bat.hasMoreElements(ub_a);	# 270 CHPbunHasMoreElements (_1051:lng)(_1052:str)(_1053:date)<-(ub_a:bat[:str,:date]) jump 268
catch MALException:str ;	# 271  (MALException:str) jump 273
    redo (_1051,_1052,_1053):= bat.hasMoreElements(ub_a);	# 272 CHPbunHasMoreElements (_1051:lng)(_1052:str)(_1053:date)<-(ub_a:bat[:str,:date]) jump 268
exit MALException:str ;	# 273  (MALException:str)
exit (_1051,_1052,_1053);	# 274  (_1051:lng)(_1052:str)(_1053:date)
    vb_a:bat[:str,:int]  := _1047;	# 275  (vb_a:bat[:str,:int])<-(_1047:bat[:str,:int])
    _1062 := bat.new(nil:str,nil:str);	# 276 CMDBATnew (_1062:bat[:str,:str])<-(_1048:str)(_1048:str)
barrier (_1064,_1065,_1066):= bat.newIterator(vb_a);	# 277 CHPbunIterator (_1064:lng)(_1065:str)(_1066:int)<-(vb_a:bat[:str,:int]) jump 284
    _1068 := mtime.dayname(_1066);	# 278 MTIMEday_to_str (_1068:str)<-(_1066:int)
    bat.insert(_1062,_1065,_1068);	# 279 BKCinsert_bun (_1069:void)<-(_1062:bat[:str,:str])(_1065:str)(_1068:str)
    redo (_1064,_1065,_1066):= bat.hasMoreElements(vb_a);	# 280 CHPbunHasMoreElements (_1064:lng)(_1065:str)(_1066:int)<-(vb_a:bat[:str,:int]) jump 278
catch MALException:str ;	# 281  (MALException:str) jump 283
    redo (_1064,_1065,_1066):= bat.hasMoreElements(vb_a);	# 282 CHPbunHasMoreElements (_1064:lng)(_1065:str)(_1066:int)<-(vb_a:bat[:str,:int]) jump 278
exit MALException:str ;	# 283  (MALException:str)
exit (_1064,_1065,_1066);	# 284  (_1064:lng)(_1065:str)(_1066:int)
    wb_a:bat[:str,:str]  := _1062;	# 285  (wb_a:bat[:str,:str])<-(_1062:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 286 BKCsetColumn (xb_a:void)<-(wb_a:bat[:str,:str])(_158:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 287  (_166:str)
    _1075 := bat.new(nil:str,nil:date);	# 288 CMDBATnew (_1075:bat[:str,:date])<-(_1048:str)(_1076:date)
barrier (_1078,_1079,_1080):= bat.newIterator(rule_bat);	# 289 CHPbunIterator (_1078:lng)(_1079:str)(_1080:zrule)<-(rule_bat:bat[:str,:zrule]) jump 296
    _1082 := mtime.compute(_1080,1);	# 290 MTIMEcompute_rule_foryear (_1082:date)<-(_1080:zrule)(_168:int)
    bat.insert(_1075,_1079,_1082);	# 291 BKCinsert_bun (_1083:void)<-(_1075:bat[:str,:date])(_1079:str)(_1082:date)
    redo (_1078,_1079,_1080):= bat.hasMoreElements(rule_bat);	# 292 CHPbunHasMoreElements (_1078:lng)(_1079:str)(_1080:zrule)<-(rule_bat:bat[:str,:zrule]) jump 290
catch MALException:str ;	# 293  (MALException:str) jump 295
    redo (_1078,_1079,_1080):= bat.hasMoreElements(rule_bat);	# 294 CHPbunHasMoreElements (_1078:lng)(_1079:str)(_1080:zrule)<-(rule_bat:bat[:str,:zrule]) jump 290
exit MALException:str ;	# 295  (MALException:str)
exit (_1078,_1079,_1080);	# 296  (_1078:lng)(_1079:str)(_1080:zrule)
    yb_a:bat[:str,:date]  := _1075;	# 297  (yb_a:bat[:str,:date])<-(_1075:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 298 BKCsetColumn (ac_a:void)<-(yb_a:bat[:str,:date])(_170:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 299  (_171:str)
    _1089 := bat.new(nil:str,nil:date);	# 300 CMDBATnew (_1089:bat[:str,:date])<-(_1090:str)(_1076:date)
barrier (_1092,_1093,_1094):= bat.newIterator(rule_bat);	# 301 CHPbunIterator (_1092:lng)(_1093:str)(_1094:zrule)<-(rule_bat:bat[:str,:zrule]) jump 308
    _1096 := mtime.compute(_1094,1);	# 302 MTIMEcompute_rule_foryear (_1096:date)<-(_1094:zrule)(_168:int)
    bat.insert(_1089,_1093,_1096);	# 303 BKCinsert_bun (_1097:void)<-(_1089:bat[:str,:date])(_1093:str)(_1096:date)
    redo (_1092,_1093,_1094):= bat.hasMoreElements(rule_bat);	# 304 CHPbunHasMoreElements (_1092:lng)(_1093:str)(_1094:zrule)<-(rule_bat:bat[:str,:zrule]) jump 302
catch MALException:str ;	# 305  (MALException:str) jump 307
    redo (_1092,_1093,_1094):= bat.hasMoreElements(rule_bat);	# 306 CHPbunHasMoreElements (_1092:lng)(_1093:str)(_1094:zrule)<-(rule_bat:bat[:str,:zrule]) jump 302
exit MALException:str ;	# 307  (MALException:str)
exit (_1092,_1093,_1094);	# 308  (_1092:lng)(_1093:str)(_1094:zrule)
    bc_a:bat[:str,:date]  := _1089;	# 309  (bc_a:bat[:str,:date])<-(_1089:bat[:str,:date])
    _1103 := bat.new(nil:str,nil:int);	# 310 CMDBATnew (_1103:bat[:str,:int])<-(_1090:str)(_1104:int)
barrier (_1106,_1107,_1108):= bat.newIterator(bc_a);	# 311 CHPbunIterator (_1106:lng)(_1107:str)(_1108:date)<-(bc_a:bat[:str,:date]) jump 318
    _1110 := mtime.dayofweek(_1108);	# 312 MTIMEdate_extract_dayofweek (_1110:int)<-(_1108:date)
    bat.insert(_1103,_1107,_1110);	# 313 BKCinsert_bun (_1111:void)<-(_1103:bat[:str,:int])(_1107:str)(_1110:int)
    redo (_1106,_1107,_1108):= bat.hasMoreElements(bc_a);	# 314 CHPbunHasMoreElements (_1106:lng)(_1107:str)(_1108:date)<-(bc_a:bat[:str,:date]) jump 312
catch MALException:str ;	# 315  (MALException:str) jump 317
    redo (_1106,_1107,_1108):= bat.hasMoreElements(bc_a);	# 316 CHPbunHasMoreElements (_1106:lng)(_1107:str)(_1108:date)<-(bc_a:bat[:str,:date]) jump 312
exit MALException:str ;	# 317  (MALException:str)
exit (_1106,_1107,_1108);	# 318  (_1106:lng)(_1107:str)(_1108:date)
    cc_a:bat[:str,:int]  := _1103;	# 319  (cc_a:bat[:str,:int])<-(_1103:bat[:str,:int])
    _1117 := bat.new(nil:str,nil:str);	# 320 CMDBATnew (_1117:bat[:str,:str])<-(_1090:str)(_1090:str)
barrier (_1119,_1120,_1121):= bat.newIterator(cc_a);	# 321 CHPbunIterator (_1119:lng)(_1120:str)(_1121:int)<-(cc_a:bat[:str,:int]) jump 328
    _1123 := mtime.dayname(_1121);	# 322 MTIMEday_to_str (_1123:str)<-(_1121:int)
    bat.insert(_1117,_1120,_1123);	# 323 BKCinsert_bun (_1124:void)<-(_1117:bat[:str,:str])(_1120:str)(_1123:str)
    redo (_1119,_1120,_1121):= bat.hasMoreElements(cc_a);	# 324 CHPbunHasMoreElements (_1119:lng)(_1120:str)(_1121:int)<-(cc_a:bat[:str,:int]) jump 322
catch MALException:str ;	# 325  (MALException:str) jump 327
    redo (_1119,_1120,_1121):= bat.hasMoreElements(cc_a);	# 326 CHPbunHasMoreElements (_1119:lng)(_1120:str)(_1121:int)<-(cc_a:bat[:str,:int]) jump 322
exit MALException:str ;	# 327  (MALException:str)
exit (_1119,_1120,_1121);	# 328  (_1119:lng)(_1120:str)(_1121:int)
    dc_a:bat[:str,:str]  := _1117;	# 329  (dc_a:bat[:str,:str])<-(_1117:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 330 BKCsetColumn (ec_a:void)<-(dc_a:bat[:str,:str])(_170:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 331  (_177:str)
    _1130 := bat.new(nil:str,nil:date);	# 332 CMDBATnew (_1130:bat[:str,:date])<-(_1131:str)(_1132:date)
barrier (_1134,_1135,_1136):= bat.newIterator(rule_bat);	# 333 CHPbunIterator (_1134:lng)(_1135:str)(_1136:zrule)<-(rule_bat:bat[:str,:zrule]) jump 340
    _1138 := mtime.compute(_1136,-2000);	# 334 MTIMEcompute_rule_foryear (_1138:date)<-(_1136:zrule)(_179:int)
    bat.insert(_1130,_1135,_1138);	# 335 BKCinsert_bun (_1139:void)<-(_1130:bat[:str,:date])(_1135:str)(_1138:date)
    redo (_1134,_1135,_1136):= bat.hasMoreElements(rule_bat);	# 336 CHPbunHasMoreElements (_1134:lng)(_1135:str)(_1136:zrule)<-(rule_bat:bat[:str,:zrule]) jump 334
catch MALException:str ;	# 337  (MALException:str) jump 339
    redo (_1134,_1135,_1136):= bat.hasMoreElements(rule_bat);	# 338 CHPbunHasMoreElements (_1134:lng)(_1135:str)(_1136:zrule)<-(rule_bat:bat[:str,:zrule]) jump 334
exit MALException:str ;	# 339  (MALException:str)
exit (_1134,_1135,_1136);	# 340  (_1134:lng)(_1135:str)(_1136:zrule)
    fc_a:bat[:str,:date]  := _1130;	# 341  (fc_a:bat[:str,:date])<-(_1130:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 342 BKCsetColumn (gc_a:void)<-(fc_a:bat[:str,:date])(_181:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 343  (_182:str)
    _1145 := bat.new(nil:str,nil:date);	# 344 CMDBATnew (_1145:bat[:str,:date])<-(_1131:str)(_1132:date)
barrier (_1147,_1148,_1149):= bat.newIterator(rule_bat);	# 345 CHPbunIterator (_1147:lng)(_1148:str)(_1149:zrule)<-(rule_bat:bat[:str,:zrule]) jump 352
    _1151 := mtime.compute(_1149,-2000);	# 346 MTIMEcompute_rule_foryear (_1151:date)<-(_1149:zrule)(_179:int)
    bat.insert(_1145,_1148,_1151);	# 347 BKCinsert_bun (_1152:void)<-(_1145:bat[:str,:date])(_1148:str)(_1151:date)
    redo (_1147,_1148,_1149):= bat.hasMoreElements(rule_bat);	# 348 CHPbunHasMoreElements (_1147:lng)(_1148:str)(_1149:zrule)<-(rule_bat:bat[:str,:zrule]) jump 346
catch MALException:str ;	# 349  (MALException:str) jump 351
    redo (_1147,_1148,_1149):= bat.hasMoreElements(rule_bat);	# 350 CHPbunHasMoreElements (_1147:lng)(_1148:str)(_1149:zrule)<-(rule_bat:bat[:str,:zrule]) jump 346
exit MALException:str ;	# 351  (MALException:str)
exit (_1147,_1148,_1149);	# 352  (_1147:lng)(_1148:str)(_1149:zrule)
    hc_a:bat[:str,:date]  := _1145;	# 353  (hc_a:bat[:str,:date])<-(_1145:bat[:str,:date])
    _1158 := bat.new(nil:str,nil:int);	# 354 CMDBATnew (_1158:bat[:str,:int])<-(_1131:str)(_1159:int)
barrier (_1161,_1162,_1163):= bat.newIterator(hc_a);	# 355 CHPbunIterator (_1161:lng)(_1162:str)(_1163:date)<-(hc_a:bat[:str,:date]) jump 362
    _1165 := mtime.dayofweek(_1163);	# 356 MTIMEdate_extract_dayofweek (_1165:int)<-(_1163:date)
    bat.insert(_1158,_1162,_1165);	# 357 BKCinsert_bun (_1166:void)<-(_1158:bat[:str,:int])(_1162:str)(_1165:int)
    redo (_1161,_1162,_1163):= bat.hasMoreElements(hc_a);	# 358 CHPbunHasMoreElements (_1161:lng)(_1162:str)(_1163:date)<-(hc_a:bat[:str,:date]) jump 356
catch MALException:str ;	# 359  (MALException:str) jump 361
    redo (_1161,_1162,_1163):= bat.hasMoreElements(hc_a);	# 360 CHPbunHasMoreElements (_1161:lng)(_1162:str)(_1163:date)<-(hc_a:bat[:str,:date]) jump 356
exit MALException:str ;	# 361  (MALException:str)
exit (_1161,_1162,_1163);	# 362  (_1161:lng)(_1162:str)(_1163:date)
    ic_a:bat[:str,:int]  := _1158;	# 363  (ic_a:bat[:str,:int])<-(_1158:bat[:str,:int])
    _1172 := bat.new(nil:str,nil:str);	# 364 CMDBATnew (_1172:bat[:str,:str])<-(_1173:str)(_1173:str)
barrier (_1175,_1176,_1177):= bat.newIterator(ic_a);	# 365 CHPbunIterator (_1175:lng)(_1176:str)(_1177:int)<-(ic_a:bat[:str,:int]) jump 372
    _1179 := mtime.dayname(_1177);	# 366 MTIMEday_to_str (_1179:str)<-(_1177:int)
    bat.insert(_1172,_1176,_1179);	# 367 BKCinsert_bun (_1180:void)<-(_1172:bat[:str,:str])(_1176:str)(_1179:str)
    redo (_1175,_1176,_1177):= bat.hasMoreElements(ic_a);	# 368 CHPbunHasMoreElements (_1175:lng)(_1176:str)(_1177:int)<-(ic_a:bat[:str,:int]) jump 366
catch MALException:str ;	# 369  (MALException:str) jump 371
    redo (_1175,_1176,_1177):= bat.hasMoreElements(ic_a);	# 370 CHPbunHasMoreElements (_1175:lng)(_1176:str)(_1177:int)<-(ic_a:bat[:str,:int]) jump 366
exit MALException:str ;	# 371  (MALException:str)
exit (_1175,_1176,_1177);	# 372  (_1175:lng)(_1176:str)(_1177:int)
    jc_a:bat[:str,:str]  := _1172;	# 373  (jc_a:bat[:str,:str])<-(_1172:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 374 BKCsetColumn (kc_a:void)<-(jc_a:bat[:str,:str])(_181:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 375 IOprint_val (_187:void)<-(_188:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 376 IOtable (lc_a:void)<-(rule_bat:bat[:str,:zrule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 377  (_190:str)
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 378  (_191:str)
## test the various ways to create timezones, using some of the above created rules 	# 379  (_192:str)
    tzone_00 := mtime.timezone("GMT");	# 380 MTIMEtzone_fromstr (tzone_00:timezone)<-(_194:str)
#var tzone_00 := mtime.timezone("GMT"); 	# 381  (_195:str)
    tzone_01 := mtime.timezone("GMT+01:00");	# 382 MTIMEtzone_fromstr (tzone_01:timezone)<-(_197:str)
#var tzone_01 := mtime.timezone("GMT+01:00"); 	# 383  (_198:str)
    tzone_02 := mtime.timezone("GMT+0100");	# 384 MTIMEtzone_fromstr (tzone_02:timezone)<-(_200:str)
#var tzone_02 := mtime.timezone("GMT+0100"); 	# 385  (_201:str)
    tzone_03 := mtime.timezone(60,rule_oct,rule_mar);	# 386 MTIMEtzone_create_dst (tzone_03:timezone)<-(_203:int)(rule_oct:zrule)(rule_mar:zrule)
#var tzone_03 := mtime.timezone(60, rule_oct, rule_mar); 	# 387  (_204:str)
    tzone_04 := mtime.timezone(0,rule_jan,rule_aug);	# 388 MTIMEtzone_create_dst (tzone_04:timezone)<-(_206:int)(rule_jan:zrule)(rule_aug:zrule)
#var tzone_04 := mtime.timezone(0, rule_jan, rule_aug); 	# 389  (_207:str)
    tzone_05 := mtime.timezone(-97,rule_oct,rule_apr);	# 390 MTIMEtzone_create_dst (tzone_05:timezone)<-(_209:int)(rule_oct:zrule)(rule_apr:zrule)
#var tzone_05 := mtime.timezone(-97, rule_oct, rule_apr); 	# 391  (_210:str)
    tzone_06 := mtime.timezone(-97,rule_may,rule_sep);	# 392 MTIMEtzone_create_dst (tzone_06:timezone)<-(_209:int)(rule_may:zrule)(rule_sep:zrule)
#var tzone_06 := mtime.timezone(-97, rule_may, rule_sep); 	# 393  (_212:str)
    mc_a := calc.*(23,60);	# 394 CALCbinaryMULintint (mc_a:int)<-(_214:int)(_203:int)
    tzone_07 := mtime.timezone(mc_a,rule_apr,rule_nov);	# 395 MTIMEtzone_create_dst (tzone_07:timezone)<-(mc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_07 := mtime.timezone(23*60, rule_apr, rule_nov); 	# 396  (_216:str)
    nc_a := calc.*(-23,59);	# 397 CALCbinaryMULintint (nc_a:int)<-(_218:int)(_219:int)
    oc_a := calc.-(nc_a,59);	# 398 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)(_219:int)
    tzone_08 := mtime.timezone(oc_a);	# 399 MTIMEtzone_create (tzone_08:timezone)<-(oc_a:int)
#var tzone_08 := mtime.timezone((-23*59) - 59); 	# 400  (_222:str)
    tzone_09 := mtime.timezone(0);	# 401 MTIMEtzone_create (tzone_09:timezone)<-(_206:int)
#var tzone_09 := mtime.timezone(0); 	# 402  (_224:str)
    tzone_10 := mtime.timezone(-60);	# 403 MTIMEtzone_create (tzone_10:timezone)<-(_226:int)
#var tzone_10 := mtime.timezone(-60); 	# 404  (_227:str)
    pc_a := calc.*(23,60);	# 405 CALCbinaryMULintint (pc_a:int)<-(_214:int)(_203:int)
    qc_a := calc.+(pc_a,59);	# 406 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)(_219:int)
    tzone_11 := mtime.timezone(qc_a);	# 407 MTIMEtzone_create (tzone_11:timezone)<-(qc_a:int)
#var tzone_11 := mtime.timezone((23*60)+59); 	# 408  (_231:str)
    tzone_12 := mtime.timezone(60);	# 409 MTIMEtzone_create (tzone_12:timezone)<-(_203:int)
#var tzone_12 := mtime.timezone(60); 	# 410  (_233:str)
## nil tzones 	# 411  (_234:str)
    tzone_13 := mtime.timezone(60,rule_feb,rule_dec);	# 412 MTIMEtzone_create_dst (tzone_13:timezone)<-(_203:int)(rule_feb:zrule)(rule_dec:zrule)
#var tzone_13 := mtime.timezone(60, rule_feb, rule_dec); 	# 413  (_236:str)
    rc_a := calc.*(24,60);	# 414 CALCbinaryMULintint (rc_a:int)<-(_238:int)(_203:int)
    tzone_15 := mtime.timezone(rc_a,rule_apr,rule_nov);	# 415 MTIMEtzone_create_dst (tzone_15:timezone)<-(rc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_15 := mtime.timezone(24*60, rule_apr, rule_nov); 	# 416  (_240:str)
    tzone_bat := bat.new(:oid,:timezone);	# 417 CMDBATnew (tzone_bat:bat[:oid,:timezone])<-(_242:oid)(_243:timezone)
#var tzone_bat := bat.new(oid,tzone); 	# 418  (_244:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 419 BKCinsert_bun (_245:void)<-(tzone_bat:bat[:oid,:timezone])(_246:oid)(tzone_00:timezone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 420 BKCinsert_bun (_247:void)<-(tzone_bat:bat[:oid,:timezone])(_248:oid)(tzone_01:timezone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 421 BKCinsert_bun (_249:void)<-(tzone_bat:bat[:oid,:timezone])(_250:oid)(tzone_02:timezone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 422  (_251:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 423 BKCinsert_bun (_252:void)<-(tzone_bat:bat[:oid,:timezone])(_253:oid)(tzone_03:timezone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 424 BKCinsert_bun (_254:void)<-(tzone_bat:bat[:oid,:timezone])(_255:oid)(tzone_04:timezone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 425 BKCinsert_bun (_256:void)<-(tzone_bat:bat[:oid,:timezone])(_257:oid)(tzone_05:timezone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 426  (_258:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 427 BKCinsert_bun (_259:void)<-(tzone_bat:bat[:oid,:timezone])(_260:oid)(tzone_06:timezone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 428 BKCinsert_bun (_261:void)<-(tzone_bat:bat[:oid,:timezone])(_262:oid)(tzone_07:timezone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 429 BKCinsert_bun (_263:void)<-(tzone_bat:bat[:oid,:timezone])(_264:oid)(tzone_08:timezone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 430  (_265:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 431 BKCinsert_bun (_266:void)<-(tzone_bat:bat[:oid,:timezone])(_267:oid)(tzone_09:timezone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 432 BKCinsert_bun (_268:void)<-(tzone_bat:bat[:oid,:timezone])(_269:oid)(tzone_10:timezone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 433 BKCinsert_bun (_270:void)<-(tzone_bat:bat[:oid,:timezone])(_271:oid)(tzone_11:timezone)
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 434  (_272:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 435 BKCinsert_bun (_273:void)<-(tzone_bat:bat[:oid,:timezone])(_274:oid)(tzone_12:timezone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 436 BKCinsert_bun (_275:void)<-(tzone_bat:bat[:oid,:timezone])(_276:oid)(tzone_13:timezone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 437 BKCinsert_bun (_277:void)<-(tzone_bat:bat[:oid,:timezone])(_278:oid)(tzone_15:timezone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 438  (_279:str)
## test the operations on tzones 	# 439  (_280:str)
    bat.setName(tzone_bat,"timezone");	# 440 BKCsetName (_281:void)<-(tzone_bat:bat[:oid,:timezone])(_282:str)
#io.print(tzone_bat); 	# 441  (_283:str)
#io.print("start error"); 	# 442  (_284:str)
#x:= getRefCount(tzone_bat); 	# 443  (_285:str)
#io.print(x); 	# 444  (_286:str)
#jd_a := io.print(tzone_bat); 	# 445  (_287:str)
#io.print("end"); 	# 446  (_288:str)
#io.print(x); 	# 447  (_286:str)
#x:= getRefCount(tzone_bat); 	# 448  (_285:str)
    io.print("tzone_bat");	# 449 IOprint_val (_289:void)<-(_290:str)
    io.print(tzone_bat);	# 450 IOprint_val (_291:void)<-(tzone_bat:bat[:oid,:timezone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 451  (_292:str)
    _1186 := bat.new(nil:oid,nil:int);	# 452 CMDBATnew (_1186:bat[:oid,:int])<-(_1187:oid)(_1159:int)
barrier (_1189,_1190,_1191):= bat.newIterator(tzone_bat);	# 453 CHPbunIterator (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 460
    _1193 := mtime.minutes(_1191);	# 454 MTIMEtzone_extract_minutes (_1193:int)<-(_1191:timezone)
    bat.insert(_1186,_1190,_1193);	# 455 BKCinsert_bun (_1194:void)<-(_1186:bat[:oid,:int])(_1190:oid)(_1193:int)
    redo (_1189,_1190,_1191):= bat.hasMoreElements(tzone_bat);	# 456 CHPbunHasMoreElements (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 454
catch MALException:str ;	# 457  (MALException:str) jump 459
    redo (_1189,_1190,_1191):= bat.hasMoreElements(tzone_bat);	# 458 CHPbunHasMoreElements (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 454
exit MALException:str ;	# 459  (MALException:str)
exit (_1189,_1190,_1191);	# 460  (_1189:lng)(_1190:oid)(_1191:timezone)
    kd_a:bat[:oid,:int]  := _1186;	# 461  (kd_a:bat[:oid,:int])<-(_1186:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 462 BKCsetColumn (_296:void)<-(kd_a:bat[:oid,:int])(_295:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 463  (_297:str)
    _1200 := bat.new(nil:oid,nil:zrule);	# 464 CMDBATnew (_1200:bat[:oid,:zrule])<-(_1187:oid)(_1201:zrule)
barrier (_1203,_1204,_1205):= bat.newIterator(tzone_bat);	# 465 CHPbunIterator (_1203:lng)(_1204:oid)(_1205:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 472
    _1207 := mtime.start_dst(_1205);	# 466 MTIMEtzone_extract_start (_1207:zrule)<-(_1205:timezone)
    bat.insert(_1200,_1204,_1207);	# 467 BKCinsert_bun (_1208:void)<-(_1200:bat[:oid,:zrule])(_1204:oid)(_1207:zrule)
    redo (_1203,_1204,_1205):= bat.hasMoreElements(tzone_bat);	# 468 CHPbunHasMoreElements (_1203:lng)(_1204:oid)(_1205:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 466
catch MALException:str ;	# 469  (MALException:str) jump 471
    redo (_1203,_1204,_1205):= bat.hasMoreElements(tzone_bat);	# 470 CHPbunHasMoreElements (_1203:lng)(_1204:oid)(_1205:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 466
exit MALException:str ;	# 471  (MALException:str)
exit (_1203,_1204,_1205);	# 472  (_1203:lng)(_1204:oid)(_1205:timezone)
    md_a:bat[:oid,:zrule]  := _1200;	# 473  (md_a:bat[:oid,:zrule])<-(_1200:bat[:oid,:zrule])
    bat.setColumn(md_a,"start_dst");	# 474 BKCsetColumn (_300:void)<-(md_a:bat[:oid,:zrule])(_299:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 475  (_301:str)
    _1214 := bat.new(nil:oid,nil:zrule);	# 476 CMDBATnew (_1214:bat[:oid,:zrule])<-(_1187:oid)(_1201:zrule)
barrier (_1216,_1217,_1218):= bat.newIterator(tzone_bat);	# 477 CHPbunIterator (_1216:lng)(_1217:oid)(_1218:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 484
    _1220 := mtime.end_dst(_1218);	# 478 MTIMEtzone_extract_end (_1220:zrule)<-(_1218:timezone)
    bat.insert(_1214,_1217,_1220);	# 479 BKCinsert_bun (_1221:void)<-(_1214:bat[:oid,:zrule])(_1217:oid)(_1220:zrule)
    redo (_1216,_1217,_1218):= bat.hasMoreElements(tzone_bat);	# 480 CHPbunHasMoreElements (_1216:lng)(_1217:oid)(_1218:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 478
catch MALException:str ;	# 481  (MALException:str) jump 483
    redo (_1216,_1217,_1218):= bat.hasMoreElements(tzone_bat);	# 482 CHPbunHasMoreElements (_1216:lng)(_1217:oid)(_1218:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 478
exit MALException:str ;	# 483  (MALException:str)
exit (_1216,_1217,_1218);	# 484  (_1216:lng)(_1217:oid)(_1218:timezone)
    od_a:bat[:oid,:zrule]  := _1214;	# 485  (od_a:bat[:oid,:zrule])<-(_1214:bat[:oid,:zrule])
    bat.setColumn(od_a,"end_dst");	# 486 BKCsetColumn (_304:void)<-(od_a:bat[:oid,:zrule])(_303:str)
    io.print("print(kd_a,md_a,od_a)");	# 487 IOprint_val (_305:void)<-(_306:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 488 IOtable (qd_a:void)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:zrule])(od_a:bat[:oid,:zrule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 489  (_308:str)
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 490  (_309:str)
## test the various ways to create dates 	# 491  (_310:str)
    date_00 := mtime.date(2000,1,1);	# 492 MTIMEdate_create (date_00:date)<-(_312:int)(_313:int)(_313:int)
#var date_00 := date(2000,01,01); 	# 493  (_314:str)
    date_01 := mtime.date("5000-JAN-01");	# 494 MTIMEdate_fromstr (date_01:date)<-(_316:str)
#var date_01 := date("5000-JAN-01"); 	# 495  (_317:str)
    date_02 := mtime.date("1968-FEBR-29");	# 496 MTIMEdate_fromstr (date_02:date)<-(_319:str)
#var date_02 := date("1968-FEBR-29"); 	# 497  (_320:str)
    date_03 := mtime.date("1-MARCH-01");	# 498 MTIMEdate_fromstr (date_03:date)<-(_322:str)
#var date_03 := date("1-MARCH-01"); 	# 499  (_323:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 500 MTIMEdate_fromstr (date_04:date)<-(_325:str)
#var date_04 := date("-5867411-JAN-1"); 	# 501  (_326:str)
    date_05 := mtime.date("-768/octobe/01");	# 502 MTIMEdate_fromstr (date_05:date)<-(_328:str)
#var date_05 := date("-768/octobe/01"); 	# 503  (_329:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 504 MTIMEdate_fromstr (date_06:date)<-(_331:str)
#var date_06 := date("5000\\novembe\\01"); 	# 505  (_332:str)
    date_07 := mtime.date("-1999/jun/01");	# 506 MTIMEdate_fromstr (date_07:date)<-(_334:str)
#var date_07 := date("-1999/jun/01"); 	# 507  (_335:str)
    date_08 := mtime.date("2000-jul-14");	# 508 MTIMEdate_fromstr (date_08:date)<-(_337:str)
#var date_08 := date("2000-jul-14"); 	# 509  (_338:str)
    date_09 := mtime.date("1999-sept-01");	# 510 MTIMEdate_fromstr (date_09:date)<-(_340:str)
#var date_09 := date("1999-sept-01"); 	# 511  (_341:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 512 MTIMEdate_fromstr (date_10:date)<-(_343:str)
#var date_10 := date("1998-decemBeR-01"); 	# 513  (_344:str)
    date_11 := mtime.date("1953 may                01");	# 514 MTIMEdate_fromstr (date_11:date)<-(_346:str)
#var date_11 := date("1953 may                01"); 	# 515  (_347:str)
    date_12 := mtime.date("5867411-DEC-31");	# 516 MTIMEdate_fromstr (date_12:date)<-(_349:str)
#var date_12 := date("5867411-DEC-31"); 	# 517  (_350:str)
## nil dates 	# 518  (_351:str)
    date_13 := mtime.date(1996,13,1);	# 519 MTIMEdate_create (date_13:date)<-(_353:int)(_354:int)(_355:int)
#var date_13 := date(1996,13,1); 	# 520  (_356:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 521 MTIMEdate_fromstr (date_14:date)<-(_358:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 522  (_359:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 523 MTIMEdate_fromstr (date_15:date)<-(_361:str)
#var date_15 := date("1999-JANUARI-01"); 	# 524  (_362:str)
    date_16 := mtime.date("1999-FEBR-29");	# 525 MTIMEdate_fromstr (date_16:date)<-(_364:str)
#var date_16 := date("1999-FEBR-29"); 	# 526  (_365:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 527 MTIMEdate_fromstr (date_17:date)<-(_367:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 528  (_368:str)
    date_18 := mtime.date("5000\novembe31");	# 529 MTIMEdate_fromstr (date_18:date)<-(_370:str)
#var date_18 := date("5000\novembe\31"); 	# 530  (_371:str)
    date_19 := mtime.date("nil");	# 531 MTIMEdate_fromstr (date_19:date)<-(_373:str)
#var date_19 := date("nil"); 	# 532  (_374:str)
    date_20 := mtime.date("1999-sept-31");	# 533 MTIMEdate_fromstr (date_20:date)<-(_376:str)
#var date_20 := date("1999-sept-31"); 	# 534  (_377:str)
    date_bat := bat.new(:oid,:date);	# 535 CMDBATnew (date_bat:bat[:oid,:date])<-(_242:oid)(_379:date)
#var date_bat := bat.new(oid,date); 	# 536  (_380:str)
    bat.insert(date_bat,0@0,date_00);	# 537 BKCinsert_bun (_381:void)<-(date_bat:bat[:oid,:date])(_382:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 538 BKCinsert_bun (_383:void)<-(date_bat:bat[:oid,:date])(_384:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 539 BKCinsert_bun (_385:void)<-(date_bat:bat[:oid,:date])(_386:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 540  (_387:str)
    bat.insert(date_bat,3@0,date_03);	# 541 BKCinsert_bun (_388:void)<-(date_bat:bat[:oid,:date])(_389:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 542 BKCinsert_bun (_390:void)<-(date_bat:bat[:oid,:date])(_391:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 543 BKCinsert_bun (_392:void)<-(date_bat:bat[:oid,:date])(_393:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 544  (_394:str)
    bat.insert(date_bat,6@0,date_06);	# 545 BKCinsert_bun (_395:void)<-(date_bat:bat[:oid,:date])(_396:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 546 BKCinsert_bun (_397:void)<-(date_bat:bat[:oid,:date])(_398:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 547 BKCinsert_bun (_399:void)<-(date_bat:bat[:oid,:date])(_400:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 548  (_401:str)
    bat.insert(date_bat,9@0,date_09);	# 549 BKCinsert_bun (_402:void)<-(date_bat:bat[:oid,:date])(_403:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 550 BKCinsert_bun (_404:void)<-(date_bat:bat[:oid,:date])(_405:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 551 BKCinsert_bun (_406:void)<-(date_bat:bat[:oid,:date])(_407:oid)(date_11:date)
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 552  (_408:str)
    bat.insert(date_bat,12@0,date_12);	# 553 BKCinsert_bun (_409:void)<-(date_bat:bat[:oid,:date])(_410:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 554 BKCinsert_bun (_411:void)<-(date_bat:bat[:oid,:date])(_412:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 555 BKCinsert_bun (_413:void)<-(date_bat:bat[:oid,:date])(_414:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 556  (_415:str)
    bat.insert(date_bat,15@0,date_15);	# 557 BKCinsert_bun (_416:void)<-(date_bat:bat[:oid,:date])(_417:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 558 BKCinsert_bun (_418:void)<-(date_bat:bat[:oid,:date])(_419:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 559 BKCinsert_bun (_420:void)<-(date_bat:bat[:oid,:date])(_421:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 560  (_422:str)
    bat.insert(date_bat,18@0,date_18);	# 561 BKCinsert_bun (_423:void)<-(date_bat:bat[:oid,:date])(_424:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 562 BKCinsert_bun (_425:void)<-(date_bat:bat[:oid,:date])(_426:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 563 BKCinsert_bun (_427:void)<-(date_bat:bat[:oid,:date])(_428:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 564  (_429:str)
## test the operations on dates 	# 565  (_430:str)
    ne_a := bat.setColumn(date_bat,"date");	# 566 BKCsetColumn (ne_a:void)<-(date_bat:bat[:oid,:date])(_432:str)
#io.print(date_bat.bat.setColumn("date"), 	# 567  (_433:str)
    _1227 := bat.new(nil:oid,nil:int);	# 568 CMDBATnew (_1227:bat[:oid,:int])<-(_1228:oid)(_1229:int)
barrier (_1231,_1232,_1233):= bat.newIterator(date_bat);	# 569 CHPbunIterator (_1231:lng)(_1232:oid)(_1233:date)<-(date_bat:bat[:oid,:date]) jump 576
    _1235 := mtime.year(_1233);	# 570 MTIMEdate_extract_year (_1235:int)<-(_1233:date)
    bat.insert(_1227,_1232,_1235);	# 571 BKCinsert_bun (_1236:void)<-(_1227:bat[:oid,:int])(_1232:oid)(_1235:int)
    redo (_1231,_1232,_1233):= bat.hasMoreElements(date_bat);	# 572 CHPbunHasMoreElements (_1231:lng)(_1232:oid)(_1233:date)<-(date_bat:bat[:oid,:date]) jump 570
catch MALException:str ;	# 573  (MALException:str) jump 575
    redo (_1231,_1232,_1233):= bat.hasMoreElements(date_bat);	# 574 CHPbunHasMoreElements (_1231:lng)(_1232:oid)(_1233:date)<-(date_bat:bat[:oid,:date]) jump 570
exit MALException:str ;	# 575  (MALException:str)
exit (_1231,_1232,_1233);	# 576  (_1231:lng)(_1232:oid)(_1233:date)
    oe_a:bat[:oid,:int]  := _1227;	# 577  (oe_a:bat[:oid,:int])<-(_1227:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 578 BKCsetColumn (pe_a:void)<-(oe_a:bat[:oid,:int])(_436:str)
#      [year](date_bat).bat.setColumn("year"), 	# 579  (_438:str)
    _1242 := bat.new(nil:oid,nil:int);	# 580 CMDBATnew (_1242:bat[:oid,:int])<-(_1228:oid)(_1229:int)
barrier (_1244,_1245,_1246):= bat.newIterator(date_bat);	# 581 CHPbunIterator (_1244:lng)(_1245:oid)(_1246:date)<-(date_bat:bat[:oid,:date]) jump 588
    _1248 := mtime.day(_1246);	# 582 MTIMEdate_extract_day (_1248:int)<-(_1246:date)
    bat.insert(_1242,_1245,_1248);	# 583 BKCinsert_bun (_1249:void)<-(_1242:bat[:oid,:int])(_1245:oid)(_1248:int)
    redo (_1244,_1245,_1246):= bat.hasMoreElements(date_bat);	# 584 CHPbunHasMoreElements (_1244:lng)(_1245:oid)(_1246:date)<-(date_bat:bat[:oid,:date]) jump 582
catch MALException:str ;	# 585  (MALException:str) jump 587
    redo (_1244,_1245,_1246):= bat.hasMoreElements(date_bat);	# 586 CHPbunHasMoreElements (_1244:lng)(_1245:oid)(_1246:date)<-(date_bat:bat[:oid,:date]) jump 582
exit MALException:str ;	# 587  (MALException:str)
exit (_1244,_1245,_1246);	# 588  (_1244:lng)(_1245:oid)(_1246:date)
    qe_a:bat[:oid,:int]  := _1242;	# 589  (qe_a:bat[:oid,:int])<-(_1242:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 590 BKCsetColumn (re_a:void)<-(qe_a:bat[:oid,:int])(_440:str)
#      [day](date_bat).bat.setColumn("day"), 	# 591  (_442:str)
    _1255 := bat.new(nil:oid,nil:int);	# 592 CMDBATnew (_1255:bat[:oid,:int])<-(_1228:oid)(_1229:int)
barrier (_1257,_1258,_1259):= bat.newIterator(date_bat);	# 593 CHPbunIterator (_1257:lng)(_1258:oid)(_1259:date)<-(date_bat:bat[:oid,:date]) jump 600
    _1261 := mtime.month(_1259);	# 594 MTIMEdate_extract_month (_1261:int)<-(_1259:date)
    bat.insert(_1255,_1258,_1261);	# 595 BKCinsert_bun (_1262:void)<-(_1255:bat[:oid,:int])(_1258:oid)(_1261:int)
    redo (_1257,_1258,_1259):= bat.hasMoreElements(date_bat);	# 596 CHPbunHasMoreElements (_1257:lng)(_1258:oid)(_1259:date)<-(date_bat:bat[:oid,:date]) jump 594
catch MALException:str ;	# 597  (MALException:str) jump 599
    redo (_1257,_1258,_1259):= bat.hasMoreElements(date_bat);	# 598 CHPbunHasMoreElements (_1257:lng)(_1258:oid)(_1259:date)<-(date_bat:bat[:oid,:date]) jump 594
exit MALException:str ;	# 599  (MALException:str)
exit (_1257,_1258,_1259);	# 600  (_1257:lng)(_1258:oid)(_1259:date)
    se_a:bat[:oid,:int]  := _1255;	# 601  (se_a:bat[:oid,:int])<-(_1255:bat[:oid,:int])
    _1268 := bat.new(nil:oid,nil:str);	# 602 CMDBATnew (_1268:bat[:oid,:str])<-(_1269:oid)(_1270:str)
barrier (_1272,_1273,_1274):= bat.newIterator(se_a);	# 603 CHPbunIterator (_1272:lng)(_1273:oid)(_1274:int)<-(se_a:bat[:oid,:int]) jump 610
    _1276 := mtime.monthname(_1274);	# 604 MTIMEmonth_to_str (_1276:str)<-(_1274:int)
    bat.insert(_1268,_1273,_1276);	# 605 BKCinsert_bun (_1277:void)<-(_1268:bat[:oid,:str])(_1273:oid)(_1276:str)
    redo (_1272,_1273,_1274):= bat.hasMoreElements(se_a);	# 606 CHPbunHasMoreElements (_1272:lng)(_1273:oid)(_1274:int)<-(se_a:bat[:oid,:int]) jump 604
catch MALException:str ;	# 607  (MALException:str) jump 609
    redo (_1272,_1273,_1274):= bat.hasMoreElements(se_a);	# 608 CHPbunHasMoreElements (_1272:lng)(_1273:oid)(_1274:int)<-(se_a:bat[:oid,:int]) jump 604
exit MALException:str ;	# 609  (MALException:str)
exit (_1272,_1273,_1274);	# 610  (_1272:lng)(_1273:oid)(_1274:int)
    te_a:bat[:oid,:str]  := _1268;	# 611  (te_a:bat[:oid,:str])<-(_1268:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 612 BKCsetColumn (ue_a:void)<-(te_a:bat[:oid,:str])(_446:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 613  (_448:str)
    _1283 := bat.new(nil:oid,nil:int);	# 614 CMDBATnew (_1283:bat[:oid,:int])<-(_1269:oid)(_1284:int)
barrier (_1286,_1287,_1288):= bat.newIterator(date_bat);	# 615 CHPbunIterator (_1286:lng)(_1287:oid)(_1288:date)<-(date_bat:bat[:oid,:date]) jump 622
    _1290 := mtime.month(_1288);	# 616 MTIMEdate_extract_month (_1290:int)<-(_1288:date)
    bat.insert(_1283,_1287,_1290);	# 617 BKCinsert_bun (_1291:void)<-(_1283:bat[:oid,:int])(_1287:oid)(_1290:int)
    redo (_1286,_1287,_1288):= bat.hasMoreElements(date_bat);	# 618 CHPbunHasMoreElements (_1286:lng)(_1287:oid)(_1288:date)<-(date_bat:bat[:oid,:date]) jump 616
catch MALException:str ;	# 619  (MALException:str) jump 621
    redo (_1286,_1287,_1288):= bat.hasMoreElements(date_bat);	# 620 CHPbunHasMoreElements (_1286:lng)(_1287:oid)(_1288:date)<-(date_bat:bat[:oid,:date]) jump 616
exit MALException:str ;	# 621  (MALException:str)
exit (_1286,_1287,_1288);	# 622  (_1286:lng)(_1287:oid)(_1288:date)
    ve_a:bat[:oid,:int]  := _1283;	# 623  (ve_a:bat[:oid,:int])<-(_1283:bat[:oid,:int])
    _1297 := bat.new(nil:oid,nil:str);	# 624 CMDBATnew (_1297:bat[:oid,:str])<-(_1269:oid)(_1270:str)
barrier (_1299,_1300,_1301):= bat.newIterator(ve_a);	# 625 CHPbunIterator (_1299:lng)(_1300:oid)(_1301:int)<-(ve_a:bat[:oid,:int]) jump 632
    _1303 := mtime.monthname(_1301);	# 626 MTIMEmonth_to_str (_1303:str)<-(_1301:int)
    bat.insert(_1297,_1300,_1303);	# 627 BKCinsert_bun (_1304:void)<-(_1297:bat[:oid,:str])(_1300:oid)(_1303:str)
    redo (_1299,_1300,_1301):= bat.hasMoreElements(ve_a);	# 628 CHPbunHasMoreElements (_1299:lng)(_1300:oid)(_1301:int)<-(ve_a:bat[:oid,:int]) jump 626
catch MALException:str ;	# 629  (MALException:str) jump 631
    redo (_1299,_1300,_1301):= bat.hasMoreElements(ve_a);	# 630 CHPbunHasMoreElements (_1299:lng)(_1300:oid)(_1301:int)<-(ve_a:bat[:oid,:int]) jump 626
exit MALException:str ;	# 631  (MALException:str)
exit (_1299,_1300,_1301);	# 632  (_1299:lng)(_1300:oid)(_1301:int)
    we_a:bat[:oid,:str]  := _1297;	# 633  (we_a:bat[:oid,:str])<-(_1297:bat[:oid,:str])
    _1310 := bat.new(nil:oid,nil:int);	# 634 CMDBATnew (_1310:bat[:oid,:int])<-(_1311:oid)(_1284:int)
barrier (_1313,_1314,_1315):= bat.newIterator(we_a);	# 635 CHPbunIterator (_1313:lng)(_1314:oid)(_1315:str)<-(we_a:bat[:oid,:str]) jump 642
    _1317 := mtime.monthnum(_1315);	# 636 MTIMEmonth_from_str (_1317:int)<-(_1315:str)
    bat.insert(_1310,_1314,_1317);	# 637 BKCinsert_bun (_1318:void)<-(_1310:bat[:oid,:int])(_1314:oid)(_1317:int)
    redo (_1313,_1314,_1315):= bat.hasMoreElements(we_a);	# 638 CHPbunHasMoreElements (_1313:lng)(_1314:oid)(_1315:str)<-(we_a:bat[:oid,:str]) jump 636
catch MALException:str ;	# 639  (MALException:str) jump 641
    redo (_1313,_1314,_1315):= bat.hasMoreElements(we_a);	# 640 CHPbunHasMoreElements (_1313:lng)(_1314:oid)(_1315:str)<-(we_a:bat[:oid,:str]) jump 636
exit MALException:str ;	# 641  (MALException:str)
exit (_1313,_1314,_1315);	# 642  (_1313:lng)(_1314:oid)(_1315:str)
    xe_a:bat[:oid,:int]  := _1310;	# 643  (xe_a:bat[:oid,:int])<-(_1310:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 644 BKCsetColumn (ye_a:void)<-(xe_a:bat[:oid,:int])(_452:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 645 IOprint_val (_454:void)<-(_455:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 646 IOtable (af_a:void)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 647  (_457:str)
    _1324 := bat.new(nil:oid,nil:date);	# 648 CMDBATnew (_1324:bat[:oid,:date])<-(_1311:oid)(_1325:date)
barrier (_1327,_1328,_1329):= bat.newIterator(date_bat);	# 649 CHPbunIterator (_1327:lng)(_1328:oid)(_1329:date)<-(date_bat:bat[:oid,:date]) jump 656
    _1331 := mtime.addyears(_1329,-100);	# 650 MTIMEdate_addyears (_1331:date)<-(_1329:date)(_460:int)
    bat.insert(_1324,_1328,_1331);	# 651 BKCinsert_bun (_1332:void)<-(_1324:bat[:oid,:date])(_1328:oid)(_1331:date)
    redo (_1327,_1328,_1329):= bat.hasMoreElements(date_bat);	# 652 CHPbunHasMoreElements (_1327:lng)(_1328:oid)(_1329:date)<-(date_bat:bat[:oid,:date]) jump 650
catch MALException:str ;	# 653  (MALException:str) jump 655
    redo (_1327,_1328,_1329):= bat.hasMoreElements(date_bat);	# 654 CHPbunHasMoreElements (_1327:lng)(_1328:oid)(_1329:date)<-(date_bat:bat[:oid,:date]) jump 650
exit MALException:str ;	# 655  (MALException:str)
exit (_1327,_1328,_1329);	# 656  (_1327:lng)(_1328:oid)(_1329:date)
    date_addyears:bat[:oid,:date]  := _1324;	# 657  (date_addyears:bat[:oid,:date])<-(_1324:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 658  (_461:str)
    _1338 := bat.new(nil:oid,nil:date);	# 659 CMDBATnew (_1338:bat[:oid,:date])<-(_1311:oid)(_1325:date)
barrier (_1340,_1341,_1342):= bat.newIterator(date_bat);	# 660 CHPbunIterator (_1340:lng)(_1341:oid)(_1342:date)<-(date_bat:bat[:oid,:date]) jump 667
    _1344 := mtime.addmonths(_1342,1);	# 661 MTIMEdate_addmonths (_1344:date)<-(_1342:date)(_464:int)
    bat.insert(_1338,_1341,_1344);	# 662 BKCinsert_bun (_1345:void)<-(_1338:bat[:oid,:date])(_1341:oid)(_1344:date)
    redo (_1340,_1341,_1342):= bat.hasMoreElements(date_bat);	# 663 CHPbunHasMoreElements (_1340:lng)(_1341:oid)(_1342:date)<-(date_bat:bat[:oid,:date]) jump 661
catch MALException:str ;	# 664  (MALException:str) jump 666
    redo (_1340,_1341,_1342):= bat.hasMoreElements(date_bat);	# 665 CHPbunHasMoreElements (_1340:lng)(_1341:oid)(_1342:date)<-(date_bat:bat[:oid,:date]) jump 661
exit MALException:str ;	# 666  (MALException:str)
exit (_1340,_1341,_1342);	# 667  (_1340:lng)(_1341:oid)(_1342:date)
    date_addmonths:bat[:oid,:date]  := _1338;	# 668  (date_addmonths:bat[:oid,:date])<-(_1338:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 669  (_465:str)
    bat.setColumn(date_bat,"date");	# 670 BKCsetColumn (_466:void)<-(date_bat:bat[:oid,:date])(_432:str)
#io.print(date_bat.bat.setColumn("date"), 	# 671  (_433:str)
    bat.setColumn(date_addyears,"min100y");	# 672 BKCsetColumn (_467:void)<-(date_addyears:bat[:oid,:date])(_468:str)
#      date_addyears.bat.setColumn("min100y"), 	# 673  (_469:str)
    _1351 := bat.new(nil:oid,nil:int);	# 674 CMDBATnew (_1351:bat[:oid,:int])<-(_1352:oid)(_1353:int)
barrier (_1355,_1356,_1357):= bat.newIterator(date_addyears);	# 675 CHPbunIterator (_1355:lng)(_1356:oid)(_1357:date)<-(date_addyears:bat[:oid,:date]) jump 683
    _1359 := algebra.find(date_bat,_1356);	# 676 ALGfind (_1359:date)<-(date_bat:bat[:oid,:date])(_1356:oid)
    _1361 := mtime.diff(_1357,_1359);	# 677 MTIMEdate_diff (_1361:int)<-(_1357:date)(_1359:date)
    bat.insert(_1351,_1356,_1361);	# 678 BKCinsert_bun (_1362:void)<-(_1351:bat[:oid,:int])(_1356:oid)(_1361:int)
    redo (_1355,_1356,_1357):= bat.hasMoreElements(date_addyears);	# 679 CHPbunHasMoreElements (_1355:lng)(_1356:oid)(_1357:date)<-(date_addyears:bat[:oid,:date]) jump 676
catch MALException:str ;	# 680  (MALException:str) jump 682
    redo (_1355,_1356,_1357):= bat.hasMoreElements(date_addyears);	# 681 CHPbunHasMoreElements (_1355:lng)(_1356:oid)(_1357:date)<-(date_addyears:bat[:oid,:date]) jump 676
exit MALException:str ;	# 682  (MALException:str)
exit (_1355,_1356,_1357);	# 683  (_1355:lng)(_1356:oid)(_1357:date)
    df_a:bat[:oid,:int]  := _1351;	# 684  (df_a:bat[:oid,:int])<-(_1351:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 685 BKCsetColumn (_472:void)<-(df_a:bat[:oid,:int])(_471:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 686 IOprint_val (_473:void)<-(_474:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 687 IOtable (ff_a:void)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 688  (_476:str)
    bat.setColumn(date_bat,"date");	# 689 BKCsetColumn (_477:void)<-(date_bat:bat[:oid,:date])(_478:str)
#io.print(date_bat.bat.setColumn("date"), 	# 690  (_479:str)
    bat.setColumn(date_addmonths,"plus1m");	# 691 BKCsetColumn (_480:void)<-(date_addmonths:bat[:oid,:date])(_481:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 692  (_482:str)
    _1368 := bat.new(nil:oid,nil:int);	# 693 CMDBATnew (_1368:bat[:oid,:int])<-(_1352:oid)(_1353:int)
barrier (_1370,_1371,_1372):= bat.newIterator(date_addmonths);	# 694 CHPbunIterator (_1370:lng)(_1371:oid)(_1372:date)<-(date_addmonths:bat[:oid,:date]) jump 702
    _1374 := algebra.find(date_bat,_1371);	# 695 ALGfind (_1374:date)<-(date_bat:bat[:oid,:date])(_1371:oid)
    _1376 := mtime.diff(_1372,_1374);	# 696 MTIMEdate_diff (_1376:int)<-(_1372:date)(_1374:date)
    bat.insert(_1368,_1371,_1376);	# 697 BKCinsert_bun (_1377:void)<-(_1368:bat[:oid,:int])(_1371:oid)(_1376:int)
    redo (_1370,_1371,_1372):= bat.hasMoreElements(date_addmonths);	# 698 CHPbunHasMoreElements (_1370:lng)(_1371:oid)(_1372:date)<-(date_addmonths:bat[:oid,:date]) jump 695
catch MALException:str ;	# 699  (MALException:str) jump 701
    redo (_1370,_1371,_1372):= bat.hasMoreElements(date_addmonths);	# 700 CHPbunHasMoreElements (_1370:lng)(_1371:oid)(_1372:date)<-(date_addmonths:bat[:oid,:date]) jump 695
exit MALException:str ;	# 701  (MALException:str)
exit (_1370,_1371,_1372);	# 702  (_1370:lng)(_1371:oid)(_1372:date)
    if_a:bat[:oid,:int]  := _1368;	# 703  (if_a:bat[:oid,:int])<-(_1368:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 704 BKCsetColumn (_485:void)<-(if_a:bat[:oid,:int])(_471:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 705 IOprint_val (_486:void)<-(_487:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 706 IOtable (kf_a:void)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 707  (_489:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 708  (_490:str)
    date_seq := bat.new(:int,:date);	# 709 CMDBATnew (date_seq:bat[:int,:date])<-(_492:int)(_379:date)
#var date_seq := bat.new(int, date); 	# 710  (_493:str)
    i := -375;	# 711  (i:int)<-(_495:int)
#var i := -375; 	# 712  (_496:str)
barrier lf_a := true;	# 713  (lf_a:bit)<-(_498:bit) jump 723
    i := calc.+(i,1);	# 714 CALCbinaryADDintint (i:int)<-(i:int)(_464:int)
    of_a := calc.<(i,375);	# 715 CALCcompLTintint (of_a:bit)<-(i:int)(_500:int)
barrier mf_a := of_a;	# 716  (mf_a:bit)<-(of_a:bit) jump 722
#while ((i :+= 1) < 375) { 	# 717  (_508:str)
    pf_a := mtime.adddays(date_00,i);	# 718 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 719 BKCinsert_bun (_504:void)<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 720  (_505:str)
    redo lf_a;	# 721  (lf_a:bit) jump 714
exit mf_a;	# 722  (mf_a:bit)
exit lf_a;	# 723  (lf_a:bit)
#} 	# 724  (_506:str)
    rf_a := bat.setColumn(date_seq,"date");	# 725 BKCsetColumn (rf_a:void)<-(date_seq:bat[:int,:date])(_478:str)
#io.print(date_seq.bat.setColumn("date"), 	# 726  (_508:str)
    _1383 := bat.new(nil:int,nil:int);	# 727 CMDBATnew (_1383:bat[:int,:int])<-(_1353:int)(_1353:int)
barrier (_1385,_1386,_1387):= bat.newIterator(date_seq);	# 728 CHPbunIterator (_1385:lng)(_1386:int)(_1387:date)<-(date_seq:bat[:int,:date]) jump 735
    _1389 := mtime.weekofyear(_1387);	# 729 MTIMEdate_extract_weekofyear (_1389:int)<-(_1387:date)
    bat.insert(_1383,_1386,_1389);	# 730 BKCinsert_bun (_1390:void)<-(_1383:bat[:int,:int])(_1386:int)(_1389:int)
    redo (_1385,_1386,_1387):= bat.hasMoreElements(date_seq);	# 731 CHPbunHasMoreElements (_1385:lng)(_1386:int)(_1387:date)<-(date_seq:bat[:int,:date]) jump 729
catch MALException:str ;	# 732  (MALException:str) jump 734
    redo (_1385,_1386,_1387):= bat.hasMoreElements(date_seq);	# 733 CHPbunHasMoreElements (_1385:lng)(_1386:int)(_1387:date)<-(date_seq:bat[:int,:date]) jump 729
exit MALException:str ;	# 734  (MALException:str)
exit (_1385,_1386,_1387);	# 735  (_1385:lng)(_1386:int)(_1387:date)
    sf_a:bat[:int,:int]  := _1383;	# 736  (sf_a:bat[:int,:int])<-(_1383:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 737 BKCsetColumn (tf_a:void)<-(sf_a:bat[:int,:int])(_510:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 738  (_512:str)
    _1396 := bat.new(nil:int,nil:int);	# 739 CMDBATnew (_1396:bat[:int,:int])<-(_1397:int)(_1397:int)
barrier (_1399,_1400,_1401):= bat.newIterator(date_seq);	# 740 CHPbunIterator (_1399:lng)(_1400:int)(_1401:date)<-(date_seq:bat[:int,:date]) jump 747
    _1403 := mtime.dayofweek(_1401);	# 741 MTIMEdate_extract_dayofweek (_1403:int)<-(_1401:date)
    bat.insert(_1396,_1400,_1403);	# 742 BKCinsert_bun (_1404:void)<-(_1396:bat[:int,:int])(_1400:int)(_1403:int)
    redo (_1399,_1400,_1401):= bat.hasMoreElements(date_seq);	# 743 CHPbunHasMoreElements (_1399:lng)(_1400:int)(_1401:date)<-(date_seq:bat[:int,:date]) jump 741
catch MALException:str ;	# 744  (MALException:str) jump 746
    redo (_1399,_1400,_1401):= bat.hasMoreElements(date_seq);	# 745 CHPbunHasMoreElements (_1399:lng)(_1400:int)(_1401:date)<-(date_seq:bat[:int,:date]) jump 741
exit MALException:str ;	# 746  (MALException:str)
exit (_1399,_1400,_1401);	# 747  (_1399:lng)(_1400:int)(_1401:date)
    uf_a:bat[:int,:int]  := _1396;	# 748  (uf_a:bat[:int,:int])<-(_1396:bat[:int,:int])
    _1410 := bat.new(nil:int,nil:str);	# 749 CMDBATnew (_1410:bat[:int,:str])<-(_1397:int)(_1411:str)
barrier (_1413,_1414,_1415):= bat.newIterator(uf_a);	# 750 CHPbunIterator (_1413:lng)(_1414:int)(_1415:int)<-(uf_a:bat[:int,:int]) jump 757
    _1417 := mtime.dayname(_1415);	# 751 MTIMEday_to_str (_1417:str)<-(_1415:int)
    bat.insert(_1410,_1414,_1417);	# 752 BKCinsert_bun (_1418:void)<-(_1410:bat[:int,:str])(_1414:int)(_1417:str)
    redo (_1413,_1414,_1415):= bat.hasMoreElements(uf_a);	# 753 CHPbunHasMoreElements (_1413:lng)(_1414:int)(_1415:int)<-(uf_a:bat[:int,:int]) jump 751
catch MALException:str ;	# 754  (MALException:str) jump 756
    redo (_1413,_1414,_1415):= bat.hasMoreElements(uf_a);	# 755 CHPbunHasMoreElements (_1413:lng)(_1414:int)(_1415:int)<-(uf_a:bat[:int,:int]) jump 751
exit MALException:str ;	# 756  (MALException:str)
exit (_1413,_1414,_1415);	# 757  (_1413:lng)(_1414:int)(_1415:int)
    vf_a:bat[:int,:str]  := _1410;	# 758  (vf_a:bat[:int,:str])<-(_1410:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 759 BKCsetColumn (wf_a:void)<-(vf_a:bat[:int,:str])(_514:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 760  (_518:str)
    _1424 := bat.new(nil:int,nil:int);	# 761 CMDBATnew (_1424:bat[:int,:int])<-(_1397:int)(_1397:int)
barrier (_1426,_1427,_1428):= bat.newIterator(date_seq);	# 762 CHPbunIterator (_1426:lng)(_1427:int)(_1428:date)<-(date_seq:bat[:int,:date]) jump 769
    _1430 := mtime.dayofweek(_1428);	# 763 MTIMEdate_extract_dayofweek (_1430:int)<-(_1428:date)
    bat.insert(_1424,_1427,_1430);	# 764 BKCinsert_bun (_1431:void)<-(_1424:bat[:int,:int])(_1427:int)(_1430:int)
    redo (_1426,_1427,_1428):= bat.hasMoreElements(date_seq);	# 765 CHPbunHasMoreElements (_1426:lng)(_1427:int)(_1428:date)<-(date_seq:bat[:int,:date]) jump 763
catch MALException:str ;	# 766  (MALException:str) jump 768
    redo (_1426,_1427,_1428):= bat.hasMoreElements(date_seq);	# 767 CHPbunHasMoreElements (_1426:lng)(_1427:int)(_1428:date)<-(date_seq:bat[:int,:date]) jump 763
exit MALException:str ;	# 768  (MALException:str)
exit (_1426,_1427,_1428);	# 769  (_1426:lng)(_1427:int)(_1428:date)
    xf_a:bat[:int,:int]  := _1424;	# 770  (xf_a:bat[:int,:int])<-(_1424:bat[:int,:int])
    _1437 := bat.new(nil:int,nil:str);	# 771 CMDBATnew (_1437:bat[:int,:str])<-(_1438:int)(_1411:str)
barrier (_1440,_1441,_1442):= bat.newIterator(xf_a);	# 772 CHPbunIterator (_1440:lng)(_1441:int)(_1442:int)<-(xf_a:bat[:int,:int]) jump 779
    _1444 := mtime.dayname(_1442);	# 773 MTIMEday_to_str (_1444:str)<-(_1442:int)
    bat.insert(_1437,_1441,_1444);	# 774 BKCinsert_bun (_1445:void)<-(_1437:bat[:int,:str])(_1441:int)(_1444:str)
    redo (_1440,_1441,_1442):= bat.hasMoreElements(xf_a);	# 775 CHPbunHasMoreElements (_1440:lng)(_1441:int)(_1442:int)<-(xf_a:bat[:int,:int]) jump 773
catch MALException:str ;	# 776  (MALException:str) jump 778
    redo (_1440,_1441,_1442):= bat.hasMoreElements(xf_a);	# 777 CHPbunHasMoreElements (_1440:lng)(_1441:int)(_1442:int)<-(xf_a:bat[:int,:int]) jump 773
exit MALException:str ;	# 778  (MALException:str)
exit (_1440,_1441,_1442);	# 779  (_1440:lng)(_1441:int)(_1442:int)
    yf_a:bat[:int,:str]  := _1437;	# 780  (yf_a:bat[:int,:str])<-(_1437:bat[:int,:str])
    _1451 := bat.new(nil:int,nil:int);	# 781 CMDBATnew (_1451:bat[:int,:int])<-(_1438:int)(_1438:int)
barrier (_1453,_1454,_1455):= bat.newIterator(yf_a);	# 782 CHPbunIterator (_1453:lng)(_1454:int)(_1455:str)<-(yf_a:bat[:int,:str]) jump 789
    _1457 := mtime.daynum(_1455);	# 783 MTIMEday_from_str (_1457:int)<-(_1455:str)
    bat.insert(_1451,_1454,_1457);	# 784 BKCinsert_bun (_1458:void)<-(_1451:bat[:int,:int])(_1454:int)(_1457:int)
    redo (_1453,_1454,_1455):= bat.hasMoreElements(yf_a);	# 785 CHPbunHasMoreElements (_1453:lng)(_1454:int)(_1455:str)<-(yf_a:bat[:int,:str]) jump 783
catch MALException:str ;	# 786  (MALException:str) jump 788
    redo (_1453,_1454,_1455):= bat.hasMoreElements(yf_a);	# 787 CHPbunHasMoreElements (_1453:lng)(_1454:int)(_1455:str)<-(yf_a:bat[:int,:str]) jump 783
exit MALException:str ;	# 788  (MALException:str)
exit (_1453,_1454,_1455);	# 789  (_1453:lng)(_1454:int)(_1455:str)
    ag_a:bat[:int,:int]  := _1451;	# 790  (ag_a:bat[:int,:int])<-(_1451:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 791 BKCsetColumn (bg_a:void)<-(ag_a:bat[:int,:int])(_525:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 792  (_526:str)
    _1464 := bat.new(nil:int,nil:int);	# 793 CMDBATnew (_1464:bat[:int,:int])<-(_1438:int)(_1438:int)
barrier (_1466,_1467,_1468):= bat.newIterator(date_seq);	# 794 CHPbunIterator (_1466:lng)(_1467:int)(_1468:date)<-(date_seq:bat[:int,:date]) jump 801
    _1470 := mtime.dayofyear(_1468);	# 795 MTIMEdate_extract_dayofyear (_1470:int)<-(_1468:date)
    bat.insert(_1464,_1467,_1470);	# 796 BKCinsert_bun (_1471:void)<-(_1464:bat[:int,:int])(_1467:int)(_1470:int)
    redo (_1466,_1467,_1468):= bat.hasMoreElements(date_seq);	# 797 CHPbunHasMoreElements (_1466:lng)(_1467:int)(_1468:date)<-(date_seq:bat[:int,:date]) jump 795
catch MALException:str ;	# 798  (MALException:str) jump 800
    redo (_1466,_1467,_1468):= bat.hasMoreElements(date_seq);	# 799 CHPbunHasMoreElements (_1466:lng)(_1467:int)(_1468:date)<-(date_seq:bat[:int,:date]) jump 795
exit MALException:str ;	# 800  (MALException:str)
exit (_1466,_1467,_1468);	# 801  (_1466:lng)(_1467:int)(_1468:date)
    cg_a:bat[:int,:int]  := _1464;	# 802  (cg_a:bat[:int,:int])<-(_1464:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 803 BKCsetColumn (dg_a:void)<-(cg_a:bat[:int,:int])(_528:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 804 IOprint_val (_530:void)<-(_531:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 805 IOtable (eg_a:void)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 806  (_533:str)
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 807  (_534:str)
## test the various ways top create daytimes 	# 808  (_535:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 809 MTIMEdaytime_create (daytime_00:daytime)<-(_537:int)(_538:int)(_538:int)(_539:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 810  (_540:str)
    daytime_01 := mtime.daytime("23:59");	# 811 MTIMEdaytime_fromstr (daytime_01:daytime)<-(_542:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 812  (_543:str)
    daytime_02 := mtime.daytime("00:00");	# 813 MTIMEdaytime_fromstr (daytime_02:daytime)<-(_545:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 814  (_546:str)
    daytime_03 := mtime.daytime("23:59:59");	# 815 MTIMEdaytime_fromstr (daytime_03:daytime)<-(_548:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 816  (_549:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 817 MTIMEdaytime_fromstr (daytime_04:daytime)<-(_551:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 818  (_552:str)
    daytime_05 := mtime.daytime("00:00:00");	# 819 MTIMEdaytime_fromstr (daytime_05:daytime)<-(_554:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 820  (_555:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 821 MTIMEdaytime_fromstr (daytime_06:daytime)<-(_557:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 822  (_558:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 823 MTIMEdaytime_fromstr (daytime_07:daytime)<-(_560:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 824  (_561:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 825 MTIMEdaytime_fromstr (daytime_08:daytime)<-(_563:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 826  (_564:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 827 MTIMEdaytime_fromstr (daytime_09:daytime)<-(_566:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 828  (_567:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 829 MTIMEdaytime_fromstr (daytime_10:daytime)<-(_569:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 830  (_570:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 831 MTIMEdaytime_fromstr (daytime_11:daytime)<-(_572:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 832  (_573:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 833 MTIMEdaytime_fromstr (daytime_12:daytime)<-(_575:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 834  (_576:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 835 MTIMEdaytime_fromstr (daytime_13:daytime)<-(_578:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 836  (_579:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 837 MTIMEdaytime_fromstr (daytime_14:daytime)<-(_581:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 838  (_582:str)
## nil daytimes 	# 839  (_583:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 840 MTIMEdaytime_create (daytime_15:daytime)<-(_585:int)(_586:int)(_586:int)(_587:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 841  (_588:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 842 MTIMEdaytime_create (daytime_16:daytime)<-(_590:int)(_591:int)(_586:int)(_587:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 843  (_592:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 844 MTIMEdaytime_create (daytime_17:daytime)<-(_590:int)(_586:int)(_591:int)(_587:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 845  (_594:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 846 MTIMEdaytime_create (daytime_18:daytime)<-(_590:int)(_586:int)(_591:int)(_596:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 847  (_597:str)
    daytime_19 := mtime.daytime("nil");	# 848 MTIMEdaytime_fromstr (daytime_19:daytime)<-(_599:str)
#var daytime_19 := mtime.daytime("nil"); 	# 849  (_600:str)
    daytime_bat := bat.new(:oid,:daytime);	# 850 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-(_242:oid)(_602:daytime)
#var daytime_bat := bat.new(oid,daytime); 	# 851  (_603:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 852 BKCinsert_bun (_604:void)<-(daytime_bat:bat[:oid,:daytime])(_605:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 853 BKCinsert_bun (_606:void)<-(daytime_bat:bat[:oid,:daytime])(_607:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 854 BKCinsert_bun (_608:void)<-(daytime_bat:bat[:oid,:daytime])(_609:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 855  (_610:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 856 BKCinsert_bun (_611:void)<-(daytime_bat:bat[:oid,:daytime])(_612:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 857 BKCinsert_bun (_613:void)<-(daytime_bat:bat[:oid,:daytime])(_614:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 858 BKCinsert_bun (_615:void)<-(daytime_bat:bat[:oid,:daytime])(_616:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 859  (_617:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 860 BKCinsert_bun (_618:void)<-(daytime_bat:bat[:oid,:daytime])(_619:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 861 BKCinsert_bun (_620:void)<-(daytime_bat:bat[:oid,:daytime])(_621:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 862 BKCinsert_bun (_622:void)<-(daytime_bat:bat[:oid,:daytime])(_623:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 863  (_624:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 864 BKCinsert_bun (_625:void)<-(daytime_bat:bat[:oid,:daytime])(_626:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 865 BKCinsert_bun (_627:void)<-(daytime_bat:bat[:oid,:daytime])(_628:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 866 BKCinsert_bun (_629:void)<-(daytime_bat:bat[:oid,:daytime])(_630:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 867  (_631:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 868 BKCinsert_bun (_632:void)<-(daytime_bat:bat[:oid,:daytime])(_633:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 869 BKCinsert_bun (_634:void)<-(daytime_bat:bat[:oid,:daytime])(_635:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 870 BKCinsert_bun (_636:void)<-(daytime_bat:bat[:oid,:daytime])(_637:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 871  (_638:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 872 BKCinsert_bun (_639:void)<-(daytime_bat:bat[:oid,:daytime])(_640:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 873 BKCinsert_bun (_641:void)<-(daytime_bat:bat[:oid,:daytime])(_642:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 874 BKCinsert_bun (_643:void)<-(daytime_bat:bat[:oid,:daytime])(_644:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 875  (_645:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 876 BKCinsert_bun (_646:void)<-(daytime_bat:bat[:oid,:daytime])(_647:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 877 BKCinsert_bun (_648:void)<-(daytime_bat:bat[:oid,:daytime])(_649:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 878  (_650:str)
    bat.setColumn(daytime_bat,"daytime");	# 879 BKCsetColumn (_651:void)<-(daytime_bat:bat[:oid,:daytime])(_652:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 880  (_653:str)
    _1477 := bat.new(nil:oid,nil:int);	# 881 CMDBATnew (_1477:bat[:oid,:int])<-(_1478:oid)(_1479:int)
barrier (_1481,_1482,_1483):= bat.newIterator(daytime_bat);	# 882 CHPbunIterator (_1481:lng)(_1482:oid)(_1483:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 889
    _1485 := mtime.hours(_1483);	# 883 MTIMEdaytime_extract_hours (_1485:int)<-(_1483:daytime)
    bat.insert(_1477,_1482,_1485);	# 884 BKCinsert_bun (_1486:void)<-(_1477:bat[:oid,:int])(_1482:oid)(_1485:int)
    redo (_1481,_1482,_1483):= bat.hasMoreElements(daytime_bat);	# 885 CHPbunHasMoreElements (_1481:lng)(_1482:oid)(_1483:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 883
catch MALException:str ;	# 886  (MALException:str) jump 888
    redo (_1481,_1482,_1483):= bat.hasMoreElements(daytime_bat);	# 887 CHPbunHasMoreElements (_1481:lng)(_1482:oid)(_1483:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 883
exit MALException:str ;	# 888  (MALException:str)
exit (_1481,_1482,_1483);	# 889  (_1481:lng)(_1482:oid)(_1483:daytime)
    bh_a:bat[:oid,:int]  := _1477;	# 890  (bh_a:bat[:oid,:int])<-(_1477:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 891 BKCsetColumn (_657:void)<-(bh_a:bat[:oid,:int])(_656:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 892  (_658:str)
    _1492 := bat.new(nil:oid,nil:int);	# 893 CMDBATnew (_1492:bat[:oid,:int])<-(_1478:oid)(_1479:int)
barrier (_1494,_1495,_1496):= bat.newIterator(daytime_bat);	# 894 CHPbunIterator (_1494:lng)(_1495:oid)(_1496:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 901
    _1498 := mtime.minutes(_1496);	# 895 MTIMEdaytime_extract_minutes (_1498:int)<-(_1496:daytime)
    bat.insert(_1492,_1495,_1498);	# 896 BKCinsert_bun (_1499:void)<-(_1492:bat[:oid,:int])(_1495:oid)(_1498:int)
    redo (_1494,_1495,_1496):= bat.hasMoreElements(daytime_bat);	# 897 CHPbunHasMoreElements (_1494:lng)(_1495:oid)(_1496:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 895
catch MALException:str ;	# 898  (MALException:str) jump 900
    redo (_1494,_1495,_1496):= bat.hasMoreElements(daytime_bat);	# 899 CHPbunHasMoreElements (_1494:lng)(_1495:oid)(_1496:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 895
exit MALException:str ;	# 900  (MALException:str)
exit (_1494,_1495,_1496);	# 901  (_1494:lng)(_1495:oid)(_1496:daytime)
    dh_a:bat[:oid,:int]  := _1492;	# 902  (dh_a:bat[:oid,:int])<-(_1492:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 903 BKCsetColumn (_661:void)<-(dh_a:bat[:oid,:int])(_660:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 904  (_662:str)
    _1505 := bat.new(nil:oid,nil:int);	# 905 CMDBATnew (_1505:bat[:oid,:int])<-(_1478:oid)(_1479:int)
barrier (_1507,_1508,_1509):= bat.newIterator(daytime_bat);	# 906 CHPbunIterator (_1507:lng)(_1508:oid)(_1509:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 913
    _1511 := mtime.seconds(_1509);	# 907 MTIMEdaytime_extract_seconds (_1511:int)<-(_1509:daytime)
    bat.insert(_1505,_1508,_1511);	# 908 BKCinsert_bun (_1512:void)<-(_1505:bat[:oid,:int])(_1508:oid)(_1511:int)
    redo (_1507,_1508,_1509):= bat.hasMoreElements(daytime_bat);	# 909 CHPbunHasMoreElements (_1507:lng)(_1508:oid)(_1509:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 907
catch MALException:str ;	# 910  (MALException:str) jump 912
    redo (_1507,_1508,_1509):= bat.hasMoreElements(daytime_bat);	# 911 CHPbunHasMoreElements (_1507:lng)(_1508:oid)(_1509:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 907
exit MALException:str ;	# 912  (MALException:str)
exit (_1507,_1508,_1509);	# 913  (_1507:lng)(_1508:oid)(_1509:daytime)
    fh_a:bat[:oid,:int]  := _1505;	# 914  (fh_a:bat[:oid,:int])<-(_1505:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 915 BKCsetColumn (_665:void)<-(fh_a:bat[:oid,:int])(_664:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 916  (_666:str)
    _1518 := bat.new(nil:oid,nil:int);	# 917 CMDBATnew (_1518:bat[:oid,:int])<-(_1519:oid)(_1520:int)
barrier (_1522,_1523,_1524):= bat.newIterator(daytime_bat);	# 918 CHPbunIterator (_1522:lng)(_1523:oid)(_1524:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 925
    _1526 := mtime.milliseconds(_1524);	# 919 MTIMEdaytime_extract_milliseconds (_1526:int)<-(_1524:daytime)
    bat.insert(_1518,_1523,_1526);	# 920 BKCinsert_bun (_1527:void)<-(_1518:bat[:oid,:int])(_1523:oid)(_1526:int)
    redo (_1522,_1523,_1524):= bat.hasMoreElements(daytime_bat);	# 921 CHPbunHasMoreElements (_1522:lng)(_1523:oid)(_1524:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 919
catch MALException:str ;	# 922  (MALException:str) jump 924
    redo (_1522,_1523,_1524):= bat.hasMoreElements(daytime_bat);	# 923 CHPbunHasMoreElements (_1522:lng)(_1523:oid)(_1524:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 919
exit MALException:str ;	# 924  (MALException:str)
exit (_1522,_1523,_1524);	# 925  (_1522:lng)(_1523:oid)(_1524:daytime)
    hh_a:bat[:oid,:int]  := _1518;	# 926  (hh_a:bat[:oid,:int])<-(_1518:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 927 BKCsetColumn (_669:void)<-(hh_a:bat[:oid,:int])(_668:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 928 IOprint_val (_670:void)<-(_671:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 929 IOtable (jh_a:void)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 930  (_673:str)
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 931  (_674:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 932  (_675:str)
# Skipped due to coercion implication 	# 933  (_676:str)
    _1533 := bat.new(nil:oid,nil:timestamp);	# 934 CMDBATnew (_1533:bat[:oid,:timestamp])<-(_1519:oid)(_1534:timestamp)
barrier (_1536,_1537,_1538):= bat.newIterator(date_bat);	# 935 CHPbunIterator (_1536:lng)(_1537:oid)(_1538:date)<-(date_bat:bat[:oid,:date]) jump 944
    _1540 := algebra.find(daytime_bat,_1537);	# 936 ALGfind (_1540:daytime)<-(daytime_bat:bat[:oid,:daytime])(_1537:oid)
    _1542 := algebra.find(tzone_bat,_1537);	# 937 ALGfind (_1542:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1537:oid)
    _1544 := mtime.timestamp(_1538,_1540,_1542);	# 938 MTIMEtimestamp_create (_1544:timestamp)<-(_1538:date)(_1540:daytime)(_1542:timezone)
    bat.insert(_1533,_1537,_1544);	# 939 BKCinsert_bun (_1545:void)<-(_1533:bat[:oid,:timestamp])(_1537:oid)(_1544:timestamp)
    redo (_1536,_1537,_1538):= bat.hasMoreElements(date_bat);	# 940 CHPbunHasMoreElements (_1536:lng)(_1537:oid)(_1538:date)<-(date_bat:bat[:oid,:date]) jump 936
catch MALException:str ;	# 941  (MALException:str) jump 943
    redo (_1536,_1537,_1538):= bat.hasMoreElements(date_bat);	# 942 CHPbunHasMoreElements (_1536:lng)(_1537:oid)(_1538:date)<-(date_bat:bat[:oid,:date]) jump 936
exit MALException:str ;	# 943  (MALException:str)
exit (_1536,_1537,_1538);	# 944  (_1536:lng)(_1537:oid)(_1538:date)
    kh_a:bat[:oid,:timestamp]  := _1533;	# 945  (kh_a:bat[:oid,:timestamp])<-(_1533:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 946  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 947 BKCsetWriteMode (_680:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 948  (_681:str)
## KILL 	# 949  (_682:str)
## var timestamp_now := timestamp(epoch()); 	# 950  (_683:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 951  (_684:str)
## test the timestamp operations 	# 952  (_685:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 953 BKCsetColumn (_686:void)<-(timestamp_bat:bat[:oid,:timestamp])(_678:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 954  (_687:str)
    _1551 := bat.new(nil:oid,nil:date);	# 955 CMDBATnew (_1551:bat[:oid,:date])<-(_1519:oid)(_1552:date)
barrier (_1554,_1555,_1556):= bat.newIterator(timestamp_bat);	# 956 CHPbunIterator (_1554:lng)(_1555:oid)(_1556:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 964
    _1558 := algebra.find(tzone_bat,_1555);	# 957 ALGfind (_1558:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1555:oid)
    _1560 := mtime.date(_1556,_1558);	# 958 MTIMEtimestamp_extract_date (_1560:date)<-(_1556:timestamp)(_1558:timezone)
    bat.insert(_1551,_1555,_1560);	# 959 BKCinsert_bun (_1561:void)<-(_1551:bat[:oid,:date])(_1555:oid)(_1560:date)
    redo (_1554,_1555,_1556):= bat.hasMoreElements(timestamp_bat);	# 960 CHPbunHasMoreElements (_1554:lng)(_1555:oid)(_1556:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 957
catch MALException:str ;	# 961  (MALException:str) jump 963
    redo (_1554,_1555,_1556):= bat.hasMoreElements(timestamp_bat);	# 962 CHPbunHasMoreElements (_1554:lng)(_1555:oid)(_1556:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 957
exit MALException:str ;	# 963  (MALException:str)
exit (_1554,_1555,_1556);	# 964  (_1554:lng)(_1555:oid)(_1556:timestamp)
    mh_a:bat[:oid,:date]  := _1551;	# 965  (mh_a:bat[:oid,:date])<-(_1551:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 966 BKCsetColumn (_690:void)<-(mh_a:bat[:oid,:date])(_689:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 967  (_691:str)
    _1567 := bat.new(nil:oid,nil:daytime);	# 968 CMDBATnew (_1567:bat[:oid,:daytime])<-(_1568:oid)(_1569:daytime)
barrier (_1571,_1572,_1573):= bat.newIterator(timestamp_bat);	# 969 CHPbunIterator (_1571:lng)(_1572:oid)(_1573:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 977
    _1575 := algebra.find(tzone_bat,_1572);	# 970 ALGfind (_1575:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1572:oid)
    _1577 := mtime.daytime(_1573,_1575);	# 971 MTIMEtimestamp_extract_daytime (_1577:daytime)<-(_1573:timestamp)(_1575:timezone)
    bat.insert(_1567,_1572,_1577);	# 972 BKCinsert_bun (_1578:void)<-(_1567:bat[:oid,:daytime])(_1572:oid)(_1577:daytime)
    redo (_1571,_1572,_1573):= bat.hasMoreElements(timestamp_bat);	# 973 CHPbunHasMoreElements (_1571:lng)(_1572:oid)(_1573:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 970
catch MALException:str ;	# 974  (MALException:str) jump 976
    redo (_1571,_1572,_1573):= bat.hasMoreElements(timestamp_bat);	# 975 CHPbunHasMoreElements (_1571:lng)(_1572:oid)(_1573:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 970
exit MALException:str ;	# 976  (MALException:str)
exit (_1571,_1572,_1573);	# 977  (_1571:lng)(_1572:oid)(_1573:timestamp)
    oh_a:bat[:oid,:daytime]  := _1567;	# 978  (oh_a:bat[:oid,:daytime])<-(_1567:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 979 BKCsetColumn (_695:void)<-(oh_a:bat[:oid,:daytime])(_694:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 980 IOprint_val (_696:void)<-(_697:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 981 IOtable (_698:void)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 982  (_699:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 983 BKCsetColumn (rh_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_678:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 984  (_687:str)
    timezones:bat[:str,:timezone]  := bbp.bind("timezones");	# 985 CMDbbpbind (timezones:bat[:str,:timezone])<-(_702:str)
    io.print("print(timezones)");	# 986 IOprint_val (_703:void)<-(_704:str)
    io.print(timezones);	# 987 IOprint_val (_705:void)<-(timezones:bat[:str,:timezone])
    sh_a:timezone  := algebra.find(timezones,"Wake Island");	# 988 ALGfind (sh_a:timezone)<-(timezones:bat[:str,:timezone])(_707:str)
    _1584 := bat.new(nil:oid,nil:date);	# 989 CMDBATnew (_1584:bat[:oid,:date])<-(_1568:oid)(_1552:date)
barrier (_1586,_1587,_1588):= bat.newIterator(timestamp_bat);	# 990 CHPbunIterator (_1586:lng)(_1587:oid)(_1588:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 997
    _1590 := mtime.date(_1588,sh_a);	# 991 MTIMEtimestamp_extract_date (_1590:date)<-(_1588:timestamp)(sh_a:timezone)
    bat.insert(_1584,_1587,_1590);	# 992 BKCinsert_bun (_1591:void)<-(_1584:bat[:oid,:date])(_1587:oid)(_1590:date)
    redo (_1586,_1587,_1588):= bat.hasMoreElements(timestamp_bat);	# 993 CHPbunHasMoreElements (_1586:lng)(_1587:oid)(_1588:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 991
catch MALException:str ;	# 994  (MALException:str) jump 996
    redo (_1586,_1587,_1588):= bat.hasMoreElements(timestamp_bat);	# 995 CHPbunHasMoreElements (_1586:lng)(_1587:oid)(_1588:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 991
exit MALException:str ;	# 996  (MALException:str)
exit (_1586,_1587,_1588);	# 997  (_1586:lng)(_1587:oid)(_1588:timestamp)
    th_a:bat[:oid,:date]  := _1584;	# 998  (th_a:bat[:oid,:date])<-(_1584:bat[:oid,:date])
    bat.setColumn(th_a,"Wake Island");	# 999 BKCsetColumn (_709:void)<-(th_a:bat[:oid,:date])(_707:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 1000  (_710:str)
    vh_a:timezone  := algebra.find(timezones,"Wake Island");	# 1001 ALGfind (vh_a:timezone)<-(timezones:bat[:str,:timezone])(_707:str)
    _1597 := bat.new(nil:oid,nil:daytime);	# 1002 CMDBATnew (_1597:bat[:oid,:daytime])<-(_1568:oid)(_1569:daytime)
barrier (_1599,_1600,_1601):= bat.newIterator(timestamp_bat);	# 1003 CHPbunIterator (_1599:lng)(_1600:oid)(_1601:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1010
    _1603 := mtime.daytime(_1601,vh_a);	# 1004 MTIMEtimestamp_extract_daytime (_1603:daytime)<-(_1601:timestamp)(vh_a:timezone)
    bat.insert(_1597,_1600,_1603);	# 1005 BKCinsert_bun (_1604:void)<-(_1597:bat[:oid,:daytime])(_1600:oid)(_1603:daytime)
    redo (_1599,_1600,_1601):= bat.hasMoreElements(timestamp_bat);	# 1006 CHPbunHasMoreElements (_1599:lng)(_1600:oid)(_1601:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1004
catch MALException:str ;	# 1007  (MALException:str) jump 1009
    redo (_1599,_1600,_1601):= bat.hasMoreElements(timestamp_bat);	# 1008 CHPbunHasMoreElements (_1599:lng)(_1600:oid)(_1601:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1004
exit MALException:str ;	# 1009  (MALException:str)
exit (_1599,_1600,_1601);	# 1010  (_1599:lng)(_1600:oid)(_1601:timestamp)
    wh_a:bat[:oid,:daytime]  := _1597;	# 1011  (wh_a:bat[:oid,:daytime])<-(_1597:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 1012  (_713:str)
    xh_a:timezone  := algebra.find(timezones,"American Samoa");	# 1013 ALGfind (xh_a:timezone)<-(timezones:bat[:str,:timezone])(_715:str)
    _1610 := bat.new(nil:oid,nil:date);	# 1014 CMDBATnew (_1610:bat[:oid,:date])<-(_1611:oid)(_1612:date)
barrier (_1614,_1615,_1616):= bat.newIterator(timestamp_bat);	# 1015 CHPbunIterator (_1614:lng)(_1615:oid)(_1616:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1022
    _1618 := mtime.date(_1616,xh_a);	# 1016 MTIMEtimestamp_extract_date (_1618:date)<-(_1616:timestamp)(xh_a:timezone)
    bat.insert(_1610,_1615,_1618);	# 1017 BKCinsert_bun (_1619:void)<-(_1610:bat[:oid,:date])(_1615:oid)(_1618:date)
    redo (_1614,_1615,_1616):= bat.hasMoreElements(timestamp_bat);	# 1018 CHPbunHasMoreElements (_1614:lng)(_1615:oid)(_1616:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1016
catch MALException:str ;	# 1019  (MALException:str) jump 1021
    redo (_1614,_1615,_1616):= bat.hasMoreElements(timestamp_bat);	# 1020 CHPbunHasMoreElements (_1614:lng)(_1615:oid)(_1616:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1016
exit MALException:str ;	# 1021  (MALException:str)
exit (_1614,_1615,_1616);	# 1022  (_1614:lng)(_1615:oid)(_1616:timestamp)
    yh_a:bat[:oid,:date]  := _1610;	# 1023  (yh_a:bat[:oid,:date])<-(_1610:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 1024 BKCsetColumn (ai_a:void)<-(yh_a:bat[:oid,:date])(_715:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 1025  (_718:str)
    bi_a:timezone  := algebra.find(timezones,"American Samoa");	# 1026 ALGfind (bi_a:timezone)<-(timezones:bat[:str,:timezone])(_715:str)
    _1625 := bat.new(nil:oid,nil:daytime);	# 1027 CMDBATnew (_1625:bat[:oid,:daytime])<-(_1611:oid)(_1626:daytime)
barrier (_1628,_1629,_1630):= bat.newIterator(timestamp_bat);	# 1028 CHPbunIterator (_1628:lng)(_1629:oid)(_1630:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1035
    _1632 := mtime.daytime(_1630,bi_a);	# 1029 MTIMEtimestamp_extract_daytime (_1632:daytime)<-(_1630:timestamp)(bi_a:timezone)
    bat.insert(_1625,_1629,_1632);	# 1030 BKCinsert_bun (_1633:void)<-(_1625:bat[:oid,:daytime])(_1629:oid)(_1632:daytime)
    redo (_1628,_1629,_1630):= bat.hasMoreElements(timestamp_bat);	# 1031 CHPbunHasMoreElements (_1628:lng)(_1629:oid)(_1630:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1029
catch MALException:str ;	# 1032  (MALException:str) jump 1034
    redo (_1628,_1629,_1630):= bat.hasMoreElements(timestamp_bat);	# 1033 CHPbunHasMoreElements (_1628:lng)(_1629:oid)(_1630:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1029
exit MALException:str ;	# 1034  (MALException:str)
exit (_1628,_1629,_1630);	# 1035  (_1628:lng)(_1629:oid)(_1630:timestamp)
    ci_a:bat[:oid,:daytime]  := _1625;	# 1036  (ci_a:bat[:oid,:daytime])<-(_1625:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 1037 IOprint_val (_721:void)<-(_722:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 1038 IOtable (di_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 1039  (_724:str)
    ei_a := calc.*(60,1000);	# 1040 CALCbinaryMULintint (ei_a:int)<-(_726:int)(_727:int)
    fi_a := calc.*(60,ei_a);	# 1041 CALCbinaryMULintint (fi_a:int)<-(_726:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 1042 CALCbinaryMULintint (gi_a:int)<-(_730:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 1043 CALCint2lng (hi_a:lng)<-(gi_a:int)
    _1639 := bat.new(nil:oid,nil:timestamp);	# 1044 CMDBATnew (_1639:bat[:oid,:timestamp])<-(_1611:oid)(_1640:timestamp)
barrier (_1642,_1643,_1644):= bat.newIterator(timestamp_bat);	# 1045 CHPbunIterator (_1642:lng)(_1643:oid)(_1644:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1052
    _1646 := mtime.add(_1644,hi_a);	# 1046 MTIMEtimestamp_add (_1646:timestamp)<-(_1644:timestamp)(hi_a:lng)
    bat.insert(_1639,_1643,_1646);	# 1047 BKCinsert_bun (_1647:void)<-(_1639:bat[:oid,:timestamp])(_1643:oid)(_1646:timestamp)
    redo (_1642,_1643,_1644):= bat.hasMoreElements(timestamp_bat);	# 1048 CHPbunHasMoreElements (_1642:lng)(_1643:oid)(_1644:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1046
catch MALException:str ;	# 1049  (MALException:str) jump 1051
    redo (_1642,_1643,_1644):= bat.hasMoreElements(timestamp_bat);	# 1050 CHPbunHasMoreElements (_1642:lng)(_1643:oid)(_1644:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1046
exit MALException:str ;	# 1051  (MALException:str)
exit (_1642,_1643,_1644);	# 1052  (_1642:lng)(_1643:oid)(_1644:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := _1639;	# 1053  (timestamp_plus:bat[:oid,:timestamp])<-(_1639:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 1054  (_735:str)
    ii_a := calc.*(-60,1000);	# 1055 CALCbinaryMULintint (ii_a:int)<-(_737:int)(_727:int)
    ji_a := calc.lng(ii_a);	# 1056 CALCint2lng (ji_a:lng)<-(ii_a:int)
    _1653 := bat.new(nil:oid,nil:timestamp);	# 1057 CMDBATnew (_1653:bat[:oid,:timestamp])<-(_1654:oid)(_1640:timestamp)
barrier (_1656,_1657,_1658):= bat.newIterator(timestamp_bat);	# 1058 CHPbunIterator (_1656:lng)(_1657:oid)(_1658:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1065
    _1660 := mtime.add(_1658,ji_a);	# 1059 MTIMEtimestamp_add (_1660:timestamp)<-(_1658:timestamp)(ji_a:lng)
    bat.insert(_1653,_1657,_1660);	# 1060 BKCinsert_bun (_1661:void)<-(_1653:bat[:oid,:timestamp])(_1657:oid)(_1660:timestamp)
    redo (_1656,_1657,_1658):= bat.hasMoreElements(timestamp_bat);	# 1061 CHPbunHasMoreElements (_1656:lng)(_1657:oid)(_1658:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1059
catch MALException:str ;	# 1062  (MALException:str) jump 1064
    redo (_1656,_1657,_1658):= bat.hasMoreElements(timestamp_bat);	# 1063 CHPbunHasMoreElements (_1656:lng)(_1657:oid)(_1658:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1059
exit MALException:str ;	# 1064  (MALException:str)
exit (_1656,_1657,_1658);	# 1065  (_1656:lng)(_1657:oid)(_1658:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := _1653;	# 1066  (timestamp_minus:bat[:oid,:timestamp])<-(_1653:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 1067  (_740:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1068 BKCsetColumn (ki_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_742:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1069  (_743:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1070 BKCsetColumn (li_a:void)<-(timestamp_plus:bat[:oid,:timestamp])(_745:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1071  (_746:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1072 BKCsetColumn (mi_a:void)<-(timestamp_minus:bat[:oid,:timestamp])(_748:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1073  (_749:str)
    _1667 := bat.new(nil:oid,nil:lng);	# 1074 CMDBATnew (_1667:bat[:oid,:lng])<-(_1654:oid)(_1668:lng)
barrier (_1670,_1671,_1672):= bat.newIterator(timestamp_plus);	# 1075 CHPbunIterator (_1670:lng)(_1671:oid)(_1672:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1083
    _1674 := algebra.find(timestamp_minus,_1671);	# 1076 ALGfind (_1674:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])(_1671:oid)
    _1676 := mtime.diff(_1672,_1674);	# 1077 MTIMEtimestamp_diff (_1676:lng)<-(_1672:timestamp)(_1674:timestamp)
    bat.insert(_1667,_1671,_1676);	# 1078 BKCinsert_bun (_1677:void)<-(_1667:bat[:oid,:lng])(_1671:oid)(_1676:lng)
    redo (_1670,_1671,_1672):= bat.hasMoreElements(timestamp_plus);	# 1079 CHPbunHasMoreElements (_1670:lng)(_1671:oid)(_1672:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1076
catch MALException:str ;	# 1080  (MALException:str) jump 1082
    redo (_1670,_1671,_1672):= bat.hasMoreElements(timestamp_plus);	# 1081 CHPbunHasMoreElements (_1670:lng)(_1671:oid)(_1672:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1076
exit MALException:str ;	# 1082  (MALException:str)
exit (_1670,_1671,_1672);	# 1083  (_1670:lng)(_1671:oid)(_1672:timestamp)
    ni_a:bat[:oid,:lng]  := _1667;	# 1084  (ni_a:bat[:oid,:lng])<-(_1667:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1085 CALCbinaryMULintint (oi_a:int)<-(_726:int)(_727:int)
    pi_a := calc.*(60,oi_a);	# 1086 CALCbinaryMULintint (pi_a:int)<-(_726:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1087 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1088 CMDbatDIVcst_lng_lng_lng (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1089 BKCsetColumn (si_a:void)<-(ri_a:bat[:oid,:lng])(_751:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1090 IOprint_val (_757:void)<-(_758:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1091 IOtable (ti_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1092  (_760:str)
    ui_a:timezone  := algebra.find(timezones,"West/Europe");	# 1093 ALGfind (ui_a:timezone)<-(timezones:bat[:str,:timezone])(_762:str)
    _1683 := bat.new(nil:int,nil:timestamp);	# 1094 CMDBATnew (_1683:bat[:int,:timestamp])<-(_1684:int)(_1685:timestamp)
barrier (_1687,_1688,_1689):= bat.newIterator(date_seq);	# 1095 CHPbunIterator (_1687:lng)(_1688:int)(_1689:date)<-(date_seq:bat[:int,:date]) jump 1102
    _1691 := mtime.timestamp(_1689,daytime_00,ui_a);	# 1096 MTIMEtimestamp_create (_1691:timestamp)<-(_1689:date)(daytime_00:daytime)(ui_a:timezone)
    bat.insert(_1683,_1688,_1691);	# 1097 BKCinsert_bun (_1692:void)<-(_1683:bat[:int,:timestamp])(_1688:int)(_1691:timestamp)
    redo (_1687,_1688,_1689):= bat.hasMoreElements(date_seq);	# 1098 CHPbunHasMoreElements (_1687:lng)(_1688:int)(_1689:date)<-(date_seq:bat[:int,:date]) jump 1096
catch MALException:str ;	# 1099  (MALException:str) jump 1101
    redo (_1687,_1688,_1689):= bat.hasMoreElements(date_seq);	# 1100 CHPbunHasMoreElements (_1687:lng)(_1688:int)(_1689:date)<-(date_seq:bat[:int,:date]) jump 1096
exit MALException:str ;	# 1101  (MALException:str)
exit (_1687,_1688,_1689);	# 1102  (_1687:lng)(_1688:int)(_1689:date)
    timestamp_eur:bat[:int,:timestamp]  := _1683;	# 1103  (timestamp_eur:bat[:int,:timestamp])<-(_1683:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1104  (_764:str)
    vi_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1105 ALGfind (vi_a:timezone)<-(timezones:bat[:str,:timezone])(_766:str)
    _1698 := bat.new(nil:int,nil:timestamp);	# 1106 CMDBATnew (_1698:bat[:int,:timestamp])<-(_1684:int)(_1685:timestamp)
barrier (_1700,_1701,_1702):= bat.newIterator(date_seq);	# 1107 CHPbunIterator (_1700:lng)(_1701:int)(_1702:date)<-(date_seq:bat[:int,:date]) jump 1114
    _1704 := mtime.timestamp(_1702,daytime_00,vi_a);	# 1108 MTIMEtimestamp_create (_1704:timestamp)<-(_1702:date)(daytime_00:daytime)(vi_a:timezone)
    bat.insert(_1698,_1701,_1704);	# 1109 BKCinsert_bun (_1705:void)<-(_1698:bat[:int,:timestamp])(_1701:int)(_1704:timestamp)
    redo (_1700,_1701,_1702):= bat.hasMoreElements(date_seq);	# 1110 CHPbunHasMoreElements (_1700:lng)(_1701:int)(_1702:date)<-(date_seq:bat[:int,:date]) jump 1108
catch MALException:str ;	# 1111  (MALException:str) jump 1113
    redo (_1700,_1701,_1702):= bat.hasMoreElements(date_seq);	# 1112 CHPbunHasMoreElements (_1700:lng)(_1701:int)(_1702:date)<-(date_seq:bat[:int,:date]) jump 1108
exit MALException:str ;	# 1113  (MALException:str)
exit (_1700,_1701,_1702);	# 1114  (_1700:lng)(_1701:int)(_1702:date)
    timestamp_bra:bat[:int,:timestamp]  := _1698;	# 1115  (timestamp_bra:bat[:int,:timestamp])<-(_1698:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1116  (_768:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1117 BKCsetColumn (wi_a:void)<-(date_seq:bat[:int,:date])(_770:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1118  (_771:str)
    _1711 := bat.new(nil:int,nil:int);	# 1119 CMDBATnew (_1711:bat[:int,:int])<-(_1684:int)(_1684:int)
barrier (_1713,_1714,_1715):= bat.newIterator(date_seq);	# 1120 CHPbunIterator (_1713:lng)(_1714:int)(_1715:date)<-(date_seq:bat[:int,:date]) jump 1127
    _1717 := mtime.dayofweek(_1715);	# 1121 MTIMEdate_extract_dayofweek (_1717:int)<-(_1715:date)
    bat.insert(_1711,_1714,_1717);	# 1122 BKCinsert_bun (_1718:void)<-(_1711:bat[:int,:int])(_1714:int)(_1717:int)
    redo (_1713,_1714,_1715):= bat.hasMoreElements(date_seq);	# 1123 CHPbunHasMoreElements (_1713:lng)(_1714:int)(_1715:date)<-(date_seq:bat[:int,:date]) jump 1121
catch MALException:str ;	# 1124  (MALException:str) jump 1126
    redo (_1713,_1714,_1715):= bat.hasMoreElements(date_seq);	# 1125 CHPbunHasMoreElements (_1713:lng)(_1714:int)(_1715:date)<-(date_seq:bat[:int,:date]) jump 1121
exit MALException:str ;	# 1126  (MALException:str)
exit (_1713,_1714,_1715);	# 1127  (_1713:lng)(_1714:int)(_1715:date)
    xi_a:bat[:int,:int]  := _1711;	# 1128  (xi_a:bat[:int,:int])<-(_1711:bat[:int,:int])
    _1724 := bat.new(nil:int,nil:str);	# 1129 CMDBATnew (_1724:bat[:int,:str])<-(_1725:int)(_1726:str)
barrier (_1728,_1729,_1730):= bat.newIterator(xi_a);	# 1130 CHPbunIterator (_1728:lng)(_1729:int)(_1730:int)<-(xi_a:bat[:int,:int]) jump 1137
    _1732 := mtime.dayname(_1730);	# 1131 MTIMEday_to_str (_1732:str)<-(_1730:int)
    bat.insert(_1724,_1729,_1732);	# 1132 BKCinsert_bun (_1733:void)<-(_1724:bat[:int,:str])(_1729:int)(_1732:str)
    redo (_1728,_1729,_1730):= bat.hasMoreElements(xi_a);	# 1133 CHPbunHasMoreElements (_1728:lng)(_1729:int)(_1730:int)<-(xi_a:bat[:int,:int]) jump 1131
catch MALException:str ;	# 1134  (MALException:str) jump 1136
    redo (_1728,_1729,_1730):= bat.hasMoreElements(xi_a);	# 1135 CHPbunHasMoreElements (_1728:lng)(_1729:int)(_1730:int)<-(xi_a:bat[:int,:int]) jump 1131
exit MALException:str ;	# 1136  (MALException:str)
exit (_1728,_1729,_1730);	# 1137  (_1728:lng)(_1729:int)(_1730:int)
    yi_a:bat[:int,:str]  := _1724;	# 1138  (yi_a:bat[:int,:str])<-(_1724:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1139 BKCsetColumn (aj_a:void)<-(yi_a:bat[:int,:str])(_778:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1140  (_779:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1141 BKCsetColumn (bj_a:void)<-(timestamp_eur:bat[:int,:timestamp])(_762:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1142  (_781:str)
    cj_a:timezone  := algebra.find(timezones,"West/Europe");	# 1143 ALGfind (cj_a:timezone)<-(timezones:bat[:str,:timezone])(_762:str)
    _1739 := bat.new(nil:int,nil:bit);	# 1144 CMDBATnew (_1739:bat[:int,:bit])<-(_1725:int)(_1740:bit)
barrier (_1742,_1743,_1744):= bat.newIterator(timestamp_eur);	# 1145 CHPbunIterator (_1742:lng)(_1743:int)(_1744:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1152
    _1746 := mtime.dst(_1744,cj_a);	# 1146 MTIMEtimestamp_inside_dst (_1746:bit)<-(_1744:timestamp)(cj_a:timezone)
    bat.insert(_1739,_1743,_1746);	# 1147 BKCinsert_bun (_1747:void)<-(_1739:bat[:int,:bit])(_1743:int)(_1746:bit)
    redo (_1742,_1743,_1744):= bat.hasMoreElements(timestamp_eur);	# 1148 CHPbunHasMoreElements (_1742:lng)(_1743:int)(_1744:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1146
catch MALException:str ;	# 1149  (MALException:str) jump 1151
    redo (_1742,_1743,_1744):= bat.hasMoreElements(timestamp_eur);	# 1150 CHPbunHasMoreElements (_1742:lng)(_1743:int)(_1744:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1146
exit MALException:str ;	# 1151  (MALException:str)
exit (_1742,_1743,_1744);	# 1152  (_1742:lng)(_1743:int)(_1744:timestamp)
    dj_a:bat[:int,:bit]  := _1739;	# 1153  (dj_a:bat[:int,:bit])<-(_1739:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1154 BKCsetColumn (ej_a:void)<-(dj_a:bat[:int,:bit])(_784:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1155  (_786:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1156 BKCsetColumn (fj_a:void)<-(timestamp_bra:bat[:int,:timestamp])(_766:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1157  (_788:str)
    gj_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1158 ALGfind (gj_a:timezone)<-(timezones:bat[:str,:timezone])(_766:str)
    _1753 := bat.new(nil:int,nil:bit);	# 1159 CMDBATnew (_1753:bat[:int,:bit])<-(_1725:int)(_1740:bit)
barrier (_1755,_1756,_1757):= bat.newIterator(timestamp_bra);	# 1160 CHPbunIterator (_1755:lng)(_1756:int)(_1757:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1167
    _1759 := mtime.dst(_1757,gj_a);	# 1161 MTIMEtimestamp_inside_dst (_1759:bit)<-(_1757:timestamp)(gj_a:timezone)
    bat.insert(_1753,_1756,_1759);	# 1162 BKCinsert_bun (_1760:void)<-(_1753:bat[:int,:bit])(_1756:int)(_1759:bit)
    redo (_1755,_1756,_1757):= bat.hasMoreElements(timestamp_bra);	# 1163 CHPbunHasMoreElements (_1755:lng)(_1756:int)(_1757:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1161
catch MALException:str ;	# 1164  (MALException:str) jump 1166
    redo (_1755,_1756,_1757):= bat.hasMoreElements(timestamp_bra);	# 1165 CHPbunHasMoreElements (_1755:lng)(_1756:int)(_1757:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1161
exit MALException:str ;	# 1166  (MALException:str)
exit (_1755,_1756,_1757);	# 1167  (_1755:lng)(_1756:int)(_1757:timestamp)
    hj_a:bat[:int,:bit]  := _1753;	# 1168  (hj_a:bat[:int,:bit])<-(_1753:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1169 BKCsetColumn (ij_a:void)<-(hj_a:bat[:int,:bit])(_784:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1170 IOprint_val (_792:void)<-(_793:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1171 IOtable (jj_a:void)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1172  (_810:str)
#quit; 	# 1173  (_811:str)
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 1174  (_812:str)
end main;	# 1175  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "tzone_bat" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

