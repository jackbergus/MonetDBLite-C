stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;              #  0 main:void {G}
# Mil compiler Version 1.0) 
# Copyright (c) 1993-2001, CWI. All rights reserved. 
# Predefined code segment 
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
#module(monettime,alarm); 
    lzone := mtime.timezone("GMT+1");   #  6 lzone:timezone := MTIMEtzone_fromstr(_7:str) 
    mtime.timezone_local(lzone);        #  7 _8:void := MTIMEtzone_set_local(lzone:timezone) 
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create rules 
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");# 10 rule_jan:zrule := MTIMErule_fromstr(_12:str) 
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");# 12 rule_mar:zrule := MTIMErule_fromstr(_15:str) 
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");# 14 rule_apr:zrule := MTIMErule_fromstr(_18:str) 
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 
    rule_may := mtime.rule("MAY 26@01:15");# 16 rule_may:zrule := MTIMErule_fromstr(_21:str) 
#var rule_may := mtime.rule("MAY 26@01:15"); 
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");# 18 rule_jun:zrule := MTIMErule_fromstr(_24:str) 
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 
    rule_jul := mtime.rule(7,1,1,75);   # 20 rule_jul:zrule := MTIMErule_create(_27:int, _28:int, _28:int, _29:int) 
#var rule_jul := mtime.rule(7,1,1,75); 
    rule_aug := mtime.rule(8,-1,1,75);  # 22 rule_aug:zrule := MTIMErule_create(_32:int, _33:int, _28:int, _29:int) 
#var rule_aug := mtime.rule(8,-1,1,75); 
    rule_sep := mtime.rule(9,-10,3,75); # 24 rule_sep:zrule := MTIMErule_create(_36:int, _37:int, _38:int, _29:int) 
#var rule_sep := mtime.rule(9,-10,3,75); 
    rule_oct := mtime.rule(10,31,0,75); # 26 rule_oct:zrule := MTIMErule_create(_41:int, _42:int, _43:int, _29:int) 
#var rule_oct := mtime.rule(10,31,0,75); 
    rule_nov := mtime.rule(11,-10,-4,75);# 28 rule_nov:zrule := MTIMErule_create(_46:int, _37:int, _47:int, _29:int) 
#var rule_nov := mtime.rule(11,-10,-4,75); 
## nil rules 
    rule_dec := mtime.rule(12,-31,0,75);# 31 rule_dec:zrule := MTIMErule_create(_51:int, _52:int, _43:int, _29:int) 
#var rule_dec := mtime.rule(12,-31,0,75); 
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");# 33 rule_feb:zrule := MTIMErule_fromstr(_55:str) 
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 
#  
    rule_bat := bat.new(:str,:zrule,10);# 36 rule_bat:bat[:str,:zrule] := CMDBATnewint(_59:str, _60:zrule, _41:int) {G}
#var rule_bat := bat.new(str,rule,10); 
    bat.insert(rule_bat,"jan",rule_jan);# 38 _62:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _63:str, rule_jan:zrule) 
    bat.insert(rule_bat,"feb",rule_feb);# 39 _64:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _65:str, rule_feb:zrule) 
    bat.insert(rule_bat,"mar",rule_mar);# 40 _66:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _67:str, rule_mar:zrule) 
    bat.insert(rule_bat,"apr",rule_apr);# 41 _68:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _69:str, rule_apr:zrule) 
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 
    bat.insert(rule_bat,"may",rule_may);# 43 _71:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _72:str, rule_may:zrule) 
    bat.insert(rule_bat,"jun",rule_jun);# 44 _73:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _74:str, rule_jun:zrule) 
    bat.insert(rule_bat,"jul",rule_jul);# 45 _75:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _76:str, rule_jul:zrule) 
    bat.insert(rule_bat,"aug",rule_aug);# 46 _77:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _78:str, rule_aug:zrule) 
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 
    bat.insert(rule_bat,"sep",rule_sep);# 48 _80:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _81:str, rule_sep:zrule) 
    bat.insert(rule_bat,"oct",rule_oct);# 49 _82:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _83:str, rule_oct:zrule) 
    bat.insert(rule_bat,"nov",rule_nov);# 50 _84:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _85:str, rule_nov:zrule) 
    bat.insert(rule_bat,"dec",rule_dec);# 51 _86:void := BKCinsert_bun(rule_bat:bat[:str,:zrule], _87:str, rule_dec:zrule) 
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 
## test the operations on rules 
    ma_a := bat.setColumn(rule_bat,"rule");# 54 ma_a:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _91:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _806 := bat.new(nil:str,nil:int);   # 56 _806:bat[:str,:int] := CMDBATnew(_807:str, _808:int) {G}
barrier (_810,_811,_812):= bat.newIterator(rule_bat);# 57 (_810:lng, _811:str, _812:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ64}
    _814 := mtime.month(_812);          # 58 _814:int := MTIMErule_extract_month(_812:zrule) 
    bat.insert(_806,_811,_814);         # 59 _815:void := BKCinsert_bun(_806:bat[:str,:int], _811:str, _814:int) 
    redo (_810,_811,_812):= bat.hasMoreElements(rule_bat);# 60 (_810:lng, _811:str, _812:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ58}
catch MALException:str ;                # 61 MALException:str {J63}
    redo (_810,_811,_812):= bat.hasMoreElements(rule_bat);# 62 (_810:lng, _811:str, _812:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ58}
exit MALException:str ;                 # 63 MALException:str 
exit (_810,_811,_812);                  # 64 (_810:lng, _811:str, _812:zrule 
    na_a:bat[:str,:int]  := _806;       # 65 na_a:bat[:str,:int] := _806:bat[:str,:int] {G}
    oa_a := bat.setColumn(na_a,"month");# 66 oa_a:void := BKCsetColumn(na_a:bat[:str,:int], _95:str) 
#      [month](rule_bat).bat.setColumn("month"), 
    _821 := bat.new(nil:str,nil:int);   # 68 _821:bat[:str,:int] := CMDBATnew(_807:str, _808:int) {G}
barrier (_823,_824,_825):= bat.newIterator(rule_bat);# 69 (_823:lng, _824:str, _825:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ76}
    _827 := mtime.weekday(_825);        # 70 _827:int := MTIMErule_extract_weekday(_825:zrule) 
    bat.insert(_821,_824,_827);         # 71 _828:void := BKCinsert_bun(_821:bat[:str,:int], _824:str, _827:int) 
    redo (_823,_824,_825):= bat.hasMoreElements(rule_bat);# 72 (_823:lng, _824:str, _825:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ70}
catch MALException:str ;                # 73 MALException:str {J75}
    redo (_823,_824,_825):= bat.hasMoreElements(rule_bat);# 74 (_823:lng, _824:str, _825:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ70}
exit MALException:str ;                 # 75 MALException:str 
exit (_823,_824,_825);                  # 76 (_823:lng, _824:str, _825:zrule 
    pa_a:bat[:str,:int]  := _821;       # 77 pa_a:bat[:str,:int] := _821:bat[:str,:int] {G}
    qa_a := bat.setColumn(pa_a,"weekday");# 78 qa_a:void := BKCsetColumn(pa_a:bat[:str,:int], _99:str) 
#      [weekday](rule_bat).bat.setColumn("weekday"), 
    _834 := bat.new(nil:str,nil:int);   # 80 _834:bat[:str,:int] := CMDBATnew(_807:str, _808:int) {G}
barrier (_836,_837,_838):= bat.newIterator(rule_bat);# 81 (_836:lng, _837:str, _838:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ88}
    _840 := mtime.day(_838);            # 82 _840:int := MTIMErule_extract_day(_838:zrule) 
    bat.insert(_834,_837,_840);         # 83 _841:void := BKCinsert_bun(_834:bat[:str,:int], _837:str, _840:int) 
    redo (_836,_837,_838):= bat.hasMoreElements(rule_bat);# 84 (_836:lng, _837:str, _838:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ82}
catch MALException:str ;                # 85 MALException:str {J87}
    redo (_836,_837,_838):= bat.hasMoreElements(rule_bat);# 86 (_836:lng, _837:str, _838:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ82}
exit MALException:str ;                 # 87 MALException:str 
exit (_836,_837,_838);                  # 88 (_836:lng, _837:str, _838:zrule 
    ra_a:bat[:str,:int]  := _834;       # 89 ra_a:bat[:str,:int] := _834:bat[:str,:int] {G}
    sa_a := bat.setColumn(ra_a,"day");  # 90 sa_a:void := BKCsetColumn(ra_a:bat[:str,:int], _103:str) 
#      [day](rule_bat).bat.setColumn("day"), 
    _847 := bat.new(nil:str,nil:int);   # 92 _847:bat[:str,:int] := CMDBATnew(_848:str, _849:int) {G}
barrier (_851,_852,_853):= bat.newIterator(rule_bat);# 93 (_851:lng, _852:str, _853:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ100}
    _855 := mtime.minutes(_853);        # 94 _855:int := MTIMErule_extract_minutes(_853:zrule) 
    bat.insert(_847,_852,_855);         # 95 _856:void := BKCinsert_bun(_847:bat[:str,:int], _852:str, _855:int) 
    redo (_851,_852,_853):= bat.hasMoreElements(rule_bat);# 96 (_851:lng, _852:str, _853:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ94}
catch MALException:str ;                # 97 MALException:str {J99}
    redo (_851,_852,_853):= bat.hasMoreElements(rule_bat);# 98 (_851:lng, _852:str, _853:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ94}
exit MALException:str ;                 # 99 MALException:str 
exit (_851,_852,_853);                  #100 (_851:lng, _852:str, _853:zrule 
    ta_a:bat[:str,:int]  := _847;       #101 ta_a:bat[:str,:int] := _847:bat[:str,:int] {G}
    ua_a := bat.setColumn(ta_a,"minutes");#102 ua_a:void := BKCsetColumn(ta_a:bat[:str,:int], _107:str) 
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");#103 _109:void := IOprint_val(_110:str) 
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);#104 va_a:void := IOtable(rule_bat:bat[:str,:zrule], na_a:bat[:str,:int], pa_a:bat[:str,:int], ra_a:bat[:str,:int], ta_a:bat[:str,:int]) 
#      [minutes](rule_bat).bat.setColumn("minutes")); 
    bat.setColumn(rule_bat,"rule");     #106 _113:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _91:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _862 := bat.new(nil:str,nil:date);  #108 _862:bat[:str,:date] := CMDBATnew(_848:str, _863:date) {G}
barrier (_865,_866,_867):= bat.newIterator(rule_bat);#109 (_865:lng, _866:str, _867:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ116}
    _869 := mtime.compute(_867,2001);   #110 _869:date := MTIMEcompute_rule_foryear(_867:zrule, _117:int) 
    bat.insert(_862,_866,_869);         #111 _870:void := BKCinsert_bun(_862:bat[:str,:date], _866:str, _869:date) 
    redo (_865,_866,_867):= bat.hasMoreElements(rule_bat);#112 (_865:lng, _866:str, _867:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ110}
catch MALException:str ;                #113 MALException:str {J115}
    redo (_865,_866,_867):= bat.hasMoreElements(rule_bat);#114 (_865:lng, _866:str, _867:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ110}
exit MALException:str ;                 #115 MALException:str 
exit (_865,_866,_867);                  #116 (_865:lng, _866:str, _867:zrule 
    xa_a:bat[:str,:date]  := _862;      #117 xa_a:bat[:str,:date] := _862:bat[:str,:date] {G}
    ya_a := bat.setColumn(xa_a,"2001"); #118 ya_a:void := BKCsetColumn(xa_a:bat[:str,:date], _119:str) 
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 
    _876 := bat.new(nil:str,nil:date);  #120 _876:bat[:str,:date] := CMDBATnew(_848:str, _863:date) {G}
barrier (_878,_879,_880):= bat.newIterator(rule_bat);#121 (_878:lng, _879:str, _880:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ128}
    _882 := mtime.compute(_880,2001);   #122 _882:date := MTIMEcompute_rule_foryear(_880:zrule, _117:int) 
    bat.insert(_876,_879,_882);         #123 _883:void := BKCinsert_bun(_876:bat[:str,:date], _879:str, _882:date) 
    redo (_878,_879,_880):= bat.hasMoreElements(rule_bat);#124 (_878:lng, _879:str, _880:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ122}
catch MALException:str ;                #125 MALException:str {J127}
    redo (_878,_879,_880):= bat.hasMoreElements(rule_bat);#126 (_878:lng, _879:str, _880:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ122}
exit MALException:str ;                 #127 MALException:str 
exit (_878,_879,_880);                  #128 (_878:lng, _879:str, _880:zrule 
    ab_a:bat[:str,:date]  := _876;      #129 ab_a:bat[:str,:date] := _876:bat[:str,:date] {G}
    _889 := bat.new(nil:str,nil:int);   #130 _889:bat[:str,:int] := CMDBATnew(_890:str, _891:int) {G}
barrier (_893,_894,_895):= bat.newIterator(ab_a);#131 (_893:lng, _894:str, _895:date) := CHPbunIterator(ab_a:bat[:str,:date]) {GJ138}
    _897 := mtime.dayofweek(_895);      #132 _897:int := MTIMEdate_extract_dayofweek(_895:date) 
    bat.insert(_889,_894,_897);         #133 _898:void := BKCinsert_bun(_889:bat[:str,:int], _894:str, _897:int) 
    redo (_893,_894,_895):= bat.hasMoreElements(ab_a);#134 (_893:lng, _894:str, _895:date) := CHPbunHasMoreElements(ab_a:bat[:str,:date]) {GJ132}
catch MALException:str ;                #135 MALException:str {J137}
    redo (_893,_894,_895):= bat.hasMoreElements(ab_a);#136 (_893:lng, _894:str, _895:date) := CHPbunHasMoreElements(ab_a:bat[:str,:date]) {GJ132}
exit MALException:str ;                 #137 MALException:str 
exit (_893,_894,_895);                  #138 (_893:lng, _894:str, _895:date 
    bb_a:bat[:str,:int]  := _889;       #139 bb_a:bat[:str,:int] := _889:bat[:str,:int] {G}
    _904 := bat.new(nil:str,nil:str);   #140 _904:bat[:str,:str] := CMDBATnew(_890:str, _890:str) {G}
barrier (_906,_907,_908):= bat.newIterator(bb_a);#141 (_906:lng, _907:str, _908:int) := CHPbunIterator(bb_a:bat[:str,:int]) {GJ148}
    _910 := mtime.dayname(_908);        #142 _910:str := MTIMEday_to_str(_908:int) {G}
    bat.insert(_904,_907,_910);         #143 _911:void := BKCinsert_bun(_904:bat[:str,:str], _907:str, _910:str) 
    redo (_906,_907,_908):= bat.hasMoreElements(bb_a);#144 (_906:lng, _907:str, _908:int) := CHPbunHasMoreElements(bb_a:bat[:str,:int]) {GJ142}
catch MALException:str ;                #145 MALException:str {J147}
    redo (_906,_907,_908):= bat.hasMoreElements(bb_a);#146 (_906:lng, _907:str, _908:int) := CHPbunHasMoreElements(bb_a:bat[:str,:int]) {GJ142}
exit MALException:str ;                 #147 MALException:str 
exit (_906,_907,_908);                  #148 (_906:lng, _907:str, _908:int 
    cb_a:bat[:str,:str]  := _904;       #149 cb_a:bat[:str,:str] := _904:bat[:str,:str] {G}
    bat.setColumn(cb_a,"2001");         #150 _126:void := BKCsetColumn(cb_a:bat[:str,:str], _119:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 
    _917 := bat.new(nil:str,nil:date);  #152 _917:bat[:str,:date] := CMDBATnew(_890:str, _918:date) {G}
barrier (_920,_921,_922):= bat.newIterator(rule_bat);#153 (_920:lng, _921:str, _922:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ160}
    _924 := mtime.compute(_922,1999);   #154 _924:date := MTIMEcompute_rule_foryear(_922:zrule, _130:int) 
    bat.insert(_917,_921,_924);         #155 _925:void := BKCinsert_bun(_917:bat[:str,:date], _921:str, _924:date) 
    redo (_920,_921,_922):= bat.hasMoreElements(rule_bat);#156 (_920:lng, _921:str, _922:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ154}
catch MALException:str ;                #157 MALException:str {J159}
    redo (_920,_921,_922):= bat.hasMoreElements(rule_bat);#158 (_920:lng, _921:str, _922:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ154}
exit MALException:str ;                 #159 MALException:str 
exit (_920,_921,_922);                  #160 (_920:lng, _921:str, _922:zrule 
    eb_a:bat[:str,:date]  := _917;      #161 eb_a:bat[:str,:date] := _917:bat[:str,:date] {G}
    bat.setColumn(eb_a,"1999");         #162 _131:void := BKCsetColumn(eb_a:bat[:str,:date], _132:str) 
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 
    _931 := bat.new(nil:str,nil:date);  #164 _931:bat[:str,:date] := CMDBATnew(_932:str, _918:date) {G}
barrier (_934,_935,_936):= bat.newIterator(rule_bat);#165 (_934:lng, _935:str, _936:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ172}
    _938 := mtime.compute(_936,1999);   #166 _938:date := MTIMEcompute_rule_foryear(_936:zrule, _130:int) 
    bat.insert(_931,_935,_938);         #167 _939:void := BKCinsert_bun(_931:bat[:str,:date], _935:str, _938:date) 
    redo (_934,_935,_936):= bat.hasMoreElements(rule_bat);#168 (_934:lng, _935:str, _936:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ166}
catch MALException:str ;                #169 MALException:str {J171}
    redo (_934,_935,_936):= bat.hasMoreElements(rule_bat);#170 (_934:lng, _935:str, _936:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ166}
exit MALException:str ;                 #171 MALException:str 
exit (_934,_935,_936);                  #172 (_934:lng, _935:str, _936:zrule 
    gb_a:bat[:str,:date]  := _931;      #173 gb_a:bat[:str,:date] := _931:bat[:str,:date] {G}
    _945 := bat.new(nil:str,nil:int);   #174 _945:bat[:str,:int] := CMDBATnew(_932:str, _946:int) {G}
barrier (_948,_949,_950):= bat.newIterator(gb_a);#175 (_948:lng, _949:str, _950:date) := CHPbunIterator(gb_a:bat[:str,:date]) {GJ182}
    _952 := mtime.dayofweek(_950);      #176 _952:int := MTIMEdate_extract_dayofweek(_950:date) 
    bat.insert(_945,_949,_952);         #177 _953:void := BKCinsert_bun(_945:bat[:str,:int], _949:str, _952:int) 
    redo (_948,_949,_950):= bat.hasMoreElements(gb_a);#178 (_948:lng, _949:str, _950:date) := CHPbunHasMoreElements(gb_a:bat[:str,:date]) {GJ176}
catch MALException:str ;                #179 MALException:str {J181}
    redo (_948,_949,_950):= bat.hasMoreElements(gb_a);#180 (_948:lng, _949:str, _950:date) := CHPbunHasMoreElements(gb_a:bat[:str,:date]) {GJ176}
exit MALException:str ;                 #181 MALException:str 
exit (_948,_949,_950);                  #182 (_948:lng, _949:str, _950:date 
    hb_a:bat[:str,:int]  := _945;       #183 hb_a:bat[:str,:int] := _945:bat[:str,:int] {G}
    _959 := bat.new(nil:str,nil:str);   #184 _959:bat[:str,:str] := CMDBATnew(_932:str, _932:str) {G}
barrier (_961,_962,_963):= bat.newIterator(hb_a);#185 (_961:lng, _962:str, _963:int) := CHPbunIterator(hb_a:bat[:str,:int]) {GJ192}
    _965 := mtime.dayname(_963);        #186 _965:str := MTIMEday_to_str(_963:int) {G}
    bat.insert(_959,_962,_965);         #187 _966:void := BKCinsert_bun(_959:bat[:str,:str], _962:str, _965:str) 
    redo (_961,_962,_963):= bat.hasMoreElements(hb_a);#188 (_961:lng, _962:str, _963:int) := CHPbunHasMoreElements(hb_a:bat[:str,:int]) {GJ186}
catch MALException:str ;                #189 MALException:str {J191}
    redo (_961,_962,_963):= bat.hasMoreElements(hb_a);#190 (_961:lng, _962:str, _963:int) := CHPbunHasMoreElements(hb_a:bat[:str,:int]) {GJ186}
exit MALException:str ;                 #191 MALException:str 
exit (_961,_962,_963);                  #192 (_961:lng, _962:str, _963:int 
    ib_a:bat[:str,:str]  := _959;       #193 ib_a:bat[:str,:str] := _959:bat[:str,:str] {G}
    bat.setColumn(ib_a,"1999");         #194 _137:void := BKCsetColumn(ib_a:bat[:str,:str], _132:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 
    _972 := bat.new(nil:str,nil:date);  #196 _972:bat[:str,:date] := CMDBATnew(_973:str, _974:date) {G}
barrier (_976,_977,_978):= bat.newIterator(rule_bat);#197 (_976:lng, _977:str, _978:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ204}
    _980 := mtime.compute(_978,1992);   #198 _980:date := MTIMEcompute_rule_foryear(_978:zrule, _140:int) 
    bat.insert(_972,_977,_980);         #199 _981:void := BKCinsert_bun(_972:bat[:str,:date], _977:str, _980:date) 
    redo (_976,_977,_978):= bat.hasMoreElements(rule_bat);#200 (_976:lng, _977:str, _978:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ198}
catch MALException:str ;                #201 MALException:str {J203}
    redo (_976,_977,_978):= bat.hasMoreElements(rule_bat);#202 (_976:lng, _977:str, _978:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ198}
exit MALException:str ;                 #203 MALException:str 
exit (_976,_977,_978);                  #204 (_976:lng, _977:str, _978:zrule 
    kb_a:bat[:str,:date]  := _972;      #205 kb_a:bat[:str,:date] := _972:bat[:str,:date] {G}
    bat.setColumn(kb_a,"1992");         #206 _141:void := BKCsetColumn(kb_a:bat[:str,:date], _142:str) 
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 
    _987 := bat.new(nil:str,nil:date);  #208 _987:bat[:str,:date] := CMDBATnew(_973:str, _974:date) {G}
barrier (_989,_990,_991):= bat.newIterator(rule_bat);#209 (_989:lng, _990:str, _991:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ216}
    _993 := mtime.compute(_991,1992);   #210 _993:date := MTIMEcompute_rule_foryear(_991:zrule, _140:int) 
    bat.insert(_987,_990,_993);         #211 _994:void := BKCinsert_bun(_987:bat[:str,:date], _990:str, _993:date) 
    redo (_989,_990,_991):= bat.hasMoreElements(rule_bat);#212 (_989:lng, _990:str, _991:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ210}
catch MALException:str ;                #213 MALException:str {J215}
    redo (_989,_990,_991):= bat.hasMoreElements(rule_bat);#214 (_989:lng, _990:str, _991:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ210}
exit MALException:str ;                 #215 MALException:str 
exit (_989,_990,_991);                  #216 (_989:lng, _990:str, _991:zrule 
    mb_a:bat[:str,:date]  := _987;      #217 mb_a:bat[:str,:date] := _987:bat[:str,:date] {G}
    _1000 := bat.new(nil:str,nil:int);  #218 _1000:bat[:str,:int] := CMDBATnew(_973:str, _1001:int) {G}
barrier (_1003,_1004,_1005):= bat.newIterator(mb_a);#219 (_1003:lng, _1004:str, _1005:date) := CHPbunIterator(mb_a:bat[:str,:date]) {GJ226}
    _1007 := mtime.dayofweek(_1005);    #220 _1007:int := MTIMEdate_extract_dayofweek(_1005:date) 
    bat.insert(_1000,_1004,_1007);      #221 _1008:void := BKCinsert_bun(_1000:bat[:str,:int], _1004:str, _1007:int) 
    redo (_1003,_1004,_1005):= bat.hasMoreElements(mb_a);#222 (_1003:lng, _1004:str, _1005:date) := CHPbunHasMoreElements(mb_a:bat[:str,:date]) {GJ220}
catch MALException:str ;                #223 MALException:str {J225}
    redo (_1003,_1004,_1005):= bat.hasMoreElements(mb_a);#224 (_1003:lng, _1004:str, _1005:date) := CHPbunHasMoreElements(mb_a:bat[:str,:date]) {GJ220}
exit MALException:str ;                 #225 MALException:str 
exit (_1003,_1004,_1005);               #226 (_1003:lng, _1004:str, _1005:date 
    nb_a:bat[:str,:int]  := _1000;      #227 nb_a:bat[:str,:int] := _1000:bat[:str,:int] {G}
    _1014 := bat.new(nil:str,nil:str);  #228 _1014:bat[:str,:str] := CMDBATnew(_1015:str, _1015:str) {G}
barrier (_1017,_1018,_1019):= bat.newIterator(nb_a);#229 (_1017:lng, _1018:str, _1019:int) := CHPbunIterator(nb_a:bat[:str,:int]) {GJ236}
    _1021 := mtime.dayname(_1019);      #230 _1021:str := MTIMEday_to_str(_1019:int) {G}
    bat.insert(_1014,_1018,_1021);      #231 _1022:void := BKCinsert_bun(_1014:bat[:str,:str], _1018:str, _1021:str) 
    redo (_1017,_1018,_1019):= bat.hasMoreElements(nb_a);#232 (_1017:lng, _1018:str, _1019:int) := CHPbunHasMoreElements(nb_a:bat[:str,:int]) {GJ230}
catch MALException:str ;                #233 MALException:str {J235}
    redo (_1017,_1018,_1019):= bat.hasMoreElements(nb_a);#234 (_1017:lng, _1018:str, _1019:int) := CHPbunHasMoreElements(nb_a:bat[:str,:int]) {GJ230}
exit MALException:str ;                 #235 MALException:str 
exit (_1017,_1018,_1019);               #236 (_1017:lng, _1018:str, _1019:int 
    ob_a:bat[:str,:str]  := _1014;      #237 ob_a:bat[:str,:str] := _1014:bat[:str,:str] {G}
    bat.setColumn(ob_a,"1992");         #238 _147:void := BKCsetColumn(ob_a:bat[:str,:str], _142:str) 
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");#239 _148:void := IOprint_val(_149:str) 
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);#240 qb_a:void := IOtable(rule_bat:bat[:str,:zrule], xa_a:bat[:str,:date], cb_a:bat[:str,:str], eb_a:bat[:str,:date], ib_a:bat[:str,:str], kb_a:bat[:str,:date], ob_a:bat[:str,:str]) 
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 
    rb_a := bat.setColumn(rule_bat,"rule");#242 rb_a:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _153:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _1028 := bat.new(nil:str,nil:date); #244 _1028:bat[:str,:date] := CMDBATnew(_1015:str, _1029:date) {G}
barrier (_1031,_1032,_1033):= bat.newIterator(rule_bat);#245 (_1031:lng, _1032:str, _1033:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ252}
    _1035 := mtime.compute(_1033,1572); #246 _1035:date := MTIMEcompute_rule_foryear(_1033:zrule, _157:int) 
    bat.insert(_1028,_1032,_1035);      #247 _1036:void := BKCinsert_bun(_1028:bat[:str,:date], _1032:str, _1035:date) 
    redo (_1031,_1032,_1033):= bat.hasMoreElements(rule_bat);#248 (_1031:lng, _1032:str, _1033:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ246}
catch MALException:str ;                #249 MALException:str {J251}
    redo (_1031,_1032,_1033):= bat.hasMoreElements(rule_bat);#250 (_1031:lng, _1032:str, _1033:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ246}
exit MALException:str ;                 #251 MALException:str 
exit (_1031,_1032,_1033);               #252 (_1031:lng, _1032:str, _1033:zrule 
    sb_a:bat[:str,:date]  := _1028;     #253 sb_a:bat[:str,:date] := _1028:bat[:str,:date] {G}
    tb_a := bat.setColumn(sb_a,"1572"); #254 tb_a:void := BKCsetColumn(sb_a:bat[:str,:date], _159:str) 
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 
    _1042 := bat.new(nil:str,nil:date); #256 _1042:bat[:str,:date] := CMDBATnew(_1015:str, _1029:date) {G}
barrier (_1044,_1045,_1046):= bat.newIterator(rule_bat);#257 (_1044:lng, _1045:str, _1046:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ264}
    _1048 := mtime.compute(_1046,1572); #258 _1048:date := MTIMEcompute_rule_foryear(_1046:zrule, _157:int) 
    bat.insert(_1042,_1045,_1048);      #259 _1049:void := BKCinsert_bun(_1042:bat[:str,:date], _1045:str, _1048:date) 
    redo (_1044,_1045,_1046):= bat.hasMoreElements(rule_bat);#260 (_1044:lng, _1045:str, _1046:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ258}
catch MALException:str ;                #261 MALException:str {J263}
    redo (_1044,_1045,_1046):= bat.hasMoreElements(rule_bat);#262 (_1044:lng, _1045:str, _1046:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ258}
exit MALException:str ;                 #263 MALException:str 
exit (_1044,_1045,_1046);               #264 (_1044:lng, _1045:str, _1046:zrule 
    ub_a:bat[:str,:date]  := _1042;     #265 ub_a:bat[:str,:date] := _1042:bat[:str,:date] {G}
    _1055 := bat.new(nil:str,nil:int);  #266 _1055:bat[:str,:int] := CMDBATnew(_1056:str, _1057:int) {G}
barrier (_1059,_1060,_1061):= bat.newIterator(ub_a);#267 (_1059:lng, _1060:str, _1061:date) := CHPbunIterator(ub_a:bat[:str,:date]) {GJ274}
    _1063 := mtime.dayofweek(_1061);    #268 _1063:int := MTIMEdate_extract_dayofweek(_1061:date) 
    bat.insert(_1055,_1060,_1063);      #269 _1064:void := BKCinsert_bun(_1055:bat[:str,:int], _1060:str, _1063:int) 
    redo (_1059,_1060,_1061):= bat.hasMoreElements(ub_a);#270 (_1059:lng, _1060:str, _1061:date) := CHPbunHasMoreElements(ub_a:bat[:str,:date]) {GJ268}
catch MALException:str ;                #271 MALException:str {J273}
    redo (_1059,_1060,_1061):= bat.hasMoreElements(ub_a);#272 (_1059:lng, _1060:str, _1061:date) := CHPbunHasMoreElements(ub_a:bat[:str,:date]) {GJ268}
exit MALException:str ;                 #273 MALException:str 
exit (_1059,_1060,_1061);               #274 (_1059:lng, _1060:str, _1061:date 
    vb_a:bat[:str,:int]  := _1055;      #275 vb_a:bat[:str,:int] := _1055:bat[:str,:int] {G}
    _1070 := bat.new(nil:str,nil:str);  #276 _1070:bat[:str,:str] := CMDBATnew(_1056:str, _1056:str) {G}
barrier (_1072,_1073,_1074):= bat.newIterator(vb_a);#277 (_1072:lng, _1073:str, _1074:int) := CHPbunIterator(vb_a:bat[:str,:int]) {GJ284}
    _1076 := mtime.dayname(_1074);      #278 _1076:str := MTIMEday_to_str(_1074:int) {G}
    bat.insert(_1070,_1073,_1076);      #279 _1077:void := BKCinsert_bun(_1070:bat[:str,:str], _1073:str, _1076:str) 
    redo (_1072,_1073,_1074):= bat.hasMoreElements(vb_a);#280 (_1072:lng, _1073:str, _1074:int) := CHPbunHasMoreElements(vb_a:bat[:str,:int]) {GJ278}
catch MALException:str ;                #281 MALException:str {J283}
    redo (_1072,_1073,_1074):= bat.hasMoreElements(vb_a);#282 (_1072:lng, _1073:str, _1074:int) := CHPbunHasMoreElements(vb_a:bat[:str,:int]) {GJ278}
exit MALException:str ;                 #283 MALException:str 
exit (_1072,_1073,_1074);               #284 (_1072:lng, _1073:str, _1074:int 
    wb_a:bat[:str,:str]  := _1070;      #285 wb_a:bat[:str,:str] := _1070:bat[:str,:str] {G}
    xb_a := bat.setColumn(wb_a,"1572"); #286 xb_a:void := BKCsetColumn(wb_a:bat[:str,:str], _159:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 
    _1083 := bat.new(nil:str,nil:date); #288 _1083:bat[:str,:date] := CMDBATnew(_1056:str, _1084:date) {G}
barrier (_1086,_1087,_1088):= bat.newIterator(rule_bat);#289 (_1086:lng, _1087:str, _1088:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ296}
    _1090 := mtime.compute(_1088,1);    #290 _1090:date := MTIMEcompute_rule_foryear(_1088:zrule, _170:int) 
    bat.insert(_1083,_1087,_1090);      #291 _1091:void := BKCinsert_bun(_1083:bat[:str,:date], _1087:str, _1090:date) 
    redo (_1086,_1087,_1088):= bat.hasMoreElements(rule_bat);#292 (_1086:lng, _1087:str, _1088:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ290}
catch MALException:str ;                #293 MALException:str {J295}
    redo (_1086,_1087,_1088):= bat.hasMoreElements(rule_bat);#294 (_1086:lng, _1087:str, _1088:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ290}
exit MALException:str ;                 #295 MALException:str 
exit (_1086,_1087,_1088);               #296 (_1086:lng, _1087:str, _1088:zrule 
    yb_a:bat[:str,:date]  := _1083;     #297 yb_a:bat[:str,:date] := _1083:bat[:str,:date] {G}
    ac_a := bat.setColumn(yb_a,"1");    #298 ac_a:void := BKCsetColumn(yb_a:bat[:str,:date], _172:str) 
#      [compute](rule_bat, 1).bat.setColumn("1"), 
    _1097 := bat.new(nil:str,nil:date); #300 _1097:bat[:str,:date] := CMDBATnew(_1098:str, _1084:date) {G}
barrier (_1100,_1101,_1102):= bat.newIterator(rule_bat);#301 (_1100:lng, _1101:str, _1102:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ308}
    _1104 := mtime.compute(_1102,1);    #302 _1104:date := MTIMEcompute_rule_foryear(_1102:zrule, _170:int) 
    bat.insert(_1097,_1101,_1104);      #303 _1105:void := BKCinsert_bun(_1097:bat[:str,:date], _1101:str, _1104:date) 
    redo (_1100,_1101,_1102):= bat.hasMoreElements(rule_bat);#304 (_1100:lng, _1101:str, _1102:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ302}
catch MALException:str ;                #305 MALException:str {J307}
    redo (_1100,_1101,_1102):= bat.hasMoreElements(rule_bat);#306 (_1100:lng, _1101:str, _1102:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ302}
exit MALException:str ;                 #307 MALException:str 
exit (_1100,_1101,_1102);               #308 (_1100:lng, _1101:str, _1102:zrule 
    bc_a:bat[:str,:date]  := _1097;     #309 bc_a:bat[:str,:date] := _1097:bat[:str,:date] {G}
    _1111 := bat.new(nil:str,nil:int);  #310 _1111:bat[:str,:int] := CMDBATnew(_1098:str, _1112:int) {G}
barrier (_1114,_1115,_1116):= bat.newIterator(bc_a);#311 (_1114:lng, _1115:str, _1116:date) := CHPbunIterator(bc_a:bat[:str,:date]) {GJ318}
    _1118 := mtime.dayofweek(_1116);    #312 _1118:int := MTIMEdate_extract_dayofweek(_1116:date) 
    bat.insert(_1111,_1115,_1118);      #313 _1119:void := BKCinsert_bun(_1111:bat[:str,:int], _1115:str, _1118:int) 
    redo (_1114,_1115,_1116):= bat.hasMoreElements(bc_a);#314 (_1114:lng, _1115:str, _1116:date) := CHPbunHasMoreElements(bc_a:bat[:str,:date]) {GJ312}
catch MALException:str ;                #315 MALException:str {J317}
    redo (_1114,_1115,_1116):= bat.hasMoreElements(bc_a);#316 (_1114:lng, _1115:str, _1116:date) := CHPbunHasMoreElements(bc_a:bat[:str,:date]) {GJ312}
exit MALException:str ;                 #317 MALException:str 
exit (_1114,_1115,_1116);               #318 (_1114:lng, _1115:str, _1116:date 
    cc_a:bat[:str,:int]  := _1111;      #319 cc_a:bat[:str,:int] := _1111:bat[:str,:int] {G}
    _1125 := bat.new(nil:str,nil:str);  #320 _1125:bat[:str,:str] := CMDBATnew(_1098:str, _1098:str) {G}
barrier (_1127,_1128,_1129):= bat.newIterator(cc_a);#321 (_1127:lng, _1128:str, _1129:int) := CHPbunIterator(cc_a:bat[:str,:int]) {GJ328}
    _1131 := mtime.dayname(_1129);      #322 _1131:str := MTIMEday_to_str(_1129:int) {G}
    bat.insert(_1125,_1128,_1131);      #323 _1132:void := BKCinsert_bun(_1125:bat[:str,:str], _1128:str, _1131:str) 
    redo (_1127,_1128,_1129):= bat.hasMoreElements(cc_a);#324 (_1127:lng, _1128:str, _1129:int) := CHPbunHasMoreElements(cc_a:bat[:str,:int]) {GJ322}
catch MALException:str ;                #325 MALException:str {J327}
    redo (_1127,_1128,_1129):= bat.hasMoreElements(cc_a);#326 (_1127:lng, _1128:str, _1129:int) := CHPbunHasMoreElements(cc_a:bat[:str,:int]) {GJ322}
exit MALException:str ;                 #327 MALException:str 
exit (_1127,_1128,_1129);               #328 (_1127:lng, _1128:str, _1129:int 
    dc_a:bat[:str,:str]  := _1125;      #329 dc_a:bat[:str,:str] := _1125:bat[:str,:str] {G}
    ec_a := bat.setColumn(dc_a,"1");    #330 ec_a:void := BKCsetColumn(dc_a:bat[:str,:str], _172:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 
    _1138 := bat.new(nil:str,nil:date); #332 _1138:bat[:str,:date] := CMDBATnew(_1139:str, _1140:date) {G}
barrier (_1142,_1143,_1144):= bat.newIterator(rule_bat);#333 (_1142:lng, _1143:str, _1144:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ340}
    _1146 := mtime.compute(_1144,-2000);#334 _1146:date := MTIMEcompute_rule_foryear(_1144:zrule, _180:int) 
    bat.insert(_1138,_1143,_1146);      #335 _1147:void := BKCinsert_bun(_1138:bat[:str,:date], _1143:str, _1146:date) 
    redo (_1142,_1143,_1144):= bat.hasMoreElements(rule_bat);#336 (_1142:lng, _1143:str, _1144:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ334}
catch MALException:str ;                #337 MALException:str {J339}
    redo (_1142,_1143,_1144):= bat.hasMoreElements(rule_bat);#338 (_1142:lng, _1143:str, _1144:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ334}
exit MALException:str ;                 #339 MALException:str 
exit (_1142,_1143,_1144);               #340 (_1142:lng, _1143:str, _1144:zrule 
    fc_a:bat[:str,:date]  := _1138;     #341 fc_a:bat[:str,:date] := _1138:bat[:str,:date] {G}
    gc_a := bat.setColumn(fc_a,"-2000");#342 gc_a:void := BKCsetColumn(fc_a:bat[:str,:date], _182:str) 
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 
    _1153 := bat.new(nil:str,nil:date); #344 _1153:bat[:str,:date] := CMDBATnew(_1139:str, _1140:date) {G}
barrier (_1155,_1156,_1157):= bat.newIterator(rule_bat);#345 (_1155:lng, _1156:str, _1157:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ352}
    _1159 := mtime.compute(_1157,-2000);#346 _1159:date := MTIMEcompute_rule_foryear(_1157:zrule, _180:int) 
    bat.insert(_1153,_1156,_1159);      #347 _1160:void := BKCinsert_bun(_1153:bat[:str,:date], _1156:str, _1159:date) 
    redo (_1155,_1156,_1157):= bat.hasMoreElements(rule_bat);#348 (_1155:lng, _1156:str, _1157:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ346}
catch MALException:str ;                #349 MALException:str {J351}
    redo (_1155,_1156,_1157):= bat.hasMoreElements(rule_bat);#350 (_1155:lng, _1156:str, _1157:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ346}
exit MALException:str ;                 #351 MALException:str 
exit (_1155,_1156,_1157);               #352 (_1155:lng, _1156:str, _1157:zrule 
    hc_a:bat[:str,:date]  := _1153;     #353 hc_a:bat[:str,:date] := _1153:bat[:str,:date] {G}
    _1166 := bat.new(nil:str,nil:int);  #354 _1166:bat[:str,:int] := CMDBATnew(_1139:str, _1167:int) {G}
barrier (_1169,_1170,_1171):= bat.newIterator(hc_a);#355 (_1169:lng, _1170:str, _1171:date) := CHPbunIterator(hc_a:bat[:str,:date]) {GJ362}
    _1173 := mtime.dayofweek(_1171);    #356 _1173:int := MTIMEdate_extract_dayofweek(_1171:date) 
    bat.insert(_1166,_1170,_1173);      #357 _1174:void := BKCinsert_bun(_1166:bat[:str,:int], _1170:str, _1173:int) 
    redo (_1169,_1170,_1171):= bat.hasMoreElements(hc_a);#358 (_1169:lng, _1170:str, _1171:date) := CHPbunHasMoreElements(hc_a:bat[:str,:date]) {GJ356}
catch MALException:str ;                #359 MALException:str {J361}
    redo (_1169,_1170,_1171):= bat.hasMoreElements(hc_a);#360 (_1169:lng, _1170:str, _1171:date) := CHPbunHasMoreElements(hc_a:bat[:str,:date]) {GJ356}
exit MALException:str ;                 #361 MALException:str 
exit (_1169,_1170,_1171);               #362 (_1169:lng, _1170:str, _1171:date 
    ic_a:bat[:str,:int]  := _1166;      #363 ic_a:bat[:str,:int] := _1166:bat[:str,:int] {G}
    _1180 := bat.new(nil:str,nil:str);  #364 _1180:bat[:str,:str] := CMDBATnew(_1181:str, _1181:str) {G}
barrier (_1183,_1184,_1185):= bat.newIterator(ic_a);#365 (_1183:lng, _1184:str, _1185:int) := CHPbunIterator(ic_a:bat[:str,:int]) {GJ372}
    _1187 := mtime.dayname(_1185);      #366 _1187:str := MTIMEday_to_str(_1185:int) {G}
    bat.insert(_1180,_1184,_1187);      #367 _1188:void := BKCinsert_bun(_1180:bat[:str,:str], _1184:str, _1187:str) 
    redo (_1183,_1184,_1185):= bat.hasMoreElements(ic_a);#368 (_1183:lng, _1184:str, _1185:int) := CHPbunHasMoreElements(ic_a:bat[:str,:int]) {GJ366}
catch MALException:str ;                #369 MALException:str {J371}
    redo (_1183,_1184,_1185):= bat.hasMoreElements(ic_a);#370 (_1183:lng, _1184:str, _1185:int) := CHPbunHasMoreElements(ic_a:bat[:str,:int]) {GJ366}
exit MALException:str ;                 #371 MALException:str 
exit (_1183,_1184,_1185);               #372 (_1183:lng, _1184:str, _1185:int 
    jc_a:bat[:str,:str]  := _1180;      #373 jc_a:bat[:str,:str] := _1180:bat[:str,:str] {G}
    kc_a := bat.setColumn(jc_a,"-2000");#374 kc_a:void := BKCsetColumn(jc_a:bat[:str,:str], _182:str) 
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");#375 _188:void := IOprint_val(_189:str) 
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);#376 lc_a:void := IOtable(rule_bat:bat[:str,:zrule], sb_a:bat[:str,:date], wb_a:bat[:str,:str], yb_a:bat[:str,:date], dc_a:bat[:str,:str], fc_a:bat[:str,:date], jc_a:bat[:str,:str]) 
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create timezones, using some of the above created rules 
    tzone_00 := mtime.timezone("GMT");  #380 tzone_00:timezone := MTIMEtzone_fromstr(_195:str) 
#var tzone_00 := mtime.timezone("GMT"); 
    tzone_01 := mtime.timezone("GMT+01:00");#382 tzone_01:timezone := MTIMEtzone_fromstr(_198:str) 
#var tzone_01 := mtime.timezone("GMT+01:00"); 
    tzone_02 := mtime.timezone("GMT+0100");#384 tzone_02:timezone := MTIMEtzone_fromstr(_201:str) 
#var tzone_02 := mtime.timezone("GMT+0100"); 
    tzone_03 := mtime.timezone(60,rule_oct,rule_mar);#386 tzone_03:timezone := MTIMEtzone_create_dst(_204:int, rule_oct:zrule, rule_mar:zrule) 
#var tzone_03 := mtime.timezone(60, rule_oct, rule_mar); 
    tzone_04 := mtime.timezone(0,rule_jan,rule_aug);#388 tzone_04:timezone := MTIMEtzone_create_dst(_207:int, rule_jan:zrule, rule_aug:zrule) 
#var tzone_04 := mtime.timezone(0, rule_jan, rule_aug); 
    tzone_05 := mtime.timezone(-97,rule_oct,rule_apr);#390 tzone_05:timezone := MTIMEtzone_create_dst(_210:int, rule_oct:zrule, rule_apr:zrule) 
#var tzone_05 := mtime.timezone(-97, rule_oct, rule_apr); 
    tzone_06 := mtime.timezone(-97,rule_may,rule_sep);#392 tzone_06:timezone := MTIMEtzone_create_dst(_210:int, rule_may:zrule, rule_sep:zrule) 
#var tzone_06 := mtime.timezone(-97, rule_may, rule_sep); 
    mc_a := calc.*(23,60);              #394 mc_a:int := CALCbinaryMULintint(_215:int, _204:int) 
    tzone_07 := mtime.timezone(mc_a,rule_apr,rule_nov);#395 tzone_07:timezone := MTIMEtzone_create_dst(mc_a:int, rule_apr:zrule, rule_nov:zrule) 
#var tzone_07 := mtime.timezone(23*60, rule_apr, rule_nov); 
    nc_a := calc.*(-23,59);             #397 nc_a:int := CALCbinaryMULintint(_219:int, _220:int) 
    oc_a := calc.-(nc_a,59);            #398 oc_a:int := CALCbinarySUBintint(nc_a:int, _220:int) 
    tzone_08 := mtime.timezone(oc_a);   #399 tzone_08:timezone := MTIMEtzone_create(oc_a:int) 
#var tzone_08 := mtime.timezone((-23*59) - 59); 
    tzone_09 := mtime.timezone(0);      #401 tzone_09:timezone := MTIMEtzone_create(_207:int) 
#var tzone_09 := mtime.timezone(0); 
    tzone_10 := mtime.timezone(-60);    #403 tzone_10:timezone := MTIMEtzone_create(_227:int) 
#var tzone_10 := mtime.timezone(-60); 
    pc_a := calc.*(23,60);              #405 pc_a:int := CALCbinaryMULintint(_215:int, _204:int) 
    qc_a := calc.+(pc_a,59);            #406 qc_a:int := CALCbinaryADDintint(pc_a:int, _220:int) 
    tzone_11 := mtime.timezone(qc_a);   #407 tzone_11:timezone := MTIMEtzone_create(qc_a:int) 
#var tzone_11 := mtime.timezone((23*60)+59); 
    tzone_12 := mtime.timezone(60);     #409 tzone_12:timezone := MTIMEtzone_create(_204:int) 
#var tzone_12 := mtime.timezone(60); 
## nil tzones 
    tzone_13 := mtime.timezone(60,rule_feb,rule_dec);#412 tzone_13:timezone := MTIMEtzone_create_dst(_237:int, rule_feb:zrule, rule_dec:zrule) 
#var tzone_13 := mtime.timezone(60, rule_feb, rule_dec); 
    rc_a := calc.*(24,60);              #414 rc_a:int := CALCbinaryMULintint(_240:int, _237:int) 
    tzone_15 := mtime.timezone(rc_a,rule_apr,rule_nov);#415 tzone_15:timezone := MTIMEtzone_create_dst(rc_a:int, rule_apr:zrule, rule_nov:zrule) 
#var tzone_15 := mtime.timezone(24*60, rule_apr, rule_nov); 
    tzone_bat := bat.new(:oid,:timezone);#417 tzone_bat:bat[:oid,:timezone] := CMDBATnew(_244:oid, _245:timezone) {G}
#var tzone_bat := bat.new(oid,tzone); 
    bat.insert(tzone_bat,0@0,tzone_00); #419 _247:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _248:oid, tzone_00:timezone) 
    bat.insert(tzone_bat,1@0,tzone_01); #420 _249:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _250:oid, tzone_01:timezone) 
    bat.insert(tzone_bat,2@0,tzone_02); #421 _251:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _252:oid, tzone_02:timezone) 
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 
    bat.insert(tzone_bat,3@0,tzone_03); #423 _254:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _255:oid, tzone_03:timezone) 
    bat.insert(tzone_bat,4@0,tzone_04); #424 _256:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _257:oid, tzone_04:timezone) 
    bat.insert(tzone_bat,5@0,tzone_05); #425 _258:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _259:oid, tzone_05:timezone) 
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 
    bat.insert(tzone_bat,6@0,tzone_06); #427 _261:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _262:oid, tzone_06:timezone) 
    bat.insert(tzone_bat,7@0,tzone_07); #428 _263:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _264:oid, tzone_07:timezone) 
    bat.insert(tzone_bat,8@0,tzone_08); #429 _265:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _266:oid, tzone_08:timezone) 
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 
    bat.insert(tzone_bat,9@0,tzone_09); #431 _268:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _269:oid, tzone_09:timezone) 
    bat.insert(tzone_bat,10@0,tzone_10);#432 _270:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _271:oid, tzone_10:timezone) 
    bat.insert(tzone_bat,11@0,tzone_11);#433 _272:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _273:oid, tzone_11:timezone) 
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 
    bat.insert(tzone_bat,12@0,tzone_12);#435 _275:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _276:oid, tzone_12:timezone) 
    bat.insert(tzone_bat,13@0,tzone_13);#436 _277:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _278:oid, tzone_13:timezone) 
    bat.insert(tzone_bat,15@0,tzone_15);#437 _279:void := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _280:oid, tzone_15:timezone) 
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 
## test the operations on tzones 
    bat.setName(tzone_bat,"timezone");  #440 _283:void := BKCsetName(tzone_bat:bat[:oid,:timezone], _284:str) 
#io.print(tzone_bat); 
#io.print("start error"); 
#x:= getRefCount(tzone_bat); 
#io.print(x); 
#jd_a := io.print(tzone_bat); 
#io.print("end"); 
#io.print(x); 
#x:= getRefCount(tzone_bat); 
    io.print("tzone_bat");              #449 _293:void := IOprint_val(_294:str) 
    io.print(tzone_bat);                #450 _295:void := IOprint_val(tzone_bat:bat[:oid,:timezone]) 
#io.print(tzone_bat.bat.setColumn("tzone")); 
    _1194 := bat.new(nil:oid,nil:int);  #452 _1194:bat[:oid,:int] := CMDBATnew(_1195:oid, _1167:int) {G}
barrier (_1197,_1198,_1199):= bat.newIterator(tzone_bat);#453 (_1197:lng, _1198:oid, _1199:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J460}
    _1201 := mtime.minutes(_1199);      #454 _1201:int := MTIMEtzone_extract_minutes(_1199:timezone) 
    bat.insert(_1194,_1198,_1201);      #455 _1202:void := BKCinsert_bun(_1194:bat[:oid,:int], _1198:oid, _1201:int) 
    redo (_1197,_1198,_1199):= bat.hasMoreElements(tzone_bat);#456 (_1197:lng, _1198:oid, _1199:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J454}
catch MALException:str ;                #457 MALException:str {J459}
    redo (_1197,_1198,_1199):= bat.hasMoreElements(tzone_bat);#458 (_1197:lng, _1198:oid, _1199:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J454}
exit MALException:str ;                 #459 MALException:str 
exit (_1197,_1198,_1199);               #460 (_1197:lng, _1198:oid, _1199:timezone 
    kd_a:bat[:oid,:int]  := _1194;      #461 kd_a:bat[:oid,:int] := _1194:bat[:oid,:int] {G}
    bat.setColumn(kd_a,"minutes");      #462 _300:void := BKCsetColumn(kd_a:bat[:oid,:int], _299:str) 
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 
    _1208 := bat.new(nil:oid,nil:zrule);#464 _1208:bat[:oid,:zrule] := CMDBATnew(_1195:oid, _1209:zrule) {G}
barrier (_1211,_1212,_1213):= bat.newIterator(tzone_bat);#465 (_1211:lng, _1212:oid, _1213:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J472}
    _1215 := mtime.start_dst(_1213);    #466 _1215:zrule := MTIMEtzone_extract_start(_1213:timezone) 
    bat.insert(_1208,_1212,_1215);      #467 _1216:void := BKCinsert_bun(_1208:bat[:oid,:zrule], _1212:oid, _1215:zrule) 
    redo (_1211,_1212,_1213):= bat.hasMoreElements(tzone_bat);#468 (_1211:lng, _1212:oid, _1213:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J466}
catch MALException:str ;                #469 MALException:str {J471}
    redo (_1211,_1212,_1213):= bat.hasMoreElements(tzone_bat);#470 (_1211:lng, _1212:oid, _1213:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J466}
exit MALException:str ;                 #471 MALException:str 
exit (_1211,_1212,_1213);               #472 (_1211:lng, _1212:oid, _1213:timezone 
    md_a:bat[:oid,:zrule]  := _1208;    #473 md_a:bat[:oid,:zrule] := _1208:bat[:oid,:zrule] {G}
    bat.setColumn(md_a,"start_dst");    #474 _304:void := BKCsetColumn(md_a:bat[:oid,:zrule], _303:str) 
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 
    _1222 := bat.new(nil:oid,nil:zrule);#476 _1222:bat[:oid,:zrule] := CMDBATnew(_1195:oid, _1209:zrule) {G}
barrier (_1224,_1225,_1226):= bat.newIterator(tzone_bat);#477 (_1224:lng, _1225:oid, _1226:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J484}
    _1228 := mtime.end_dst(_1226);      #478 _1228:zrule := MTIMEtzone_extract_end(_1226:timezone) 
    bat.insert(_1222,_1225,_1228);      #479 _1229:void := BKCinsert_bun(_1222:bat[:oid,:zrule], _1225:oid, _1228:zrule) 
    redo (_1224,_1225,_1226):= bat.hasMoreElements(tzone_bat);#480 (_1224:lng, _1225:oid, _1226:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J478}
catch MALException:str ;                #481 MALException:str {J483}
    redo (_1224,_1225,_1226):= bat.hasMoreElements(tzone_bat);#482 (_1224:lng, _1225:oid, _1226:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J478}
exit MALException:str ;                 #483 MALException:str 
exit (_1224,_1225,_1226);               #484 (_1224:lng, _1225:oid, _1226:timezone 
    od_a:bat[:oid,:zrule]  := _1222;    #485 od_a:bat[:oid,:zrule] := _1222:bat[:oid,:zrule] {G}
    bat.setColumn(od_a,"end_dst");      #486 _308:void := BKCsetColumn(od_a:bat[:oid,:zrule], _307:str) 
    io.print("print(kd_a,md_a,od_a)");  #487 _309:void := IOprint_val(_310:str) 
    qd_a := io.print(kd_a,md_a,od_a);   #488 qd_a:void := IOtable(kd_a:bat[:oid,:int], md_a:bat[:oid,:zrule], od_a:bat[:oid,:zrule]) 
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create dates 
    date_00 := mtime.date(2000,1,1);    #492 date_00:date := MTIMEdate_create(_316:int, _317:int, _317:int) 
#var date_00 := date(2000,01,01); 
    date_01 := mtime.date("5000-JAN-01");#494 date_01:date := MTIMEdate_fromstr(_320:str) 
#var date_01 := date("5000-JAN-01"); 
    date_02 := mtime.date("1968-FEBR-29");#496 date_02:date := MTIMEdate_fromstr(_323:str) 
#var date_02 := date("1968-FEBR-29"); 
    date_03 := mtime.date("1-MARCH-01");#498 date_03:date := MTIMEdate_fromstr(_326:str) 
#var date_03 := date("1-MARCH-01"); 
    date_04 := mtime.date("-5867411-JAN-1");#500 date_04:date := MTIMEdate_fromstr(_329:str) 
#var date_04 := date("-5867411-JAN-1"); 
    date_05 := mtime.date("-768/octobe/01");#502 date_05:date := MTIMEdate_fromstr(_332:str) 
#var date_05 := date("-768/octobe/01"); 
    date_06 := mtime.date("5000\\novembe\\01");#504 date_06:date := MTIMEdate_fromstr(_335:str) 
#var date_06 := date("5000\\novembe\\01"); 
    date_07 := mtime.date("-1999/jun/01");#506 date_07:date := MTIMEdate_fromstr(_338:str) 
#var date_07 := date("-1999/jun/01"); 
    date_08 := mtime.date("2000-jul-14");#508 date_08:date := MTIMEdate_fromstr(_341:str) 
#var date_08 := date("2000-jul-14"); 
    date_09 := mtime.date("1999-sept-01");#510 date_09:date := MTIMEdate_fromstr(_344:str) 
#var date_09 := date("1999-sept-01"); 
    date_10 := mtime.date("1998-decemBeR-01");#512 date_10:date := MTIMEdate_fromstr(_347:str) 
#var date_10 := date("1998-decemBeR-01"); 
    date_11 := mtime.date("1953 may                01");#514 date_11:date := MTIMEdate_fromstr(_350:str) 
#var date_11 := date("1953 may                01"); 
    date_12 := mtime.date("5867411-DEC-31");#516 date_12:date := MTIMEdate_fromstr(_353:str) 
#var date_12 := date("5867411-DEC-31"); 
## nil dates 
    date_13 := mtime.date(1996,13,1);   #519 date_13:date := MTIMEdate_create(_357:int, _358:int, _359:int) 
#var date_13 := date(1996,13,1); 
    date_14 := mtime.date("999999999999999999999-01-01");#521 date_14:date := MTIMEdate_fromstr(_362:str) 
#var date_14 := date("999999999999999999999-01-01"); 
    date_15 := mtime.date("1999-JANUARI-01");#523 date_15:date := MTIMEdate_fromstr(_365:str) 
#var date_15 := date("1999-JANUARI-01"); 
    date_16 := mtime.date("1999-FEBR-29");#525 date_16:date := MTIMEdate_fromstr(_368:str) 
#var date_16 := date("1999-FEBR-29"); 
    date_17 := mtime.date("-1-DECEMBER-0");#527 date_17:date := MTIMEdate_fromstr(_371:str) 
#var date_17 := date("-1-DECEMBER-0"); 
    date_18 := mtime.date("5000\novembe31");#529 date_18:date := MTIMEdate_fromstr(_374:str) 
#var date_18 := date("5000\novembe\31"); 
    date_19 := mtime.date("nil");       #531 date_19:date := MTIMEdate_fromstr(_377:str) 
#var date_19 := date("nil"); 
    date_20 := mtime.date("1999-sept-31");#533 date_20:date := MTIMEdate_fromstr(_380:str) 
#var date_20 := date("1999-sept-31"); 
    date_bat := bat.new(:oid,:date);    #535 date_bat:bat[:oid,:date] := CMDBATnew(_244:oid, _383:date) {G}
#var date_bat := bat.new(oid,date); 
    bat.insert(date_bat,0@0,date_00);   #537 _385:void := BKCinsert_bun(date_bat:bat[:oid,:date], _386:oid, date_00:date) 
    bat.insert(date_bat,1@0,date_01);   #538 _387:void := BKCinsert_bun(date_bat:bat[:oid,:date], _388:oid, date_01:date) 
    bat.insert(date_bat,2@0,date_02);   #539 _389:void := BKCinsert_bun(date_bat:bat[:oid,:date], _390:oid, date_02:date) 
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 
    bat.insert(date_bat,3@0,date_03);   #541 _392:void := BKCinsert_bun(date_bat:bat[:oid,:date], _393:oid, date_03:date) 
    bat.insert(date_bat,4@0,date_04);   #542 _394:void := BKCinsert_bun(date_bat:bat[:oid,:date], _395:oid, date_04:date) 
    bat.insert(date_bat,5@0,date_05);   #543 _396:void := BKCinsert_bun(date_bat:bat[:oid,:date], _397:oid, date_05:date) 
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 
    bat.insert(date_bat,6@0,date_06);   #545 _399:void := BKCinsert_bun(date_bat:bat[:oid,:date], _400:oid, date_06:date) 
    bat.insert(date_bat,7@0,date_07);   #546 _401:void := BKCinsert_bun(date_bat:bat[:oid,:date], _402:oid, date_07:date) 
    bat.insert(date_bat,8@0,date_08);   #547 _403:void := BKCinsert_bun(date_bat:bat[:oid,:date], _404:oid, date_08:date) 
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 
    bat.insert(date_bat,9@0,date_09);   #549 _406:void := BKCinsert_bun(date_bat:bat[:oid,:date], _407:oid, date_09:date) 
    bat.insert(date_bat,10@0,date_10);  #550 _408:void := BKCinsert_bun(date_bat:bat[:oid,:date], _409:oid, date_10:date) 
    bat.insert(date_bat,11@0,date_11);  #551 _410:void := BKCinsert_bun(date_bat:bat[:oid,:date], _411:oid, date_11:date) 
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 
    bat.insert(date_bat,12@0,date_12);  #553 _413:void := BKCinsert_bun(date_bat:bat[:oid,:date], _414:oid, date_12:date) 
    bat.insert(date_bat,13@0,date_13);  #554 _415:void := BKCinsert_bun(date_bat:bat[:oid,:date], _416:oid, date_13:date) 
    bat.insert(date_bat,14@0,date_14);  #555 _417:void := BKCinsert_bun(date_bat:bat[:oid,:date], _418:oid, date_14:date) 
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 
    bat.insert(date_bat,15@0,date_15);  #557 _420:void := BKCinsert_bun(date_bat:bat[:oid,:date], _421:oid, date_15:date) 
    bat.insert(date_bat,16@0,date_16);  #558 _422:void := BKCinsert_bun(date_bat:bat[:oid,:date], _423:oid, date_16:date) 
    bat.insert(date_bat,17@0,date_17);  #559 _424:void := BKCinsert_bun(date_bat:bat[:oid,:date], _425:oid, date_17:date) 
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 
    bat.insert(date_bat,18@0,date_18);  #561 _427:void := BKCinsert_bun(date_bat:bat[:oid,:date], _428:oid, date_18:date) 
    bat.insert(date_bat,19@0,date_19);  #562 _429:void := BKCinsert_bun(date_bat:bat[:oid,:date], _430:oid, date_19:date) 
    bat.insert(date_bat,20@0,date_20);  #563 _431:void := BKCinsert_bun(date_bat:bat[:oid,:date], _432:oid, date_20:date) 
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 
## test the operations on dates 
    ne_a := bat.setColumn(date_bat,"date");#566 ne_a:void := BKCsetColumn(date_bat:bat[:oid,:date], _436:str) 
#io.print(date_bat.bat.setColumn("date"), 
    _1235 := bat.new(nil:oid,nil:int);  #568 _1235:bat[:oid,:int] := CMDBATnew(_1236:oid, _1237:int) {G}
barrier (_1239,_1240,_1241):= bat.newIterator(date_bat);#569 (_1239:lng, _1240:oid, _1241:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J576}
    _1243 := mtime.year(_1241);         #570 _1243:int := MTIMEdate_extract_year(_1241:date) 
    bat.insert(_1235,_1240,_1243);      #571 _1244:void := BKCinsert_bun(_1235:bat[:oid,:int], _1240:oid, _1243:int) 
    redo (_1239,_1240,_1241):= bat.hasMoreElements(date_bat);#572 (_1239:lng, _1240:oid, _1241:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J570}
catch MALException:str ;                #573 MALException:str {J575}
    redo (_1239,_1240,_1241):= bat.hasMoreElements(date_bat);#574 (_1239:lng, _1240:oid, _1241:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J570}
exit MALException:str ;                 #575 MALException:str 
exit (_1239,_1240,_1241);               #576 (_1239:lng, _1240:oid, _1241:date 
    oe_a:bat[:oid,:int]  := _1235;      #577 oe_a:bat[:oid,:int] := _1235:bat[:oid,:int] {G}
    pe_a := bat.setColumn(oe_a,"year"); #578 pe_a:void := BKCsetColumn(oe_a:bat[:oid,:int], _440:str) 
#      [year](date_bat).bat.setColumn("year"), 
    _1250 := bat.new(nil:oid,nil:int);  #580 _1250:bat[:oid,:int] := CMDBATnew(_1236:oid, _1237:int) {G}
barrier (_1252,_1253,_1254):= bat.newIterator(date_bat);#581 (_1252:lng, _1253:oid, _1254:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J588}
    _1256 := mtime.day(_1254);          #582 _1256:int := MTIMEdate_extract_day(_1254:date) 
    bat.insert(_1250,_1253,_1256);      #583 _1257:void := BKCinsert_bun(_1250:bat[:oid,:int], _1253:oid, _1256:int) 
    redo (_1252,_1253,_1254):= bat.hasMoreElements(date_bat);#584 (_1252:lng, _1253:oid, _1254:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J582}
catch MALException:str ;                #585 MALException:str {J587}
    redo (_1252,_1253,_1254):= bat.hasMoreElements(date_bat);#586 (_1252:lng, _1253:oid, _1254:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J582}
exit MALException:str ;                 #587 MALException:str 
exit (_1252,_1253,_1254);               #588 (_1252:lng, _1253:oid, _1254:date 
    qe_a:bat[:oid,:int]  := _1250;      #589 qe_a:bat[:oid,:int] := _1250:bat[:oid,:int] {G}
    re_a := bat.setColumn(qe_a,"day");  #590 re_a:void := BKCsetColumn(qe_a:bat[:oid,:int], _444:str) 
#      [day](date_bat).bat.setColumn("day"), 
    _1263 := bat.new(nil:oid,nil:int);  #592 _1263:bat[:oid,:int] := CMDBATnew(_1236:oid, _1237:int) {G}
barrier (_1265,_1266,_1267):= bat.newIterator(date_bat);#593 (_1265:lng, _1266:oid, _1267:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J600}
    _1269 := mtime.month(_1267);        #594 _1269:int := MTIMEdate_extract_month(_1267:date) 
    bat.insert(_1263,_1266,_1269);      #595 _1270:void := BKCinsert_bun(_1263:bat[:oid,:int], _1266:oid, _1269:int) 
    redo (_1265,_1266,_1267):= bat.hasMoreElements(date_bat);#596 (_1265:lng, _1266:oid, _1267:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J594}
catch MALException:str ;                #597 MALException:str {J599}
    redo (_1265,_1266,_1267):= bat.hasMoreElements(date_bat);#598 (_1265:lng, _1266:oid, _1267:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J594}
exit MALException:str ;                 #599 MALException:str 
exit (_1265,_1266,_1267);               #600 (_1265:lng, _1266:oid, _1267:date 
    se_a:bat[:oid,:int]  := _1263;      #601 se_a:bat[:oid,:int] := _1263:bat[:oid,:int] {G}
    _1276 := bat.new(nil:oid,nil:str);  #602 _1276:bat[:oid,:str] := CMDBATnew(_1277:oid, _1278:str) {G}
barrier (_1280,_1281,_1282):= bat.newIterator(se_a);#603 (_1280:lng, _1281:oid, _1282:int) := CHPbunIterator(se_a:bat[:oid,:int]) {J610}
    _1284 := mtime.monthname(_1282);    #604 _1284:str := MTIMEmonth_to_str(_1282:int) {G}
    bat.insert(_1276,_1281,_1284);      #605 _1285:void := BKCinsert_bun(_1276:bat[:oid,:str], _1281:oid, _1284:str) 
    redo (_1280,_1281,_1282):= bat.hasMoreElements(se_a);#606 (_1280:lng, _1281:oid, _1282:int) := CHPbunHasMoreElements(se_a:bat[:oid,:int]) {J604}
catch MALException:str ;                #607 MALException:str {J609}
    redo (_1280,_1281,_1282):= bat.hasMoreElements(se_a);#608 (_1280:lng, _1281:oid, _1282:int) := CHPbunHasMoreElements(se_a:bat[:oid,:int]) {J604}
exit MALException:str ;                 #609 MALException:str 
exit (_1280,_1281,_1282);               #610 (_1280:lng, _1281:oid, _1282:int 
    te_a:bat[:oid,:str]  := _1276;      #611 te_a:bat[:oid,:str] := _1276:bat[:oid,:str] {G}
    ue_a := bat.setColumn(te_a,"monthname");#612 ue_a:void := BKCsetColumn(te_a:bat[:oid,:str], _450:str) 
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 
    _1291 := bat.new(nil:oid,nil:int);  #614 _1291:bat[:oid,:int] := CMDBATnew(_1277:oid, _1292:int) {G}
barrier (_1294,_1295,_1296):= bat.newIterator(date_bat);#615 (_1294:lng, _1295:oid, _1296:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J622}
    _1298 := mtime.month(_1296);        #616 _1298:int := MTIMEdate_extract_month(_1296:date) 
    bat.insert(_1291,_1295,_1298);      #617 _1299:void := BKCinsert_bun(_1291:bat[:oid,:int], _1295:oid, _1298:int) 
    redo (_1294,_1295,_1296):= bat.hasMoreElements(date_bat);#618 (_1294:lng, _1295:oid, _1296:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J616}
catch MALException:str ;                #619 MALException:str {J621}
    redo (_1294,_1295,_1296):= bat.hasMoreElements(date_bat);#620 (_1294:lng, _1295:oid, _1296:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J616}
exit MALException:str ;                 #621 MALException:str 
exit (_1294,_1295,_1296);               #622 (_1294:lng, _1295:oid, _1296:date 
    ve_a:bat[:oid,:int]  := _1291;      #623 ve_a:bat[:oid,:int] := _1291:bat[:oid,:int] {G}
    _1305 := bat.new(nil:oid,nil:str);  #624 _1305:bat[:oid,:str] := CMDBATnew(_1277:oid, _1278:str) {G}
barrier (_1307,_1308,_1309):= bat.newIterator(ve_a);#625 (_1307:lng, _1308:oid, _1309:int) := CHPbunIterator(ve_a:bat[:oid,:int]) {J632}
    _1311 := mtime.monthname(_1309);    #626 _1311:str := MTIMEmonth_to_str(_1309:int) {G}
    bat.insert(_1305,_1308,_1311);      #627 _1312:void := BKCinsert_bun(_1305:bat[:oid,:str], _1308:oid, _1311:str) 
    redo (_1307,_1308,_1309):= bat.hasMoreElements(ve_a);#628 (_1307:lng, _1308:oid, _1309:int) := CHPbunHasMoreElements(ve_a:bat[:oid,:int]) {J626}
catch MALException:str ;                #629 MALException:str {J631}
    redo (_1307,_1308,_1309):= bat.hasMoreElements(ve_a);#630 (_1307:lng, _1308:oid, _1309:int) := CHPbunHasMoreElements(ve_a:bat[:oid,:int]) {J626}
exit MALException:str ;                 #631 MALException:str 
exit (_1307,_1308,_1309);               #632 (_1307:lng, _1308:oid, _1309:int 
    we_a:bat[:oid,:str]  := _1305;      #633 we_a:bat[:oid,:str] := _1305:bat[:oid,:str] {G}
    _1318 := bat.new(nil:oid,nil:int);  #634 _1318:bat[:oid,:int] := CMDBATnew(_1319:oid, _1292:int) {G}
barrier (_1321,_1322,_1323):= bat.newIterator(we_a);#635 (_1321:lng, _1322:oid, _1323:str) := CHPbunIterator(we_a:bat[:oid,:str]) {GJ642}
    _1325 := mtime.monthnum(_1323);     #636 _1325:int := MTIMEmonth_from_str(_1323:str) 
    bat.insert(_1318,_1322,_1325);      #637 _1326:void := BKCinsert_bun(_1318:bat[:oid,:int], _1322:oid, _1325:int) 
    redo (_1321,_1322,_1323):= bat.hasMoreElements(we_a);#638 (_1321:lng, _1322:oid, _1323:str) := CHPbunHasMoreElements(we_a:bat[:oid,:str]) {GJ636}
catch MALException:str ;                #639 MALException:str {J641}
    redo (_1321,_1322,_1323):= bat.hasMoreElements(we_a);#640 (_1321:lng, _1322:oid, _1323:str) := CHPbunHasMoreElements(we_a:bat[:oid,:str]) {GJ636}
exit MALException:str ;                 #641 MALException:str 
exit (_1321,_1322,_1323);               #642 (_1321:lng, _1322:oid, _1323:str 
    xe_a:bat[:oid,:int]  := _1318;      #643 xe_a:bat[:oid,:int] := _1318:bat[:oid,:int] {G}
    ye_a := bat.setColumn(xe_a,"monthnum");#644 ye_a:void := BKCsetColumn(xe_a:bat[:oid,:int], _456:str) 
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");#645 _458:void := IOprint_val(_459:str) 
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);#646 af_a:void := IOtable(date_bat:bat[:oid,:date], oe_a:bat[:oid,:int], qe_a:bat[:oid,:int], te_a:bat[:oid,:str], xe_a:bat[:oid,:int]) 
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 
    _1332 := bat.new(nil:oid,nil:date); #648 _1332:bat[:oid,:date] := CMDBATnew(_1319:oid, _1333:date) {G}
barrier (_1335,_1336,_1337):= bat.newIterator(date_bat);#649 (_1335:lng, _1336:oid, _1337:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J656}
    _1339 := mtime.addyears(_1337,-100);#650 _1339:date := MTIMEdate_addyears(_1337:date, _464:int) 
    bat.insert(_1332,_1336,_1339);      #651 _1340:void := BKCinsert_bun(_1332:bat[:oid,:date], _1336:oid, _1339:date) 
    redo (_1335,_1336,_1337):= bat.hasMoreElements(date_bat);#652 (_1335:lng, _1336:oid, _1337:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J650}
catch MALException:str ;                #653 MALException:str {J655}
    redo (_1335,_1336,_1337):= bat.hasMoreElements(date_bat);#654 (_1335:lng, _1336:oid, _1337:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J650}
exit MALException:str ;                 #655 MALException:str 
exit (_1335,_1336,_1337);               #656 (_1335:lng, _1336:oid, _1337:date 
    date_addyears:bat[:oid,:date]  := _1332;#657 date_addyears:bat[:oid,:date] := _1332:bat[:oid,:date] {G}
#var date_addyears := [addyears](date_bat, -100); 
    _1346 := bat.new(nil:oid,nil:date); #659 _1346:bat[:oid,:date] := CMDBATnew(_1319:oid, _1333:date) {G}
barrier (_1348,_1349,_1350):= bat.newIterator(date_bat);#660 (_1348:lng, _1349:oid, _1350:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J667}
    _1352 := mtime.addmonths(_1350,1);  #661 _1352:date := MTIMEdate_addmonths(_1350:date, _468:int) 
    bat.insert(_1346,_1349,_1352);      #662 _1353:void := BKCinsert_bun(_1346:bat[:oid,:date], _1349:oid, _1352:date) 
    redo (_1348,_1349,_1350):= bat.hasMoreElements(date_bat);#663 (_1348:lng, _1349:oid, _1350:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J661}
catch MALException:str ;                #664 MALException:str {J666}
    redo (_1348,_1349,_1350):= bat.hasMoreElements(date_bat);#665 (_1348:lng, _1349:oid, _1350:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J661}
exit MALException:str ;                 #666 MALException:str 
exit (_1348,_1349,_1350);               #667 (_1348:lng, _1349:oid, _1350:date 
    date_addmonths:bat[:oid,:date]  := _1346;#668 date_addmonths:bat[:oid,:date] := _1346:bat[:oid,:date] {G}
#var date_addmonths := [addmonths](date_bat, 1); 
    bat.setColumn(date_bat,"date");     #670 _470:void := BKCsetColumn(date_bat:bat[:oid,:date], _471:str) 
#io.print(date_bat.bat.setColumn("date"), 
    bat.setColumn(date_addyears,"min100y");#672 _473:void := BKCsetColumn(date_addyears:bat[:oid,:date], _474:str) 
#      date_addyears.bat.setColumn("min100y"), 
    _1359 := bat.new(nil:oid,nil:int);  #674 _1359:bat[:oid,:int] := CMDBATnew(_1360:oid, _1361:int) {G}
barrier (_1363,_1364,_1365):= bat.newIterator(date_addyears);#675 (_1363:lng, _1364:oid, _1365:date) := CHPbunIterator(date_addyears:bat[:oid,:date]) {J683}
    _1367 := algebra.find(date_bat,_1364);#676 _1367:date := ALGfind(date_bat:bat[:oid,:date], _1364:oid) 
    _1369 := mtime.diff(_1365,_1367);   #677 _1369:int := MTIMEdate_diff(_1365:date, _1367:date) 
    bat.insert(_1359,_1364,_1369);      #678 _1370:void := BKCinsert_bun(_1359:bat[:oid,:int], _1364:oid, _1369:int) 
    redo (_1363,_1364,_1365):= bat.hasMoreElements(date_addyears);#679 (_1363:lng, _1364:oid, _1365:date) := CHPbunHasMoreElements(date_addyears:bat[:oid,:date]) {J676}
catch MALException:str ;                #680 MALException:str {J682}
    redo (_1363,_1364,_1365):= bat.hasMoreElements(date_addyears);#681 (_1363:lng, _1364:oid, _1365:date) := CHPbunHasMoreElements(date_addyears:bat[:oid,:date]) {J676}
exit MALException:str ;                 #682 MALException:str 
exit (_1363,_1364,_1365);               #683 (_1363:lng, _1364:oid, _1365:date 
    df_a:bat[:oid,:int]  := _1359;      #684 df_a:bat[:oid,:int] := _1359:bat[:oid,:int] {G}
    bat.setColumn(df_a,"diff");         #685 _479:void := BKCsetColumn(df_a:bat[:oid,:int], _478:str) 
    io.print("print(date_bat,date_addyears,df_a)");#686 _480:void := IOprint_val(_481:str) 
    ff_a := io.print(date_bat,date_addyears,df_a);#687 ff_a:void := IOtable(date_bat:bat[:oid,:date], date_addyears:bat[:oid,:date], df_a:bat[:oid,:int]) 
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 
    bat.setColumn(date_bat,"date");     #689 _484:void := BKCsetColumn(date_bat:bat[:oid,:date], _471:str) 
#io.print(date_bat.bat.setColumn("date"), 
    bat.setColumn(date_addmonths,"plus1m");#691 _486:void := BKCsetColumn(date_addmonths:bat[:oid,:date], _487:str) 
#      date_addmonths.bat.setColumn("plus1m"), 
    _1376 := bat.new(nil:oid,nil:int);  #693 _1376:bat[:oid,:int] := CMDBATnew(_1360:oid, _1361:int) {G}
barrier (_1378,_1379,_1380):= bat.newIterator(date_addmonths);#694 (_1378:lng, _1379:oid, _1380:date) := CHPbunIterator(date_addmonths:bat[:oid,:date]) {J702}
    _1382 := algebra.find(date_bat,_1379);#695 _1382:date := ALGfind(date_bat:bat[:oid,:date], _1379:oid) 
    _1384 := mtime.diff(_1380,_1382);   #696 _1384:int := MTIMEdate_diff(_1380:date, _1382:date) 
    bat.insert(_1376,_1379,_1384);      #697 _1385:void := BKCinsert_bun(_1376:bat[:oid,:int], _1379:oid, _1384:int) 
    redo (_1378,_1379,_1380):= bat.hasMoreElements(date_addmonths);#698 (_1378:lng, _1379:oid, _1380:date) := CHPbunHasMoreElements(date_addmonths:bat[:oid,:date]) {J695}
catch MALException:str ;                #699 MALException:str {J701}
    redo (_1378,_1379,_1380):= bat.hasMoreElements(date_addmonths);#700 (_1378:lng, _1379:oid, _1380:date) := CHPbunHasMoreElements(date_addmonths:bat[:oid,:date]) {J695}
exit MALException:str ;                 #701 MALException:str 
exit (_1378,_1379,_1380);               #702 (_1378:lng, _1379:oid, _1380:date 
    if_a:bat[:oid,:int]  := _1376;      #703 if_a:bat[:oid,:int] := _1376:bat[:oid,:int] {G}
    bat.setColumn(if_a,"diff");         #704 _490:void := BKCsetColumn(if_a:bat[:oid,:int], _478:str) 
    io.print(" print(date_bat,date_addmonths,if_a)");#705 _491:void := IOprint_val(_492:str) 
    kf_a := io.print(date_bat,date_addmonths,if_a);#706 kf_a:void := IOtable(date_bat:bat[:oid,:date], date_addmonths:bat[:oid,:date], if_a:bat[:oid,:int]) 
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 
## test dayofweek and weeknumber using more than two years as consecutive days 
    date_seq := bat.new(:int,:date);    #709 date_seq:bat[:int,:date] := CMDBATnew(_497:int, _383:date) {G}
#var date_seq := bat.new(int, date); 
    i := -375;                          #711 i:int := _500:int 
#var i := -375; 
barrier lf_a := true;                   #713 lf_a:bit := _503:bit {J723}
    i := calc.+(i,1);                   #714 i:int := CALCbinaryADDintint(i:int, _504:int) 
    of_a := calc.<(i,375);              #715 of_a:bit := CALCcompLTintint(i:int, _506:int) 
barrier mf_a := of_a;                   #716 mf_a:bit := of_a:bit {J722}
#while ((i :+= 1) < 375) { 
    pf_a := mtime.adddays(date_00,i);   #718 pf_a:date := MTIMEdate_adddays(date_00:date, i:int) 
    bat.insert(date_seq,i,pf_a);        #719 _510:void := BKCinsert_bun(date_seq:bat[:int,:date], i:int, pf_a:date) 
#	date_seq.bat.insert(i,adddays(date_00,i)); 
    redo lf_a;                          #721 lf_a:bit {J714}
exit mf_a;                              #722 mf_a:bit 
exit lf_a;                              #723 lf_a:bit 
#} 
    rf_a := bat.setColumn(date_seq,"date");#725 rf_a:void := BKCsetColumn(date_seq:bat[:int,:date], _514:str) 
#io.print(date_seq.bat.setColumn("date"), 
    _1391 := bat.new(nil:int,nil:int);  #727 _1391:bat[:int,:int] := CMDBATnew(_1361:int, _1361:int) {G}
barrier (_1393,_1394,_1395):= bat.newIterator(date_seq);#728 (_1393:lng, _1394:int, _1395:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J735}
    _1397 := mtime.weekofyear(_1395);   #729 _1397:int := MTIMEdate_extract_weekofyear(_1395:date) 
    bat.insert(_1391,_1394,_1397);      #730 _1398:void := BKCinsert_bun(_1391:bat[:int,:int], _1394:int, _1397:int) 
    redo (_1393,_1394,_1395):= bat.hasMoreElements(date_seq);#731 (_1393:lng, _1394:int, _1395:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J729}
catch MALException:str ;                #732 MALException:str {J734}
    redo (_1393,_1394,_1395):= bat.hasMoreElements(date_seq);#733 (_1393:lng, _1394:int, _1395:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J729}
exit MALException:str ;                 #734 MALException:str 
exit (_1393,_1394,_1395);               #735 (_1393:lng, _1394:int, _1395:date 
    sf_a:bat[:int,:int]  := _1391;      #736 sf_a:bat[:int,:int] := _1391:bat[:int,:int] {G}
    tf_a := bat.setColumn(sf_a,"weekofyear");#737 tf_a:void := BKCsetColumn(sf_a:bat[:int,:int], _518:str) 
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 
    _1404 := bat.new(nil:int,nil:int);  #739 _1404:bat[:int,:int] := CMDBATnew(_1405:int, _1405:int) {G}
barrier (_1407,_1408,_1409):= bat.newIterator(date_seq);#740 (_1407:lng, _1408:int, _1409:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J747}
    _1411 := mtime.dayofweek(_1409);    #741 _1411:int := MTIMEdate_extract_dayofweek(_1409:date) 
    bat.insert(_1404,_1408,_1411);      #742 _1412:void := BKCinsert_bun(_1404:bat[:int,:int], _1408:int, _1411:int) 
    redo (_1407,_1408,_1409):= bat.hasMoreElements(date_seq);#743 (_1407:lng, _1408:int, _1409:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J741}
catch MALException:str ;                #744 MALException:str {J746}
    redo (_1407,_1408,_1409):= bat.hasMoreElements(date_seq);#745 (_1407:lng, _1408:int, _1409:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J741}
exit MALException:str ;                 #746 MALException:str 
exit (_1407,_1408,_1409);               #747 (_1407:lng, _1408:int, _1409:date 
    uf_a:bat[:int,:int]  := _1404;      #748 uf_a:bat[:int,:int] := _1404:bat[:int,:int] {G}
    _1418 := bat.new(nil:int,nil:str);  #749 _1418:bat[:int,:str] := CMDBATnew(_1405:int, _1419:str) {G}
barrier (_1421,_1422,_1423):= bat.newIterator(uf_a);#750 (_1421:lng, _1422:int, _1423:int) := CHPbunIterator(uf_a:bat[:int,:int]) {J757}
    _1425 := mtime.dayname(_1423);      #751 _1425:str := MTIMEday_to_str(_1423:int) {G}
    bat.insert(_1418,_1422,_1425);      #752 _1426:void := BKCinsert_bun(_1418:bat[:int,:str], _1422:int, _1425:str) 
    redo (_1421,_1422,_1423):= bat.hasMoreElements(uf_a);#753 (_1421:lng, _1422:int, _1423:int) := CHPbunHasMoreElements(uf_a:bat[:int,:int]) {J751}
catch MALException:str ;                #754 MALException:str {J756}
    redo (_1421,_1422,_1423):= bat.hasMoreElements(uf_a);#755 (_1421:lng, _1422:int, _1423:int) := CHPbunHasMoreElements(uf_a:bat[:int,:int]) {J751}
exit MALException:str ;                 #756 MALException:str 
exit (_1421,_1422,_1423);               #757 (_1421:lng, _1422:int, _1423:int 
    vf_a:bat[:int,:str]  := _1418;      #758 vf_a:bat[:int,:str] := _1418:bat[:int,:str] {G}
    wf_a := bat.setColumn(vf_a,"dayofweek");#759 wf_a:void := BKCsetColumn(vf_a:bat[:int,:str], _522:str) 
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 
    _1432 := bat.new(nil:int,nil:int);  #761 _1432:bat[:int,:int] := CMDBATnew(_1405:int, _1405:int) {G}
barrier (_1434,_1435,_1436):= bat.newIterator(date_seq);#762 (_1434:lng, _1435:int, _1436:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J769}
    _1438 := mtime.dayofweek(_1436);    #763 _1438:int := MTIMEdate_extract_dayofweek(_1436:date) 
    bat.insert(_1432,_1435,_1438);      #764 _1439:void := BKCinsert_bun(_1432:bat[:int,:int], _1435:int, _1438:int) 
    redo (_1434,_1435,_1436):= bat.hasMoreElements(date_seq);#765 (_1434:lng, _1435:int, _1436:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J763}
catch MALException:str ;                #766 MALException:str {J768}
    redo (_1434,_1435,_1436):= bat.hasMoreElements(date_seq);#767 (_1434:lng, _1435:int, _1436:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J763}
exit MALException:str ;                 #768 MALException:str 
exit (_1434,_1435,_1436);               #769 (_1434:lng, _1435:int, _1436:date 
    xf_a:bat[:int,:int]  := _1432;      #770 xf_a:bat[:int,:int] := _1432:bat[:int,:int] {G}
    _1445 := bat.new(nil:int,nil:str);  #771 _1445:bat[:int,:str] := CMDBATnew(_1446:int, _1419:str) {G}
barrier (_1448,_1449,_1450):= bat.newIterator(xf_a);#772 (_1448:lng, _1449:int, _1450:int) := CHPbunIterator(xf_a:bat[:int,:int]) {J779}
    _1452 := mtime.dayname(_1450);      #773 _1452:str := MTIMEday_to_str(_1450:int) {G}
    bat.insert(_1445,_1449,_1452);      #774 _1453:void := BKCinsert_bun(_1445:bat[:int,:str], _1449:int, _1452:str) 
    redo (_1448,_1449,_1450):= bat.hasMoreElements(xf_a);#775 (_1448:lng, _1449:int, _1450:int) := CHPbunHasMoreElements(xf_a:bat[:int,:int]) {J773}
catch MALException:str ;                #776 MALException:str {J778}
    redo (_1448,_1449,_1450):= bat.hasMoreElements(xf_a);#777 (_1448:lng, _1449:int, _1450:int) := CHPbunHasMoreElements(xf_a:bat[:int,:int]) {J773}
exit MALException:str ;                 #778 MALException:str 
exit (_1448,_1449,_1450);               #779 (_1448:lng, _1449:int, _1450:int 
    yf_a:bat[:int,:str]  := _1445;      #780 yf_a:bat[:int,:str] := _1445:bat[:int,:str] {G}
    _1459 := bat.new(nil:int,nil:int);  #781 _1459:bat[:int,:int] := CMDBATnew(_1446:int, _1446:int) {G}
barrier (_1461,_1462,_1463):= bat.newIterator(yf_a);#782 (_1461:lng, _1462:int, _1463:str) := CHPbunIterator(yf_a:bat[:int,:str]) {GJ789}
    _1465 := mtime.daynum(_1463);       #783 _1465:int := MTIMEday_from_str(_1463:str) 
    bat.insert(_1459,_1462,_1465);      #784 _1466:void := BKCinsert_bun(_1459:bat[:int,:int], _1462:int, _1465:int) 
    redo (_1461,_1462,_1463):= bat.hasMoreElements(yf_a);#785 (_1461:lng, _1462:int, _1463:str) := CHPbunHasMoreElements(yf_a:bat[:int,:str]) {GJ783}
catch MALException:str ;                #786 MALException:str {J788}
    redo (_1461,_1462,_1463):= bat.hasMoreElements(yf_a);#787 (_1461:lng, _1462:int, _1463:str) := CHPbunHasMoreElements(yf_a:bat[:int,:str]) {GJ783}
exit MALException:str ;                 #788 MALException:str 
exit (_1461,_1462,_1463);               #789 (_1461:lng, _1462:int, _1463:str 
    ag_a:bat[:int,:int]  := _1459;      #790 ag_a:bat[:int,:int] := _1459:bat[:int,:int] {G}
    bg_a := bat.setColumn(ag_a,"num");  #791 bg_a:void := BKCsetColumn(ag_a:bat[:int,:int], _532:str) 
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 
    _1472 := bat.new(nil:int,nil:int);  #793 _1472:bat[:int,:int] := CMDBATnew(_1446:int, _1446:int) {G}
barrier (_1474,_1475,_1476):= bat.newIterator(date_seq);#794 (_1474:lng, _1475:int, _1476:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J801}
    _1478 := mtime.dayofyear(_1476);    #795 _1478:int := MTIMEdate_extract_dayofyear(_1476:date) 
    bat.insert(_1472,_1475,_1478);      #796 _1479:void := BKCinsert_bun(_1472:bat[:int,:int], _1475:int, _1478:int) 
    redo (_1474,_1475,_1476):= bat.hasMoreElements(date_seq);#797 (_1474:lng, _1475:int, _1476:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J795}
catch MALException:str ;                #798 MALException:str {J800}
    redo (_1474,_1475,_1476):= bat.hasMoreElements(date_seq);#799 (_1474:lng, _1475:int, _1476:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J795}
exit MALException:str ;                 #800 MALException:str 
exit (_1474,_1475,_1476);               #801 (_1474:lng, _1475:int, _1476:date 
    cg_a:bat[:int,:int]  := _1472;      #802 cg_a:bat[:int,:int] := _1472:bat[:int,:int] {G}
    dg_a := bat.setColumn(cg_a,"dayofyear");#803 dg_a:void := BKCsetColumn(cg_a:bat[:int,:int], _535:str) 
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");#804 _537:void := IOprint_val(_538:str) 
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);#805 eg_a:void := IOtable(date_seq:bat[:int,:date], sf_a:bat[:int,:int], vf_a:bat[:int,:str], ag_a:bat[:int,:int], cg_a:bat[:int,:int]) 
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways top create daytimes 
    daytime_00 := mtime.daytime(23,59,59,999);#809 daytime_00:daytime := MTIMEdaytime_create(_544:int, _545:int, _545:int, _546:int) 
#var daytime_00 := mtime.daytime(23,59,59,999); 
    daytime_01 := mtime.daytime("23:59");#811 daytime_01:daytime := MTIMEdaytime_fromstr(_549:str) 
#var daytime_01 := mtime.daytime("23:59"); 
    daytime_02 := mtime.daytime("00:00");#813 daytime_02:daytime := MTIMEdaytime_fromstr(_552:str) 
#var daytime_02 := mtime.daytime("00:00"); 
    daytime_03 := mtime.daytime("23:59:59");#815 daytime_03:daytime := MTIMEdaytime_fromstr(_555:str) 
#var daytime_03 := mtime.daytime("23:59:59"); 
    daytime_04 := mtime.daytime("00:00:00.000");#817 daytime_04:daytime := MTIMEdaytime_fromstr(_558:str) 
#var daytime_04 := mtime.daytime("00:00:00.000"); 
    daytime_05 := mtime.daytime("00:00:00");#819 daytime_05:daytime := MTIMEdaytime_fromstr(_561:str) 
#var daytime_05 := mtime.daytime("00:00:00"); 
    daytime_06 := mtime.daytime("00:00:00:001");#821 daytime_06:daytime := MTIMEdaytime_fromstr(_564:str) 
#var daytime_06 := mtime.daytime("00:00:00:001"); 
    daytime_07 := mtime.daytime("03:49:02.999");#823 daytime_07:daytime := MTIMEdaytime_fromstr(_567:str) 
#var daytime_07 := mtime.daytime("03:49:02.999"); 
    daytime_08 := mtime.daytime("20:48:42:999");#825 daytime_08:daytime := MTIMEdaytime_fromstr(_570:str) 
#var daytime_08 := mtime.daytime("20:48:42:999"); 
    daytime_09 := mtime.daytime("17:53:38:999");#827 daytime_09:daytime := MTIMEdaytime_fromstr(_573:str) 
#var daytime_09 := mtime.daytime("17:53:38:999"); 
    daytime_10 := mtime.daytime("13:15:34:999");#829 daytime_10:daytime := MTIMEdaytime_fromstr(_576:str) 
#var daytime_10 := mtime.daytime("13:15:34:999"); 
    daytime_11 := mtime.daytime("07:34:27.999");#831 daytime_11:daytime := MTIMEdaytime_fromstr(_579:str) 
#var daytime_11 := mtime.daytime("07:34:27.999"); 
    daytime_12 := mtime.daytime("23:59:59:999");#833 daytime_12:daytime := MTIMEdaytime_fromstr(_582:str) 
#var daytime_12 := mtime.daytime("23:59:59:999"); 
    daytime_13 := mtime.daytime("01:00:03.999");#835 daytime_13:daytime := MTIMEdaytime_fromstr(_585:str) 
#var daytime_13 := mtime.daytime("01:00:03.999"); 
    daytime_14 := mtime.daytime("23:59:59.999");#837 daytime_14:daytime := MTIMEdaytime_fromstr(_588:str) 
#var daytime_14 := mtime.daytime("23:59:59.999"); 
## nil daytimes 
    daytime_15 := mtime.daytime(24,59,59,999);#840 daytime_15:daytime := MTIMEdaytime_create(_592:int, _593:int, _593:int, _594:int) 
#var daytime_15 := mtime.daytime(24,59,59,999); 
    daytime_16 := mtime.daytime(23,60,59,999);#842 daytime_16:daytime := MTIMEdaytime_create(_597:int, _598:int, _593:int, _594:int) 
#var daytime_16 := mtime.daytime(23,60,59,999); 
    daytime_17 := mtime.daytime(23,59,60,999);#844 daytime_17:daytime := MTIMEdaytime_create(_597:int, _593:int, _598:int, _594:int) 
#var daytime_17 := mtime.daytime(23,59,60,999); 
    daytime_18 := mtime.daytime(23,59,60,1000);#846 daytime_18:daytime := MTIMEdaytime_create(_597:int, _593:int, _598:int, _603:int) 
#var daytime_18 := mtime.daytime(23,59,60,1000); 
    daytime_19 := mtime.daytime("nil"); #848 daytime_19:daytime := MTIMEdaytime_fromstr(_606:str) 
#var daytime_19 := mtime.daytime("nil"); 
    daytime_bat := bat.new(:oid,:daytime);#850 daytime_bat:bat[:oid,:daytime] := CMDBATnew(_244:oid, _609:daytime) {G}
#var daytime_bat := bat.new(oid,daytime); 
    bat.insert(daytime_bat,0@0,daytime_00);#852 _611:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _612:oid, daytime_00:daytime) 
    bat.insert(daytime_bat,1@0,daytime_01);#853 _613:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _614:oid, daytime_01:daytime) 
    bat.insert(daytime_bat,2@0,daytime_02);#854 _615:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _616:oid, daytime_02:daytime) 
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 
    bat.insert(daytime_bat,3@0,daytime_03);#856 _618:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _619:oid, daytime_03:daytime) 
    bat.insert(daytime_bat,4@0,daytime_04);#857 _620:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _621:oid, daytime_04:daytime) 
    bat.insert(daytime_bat,5@0,daytime_05);#858 _622:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _623:oid, daytime_05:daytime) 
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 
    bat.insert(daytime_bat,6@0,daytime_06);#860 _625:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _626:oid, daytime_06:daytime) 
    bat.insert(daytime_bat,7@0,daytime_07);#861 _627:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _628:oid, daytime_07:daytime) 
    bat.insert(daytime_bat,8@0,daytime_08);#862 _629:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _630:oid, daytime_08:daytime) 
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 
    bat.insert(daytime_bat,9@0,daytime_09);#864 _632:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _633:oid, daytime_09:daytime) 
    bat.insert(daytime_bat,10@0,daytime_10);#865 _634:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _635:oid, daytime_10:daytime) 
    bat.insert(daytime_bat,11@0,daytime_11);#866 _636:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _637:oid, daytime_11:daytime) 
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 
    bat.insert(daytime_bat,12@0,daytime_12);#868 _639:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _640:oid, daytime_12:daytime) 
    bat.insert(daytime_bat,13@0,daytime_13);#869 _641:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _642:oid, daytime_13:daytime) 
    bat.insert(daytime_bat,14@0,daytime_14);#870 _643:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _644:oid, daytime_14:daytime) 
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 
    bat.insert(daytime_bat,15@0,daytime_15);#872 _646:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _647:oid, daytime_15:daytime) 
    bat.insert(daytime_bat,16@0,daytime_16);#873 _648:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _649:oid, daytime_16:daytime) 
    bat.insert(daytime_bat,17@0,daytime_17);#874 _650:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _651:oid, daytime_17:daytime) 
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 
    bat.insert(daytime_bat,18@0,daytime_18);#876 _653:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _654:oid, daytime_18:daytime) 
    bat.insert(daytime_bat,19@0,daytime_19);#877 _655:void := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _656:oid, daytime_19:daytime) 
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 
    bat.setColumn(daytime_bat,"daytime");#879 _658:void := BKCsetColumn(daytime_bat:bat[:oid,:daytime], _659:str) 
#io.print(daytime_bat.bat.setColumn("daytime"), 
    _1485 := bat.new(nil:oid,nil:int);  #881 _1485:bat[:oid,:int] := CMDBATnew(_1486:oid, _1487:int) {G}
barrier (_1489,_1490,_1491):= bat.newIterator(daytime_bat);#882 (_1489:lng, _1490:oid, _1491:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J889}
    _1493 := mtime.hours(_1491);        #883 _1493:int := MTIMEdaytime_extract_hours(_1491:daytime) 
    bat.insert(_1485,_1490,_1493);      #884 _1494:void := BKCinsert_bun(_1485:bat[:oid,:int], _1490:oid, _1493:int) 
    redo (_1489,_1490,_1491):= bat.hasMoreElements(daytime_bat);#885 (_1489:lng, _1490:oid, _1491:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J883}
catch MALException:str ;                #886 MALException:str {J888}
    redo (_1489,_1490,_1491):= bat.hasMoreElements(daytime_bat);#887 (_1489:lng, _1490:oid, _1491:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J883}
exit MALException:str ;                 #888 MALException:str 
exit (_1489,_1490,_1491);               #889 (_1489:lng, _1490:oid, _1491:daytime 
    bh_a:bat[:oid,:int]  := _1485;      #890 bh_a:bat[:oid,:int] := _1485:bat[:oid,:int] {G}
    bat.setColumn(bh_a,"hours");        #891 _664:void := BKCsetColumn(bh_a:bat[:oid,:int], _663:str) 
#      [hours](daytime_bat).bat.setColumn("hours"), 
    _1500 := bat.new(nil:oid,nil:int);  #893 _1500:bat[:oid,:int] := CMDBATnew(_1486:oid, _1487:int) {G}
barrier (_1502,_1503,_1504):= bat.newIterator(daytime_bat);#894 (_1502:lng, _1503:oid, _1504:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J901}
    _1506 := mtime.minutes(_1504);      #895 _1506:int := MTIMEdaytime_extract_minutes(_1504:daytime) 
    bat.insert(_1500,_1503,_1506);      #896 _1507:void := BKCinsert_bun(_1500:bat[:oid,:int], _1503:oid, _1506:int) 
    redo (_1502,_1503,_1504):= bat.hasMoreElements(daytime_bat);#897 (_1502:lng, _1503:oid, _1504:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J895}
catch MALException:str ;                #898 MALException:str {J900}
    redo (_1502,_1503,_1504):= bat.hasMoreElements(daytime_bat);#899 (_1502:lng, _1503:oid, _1504:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J895}
exit MALException:str ;                 #900 MALException:str 
exit (_1502,_1503,_1504);               #901 (_1502:lng, _1503:oid, _1504:daytime 
    dh_a:bat[:oid,:int]  := _1500;      #902 dh_a:bat[:oid,:int] := _1500:bat[:oid,:int] {G}
    bat.setColumn(dh_a,"minutes");      #903 _668:void := BKCsetColumn(dh_a:bat[:oid,:int], _667:str) 
#      [minutes](daytime_bat).bat.setColumn("minutes"), 
    _1513 := bat.new(nil:oid,nil:int);  #905 _1513:bat[:oid,:int] := CMDBATnew(_1486:oid, _1487:int) {G}
barrier (_1515,_1516,_1517):= bat.newIterator(daytime_bat);#906 (_1515:lng, _1516:oid, _1517:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J913}
    _1519 := mtime.seconds(_1517);      #907 _1519:int := MTIMEdaytime_extract_seconds(_1517:daytime) 
    bat.insert(_1513,_1516,_1519);      #908 _1520:void := BKCinsert_bun(_1513:bat[:oid,:int], _1516:oid, _1519:int) 
    redo (_1515,_1516,_1517):= bat.hasMoreElements(daytime_bat);#909 (_1515:lng, _1516:oid, _1517:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J907}
catch MALException:str ;                #910 MALException:str {J912}
    redo (_1515,_1516,_1517):= bat.hasMoreElements(daytime_bat);#911 (_1515:lng, _1516:oid, _1517:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J907}
exit MALException:str ;                 #912 MALException:str 
exit (_1515,_1516,_1517);               #913 (_1515:lng, _1516:oid, _1517:daytime 
    fh_a:bat[:oid,:int]  := _1513;      #914 fh_a:bat[:oid,:int] := _1513:bat[:oid,:int] {G}
    bat.setColumn(fh_a,"seconds");      #915 _672:void := BKCsetColumn(fh_a:bat[:oid,:int], _671:str) 
#      [seconds](daytime_bat).bat.setColumn("seconds"), 
    _1526 := bat.new(nil:oid,nil:int);  #917 _1526:bat[:oid,:int] := CMDBATnew(_1527:oid, _1528:int) {G}
barrier (_1530,_1531,_1532):= bat.newIterator(daytime_bat);#918 (_1530:lng, _1531:oid, _1532:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J925}
    _1534 := mtime.milliseconds(_1532); #919 _1534:int := MTIMEdaytime_extract_milliseconds(_1532:daytime) 
    bat.insert(_1526,_1531,_1534);      #920 _1535:void := BKCinsert_bun(_1526:bat[:oid,:int], _1531:oid, _1534:int) 
    redo (_1530,_1531,_1532):= bat.hasMoreElements(daytime_bat);#921 (_1530:lng, _1531:oid, _1532:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J919}
catch MALException:str ;                #922 MALException:str {J924}
    redo (_1530,_1531,_1532):= bat.hasMoreElements(daytime_bat);#923 (_1530:lng, _1531:oid, _1532:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J919}
exit MALException:str ;                 #924 MALException:str 
exit (_1530,_1531,_1532);               #925 (_1530:lng, _1531:oid, _1532:daytime 
    hh_a:bat[:oid,:int]  := _1526;      #926 hh_a:bat[:oid,:int] := _1526:bat[:oid,:int] {G}
    bat.setColumn(hh_a,"milliseconds"); #927 _676:void := BKCsetColumn(hh_a:bat[:oid,:int], _675:str) 
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");#928 _677:void := IOprint_val(_678:str) 
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);#929 jh_a:void := IOtable(daytime_bat:bat[:oid,:daytime], bh_a:bat[:oid,:int], dh_a:bat[:oid,:int], fh_a:bat[:oid,:int], hh_a:bat[:oid,:int]) 
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## create timestamps in bulk from the above bats with dates, daytimes and tzones 
# Skipped due to coercion implication 
    _1541 := bat.new(nil:oid,nil:timestamp);#934 _1541:bat[:oid,:timestamp] := CMDBATnew(_1527:oid, _1542:timestamp) {G}
barrier (_1544,_1545,_1546):= bat.newIterator(date_bat);#935 (_1544:lng, _1545:oid, _1546:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J944}
    _1548 := algebra.find(daytime_bat,_1545);#936 _1548:daytime := ALGfind(daytime_bat:bat[:oid,:daytime], _1545:oid) 
    _1550 := algebra.find(tzone_bat,_1545);#937 _1550:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1545:oid) 
    _1552 := mtime.timestamp(_1546,_1548,_1550);#938 _1552:timestamp := MTIMEtimestamp_create(_1546:date, _1548:daytime, _1550:timezone) 
    bat.insert(_1541,_1545,_1552);      #939 _1553:void := BKCinsert_bun(_1541:bat[:oid,:timestamp], _1545:oid, _1552:timestamp) 
    redo (_1544,_1545,_1546):= bat.hasMoreElements(date_bat);#940 (_1544:lng, _1545:oid, _1546:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J936}
catch MALException:str ;                #941 MALException:str {J943}
    redo (_1544,_1545,_1546):= bat.hasMoreElements(date_bat);#942 (_1544:lng, _1545:oid, _1546:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J936}
exit MALException:str ;                 #943 MALException:str 
exit (_1544,_1545,_1546);               #944 (_1544:lng, _1545:oid, _1546:date 
    kh_a:bat[:oid,:timestamp]  := _1541;#945 kh_a:bat[:oid,:timestamp] := _1541:bat[:oid,:timestamp] {G}
    timestamp_bat := kh_a;              #946 timestamp_bat:bat[:oid,:timestamp] := kh_a:bat[:oid,:timestamp] {G}
    bat.setWriteMode(kh_a);             #947 _687:bat[:oid,:timestamp] := BKCsetWriteMode(kh_a:bat[:oid,:timestamp]) {G}
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 
## KILL 
## var timestamp_now := timestamp(epoch()); 
## timestamp_bat.bat.insert(14@0, timestamp_now); 
## test the timestamp operations 
    bat.setColumn(timestamp_bat,"timestamp");#953 _693:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _685:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    _1559 := bat.new(nil:oid,nil:date); #955 _1559:bat[:oid,:date] := CMDBATnew(_1560:oid, _1561:date) {G}
barrier (_1563,_1564,_1565):= bat.newIterator(timestamp_bat);#956 (_1563:lng, _1564:oid, _1565:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J964}
    _1567 := algebra.find(tzone_bat,_1564);#957 _1567:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1564:oid) 
    _1569 := mtime.date(_1565,_1567);   #958 _1569:date := MTIMEtimestamp_extract_date(_1565:timestamp, _1567:timezone) 
    bat.insert(_1559,_1564,_1569);      #959 _1570:void := BKCinsert_bun(_1559:bat[:oid,:date], _1564:oid, _1569:date) 
    redo (_1563,_1564,_1565):= bat.hasMoreElements(timestamp_bat);#960 (_1563:lng, _1564:oid, _1565:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J957}
catch MALException:str ;                #961 MALException:str {J963}
    redo (_1563,_1564,_1565):= bat.hasMoreElements(timestamp_bat);#962 (_1563:lng, _1564:oid, _1565:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J957}
exit MALException:str ;                 #963 MALException:str 
exit (_1563,_1564,_1565);               #964 (_1563:lng, _1564:oid, _1565:timestamp 
    mh_a:bat[:oid,:date]  := _1559;     #965 mh_a:bat[:oid,:date] := _1559:bat[:oid,:date] {G}
    bat.setColumn(mh_a,"date");         #966 _698:void := BKCsetColumn(mh_a:bat[:oid,:date], _697:str) 
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 
    _1576 := bat.new(nil:oid,nil:daytime);#968 _1576:bat[:oid,:daytime] := CMDBATnew(_1560:oid, _1577:daytime) {G}
barrier (_1579,_1580,_1581):= bat.newIterator(timestamp_bat);#969 (_1579:lng, _1580:oid, _1581:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J977}
    _1583 := algebra.find(tzone_bat,_1580);#970 _1583:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1580:oid) 
    _1585 := mtime.daytime(_1581,_1583);#971 _1585:daytime := MTIMEtimestamp_extract_daytime(_1581:timestamp, _1583:timezone) 
    bat.insert(_1576,_1580,_1585);      #972 _1586:void := BKCinsert_bun(_1576:bat[:oid,:daytime], _1580:oid, _1585:daytime) 
    redo (_1579,_1580,_1581):= bat.hasMoreElements(timestamp_bat);#973 (_1579:lng, _1580:oid, _1581:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J970}
catch MALException:str ;                #974 MALException:str {J976}
    redo (_1579,_1580,_1581):= bat.hasMoreElements(timestamp_bat);#975 (_1579:lng, _1580:oid, _1581:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J970}
exit MALException:str ;                 #976 MALException:str 
exit (_1579,_1580,_1581);               #977 (_1579:lng, _1580:oid, _1581:timestamp 
    oh_a:bat[:oid,:daytime]  := _1576;  #978 oh_a:bat[:oid,:daytime] := _1576:bat[:oid,:daytime] {G}
    bat.setColumn(oh_a,"daytime");      #979 _702:void := BKCsetColumn(oh_a:bat[:oid,:daytime], _701:str) 
    io.print("print(timestamp_bat,mh_a,oh_a)");#980 _703:void := IOprint_val(_704:str) 
    io.print(timestamp_bat,mh_a,oh_a);  #981 _705:void := IOtable(timestamp_bat:bat[:oid,:timestamp], mh_a:bat[:oid,:date], oh_a:bat[:oid,:daytime]) 
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 
    rh_a := bat.setColumn(timestamp_bat,"timestamp");#983 rh_a:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _685:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    timezones:bat[:str,:timezone]  := bbp.bind("timezones");#985 timezones:bat[:str,:timezone] := CMDbbpbind(_710:str) {G}
    io.print("print(timezones)");       #986 _711:void := IOprint_val(_712:str) 
    io.print(timezones);                #987 _713:void := IOprint_val(timezones:bat[:str,:timezone]) 
    sh_a:timezone  := algebra.find(timezones,"Wake Island");#988 sh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _715:str) 
    _1592 := bat.new(nil:oid,nil:date); #989 _1592:bat[:oid,:date] := CMDBATnew(_1593:oid, _1594:date) {G}
barrier (_1596,_1597,_1598):= bat.newIterator(timestamp_bat);#990 (_1596:lng, _1597:oid, _1598:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J997}
    _1600 := mtime.date(_1598,sh_a);    #991 _1600:date := MTIMEtimestamp_extract_date(_1598:timestamp, sh_a:timezone) 
    bat.insert(_1592,_1597,_1600);      #992 _1601:void := BKCinsert_bun(_1592:bat[:oid,:date], _1597:oid, _1600:date) 
    redo (_1596,_1597,_1598):= bat.hasMoreElements(timestamp_bat);#993 (_1596:lng, _1597:oid, _1598:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J991}
catch MALException:str ;                #994 MALException:str {J996}
    redo (_1596,_1597,_1598):= bat.hasMoreElements(timestamp_bat);#995 (_1596:lng, _1597:oid, _1598:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J991}
exit MALException:str ;                 #996 MALException:str 
exit (_1596,_1597,_1598);               #997 (_1596:lng, _1597:oid, _1598:timestamp 
    th_a:bat[:oid,:date]  := _1592;     #998 th_a:bat[:oid,:date] := _1592:bat[:oid,:date] {G}
    bat.setColumn(th_a,"Wake Island");  #999 _717:void := BKCsetColumn(th_a:bat[:oid,:date], _715:str) 
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 
    vh_a:timezone  := algebra.find(timezones,"Wake Island");#1001 vh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _715:str) 
    _1607 := bat.new(nil:oid,nil:daytime);#1002 _1607:bat[:oid,:daytime] := CMDBATnew(_1593:oid, _1577:daytime) {G}
barrier (_1609,_1610,_1611):= bat.newIterator(timestamp_bat);#1003 (_1609:lng, _1610:oid, _1611:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J1010}
    _1613 := mtime.daytime(_1611,vh_a); #1004 _1613:daytime := MTIMEtimestamp_extract_daytime(_1611:timestamp, vh_a:timezone) 
    bat.insert(_1607,_1610,_1613);      #1005 _1614:void := BKCinsert_bun(_1607:bat[:oid,:daytime], _1610:oid, _1613:daytime) 
    redo (_1609,_1610,_1611):= bat.hasMoreElements(timestamp_bat);#1006 (_1609:lng, _1610:oid, _1611:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1004}
catch MALException:str ;                #1007 MALException:str {J1009}
    redo (_1609,_1610,_1611):= bat.hasMoreElements(timestamp_bat);#1008 (_1609:lng, _1610:oid, _1611:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1004}
exit MALException:str ;                 #1009 MALException:str 
exit (_1609,_1610,_1611);               #1010 (_1609:lng, _1610:oid, _1611:timestamp 
    wh_a:bat[:oid,:daytime]  := _1607;  #1011 wh_a:bat[:oid,:daytime] := _1607:bat[:oid,:daytime] {G}
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 
    xh_a:timezone  := algebra.find(timezones,"American Samoa");#1013 xh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _723:str) 
    _1620 := bat.new(nil:oid,nil:date); #1014 _1620:bat[:oid,:date] := CMDBATnew(_1593:oid, _1594:date) {G}
barrier (_1622,_1623,_1624):= bat.newIterator(timestamp_bat);#1015 (_1622:lng, _1623:oid, _1624:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J1022}
    _1626 := mtime.date(_1624,xh_a);    #1016 _1626:date := MTIMEtimestamp_extract_date(_1624:timestamp, xh_a:timezone) 
    bat.insert(_1620,_1623,_1626);      #1017 _1627:void := BKCinsert_bun(_1620:bat[:oid,:date], _1623:oid, _1626:date) 
    redo (_1622,_1623,_1624):= bat.hasMoreElements(timestamp_bat);#1018 (_1622:lng, _1623:oid, _1624:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1016}
catch MALException:str ;                #1019 MALException:str {J1021}
    redo (_1622,_1623,_1624):= bat.hasMoreElements(timestamp_bat);#1020 (_1622:lng, _1623:oid, _1624:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1016}
exit MALException:str ;                 #1021 MALException:str 
exit (_1622,_1623,_1624);               #1022 (_1622:lng, _1623:oid, _1624:timestamp 
    yh_a:bat[:oid,:date]  := _1620;     #1023 yh_a:bat[:oid,:date] := _1620:bat[:oid,:date] {G}
    ai_a := bat.setColumn(yh_a,"American Samoa");#1024 ai_a:void := BKCsetColumn(yh_a:bat[:oid,:date], _723:str) 
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 
    bi_a:timezone  := algebra.find(timezones,"American Samoa");#1026 bi_a:timezone := ALGfind(timezones:bat[:str,:timezone], _723:str) 
    _1633 := bat.new(nil:oid,nil:daytime);#1027 _1633:bat[:oid,:daytime] := CMDBATnew(_1634:oid, _1635:daytime) {G}
barrier (_1637,_1638,_1639):= bat.newIterator(timestamp_bat);#1028 (_1637:lng, _1638:oid, _1639:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J1035}
    _1641 := mtime.daytime(_1639,bi_a); #1029 _1641:daytime := MTIMEtimestamp_extract_daytime(_1639:timestamp, bi_a:timezone) 
    bat.insert(_1633,_1638,_1641);      #1030 _1642:void := BKCinsert_bun(_1633:bat[:oid,:daytime], _1638:oid, _1641:daytime) 
    redo (_1637,_1638,_1639):= bat.hasMoreElements(timestamp_bat);#1031 (_1637:lng, _1638:oid, _1639:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1029}
catch MALException:str ;                #1032 MALException:str {J1034}
    redo (_1637,_1638,_1639):= bat.hasMoreElements(timestamp_bat);#1033 (_1637:lng, _1638:oid, _1639:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1029}
exit MALException:str ;                 #1034 MALException:str 
exit (_1637,_1638,_1639);               #1035 (_1637:lng, _1638:oid, _1639:timestamp 
    ci_a:bat[:oid,:daytime]  := _1633;  #1036 ci_a:bat[:oid,:daytime] := _1633:bat[:oid,:daytime] {G}
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");#1037 _730:void := IOprint_val(_731:str) 
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);#1038 di_a:void := IOtable(timestamp_bat:bat[:oid,:timestamp], th_a:bat[:oid,:date], wh_a:bat[:oid,:daytime], yh_a:bat[:oid,:date], ci_a:bat[:oid,:daytime]) 
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 
    ei_a := calc.*(60,1000);            #1040 ei_a:int := CALCbinaryMULintint(_735:int, _736:int) 
    fi_a := calc.*(60,ei_a);            #1041 fi_a:int := CALCbinaryMULintint(_735:int, ei_a:int) 
    gi_a := calc.*(23,fi_a);            #1042 gi_a:int := CALCbinaryMULintint(_739:int, fi_a:int) 
    hi_a := calc.lng(gi_a);             #1043 hi_a:lng := CALCint2lng(gi_a:int) 
    _1648 := bat.new(nil:oid,nil:timestamp);#1044 _1648:bat[:oid,:timestamp] := CMDBATnew(_1634:oid, _1649:timestamp) {G}
barrier (_1651,_1652,_1653):= bat.newIterator(timestamp_bat);#1045 (_1651:lng, _1652:oid, _1653:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J1052}
    _1655 := mtime.add(_1653,hi_a);     #1046 _1655:timestamp := MTIMEtimestamp_add(_1653:timestamp, hi_a:lng) 
    bat.insert(_1648,_1652,_1655);      #1047 _1656:void := BKCinsert_bun(_1648:bat[:oid,:timestamp], _1652:oid, _1655:timestamp) 
    redo (_1651,_1652,_1653):= bat.hasMoreElements(timestamp_bat);#1048 (_1651:lng, _1652:oid, _1653:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1046}
catch MALException:str ;                #1049 MALException:str {J1051}
    redo (_1651,_1652,_1653):= bat.hasMoreElements(timestamp_bat);#1050 (_1651:lng, _1652:oid, _1653:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1046}
exit MALException:str ;                 #1051 MALException:str 
exit (_1651,_1652,_1653);               #1052 (_1651:lng, _1652:oid, _1653:timestamp 
    timestamp_plus:bat[:oid,:timestamp]  := _1648;#1053 timestamp_plus:bat[:oid,:timestamp] := _1648:bat[:oid,:timestamp] {G}
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 
    ii_a := calc.*(-60,1000);           #1055 ii_a:int := CALCbinaryMULintint(_745:int, _736:int) 
    ji_a := calc.lng(ii_a);             #1056 ji_a:lng := CALCint2lng(ii_a:int) 
    _1662 := bat.new(nil:oid,nil:timestamp);#1057 _1662:bat[:oid,:timestamp] := CMDBATnew(_1634:oid, _1649:timestamp) {G}
barrier (_1664,_1665,_1666):= bat.newIterator(timestamp_bat);#1058 (_1664:lng, _1665:oid, _1666:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J1065}
    _1668 := mtime.add(_1666,ji_a);     #1059 _1668:timestamp := MTIMEtimestamp_add(_1666:timestamp, ji_a:lng) 
    bat.insert(_1662,_1665,_1668);      #1060 _1669:void := BKCinsert_bun(_1662:bat[:oid,:timestamp], _1665:oid, _1668:timestamp) 
    redo (_1664,_1665,_1666):= bat.hasMoreElements(timestamp_bat);#1061 (_1664:lng, _1665:oid, _1666:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1059}
catch MALException:str ;                #1062 MALException:str {J1064}
    redo (_1664,_1665,_1666):= bat.hasMoreElements(timestamp_bat);#1063 (_1664:lng, _1665:oid, _1666:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J1059}
exit MALException:str ;                 #1064 MALException:str 
exit (_1664,_1665,_1666);               #1065 (_1664:lng, _1665:oid, _1666:timestamp 
    timestamp_minus:bat[:oid,:timestamp]  := _1662;#1066 timestamp_minus:bat[:oid,:timestamp] := _1662:bat[:oid,:timestamp] {G}
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 
    ki_a := bat.setColumn(timestamp_bat,"timestamp");#1068 ki_a:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _750:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    li_a := bat.setColumn(timestamp_plus,"plus23");#1070 li_a:void := BKCsetColumn(timestamp_plus:bat[:oid,:timestamp], _753:str) 
#	timestamp_plus.bat.setColumn("plus23"), 
    mi_a := bat.setColumn(timestamp_minus,"min1");#1072 mi_a:void := BKCsetColumn(timestamp_minus:bat[:oid,:timestamp], _756:str) 
#	timestamp_minus.bat.setColumn("min1"), 
    _1675 := bat.new(nil:oid,nil:lng);  #1074 _1675:bat[:oid,:lng] := CMDBATnew(_1676:oid, _1677:lng) {G}
barrier (_1679,_1680,_1681):= bat.newIterator(timestamp_plus);#1075 (_1679:lng, _1680:oid, _1681:timestamp) := CHPbunIterator(timestamp_plus:bat[:oid,:timestamp]) {J1083}
    _1683 := algebra.find(timestamp_minus,_1680);#1076 _1683:timestamp := ALGfind(timestamp_minus:bat[:oid,:timestamp], _1680:oid) 
    _1685 := mtime.diff(_1681,_1683);   #1077 _1685:lng := MTIMEtimestamp_diff(_1681:timestamp, _1683:timestamp) 
    bat.insert(_1675,_1680,_1685);      #1078 _1686:void := BKCinsert_bun(_1675:bat[:oid,:lng], _1680:oid, _1685:lng) 
    redo (_1679,_1680,_1681):= bat.hasMoreElements(timestamp_plus);#1079 (_1679:lng, _1680:oid, _1681:timestamp) := CHPbunHasMoreElements(timestamp_plus:bat[:oid,:timestamp]) {J1076}
catch MALException:str ;                #1080 MALException:str {J1082}
    redo (_1679,_1680,_1681):= bat.hasMoreElements(timestamp_plus);#1081 (_1679:lng, _1680:oid, _1681:timestamp) := CHPbunHasMoreElements(timestamp_plus:bat[:oid,:timestamp]) {J1076}
exit MALException:str ;                 #1082 MALException:str 
exit (_1679,_1680,_1681);               #1083 (_1679:lng, _1680:oid, _1681:timestamp 
    ni_a:bat[:oid,:lng]  := _1675;      #1084 ni_a:bat[:oid,:lng] := _1675:bat[:oid,:lng] {G}
    oi_a := calc.*(60,1000);            #1085 oi_a:int := CALCbinaryMULintint(_735:int, _736:int) 
    pi_a := calc.*(60,oi_a);            #1086 pi_a:int := CALCbinaryMULintint(_735:int, oi_a:int) 
    qi_a := calc.lng(pi_a);             #1087 qi_a:lng := CALCint2lng(pi_a:int) 
    ri_a := batcalc./(ni_a,qi_a);       #1088 ri_a:bat[:oid,:lng] := CMDbatDIVcst_lng_lng_lng(ni_a:bat[:oid,:lng], qi_a:lng) {G}
    si_a := bat.setColumn(ri_a,"diff"); #1089 si_a:void := BKCsetColumn(ri_a:bat[:oid,:lng], _759:str) 
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");#1090 _765:void := IOprint_val(_766:str) 
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);#1091 ti_a:void := IOtable(timestamp_bat:bat[:oid,:timestamp], timestamp_plus:bat[:oid,:timestamp], timestamp_minus:bat[:oid,:timestamp], ri_a:bat[:oid,:lng]) 
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 
    ui_a:timezone  := algebra.find(timezones,"West/Europe");#1093 ui_a:timezone := ALGfind(timezones:bat[:str,:timezone], _770:str) 
    _1692 := bat.new(nil:int,nil:timestamp);#1094 _1692:bat[:int,:timestamp] := CMDBATnew(_1693:int, _1694:timestamp) {G}
barrier (_1696,_1697,_1698):= bat.newIterator(date_seq);#1095 (_1696:lng, _1697:int, _1698:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J1102}
    _1700 := mtime.timestamp(_1698,daytime_00,ui_a);#1096 _1700:timestamp := MTIMEtimestamp_create(_1698:date, daytime_00:daytime, ui_a:timezone) 
    bat.insert(_1692,_1697,_1700);      #1097 _1701:void := BKCinsert_bun(_1692:bat[:int,:timestamp], _1697:int, _1700:timestamp) 
    redo (_1696,_1697,_1698):= bat.hasMoreElements(date_seq);#1098 (_1696:lng, _1697:int, _1698:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1096}
catch MALException:str ;                #1099 MALException:str {J1101}
    redo (_1696,_1697,_1698):= bat.hasMoreElements(date_seq);#1100 (_1696:lng, _1697:int, _1698:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1096}
exit MALException:str ;                 #1101 MALException:str 
exit (_1696,_1697,_1698);               #1102 (_1696:lng, _1697:int, _1698:date 
    timestamp_eur:bat[:int,:timestamp]  := _1692;#1103 timestamp_eur:bat[:int,:timestamp] := _1692:bat[:int,:timestamp] {G}
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 
    vi_a:timezone  := algebra.find(timezones,"Andes/Brazil");#1105 vi_a:timezone := ALGfind(timezones:bat[:str,:timezone], _775:str) 
    _1707 := bat.new(nil:int,nil:timestamp);#1106 _1707:bat[:int,:timestamp] := CMDBATnew(_1693:int, _1694:timestamp) {G}
barrier (_1709,_1710,_1711):= bat.newIterator(date_seq);#1107 (_1709:lng, _1710:int, _1711:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J1114}
    _1713 := mtime.timestamp(_1711,daytime_00,vi_a);#1108 _1713:timestamp := MTIMEtimestamp_create(_1711:date, daytime_00:daytime, vi_a:timezone) 
    bat.insert(_1707,_1710,_1713);      #1109 _1714:void := BKCinsert_bun(_1707:bat[:int,:timestamp], _1710:int, _1713:timestamp) 
    redo (_1709,_1710,_1711):= bat.hasMoreElements(date_seq);#1110 (_1709:lng, _1710:int, _1711:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1108}
catch MALException:str ;                #1111 MALException:str {J1113}
    redo (_1709,_1710,_1711):= bat.hasMoreElements(date_seq);#1112 (_1709:lng, _1710:int, _1711:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1108}
exit MALException:str ;                 #1113 MALException:str 
exit (_1709,_1710,_1711);               #1114 (_1709:lng, _1710:int, _1711:date 
    timestamp_bra:bat[:int,:timestamp]  := _1707;#1115 timestamp_bra:bat[:int,:timestamp] := _1707:bat[:int,:timestamp] {G}
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 
    wi_a := bat.setColumn(date_seq,"date");#1117 wi_a:void := BKCsetColumn(date_seq:bat[:int,:date], _779:str) 
#io.print(date_seq.bat.setColumn("date"),  
    _1720 := bat.new(nil:int,nil:int);  #1119 _1720:bat[:int,:int] := CMDBATnew(_1693:int, _1693:int) {G}
barrier (_1722,_1723,_1724):= bat.newIterator(date_seq);#1120 (_1722:lng, _1723:int, _1724:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J1127}
    _1726 := mtime.dayofweek(_1724);    #1121 _1726:int := MTIMEdate_extract_dayofweek(_1724:date) 
    bat.insert(_1720,_1723,_1726);      #1122 _1727:void := BKCinsert_bun(_1720:bat[:int,:int], _1723:int, _1726:int) 
    redo (_1722,_1723,_1724):= bat.hasMoreElements(date_seq);#1123 (_1722:lng, _1723:int, _1724:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1121}
catch MALException:str ;                #1124 MALException:str {J1126}
    redo (_1722,_1723,_1724):= bat.hasMoreElements(date_seq);#1125 (_1722:lng, _1723:int, _1724:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J1121}
exit MALException:str ;                 #1126 MALException:str 
exit (_1722,_1723,_1724);               #1127 (_1722:lng, _1723:int, _1724:date 
    xi_a:bat[:int,:int]  := _1720;      #1128 xi_a:bat[:int,:int] := _1720:bat[:int,:int] {G}
    _1733 := bat.new(nil:int,nil:str);  #1129 _1733:bat[:int,:str] := CMDBATnew(_1734:int, _1735:str) {G}
barrier (_1737,_1738,_1739):= bat.newIterator(xi_a);#1130 (_1737:lng, _1738:int, _1739:int) := CHPbunIterator(xi_a:bat[:int,:int]) {J1137}
    _1741 := mtime.dayname(_1739);      #1131 _1741:str := MTIMEday_to_str(_1739:int) {G}
    bat.insert(_1733,_1738,_1741);      #1132 _1742:void := BKCinsert_bun(_1733:bat[:int,:str], _1738:int, _1741:str) 
    redo (_1737,_1738,_1739):= bat.hasMoreElements(xi_a);#1133 (_1737:lng, _1738:int, _1739:int) := CHPbunHasMoreElements(xi_a:bat[:int,:int]) {J1131}
catch MALException:str ;                #1134 MALException:str {J1136}
    redo (_1737,_1738,_1739):= bat.hasMoreElements(xi_a);#1135 (_1737:lng, _1738:int, _1739:int) := CHPbunHasMoreElements(xi_a:bat[:int,:int]) {J1131}
exit MALException:str ;                 #1136 MALException:str 
exit (_1737,_1738,_1739);               #1137 (_1737:lng, _1738:int, _1739:int 
    yi_a:bat[:int,:str]  := _1733;      #1138 yi_a:bat[:int,:str] := _1733:bat[:int,:str] {G}
    aj_a := bat.setColumn(yi_a,"day");  #1139 aj_a:void := BKCsetColumn(yi_a:bat[:int,:str], _786:str) 
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");#1141 bj_a:void := BKCsetColumn(timestamp_eur:bat[:int,:timestamp], _770:str) 
#	timestamp_eur.bat.setColumn("West/Europe"), 
    cj_a:timezone  := algebra.find(timezones,"West/Europe");#1143 cj_a:timezone := ALGfind(timezones:bat[:str,:timezone], _770:str) 
    _1748 := bat.new(nil:int,nil:bit);  #1144 _1748:bat[:int,:bit] := CMDBATnew(_1734:int, _1749:bit) {G}
barrier (_1751,_1752,_1753):= bat.newIterator(timestamp_eur);#1145 (_1751:lng, _1752:int, _1753:timestamp) := CHPbunIterator(timestamp_eur:bat[:int,:timestamp]) {J1152}
    _1755 := mtime.dst(_1753,cj_a);     #1146 _1755:bit := MTIMEtimestamp_inside_dst(_1753:timestamp, cj_a:timezone) 
    bat.insert(_1748,_1752,_1755);      #1147 _1756:void := BKCinsert_bun(_1748:bat[:int,:bit], _1752:int, _1755:bit) 
    redo (_1751,_1752,_1753):= bat.hasMoreElements(timestamp_eur);#1148 (_1751:lng, _1752:int, _1753:timestamp) := CHPbunHasMoreElements(timestamp_eur:bat[:int,:timestamp]) {J1146}
catch MALException:str ;                #1149 MALException:str {J1151}
    redo (_1751,_1752,_1753):= bat.hasMoreElements(timestamp_eur);#1150 (_1751:lng, _1752:int, _1753:timestamp) := CHPbunHasMoreElements(timestamp_eur:bat[:int,:timestamp]) {J1146}
exit MALException:str ;                 #1151 MALException:str 
exit (_1751,_1752,_1753);               #1152 (_1751:lng, _1752:int, _1753:timestamp 
    dj_a:bat[:int,:bit]  := _1748;      #1153 dj_a:bat[:int,:bit] := _1748:bat[:int,:bit] {G}
    ej_a := bat.setColumn(dj_a,"dst");  #1154 ej_a:void := BKCsetColumn(dj_a:bat[:int,:bit], _792:str) 
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");#1156 fj_a:void := BKCsetColumn(timestamp_bra:bat[:int,:timestamp], _775:str) 
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 
    gj_a:timezone  := algebra.find(timezones,"Andes/Brazil");#1158 gj_a:timezone := ALGfind(timezones:bat[:str,:timezone], _775:str) 
    _1762 := bat.new(nil:int,nil:bit);  #1159 _1762:bat[:int,:bit] := CMDBATnew(_1734:int, _1749:bit) {G}
barrier (_1764,_1765,_1766):= bat.newIterator(timestamp_bra);#1160 (_1764:lng, _1765:int, _1766:timestamp) := CHPbunIterator(timestamp_bra:bat[:int,:timestamp]) {J1167}
    _1768 := mtime.dst(_1766,gj_a);     #1161 _1768:bit := MTIMEtimestamp_inside_dst(_1766:timestamp, gj_a:timezone) 
    bat.insert(_1762,_1765,_1768);      #1162 _1769:void := BKCinsert_bun(_1762:bat[:int,:bit], _1765:int, _1768:bit) 
    redo (_1764,_1765,_1766):= bat.hasMoreElements(timestamp_bra);#1163 (_1764:lng, _1765:int, _1766:timestamp) := CHPbunHasMoreElements(timestamp_bra:bat[:int,:timestamp]) {J1161}
catch MALException:str ;                #1164 MALException:str {J1166}
    redo (_1764,_1765,_1766):= bat.hasMoreElements(timestamp_bra);#1165 (_1764:lng, _1765:int, _1766:timestamp) := CHPbunHasMoreElements(timestamp_bra:bat[:int,:timestamp]) {J1161}
exit MALException:str ;                 #1166 MALException:str 
exit (_1764,_1765,_1766);               #1167 (_1764:lng, _1765:int, _1766:timestamp 
    hj_a:bat[:int,:bit]  := _1762;      #1168 hj_a:bat[:int,:bit] := _1762:bat[:int,:bit] {G}
    ij_a := bat.setColumn(hj_a,"dst");  #1169 ij_a:void := BKCsetColumn(hj_a:bat[:int,:bit], _792:str) 
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");#1170 _800:void := IOprint_val(_801:str) 
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);#1171 jj_a:void := IOtable(date_seq:bat[:int,:date], yi_a:bat[:int,:str], timestamp_eur:bat[:int,:timestamp], dj_a:bat[:int,:bit], timestamp_bra:bat[:int,:timestamp], hj_a:bat[:int,:bit]) 
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 
#quit; 
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
end main;                               #1175  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "tzone_bat" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

