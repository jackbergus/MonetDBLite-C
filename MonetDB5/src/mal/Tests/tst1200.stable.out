stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;	# 0  (main:void)
# Mil compiler Version 1.0) 	# 1  (_1:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  (_2:str)
# Predefined code segment 	# 3  (_3:str)
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 4  (_4:str)
#module(monettime,alarm); 	# 5  (_5:str)
    lzone := mtime.timezone("GMT+1");	# 6 MTIMEtzone_fromstr (lzone:timezone)<-(_7:str)
    mtime.timezone_local(lzone);	# 7 MTIMEtzone_set_local (_8:void)<-(lzone:timezone)
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 8  (_9:str)
## test the various ways to create rules 	# 9  (_10:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 10 MTIMErule_fromstr (rule_jan:zrule)<-(_12:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 11  (_13:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 12 MTIMErule_fromstr (rule_mar:zrule)<-(_15:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 13  (_16:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 14 MTIMErule_fromstr (rule_apr:zrule)<-(_18:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 15  (_19:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 16 MTIMErule_fromstr (rule_may:zrule)<-(_21:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 17  (_22:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 18 MTIMErule_fromstr (rule_jun:zrule)<-(_24:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 19  (_25:str)
    rule_jul := mtime.rule(7,1,1,75);	# 20 MTIMErule_create (rule_jul:zrule)<-(_27:int)(_28:int)(_28:int)(_29:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 21  (_30:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 22 MTIMErule_create (rule_aug:zrule)<-(_32:int)(_33:int)(_28:int)(_29:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 23  (_34:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 24 MTIMErule_create (rule_sep:zrule)<-(_36:int)(_37:int)(_38:int)(_29:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 25  (_39:str)
    rule_oct := mtime.rule(10,31,0,75);	# 26 MTIMErule_create (rule_oct:zrule)<-(_41:int)(_42:int)(_43:int)(_29:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 27  (_44:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 28 MTIMErule_create (rule_nov:zrule)<-(_46:int)(_37:int)(_47:int)(_29:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 29  (_48:str)
## nil rules 	# 30  (_49:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 31 MTIMErule_create (rule_dec:zrule)<-(_51:int)(_52:int)(_43:int)(_29:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 32  (_53:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 33 MTIMErule_fromstr (rule_feb:zrule)<-(_55:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 34  (_56:str)
#  	# 35  (_57:str)
    rule_bat := bat.new(:str,:zrule,10);	# 36 CMDBATnewint (rule_bat:bat[:str,:zrule])<-(_59:str)(_60:zrule)(_41:int)
#var rule_bat := bat.new(str,rule,10); 	# 37  (_61:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 38 BKCinsert_bun (_62:void)<-(rule_bat:bat[:str,:zrule])(_63:str)(rule_jan:zrule)
    bat.insert(rule_bat,"feb",rule_feb);	# 39 BKCinsert_bun (_64:void)<-(rule_bat:bat[:str,:zrule])(_65:str)(rule_feb:zrule)
    bat.insert(rule_bat,"mar",rule_mar);	# 40 BKCinsert_bun (_66:void)<-(rule_bat:bat[:str,:zrule])(_67:str)(rule_mar:zrule)
    bat.insert(rule_bat,"apr",rule_apr);	# 41 BKCinsert_bun (_68:void)<-(rule_bat:bat[:str,:zrule])(_69:str)(rule_apr:zrule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 42  (_70:str)
    bat.insert(rule_bat,"may",rule_may);	# 43 BKCinsert_bun (_71:void)<-(rule_bat:bat[:str,:zrule])(_72:str)(rule_may:zrule)
    bat.insert(rule_bat,"jun",rule_jun);	# 44 BKCinsert_bun (_73:void)<-(rule_bat:bat[:str,:zrule])(_74:str)(rule_jun:zrule)
    bat.insert(rule_bat,"jul",rule_jul);	# 45 BKCinsert_bun (_75:void)<-(rule_bat:bat[:str,:zrule])(_76:str)(rule_jul:zrule)
    bat.insert(rule_bat,"aug",rule_aug);	# 46 BKCinsert_bun (_77:void)<-(rule_bat:bat[:str,:zrule])(_78:str)(rule_aug:zrule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 47  (_79:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 48 BKCinsert_bun (_80:void)<-(rule_bat:bat[:str,:zrule])(_81:str)(rule_sep:zrule)
    bat.insert(rule_bat,"oct",rule_oct);	# 49 BKCinsert_bun (_82:void)<-(rule_bat:bat[:str,:zrule])(_83:str)(rule_oct:zrule)
    bat.insert(rule_bat,"nov",rule_nov);	# 50 BKCinsert_bun (_84:void)<-(rule_bat:bat[:str,:zrule])(_85:str)(rule_nov:zrule)
    bat.insert(rule_bat,"dec",rule_dec);	# 51 BKCinsert_bun (_86:void)<-(rule_bat:bat[:str,:zrule])(_87:str)(rule_dec:zrule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 52  (_88:str)
## test the operations on rules 	# 53  (_89:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 54 BKCsetColumn (ma_a:void)<-(rule_bat:bat[:str,:zrule])(_91:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 55  (_92:str)
    _813 := bat.new(nil:str,nil:int);	# 56 CMDBATnew (_813:bat[:str,:int])<-(_814:str)(_815:int)
barrier (_817,_818,_819):= bat.newIterator(rule_bat);	# 57 CHPbunIterator (_817:lng)(_818:str)(_819:zrule)<-(rule_bat:bat[:str,:zrule]) jump 63
    _821 := mtime.month(_819);	# 58 MTIMErule_extract_month (_821:int)<-(_819:zrule)
    bat.insert(_813,_818,_821);	# 59 BKCinsert_bun (_822:void)<-(_813:bat[:str,:int])(_818:str)(_821:int)
catch MALexception:str ;	# 60  (MALexception:str) jump 61
exit MALexception:str ;	# 61  (MALexception:str)
    redo (_817,_818,_819):= bat.hasMoreElements(rule_bat);	# 62 CHPbunHasMoreElements (_817:lng)(_818:str)(_819:zrule)<-(rule_bat:bat[:str,:zrule]) jump 58
exit (_817,_818,_819);	# 63  (_817:lng)(_818:str)(_819:zrule)
    na_a:bat[:str,:int]  := _813;	# 64  (na_a:bat[:str,:int])<-(_813:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 65 BKCsetColumn (oa_a:void)<-(na_a:bat[:str,:int])(_96:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 66  (_97:str)
    _827 := bat.new(nil:str,nil:int);	# 67 CMDBATnew (_827:bat[:str,:int])<-(_814:str)(_815:int)
barrier (_829,_830,_831):= bat.newIterator(rule_bat);	# 68 CHPbunIterator (_829:lng)(_830:str)(_831:zrule)<-(rule_bat:bat[:str,:zrule]) jump 74
    _833 := mtime.weekday(_831);	# 69 MTIMErule_extract_weekday (_833:int)<-(_831:zrule)
    bat.insert(_827,_830,_833);	# 70 BKCinsert_bun (_834:void)<-(_827:bat[:str,:int])(_830:str)(_833:int)
catch MALexception:str ;	# 71  (MALexception:str) jump 72
exit MALexception:str ;	# 72  (MALexception:str)
    redo (_829,_830,_831):= bat.hasMoreElements(rule_bat);	# 73 CHPbunHasMoreElements (_829:lng)(_830:str)(_831:zrule)<-(rule_bat:bat[:str,:zrule]) jump 69
exit (_829,_830,_831);	# 74  (_829:lng)(_830:str)(_831:zrule)
    pa_a:bat[:str,:int]  := _827;	# 75  (pa_a:bat[:str,:int])<-(_827:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 76 BKCsetColumn (qa_a:void)<-(pa_a:bat[:str,:int])(_101:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 77  (_102:str)
    _839 := bat.new(nil:str,nil:int);	# 78 CMDBATnew (_839:bat[:str,:int])<-(_814:str)(_815:int)
barrier (_841,_842,_843):= bat.newIterator(rule_bat);	# 79 CHPbunIterator (_841:lng)(_842:str)(_843:zrule)<-(rule_bat:bat[:str,:zrule]) jump 85
    _845 := mtime.day(_843);	# 80 MTIMErule_extract_day (_845:int)<-(_843:zrule)
    bat.insert(_839,_842,_845);	# 81 BKCinsert_bun (_846:void)<-(_839:bat[:str,:int])(_842:str)(_845:int)
catch MALexception:str ;	# 82  (MALexception:str) jump 83
exit MALexception:str ;	# 83  (MALexception:str)
    redo (_841,_842,_843):= bat.hasMoreElements(rule_bat);	# 84 CHPbunHasMoreElements (_841:lng)(_842:str)(_843:zrule)<-(rule_bat:bat[:str,:zrule]) jump 80
exit (_841,_842,_843);	# 85  (_841:lng)(_842:str)(_843:zrule)
    ra_a:bat[:str,:int]  := _839;	# 86  (ra_a:bat[:str,:int])<-(_839:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 87 BKCsetColumn (sa_a:void)<-(ra_a:bat[:str,:int])(_106:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 88  (_107:str)
    _851 := bat.new(nil:str,nil:int);	# 89 CMDBATnew (_851:bat[:str,:int])<-(_852:str)(_853:int)
barrier (_855,_856,_857):= bat.newIterator(rule_bat);	# 90 CHPbunIterator (_855:lng)(_856:str)(_857:zrule)<-(rule_bat:bat[:str,:zrule]) jump 96
    _859 := mtime.minutes(_857);	# 91 MTIMErule_extract_minutes (_859:int)<-(_857:zrule)
    bat.insert(_851,_856,_859);	# 92 BKCinsert_bun (_860:void)<-(_851:bat[:str,:int])(_856:str)(_859:int)
catch MALexception:str ;	# 93  (MALexception:str) jump 94
exit MALexception:str ;	# 94  (MALexception:str)
    redo (_855,_856,_857):= bat.hasMoreElements(rule_bat);	# 95 CHPbunHasMoreElements (_855:lng)(_856:str)(_857:zrule)<-(rule_bat:bat[:str,:zrule]) jump 91
exit (_855,_856,_857);	# 96  (_855:lng)(_856:str)(_857:zrule)
    ta_a:bat[:str,:int]  := _851;	# 97  (ta_a:bat[:str,:int])<-(_851:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 98 BKCsetColumn (ua_a:void)<-(ta_a:bat[:str,:int])(_111:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 99 IOprint_val (_112:int)<-(_113:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 100 IOtable (va_a:int)<-(rule_bat:bat[:str,:zrule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 101  (_115:str)
    bat.setColumn(rule_bat,"rule");	# 102 BKCsetColumn (_116:void)<-(rule_bat:bat[:str,:zrule])(_91:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 103  (_92:str)
    _865 := bat.new(nil:str,nil:date);	# 104 CMDBATnew (_865:bat[:str,:date])<-(_852:str)(_866:date)
barrier (_868,_869,_870):= bat.newIterator(rule_bat);	# 105 CHPbunIterator (_868:lng)(_869:str)(_870:zrule)<-(rule_bat:bat[:str,:zrule]) jump 111
    _872 := mtime.compute(_870,2001);	# 106 MTIMEcompute_rule_foryear (_872:date)<-(_870:zrule)(_119:int)
    bat.insert(_865,_869,_872);	# 107 BKCinsert_bun (_873:void)<-(_865:bat[:str,:date])(_869:str)(_872:date)
catch MALexception:str ;	# 108  (MALexception:str) jump 109
exit MALexception:str ;	# 109  (MALexception:str)
    redo (_868,_869,_870):= bat.hasMoreElements(rule_bat);	# 110 CHPbunHasMoreElements (_868:lng)(_869:str)(_870:zrule)<-(rule_bat:bat[:str,:zrule]) jump 106
exit (_868,_869,_870);	# 111  (_868:lng)(_869:str)(_870:zrule)
    xa_a:bat[:str,:date]  := _865;	# 112  (xa_a:bat[:str,:date])<-(_865:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 113 BKCsetColumn (ya_a:void)<-(xa_a:bat[:str,:date])(_121:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 114  (_122:str)
    _878 := bat.new(nil:str,nil:date);	# 115 CMDBATnew (_878:bat[:str,:date])<-(_852:str)(_866:date)
barrier (_880,_881,_882):= bat.newIterator(rule_bat);	# 116 CHPbunIterator (_880:lng)(_881:str)(_882:zrule)<-(rule_bat:bat[:str,:zrule]) jump 122
    _884 := mtime.compute(_882,2001);	# 117 MTIMEcompute_rule_foryear (_884:date)<-(_882:zrule)(_119:int)
    bat.insert(_878,_881,_884);	# 118 BKCinsert_bun (_885:void)<-(_878:bat[:str,:date])(_881:str)(_884:date)
catch MALexception:str ;	# 119  (MALexception:str) jump 120
exit MALexception:str ;	# 120  (MALexception:str)
    redo (_880,_881,_882):= bat.hasMoreElements(rule_bat);	# 121 CHPbunHasMoreElements (_880:lng)(_881:str)(_882:zrule)<-(rule_bat:bat[:str,:zrule]) jump 117
exit (_880,_881,_882);	# 122  (_880:lng)(_881:str)(_882:zrule)
    ab_a:bat[:str,:date]  := _878;	# 123  (ab_a:bat[:str,:date])<-(_878:bat[:str,:date])
    _890 := bat.new(nil:str,nil:int);	# 124 CMDBATnew (_890:bat[:str,:int])<-(_891:str)(_892:int)
barrier (_894,_895,_896):= bat.newIterator(ab_a);	# 125 CHPbunIterator (_894:lng)(_895:str)(_896:date)<-(ab_a:bat[:str,:date]) jump 131
    _898 := mtime.dayofweek(_896);	# 126 MTIMEdate_extract_dayofweek (_898:int)<-(_896:date)
    bat.insert(_890,_895,_898);	# 127 BKCinsert_bun (_899:void)<-(_890:bat[:str,:int])(_895:str)(_898:int)
catch MALexception:str ;	# 128  (MALexception:str) jump 129
exit MALexception:str ;	# 129  (MALexception:str)
    redo (_894,_895,_896):= bat.hasMoreElements(ab_a);	# 130 CHPbunHasMoreElements (_894:lng)(_895:str)(_896:date)<-(ab_a:bat[:str,:date]) jump 126
exit (_894,_895,_896);	# 131  (_894:lng)(_895:str)(_896:date)
    bb_a:bat[:str,:int]  := _890;	# 132  (bb_a:bat[:str,:int])<-(_890:bat[:str,:int])
    _904 := bat.new(nil:str,nil:str);	# 133 CMDBATnew (_904:bat[:str,:str])<-(_891:str)(_891:str)
barrier (_906,_907,_908):= bat.newIterator(bb_a);	# 134 CHPbunIterator (_906:lng)(_907:str)(_908:int)<-(bb_a:bat[:str,:int]) jump 140
    _910 := mtime.dayname(_908);	# 135 MTIMEday_to_str (_910:str)<-(_908:int)
    bat.insert(_904,_907,_910);	# 136 BKCinsert_bun (_911:void)<-(_904:bat[:str,:str])(_907:str)(_910:str)
catch MALexception:str ;	# 137  (MALexception:str) jump 138
exit MALexception:str ;	# 138  (MALexception:str)
    redo (_906,_907,_908):= bat.hasMoreElements(bb_a);	# 139 CHPbunHasMoreElements (_906:lng)(_907:str)(_908:int)<-(bb_a:bat[:str,:int]) jump 135
exit (_906,_907,_908);	# 140  (_906:lng)(_907:str)(_908:int)
    cb_a:bat[:str,:str]  := _904;	# 141  (cb_a:bat[:str,:str])<-(_904:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 142 BKCsetColumn (_128:void)<-(cb_a:bat[:str,:str])(_121:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 143  (_129:str)
    _916 := bat.new(nil:str,nil:date);	# 144 CMDBATnew (_916:bat[:str,:date])<-(_891:str)(_917:date)
barrier (_919,_920,_921):= bat.newIterator(rule_bat);	# 145 CHPbunIterator (_919:lng)(_920:str)(_921:zrule)<-(rule_bat:bat[:str,:zrule]) jump 151
    _923 := mtime.compute(_921,1999);	# 146 MTIMEcompute_rule_foryear (_923:date)<-(_921:zrule)(_131:int)
    bat.insert(_916,_920,_923);	# 147 BKCinsert_bun (_924:void)<-(_916:bat[:str,:date])(_920:str)(_923:date)
catch MALexception:str ;	# 148  (MALexception:str) jump 149
exit MALexception:str ;	# 149  (MALexception:str)
    redo (_919,_920,_921):= bat.hasMoreElements(rule_bat);	# 150 CHPbunHasMoreElements (_919:lng)(_920:str)(_921:zrule)<-(rule_bat:bat[:str,:zrule]) jump 146
exit (_919,_920,_921);	# 151  (_919:lng)(_920:str)(_921:zrule)
    eb_a:bat[:str,:date]  := _916;	# 152  (eb_a:bat[:str,:date])<-(_916:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 153 BKCsetColumn (_132:void)<-(eb_a:bat[:str,:date])(_133:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 154  (_134:str)
    _929 := bat.new(nil:str,nil:date);	# 155 CMDBATnew (_929:bat[:str,:date])<-(_930:str)(_917:date)
barrier (_932,_933,_934):= bat.newIterator(rule_bat);	# 156 CHPbunIterator (_932:lng)(_933:str)(_934:zrule)<-(rule_bat:bat[:str,:zrule]) jump 162
    _936 := mtime.compute(_934,1999);	# 157 MTIMEcompute_rule_foryear (_936:date)<-(_934:zrule)(_131:int)
    bat.insert(_929,_933,_936);	# 158 BKCinsert_bun (_937:void)<-(_929:bat[:str,:date])(_933:str)(_936:date)
catch MALexception:str ;	# 159  (MALexception:str) jump 160
exit MALexception:str ;	# 160  (MALexception:str)
    redo (_932,_933,_934):= bat.hasMoreElements(rule_bat);	# 161 CHPbunHasMoreElements (_932:lng)(_933:str)(_934:zrule)<-(rule_bat:bat[:str,:zrule]) jump 157
exit (_932,_933,_934);	# 162  (_932:lng)(_933:str)(_934:zrule)
    gb_a:bat[:str,:date]  := _929;	# 163  (gb_a:bat[:str,:date])<-(_929:bat[:str,:date])
    _942 := bat.new(nil:str,nil:int);	# 164 CMDBATnew (_942:bat[:str,:int])<-(_930:str)(_943:int)
barrier (_945,_946,_947):= bat.newIterator(gb_a);	# 165 CHPbunIterator (_945:lng)(_946:str)(_947:date)<-(gb_a:bat[:str,:date]) jump 171
    _949 := mtime.dayofweek(_947);	# 166 MTIMEdate_extract_dayofweek (_949:int)<-(_947:date)
    bat.insert(_942,_946,_949);	# 167 BKCinsert_bun (_950:void)<-(_942:bat[:str,:int])(_946:str)(_949:int)
catch MALexception:str ;	# 168  (MALexception:str) jump 169
exit MALexception:str ;	# 169  (MALexception:str)
    redo (_945,_946,_947):= bat.hasMoreElements(gb_a);	# 170 CHPbunHasMoreElements (_945:lng)(_946:str)(_947:date)<-(gb_a:bat[:str,:date]) jump 166
exit (_945,_946,_947);	# 171  (_945:lng)(_946:str)(_947:date)
    hb_a:bat[:str,:int]  := _942;	# 172  (hb_a:bat[:str,:int])<-(_942:bat[:str,:int])
    _955 := bat.new(nil:str,nil:str);	# 173 CMDBATnew (_955:bat[:str,:str])<-(_930:str)(_930:str)
barrier (_957,_958,_959):= bat.newIterator(hb_a);	# 174 CHPbunIterator (_957:lng)(_958:str)(_959:int)<-(hb_a:bat[:str,:int]) jump 180
    _961 := mtime.dayname(_959);	# 175 MTIMEday_to_str (_961:str)<-(_959:int)
    bat.insert(_955,_958,_961);	# 176 BKCinsert_bun (_962:void)<-(_955:bat[:str,:str])(_958:str)(_961:str)
catch MALexception:str ;	# 177  (MALexception:str) jump 178
exit MALexception:str ;	# 178  (MALexception:str)
    redo (_957,_958,_959):= bat.hasMoreElements(hb_a);	# 179 CHPbunHasMoreElements (_957:lng)(_958:str)(_959:int)<-(hb_a:bat[:str,:int]) jump 175
exit (_957,_958,_959);	# 180  (_957:lng)(_958:str)(_959:int)
    ib_a:bat[:str,:str]  := _955;	# 181  (ib_a:bat[:str,:str])<-(_955:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 182 BKCsetColumn (_138:void)<-(ib_a:bat[:str,:str])(_133:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 183  (_139:str)
    _967 := bat.new(nil:str,nil:date);	# 184 CMDBATnew (_967:bat[:str,:date])<-(_968:str)(_969:date)
barrier (_971,_972,_973):= bat.newIterator(rule_bat);	# 185 CHPbunIterator (_971:lng)(_972:str)(_973:zrule)<-(rule_bat:bat[:str,:zrule]) jump 191
    _975 := mtime.compute(_973,1992);	# 186 MTIMEcompute_rule_foryear (_975:date)<-(_973:zrule)(_141:int)
    bat.insert(_967,_972,_975);	# 187 BKCinsert_bun (_976:void)<-(_967:bat[:str,:date])(_972:str)(_975:date)
catch MALexception:str ;	# 188  (MALexception:str) jump 189
exit MALexception:str ;	# 189  (MALexception:str)
    redo (_971,_972,_973):= bat.hasMoreElements(rule_bat);	# 190 CHPbunHasMoreElements (_971:lng)(_972:str)(_973:zrule)<-(rule_bat:bat[:str,:zrule]) jump 186
exit (_971,_972,_973);	# 191  (_971:lng)(_972:str)(_973:zrule)
    kb_a:bat[:str,:date]  := _967;	# 192  (kb_a:bat[:str,:date])<-(_967:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 193 BKCsetColumn (_142:void)<-(kb_a:bat[:str,:date])(_143:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 194  (_144:str)
    _981 := bat.new(nil:str,nil:date);	# 195 CMDBATnew (_981:bat[:str,:date])<-(_968:str)(_969:date)
barrier (_983,_984,_985):= bat.newIterator(rule_bat);	# 196 CHPbunIterator (_983:lng)(_984:str)(_985:zrule)<-(rule_bat:bat[:str,:zrule]) jump 202
    _987 := mtime.compute(_985,1992);	# 197 MTIMEcompute_rule_foryear (_987:date)<-(_985:zrule)(_141:int)
    bat.insert(_981,_984,_987);	# 198 BKCinsert_bun (_988:void)<-(_981:bat[:str,:date])(_984:str)(_987:date)
catch MALexception:str ;	# 199  (MALexception:str) jump 200
exit MALexception:str ;	# 200  (MALexception:str)
    redo (_983,_984,_985):= bat.hasMoreElements(rule_bat);	# 201 CHPbunHasMoreElements (_983:lng)(_984:str)(_985:zrule)<-(rule_bat:bat[:str,:zrule]) jump 197
exit (_983,_984,_985);	# 202  (_983:lng)(_984:str)(_985:zrule)
    mb_a:bat[:str,:date]  := _981;	# 203  (mb_a:bat[:str,:date])<-(_981:bat[:str,:date])
    _993 := bat.new(nil:str,nil:int);	# 204 CMDBATnew (_993:bat[:str,:int])<-(_968:str)(_994:int)
barrier (_996,_997,_998):= bat.newIterator(mb_a);	# 205 CHPbunIterator (_996:lng)(_997:str)(_998:date)<-(mb_a:bat[:str,:date]) jump 211
    _1000 := mtime.dayofweek(_998);	# 206 MTIMEdate_extract_dayofweek (_1000:int)<-(_998:date)
    bat.insert(_993,_997,_1000);	# 207 BKCinsert_bun (_1001:void)<-(_993:bat[:str,:int])(_997:str)(_1000:int)
catch MALexception:str ;	# 208  (MALexception:str) jump 209
exit MALexception:str ;	# 209  (MALexception:str)
    redo (_996,_997,_998):= bat.hasMoreElements(mb_a);	# 210 CHPbunHasMoreElements (_996:lng)(_997:str)(_998:date)<-(mb_a:bat[:str,:date]) jump 206
exit (_996,_997,_998);	# 211  (_996:lng)(_997:str)(_998:date)
    nb_a:bat[:str,:int]  := _993;	# 212  (nb_a:bat[:str,:int])<-(_993:bat[:str,:int])
    _1006 := bat.new(nil:str,nil:str);	# 213 CMDBATnew (_1006:bat[:str,:str])<-(_1007:str)(_1007:str)
barrier (_1009,_1010,_1011):= bat.newIterator(nb_a);	# 214 CHPbunIterator (_1009:lng)(_1010:str)(_1011:int)<-(nb_a:bat[:str,:int]) jump 220
    _1013 := mtime.dayname(_1011);	# 215 MTIMEday_to_str (_1013:str)<-(_1011:int)
    bat.insert(_1006,_1010,_1013);	# 216 BKCinsert_bun (_1014:void)<-(_1006:bat[:str,:str])(_1010:str)(_1013:str)
catch MALexception:str ;	# 217  (MALexception:str) jump 218
exit MALexception:str ;	# 218  (MALexception:str)
    redo (_1009,_1010,_1011):= bat.hasMoreElements(nb_a);	# 219 CHPbunHasMoreElements (_1009:lng)(_1010:str)(_1011:int)<-(nb_a:bat[:str,:int]) jump 215
exit (_1009,_1010,_1011);	# 220  (_1009:lng)(_1010:str)(_1011:int)
    ob_a:bat[:str,:str]  := _1006;	# 221  (ob_a:bat[:str,:str])<-(_1006:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 222 BKCsetColumn (_148:void)<-(ob_a:bat[:str,:str])(_143:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 223 IOprint_val (_149:int)<-(_150:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 224 IOtable (qb_a:int)<-(rule_bat:bat[:str,:zrule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 225  (_152:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 226 BKCsetColumn (rb_a:void)<-(rule_bat:bat[:str,:zrule])(_154:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 227  (_155:str)
    _1019 := bat.new(nil:str,nil:date);	# 228 CMDBATnew (_1019:bat[:str,:date])<-(_1007:str)(_1020:date)
barrier (_1022,_1023,_1024):= bat.newIterator(rule_bat);	# 229 CHPbunIterator (_1022:lng)(_1023:str)(_1024:zrule)<-(rule_bat:bat[:str,:zrule]) jump 235
    _1026 := mtime.compute(_1024,1572);	# 230 MTIMEcompute_rule_foryear (_1026:date)<-(_1024:zrule)(_158:int)
    bat.insert(_1019,_1023,_1026);	# 231 BKCinsert_bun (_1027:void)<-(_1019:bat[:str,:date])(_1023:str)(_1026:date)
catch MALexception:str ;	# 232  (MALexception:str) jump 233
exit MALexception:str ;	# 233  (MALexception:str)
    redo (_1022,_1023,_1024):= bat.hasMoreElements(rule_bat);	# 234 CHPbunHasMoreElements (_1022:lng)(_1023:str)(_1024:zrule)<-(rule_bat:bat[:str,:zrule]) jump 230
exit (_1022,_1023,_1024);	# 235  (_1022:lng)(_1023:str)(_1024:zrule)
    sb_a:bat[:str,:date]  := _1019;	# 236  (sb_a:bat[:str,:date])<-(_1019:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 237 BKCsetColumn (tb_a:void)<-(sb_a:bat[:str,:date])(_160:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 238  (_161:str)
    _1032 := bat.new(nil:str,nil:date);	# 239 CMDBATnew (_1032:bat[:str,:date])<-(_1007:str)(_1020:date)
barrier (_1034,_1035,_1036):= bat.newIterator(rule_bat);	# 240 CHPbunIterator (_1034:lng)(_1035:str)(_1036:zrule)<-(rule_bat:bat[:str,:zrule]) jump 246
    _1038 := mtime.compute(_1036,1572);	# 241 MTIMEcompute_rule_foryear (_1038:date)<-(_1036:zrule)(_158:int)
    bat.insert(_1032,_1035,_1038);	# 242 BKCinsert_bun (_1039:void)<-(_1032:bat[:str,:date])(_1035:str)(_1038:date)
catch MALexception:str ;	# 243  (MALexception:str) jump 244
exit MALexception:str ;	# 244  (MALexception:str)
    redo (_1034,_1035,_1036):= bat.hasMoreElements(rule_bat);	# 245 CHPbunHasMoreElements (_1034:lng)(_1035:str)(_1036:zrule)<-(rule_bat:bat[:str,:zrule]) jump 241
exit (_1034,_1035,_1036);	# 246  (_1034:lng)(_1035:str)(_1036:zrule)
    ub_a:bat[:str,:date]  := _1032;	# 247  (ub_a:bat[:str,:date])<-(_1032:bat[:str,:date])
    _1044 := bat.new(nil:str,nil:int);	# 248 CMDBATnew (_1044:bat[:str,:int])<-(_1045:str)(_1046:int)
barrier (_1048,_1049,_1050):= bat.newIterator(ub_a);	# 249 CHPbunIterator (_1048:lng)(_1049:str)(_1050:date)<-(ub_a:bat[:str,:date]) jump 255
    _1052 := mtime.dayofweek(_1050);	# 250 MTIMEdate_extract_dayofweek (_1052:int)<-(_1050:date)
    bat.insert(_1044,_1049,_1052);	# 251 BKCinsert_bun (_1053:void)<-(_1044:bat[:str,:int])(_1049:str)(_1052:int)
catch MALexception:str ;	# 252  (MALexception:str) jump 253
exit MALexception:str ;	# 253  (MALexception:str)
    redo (_1048,_1049,_1050):= bat.hasMoreElements(ub_a);	# 254 CHPbunHasMoreElements (_1048:lng)(_1049:str)(_1050:date)<-(ub_a:bat[:str,:date]) jump 250
exit (_1048,_1049,_1050);	# 255  (_1048:lng)(_1049:str)(_1050:date)
    vb_a:bat[:str,:int]  := _1044;	# 256  (vb_a:bat[:str,:int])<-(_1044:bat[:str,:int])
    _1058 := bat.new(nil:str,nil:str);	# 257 CMDBATnew (_1058:bat[:str,:str])<-(_1045:str)(_1045:str)
barrier (_1060,_1061,_1062):= bat.newIterator(vb_a);	# 258 CHPbunIterator (_1060:lng)(_1061:str)(_1062:int)<-(vb_a:bat[:str,:int]) jump 264
    _1064 := mtime.dayname(_1062);	# 259 MTIMEday_to_str (_1064:str)<-(_1062:int)
    bat.insert(_1058,_1061,_1064);	# 260 BKCinsert_bun (_1065:void)<-(_1058:bat[:str,:str])(_1061:str)(_1064:str)
catch MALexception:str ;	# 261  (MALexception:str) jump 262
exit MALexception:str ;	# 262  (MALexception:str)
    redo (_1060,_1061,_1062):= bat.hasMoreElements(vb_a);	# 263 CHPbunHasMoreElements (_1060:lng)(_1061:str)(_1062:int)<-(vb_a:bat[:str,:int]) jump 259
exit (_1060,_1061,_1062);	# 264  (_1060:lng)(_1061:str)(_1062:int)
    wb_a:bat[:str,:str]  := _1058;	# 265  (wb_a:bat[:str,:str])<-(_1058:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 266 BKCsetColumn (xb_a:void)<-(wb_a:bat[:str,:str])(_160:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 267  (_168:str)
    _1070 := bat.new(nil:str,nil:date);	# 268 CMDBATnew (_1070:bat[:str,:date])<-(_1045:str)(_1071:date)
barrier (_1073,_1074,_1075):= bat.newIterator(rule_bat);	# 269 CHPbunIterator (_1073:lng)(_1074:str)(_1075:zrule)<-(rule_bat:bat[:str,:zrule]) jump 275
    _1077 := mtime.compute(_1075,1);	# 270 MTIMEcompute_rule_foryear (_1077:date)<-(_1075:zrule)(_170:int)
    bat.insert(_1070,_1074,_1077);	# 271 BKCinsert_bun (_1078:void)<-(_1070:bat[:str,:date])(_1074:str)(_1077:date)
catch MALexception:str ;	# 272  (MALexception:str) jump 273
exit MALexception:str ;	# 273  (MALexception:str)
    redo (_1073,_1074,_1075):= bat.hasMoreElements(rule_bat);	# 274 CHPbunHasMoreElements (_1073:lng)(_1074:str)(_1075:zrule)<-(rule_bat:bat[:str,:zrule]) jump 270
exit (_1073,_1074,_1075);	# 275  (_1073:lng)(_1074:str)(_1075:zrule)
    yb_a:bat[:str,:date]  := _1070;	# 276  (yb_a:bat[:str,:date])<-(_1070:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 277 BKCsetColumn (ac_a:void)<-(yb_a:bat[:str,:date])(_172:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 278  (_173:str)
    _1083 := bat.new(nil:str,nil:date);	# 279 CMDBATnew (_1083:bat[:str,:date])<-(_1084:str)(_1071:date)
barrier (_1086,_1087,_1088):= bat.newIterator(rule_bat);	# 280 CHPbunIterator (_1086:lng)(_1087:str)(_1088:zrule)<-(rule_bat:bat[:str,:zrule]) jump 286
    _1090 := mtime.compute(_1088,1);	# 281 MTIMEcompute_rule_foryear (_1090:date)<-(_1088:zrule)(_170:int)
    bat.insert(_1083,_1087,_1090);	# 282 BKCinsert_bun (_1091:void)<-(_1083:bat[:str,:date])(_1087:str)(_1090:date)
catch MALexception:str ;	# 283  (MALexception:str) jump 284
exit MALexception:str ;	# 284  (MALexception:str)
    redo (_1086,_1087,_1088):= bat.hasMoreElements(rule_bat);	# 285 CHPbunHasMoreElements (_1086:lng)(_1087:str)(_1088:zrule)<-(rule_bat:bat[:str,:zrule]) jump 281
exit (_1086,_1087,_1088);	# 286  (_1086:lng)(_1087:str)(_1088:zrule)
    bc_a:bat[:str,:date]  := _1083;	# 287  (bc_a:bat[:str,:date])<-(_1083:bat[:str,:date])
    _1096 := bat.new(nil:str,nil:int);	# 288 CMDBATnew (_1096:bat[:str,:int])<-(_1084:str)(_1097:int)
barrier (_1099,_1100,_1101):= bat.newIterator(bc_a);	# 289 CHPbunIterator (_1099:lng)(_1100:str)(_1101:date)<-(bc_a:bat[:str,:date]) jump 295
    _1103 := mtime.dayofweek(_1101);	# 290 MTIMEdate_extract_dayofweek (_1103:int)<-(_1101:date)
    bat.insert(_1096,_1100,_1103);	# 291 BKCinsert_bun (_1104:void)<-(_1096:bat[:str,:int])(_1100:str)(_1103:int)
catch MALexception:str ;	# 292  (MALexception:str) jump 293
exit MALexception:str ;	# 293  (MALexception:str)
    redo (_1099,_1100,_1101):= bat.hasMoreElements(bc_a);	# 294 CHPbunHasMoreElements (_1099:lng)(_1100:str)(_1101:date)<-(bc_a:bat[:str,:date]) jump 290
exit (_1099,_1100,_1101);	# 295  (_1099:lng)(_1100:str)(_1101:date)
    cc_a:bat[:str,:int]  := _1096;	# 296  (cc_a:bat[:str,:int])<-(_1096:bat[:str,:int])
    _1109 := bat.new(nil:str,nil:str);	# 297 CMDBATnew (_1109:bat[:str,:str])<-(_1084:str)(_1084:str)
barrier (_1111,_1112,_1113):= bat.newIterator(cc_a);	# 298 CHPbunIterator (_1111:lng)(_1112:str)(_1113:int)<-(cc_a:bat[:str,:int]) jump 304
    _1115 := mtime.dayname(_1113);	# 299 MTIMEday_to_str (_1115:str)<-(_1113:int)
    bat.insert(_1109,_1112,_1115);	# 300 BKCinsert_bun (_1116:void)<-(_1109:bat[:str,:str])(_1112:str)(_1115:str)
catch MALexception:str ;	# 301  (MALexception:str) jump 302
exit MALexception:str ;	# 302  (MALexception:str)
    redo (_1111,_1112,_1113):= bat.hasMoreElements(cc_a);	# 303 CHPbunHasMoreElements (_1111:lng)(_1112:str)(_1113:int)<-(cc_a:bat[:str,:int]) jump 299
exit (_1111,_1112,_1113);	# 304  (_1111:lng)(_1112:str)(_1113:int)
    dc_a:bat[:str,:str]  := _1109;	# 305  (dc_a:bat[:str,:str])<-(_1109:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 306 BKCsetColumn (ec_a:void)<-(dc_a:bat[:str,:str])(_172:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 307  (_178:str)
    _1121 := bat.new(nil:str,nil:date);	# 308 CMDBATnew (_1121:bat[:str,:date])<-(_1122:str)(_1123:date)
barrier (_1125,_1126,_1127):= bat.newIterator(rule_bat);	# 309 CHPbunIterator (_1125:lng)(_1126:str)(_1127:zrule)<-(rule_bat:bat[:str,:zrule]) jump 315
    _1129 := mtime.compute(_1127,-2000);	# 310 MTIMEcompute_rule_foryear (_1129:date)<-(_1127:zrule)(_180:int)
    bat.insert(_1121,_1126,_1129);	# 311 BKCinsert_bun (_1130:void)<-(_1121:bat[:str,:date])(_1126:str)(_1129:date)
catch MALexception:str ;	# 312  (MALexception:str) jump 313
exit MALexception:str ;	# 313  (MALexception:str)
    redo (_1125,_1126,_1127):= bat.hasMoreElements(rule_bat);	# 314 CHPbunHasMoreElements (_1125:lng)(_1126:str)(_1127:zrule)<-(rule_bat:bat[:str,:zrule]) jump 310
exit (_1125,_1126,_1127);	# 315  (_1125:lng)(_1126:str)(_1127:zrule)
    fc_a:bat[:str,:date]  := _1121;	# 316  (fc_a:bat[:str,:date])<-(_1121:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 317 BKCsetColumn (gc_a:void)<-(fc_a:bat[:str,:date])(_182:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 318  (_183:str)
    _1135 := bat.new(nil:str,nil:date);	# 319 CMDBATnew (_1135:bat[:str,:date])<-(_1122:str)(_1123:date)
barrier (_1137,_1138,_1139):= bat.newIterator(rule_bat);	# 320 CHPbunIterator (_1137:lng)(_1138:str)(_1139:zrule)<-(rule_bat:bat[:str,:zrule]) jump 326
    _1141 := mtime.compute(_1139,-2000);	# 321 MTIMEcompute_rule_foryear (_1141:date)<-(_1139:zrule)(_180:int)
    bat.insert(_1135,_1138,_1141);	# 322 BKCinsert_bun (_1142:void)<-(_1135:bat[:str,:date])(_1138:str)(_1141:date)
catch MALexception:str ;	# 323  (MALexception:str) jump 324
exit MALexception:str ;	# 324  (MALexception:str)
    redo (_1137,_1138,_1139):= bat.hasMoreElements(rule_bat);	# 325 CHPbunHasMoreElements (_1137:lng)(_1138:str)(_1139:zrule)<-(rule_bat:bat[:str,:zrule]) jump 321
exit (_1137,_1138,_1139);	# 326  (_1137:lng)(_1138:str)(_1139:zrule)
    hc_a:bat[:str,:date]  := _1135;	# 327  (hc_a:bat[:str,:date])<-(_1135:bat[:str,:date])
    _1147 := bat.new(nil:str,nil:int);	# 328 CMDBATnew (_1147:bat[:str,:int])<-(_1122:str)(_1148:int)
barrier (_1150,_1151,_1152):= bat.newIterator(hc_a);	# 329 CHPbunIterator (_1150:lng)(_1151:str)(_1152:date)<-(hc_a:bat[:str,:date]) jump 335
    _1154 := mtime.dayofweek(_1152);	# 330 MTIMEdate_extract_dayofweek (_1154:int)<-(_1152:date)
    bat.insert(_1147,_1151,_1154);	# 331 BKCinsert_bun (_1155:void)<-(_1147:bat[:str,:int])(_1151:str)(_1154:int)
catch MALexception:str ;	# 332  (MALexception:str) jump 333
exit MALexception:str ;	# 333  (MALexception:str)
    redo (_1150,_1151,_1152):= bat.hasMoreElements(hc_a);	# 334 CHPbunHasMoreElements (_1150:lng)(_1151:str)(_1152:date)<-(hc_a:bat[:str,:date]) jump 330
exit (_1150,_1151,_1152);	# 335  (_1150:lng)(_1151:str)(_1152:date)
    ic_a:bat[:str,:int]  := _1147;	# 336  (ic_a:bat[:str,:int])<-(_1147:bat[:str,:int])
    _1160 := bat.new(nil:str,nil:str);	# 337 CMDBATnew (_1160:bat[:str,:str])<-(_1161:str)(_1161:str)
barrier (_1163,_1164,_1165):= bat.newIterator(ic_a);	# 338 CHPbunIterator (_1163:lng)(_1164:str)(_1165:int)<-(ic_a:bat[:str,:int]) jump 344
    _1167 := mtime.dayname(_1165);	# 339 MTIMEday_to_str (_1167:str)<-(_1165:int)
    bat.insert(_1160,_1164,_1167);	# 340 BKCinsert_bun (_1168:void)<-(_1160:bat[:str,:str])(_1164:str)(_1167:str)
catch MALexception:str ;	# 341  (MALexception:str) jump 342
exit MALexception:str ;	# 342  (MALexception:str)
    redo (_1163,_1164,_1165):= bat.hasMoreElements(ic_a);	# 343 CHPbunHasMoreElements (_1163:lng)(_1164:str)(_1165:int)<-(ic_a:bat[:str,:int]) jump 339
exit (_1163,_1164,_1165);	# 344  (_1163:lng)(_1164:str)(_1165:int)
    jc_a:bat[:str,:str]  := _1160;	# 345  (jc_a:bat[:str,:str])<-(_1160:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 346 BKCsetColumn (kc_a:void)<-(jc_a:bat[:str,:str])(_182:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 347 IOprint_val (_188:int)<-(_189:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 348 IOtable (lc_a:int)<-(rule_bat:bat[:str,:zrule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 349  (_191:str)
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 350  (_192:str)
## test the various ways to create timezones, using some of the above created rules 	# 351  (_193:str)
    tzone_00 := mtime.timezone("GMT");	# 352 MTIMEtzone_fromstr (tzone_00:timezone)<-(_195:str)
#var tzone_00 := mtime.timezone("GMT"); 	# 353  (_196:str)
    tzone_01 := mtime.timezone("GMT+01:00");	# 354 MTIMEtzone_fromstr (tzone_01:timezone)<-(_198:str)
#var tzone_01 := mtime.timezone("GMT+01:00"); 	# 355  (_199:str)
    tzone_02 := mtime.timezone("GMT+0100");	# 356 MTIMEtzone_fromstr (tzone_02:timezone)<-(_201:str)
#var tzone_02 := mtime.timezone("GMT+0100"); 	# 357  (_202:str)
    tzone_03 := mtime.timezone(60,rule_oct,rule_mar);	# 358 MTIMEtzone_create_dst (tzone_03:timezone)<-(_204:int)(rule_oct:zrule)(rule_mar:zrule)
#var tzone_03 := mtime.timezone(60, rule_oct, rule_mar); 	# 359  (_205:str)
    tzone_04 := mtime.timezone(0,rule_jan,rule_aug);	# 360 MTIMEtzone_create_dst (tzone_04:timezone)<-(_207:int)(rule_jan:zrule)(rule_aug:zrule)
#var tzone_04 := mtime.timezone(0, rule_jan, rule_aug); 	# 361  (_208:str)
    tzone_05 := mtime.timezone(-97,rule_oct,rule_apr);	# 362 MTIMEtzone_create_dst (tzone_05:timezone)<-(_210:int)(rule_oct:zrule)(rule_apr:zrule)
#var tzone_05 := mtime.timezone(-97, rule_oct, rule_apr); 	# 363  (_211:str)
    tzone_06 := mtime.timezone(-97,rule_may,rule_sep);	# 364 MTIMEtzone_create_dst (tzone_06:timezone)<-(_210:int)(rule_may:zrule)(rule_sep:zrule)
#var tzone_06 := mtime.timezone(-97, rule_may, rule_sep); 	# 365  (_213:str)
    mc_a := calc.*(23,60);	# 366 CALCbinaryMULintint (mc_a:int)<-(_215:int)(_204:int)
    tzone_07 := mtime.timezone(mc_a,rule_apr,rule_nov);	# 367 MTIMEtzone_create_dst (tzone_07:timezone)<-(mc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_07 := mtime.timezone(23*60, rule_apr, rule_nov); 	# 368  (_217:str)
    nc_a := calc.*(-23,59);	# 369 CALCbinaryMULintint (nc_a:int)<-(_219:int)(_220:int)
    oc_a := calc.-(nc_a,59);	# 370 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)(_220:int)
    tzone_08 := mtime.timezone(oc_a);	# 371 MTIMEtzone_create (tzone_08:timezone)<-(oc_a:int)
#var tzone_08 := mtime.timezone((-23*59) - 59); 	# 372  (_223:str)
    tzone_09 := mtime.timezone(0);	# 373 MTIMEtzone_create (tzone_09:timezone)<-(_207:int)
#var tzone_09 := mtime.timezone(0); 	# 374  (_225:str)
    tzone_10 := mtime.timezone(-60);	# 375 MTIMEtzone_create (tzone_10:timezone)<-(_227:int)
#var tzone_10 := mtime.timezone(-60); 	# 376  (_228:str)
    pc_a := calc.*(23,60);	# 377 CALCbinaryMULintint (pc_a:int)<-(_215:int)(_204:int)
    qc_a := calc.+(pc_a,59);	# 378 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)(_220:int)
    tzone_11 := mtime.timezone(qc_a);	# 379 MTIMEtzone_create (tzone_11:timezone)<-(qc_a:int)
#var tzone_11 := mtime.timezone((23*60)+59); 	# 380  (_232:str)
    tzone_12 := mtime.timezone(60);	# 381 MTIMEtzone_create (tzone_12:timezone)<-(_204:int)
#var tzone_12 := mtime.timezone(60); 	# 382  (_234:str)
## nil tzones 	# 383  (_235:str)
    tzone_13 := mtime.timezone(60,rule_feb,rule_dec);	# 384 MTIMEtzone_create_dst (tzone_13:timezone)<-(_204:int)(rule_feb:zrule)(rule_dec:zrule)
#var tzone_13 := mtime.timezone(60, rule_feb, rule_dec); 	# 385  (_237:str)
    rc_a := calc.*(24,60);	# 386 CALCbinaryMULintint (rc_a:int)<-(_239:int)(_204:int)
    tzone_15 := mtime.timezone(rc_a,rule_apr,rule_nov);	# 387 MTIMEtzone_create_dst (tzone_15:timezone)<-(rc_a:int)(rule_apr:zrule)(rule_nov:zrule)
#var tzone_15 := mtime.timezone(24*60, rule_apr, rule_nov); 	# 388  (_241:str)
    tzone_bat := bat.new(:oid,:timezone);	# 389 CMDBATnew (tzone_bat:bat[:oid,:timezone])<-(_243:oid)(_244:timezone)
#var tzone_bat := bat.new(oid,tzone); 	# 390  (_245:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 391 BKCinsert_bun (_246:void)<-(tzone_bat:bat[:oid,:timezone])(_247:oid)(tzone_00:timezone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 392 BKCinsert_bun (_248:void)<-(tzone_bat:bat[:oid,:timezone])(_249:oid)(tzone_01:timezone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 393 BKCinsert_bun (_250:void)<-(tzone_bat:bat[:oid,:timezone])(_251:oid)(tzone_02:timezone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 394  (_252:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 395 BKCinsert_bun (_253:void)<-(tzone_bat:bat[:oid,:timezone])(_254:oid)(tzone_03:timezone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 396 BKCinsert_bun (_255:void)<-(tzone_bat:bat[:oid,:timezone])(_256:oid)(tzone_04:timezone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 397 BKCinsert_bun (_257:void)<-(tzone_bat:bat[:oid,:timezone])(_258:oid)(tzone_05:timezone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 398  (_259:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 399 BKCinsert_bun (_260:void)<-(tzone_bat:bat[:oid,:timezone])(_261:oid)(tzone_06:timezone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 400 BKCinsert_bun (_262:void)<-(tzone_bat:bat[:oid,:timezone])(_263:oid)(tzone_07:timezone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 401 BKCinsert_bun (_264:void)<-(tzone_bat:bat[:oid,:timezone])(_265:oid)(tzone_08:timezone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 402  (_266:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 403 BKCinsert_bun (_267:void)<-(tzone_bat:bat[:oid,:timezone])(_268:oid)(tzone_09:timezone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 404 BKCinsert_bun (_269:void)<-(tzone_bat:bat[:oid,:timezone])(_270:oid)(tzone_10:timezone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 405 BKCinsert_bun (_271:void)<-(tzone_bat:bat[:oid,:timezone])(_272:oid)(tzone_11:timezone)
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 406  (_273:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 407 BKCinsert_bun (_274:void)<-(tzone_bat:bat[:oid,:timezone])(_275:oid)(tzone_12:timezone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 408 BKCinsert_bun (_276:void)<-(tzone_bat:bat[:oid,:timezone])(_277:oid)(tzone_13:timezone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 409 BKCinsert_bun (_278:void)<-(tzone_bat:bat[:oid,:timezone])(_279:oid)(tzone_15:timezone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 410  (_280:str)
## test the operations on tzones 	# 411  (_281:str)
    bat.setName(tzone_bat,"timezone");	# 412 BKCsetName (_282:void)<-(tzone_bat:bat[:oid,:timezone])(_283:str)
#io.print(tzone_bat); 	# 413  (_284:str)
#io.print("start error"); 	# 414  (_285:str)
#x:= getRefCount(tzone_bat); 	# 415  (_286:str)
#io.print(x); 	# 416  (_287:str)
#jd_a := io.print(tzone_bat); 	# 417  (_288:str)
#io.print("end"); 	# 418  (_289:str)
#io.print(x); 	# 419  (_287:str)
#x:= getRefCount(tzone_bat); 	# 420  (_286:str)
    io.print("tzone_bat");	# 421 IOprint_val (_290:int)<-(_291:str)
    io.print(tzone_bat);	# 422 IOprint_val (_292:int)<-(tzone_bat:bat[:oid,:timezone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 423  (_293:str)
    _1173 := bat.new(nil:oid,nil:int);	# 424 CMDBATnew (_1173:bat[:oid,:int])<-(_1174:oid)(_1148:int)
barrier (_1176,_1177,_1178):= bat.newIterator(tzone_bat);	# 425 CHPbunIterator (_1176:lng)(_1177:oid)(_1178:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 431
    _1180 := mtime.minutes(_1178);	# 426 MTIMEtzone_extract_minutes (_1180:int)<-(_1178:timezone)
    bat.insert(_1173,_1177,_1180);	# 427 BKCinsert_bun (_1181:void)<-(_1173:bat[:oid,:int])(_1177:oid)(_1180:int)
catch MALexception:str ;	# 428  (MALexception:str) jump 429
exit MALexception:str ;	# 429  (MALexception:str)
    redo (_1176,_1177,_1178):= bat.hasMoreElements(tzone_bat);	# 430 CHPbunHasMoreElements (_1176:lng)(_1177:oid)(_1178:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 426
exit (_1176,_1177,_1178);	# 431  (_1176:lng)(_1177:oid)(_1178:timezone)
    kd_a:bat[:oid,:int]  := _1173;	# 432  (kd_a:bat[:oid,:int])<-(_1173:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 433 BKCsetColumn (_296:void)<-(kd_a:bat[:oid,:int])(_297:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 434  (_298:str)
    _1186 := bat.new(nil:oid,nil:zrule);	# 435 CMDBATnew (_1186:bat[:oid,:zrule])<-(_1174:oid)(_1187:zrule)
barrier (_1189,_1190,_1191):= bat.newIterator(tzone_bat);	# 436 CHPbunIterator (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 442
    _1193 := mtime.start_dst(_1191);	# 437 MTIMEtzone_extract_start (_1193:zrule)<-(_1191:timezone)
    bat.insert(_1186,_1190,_1193);	# 438 BKCinsert_bun (_1194:void)<-(_1186:bat[:oid,:zrule])(_1190:oid)(_1193:zrule)
catch MALexception:str ;	# 439  (MALexception:str) jump 440
exit MALexception:str ;	# 440  (MALexception:str)
    redo (_1189,_1190,_1191):= bat.hasMoreElements(tzone_bat);	# 441 CHPbunHasMoreElements (_1189:lng)(_1190:oid)(_1191:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 437
exit (_1189,_1190,_1191);	# 442  (_1189:lng)(_1190:oid)(_1191:timezone)
    md_a:bat[:oid,:zrule]  := _1186;	# 443  (md_a:bat[:oid,:zrule])<-(_1186:bat[:oid,:zrule])
    bat.setColumn(md_a,"start_dst");	# 444 BKCsetColumn (_301:void)<-(md_a:bat[:oid,:zrule])(_302:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 445  (_303:str)
    _1199 := bat.new(nil:oid,nil:zrule);	# 446 CMDBATnew (_1199:bat[:oid,:zrule])<-(_1174:oid)(_1187:zrule)
barrier (_1201,_1202,_1203):= bat.newIterator(tzone_bat);	# 447 CHPbunIterator (_1201:lng)(_1202:oid)(_1203:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 453
    _1205 := mtime.end_dst(_1203);	# 448 MTIMEtzone_extract_end (_1205:zrule)<-(_1203:timezone)
    bat.insert(_1199,_1202,_1205);	# 449 BKCinsert_bun (_1206:void)<-(_1199:bat[:oid,:zrule])(_1202:oid)(_1205:zrule)
catch MALexception:str ;	# 450  (MALexception:str) jump 451
exit MALexception:str ;	# 451  (MALexception:str)
    redo (_1201,_1202,_1203):= bat.hasMoreElements(tzone_bat);	# 452 CHPbunHasMoreElements (_1201:lng)(_1202:oid)(_1203:timezone)<-(tzone_bat:bat[:oid,:timezone]) jump 448
exit (_1201,_1202,_1203);	# 453  (_1201:lng)(_1202:oid)(_1203:timezone)
    od_a:bat[:oid,:zrule]  := _1199;	# 454  (od_a:bat[:oid,:zrule])<-(_1199:bat[:oid,:zrule])
    bat.setColumn(od_a,"end_dst");	# 455 BKCsetColumn (_306:void)<-(od_a:bat[:oid,:zrule])(_307:str)
    io.print("print(kd_a,md_a,od_a)");	# 456 IOprint_val (_308:int)<-(_309:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 457 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:zrule])(od_a:bat[:oid,:zrule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 458  (_311:str)
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 459  (_312:str)
## test the various ways to create dates 	# 460  (_313:str)
    date_00 := mtime.date(2000,1,1);	# 461 MTIMEdate_create (date_00:date)<-(_315:int)(_316:int)(_316:int)
#var date_00 := date(2000,01,01); 	# 462  (_317:str)
    date_01 := mtime.date("5000-JAN-01");	# 463 MTIMEdate_fromstr (date_01:date)<-(_319:str)
#var date_01 := date("5000-JAN-01"); 	# 464  (_320:str)
    date_02 := mtime.date("1968-FEBR-29");	# 465 MTIMEdate_fromstr (date_02:date)<-(_322:str)
#var date_02 := date("1968-FEBR-29"); 	# 466  (_323:str)
    date_03 := mtime.date("1-MARCH-01");	# 467 MTIMEdate_fromstr (date_03:date)<-(_325:str)
#var date_03 := date("1-MARCH-01"); 	# 468  (_326:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 469 MTIMEdate_fromstr (date_04:date)<-(_328:str)
#var date_04 := date("-5867411-JAN-1"); 	# 470  (_329:str)
    date_05 := mtime.date("-768/octobe/01");	# 471 MTIMEdate_fromstr (date_05:date)<-(_331:str)
#var date_05 := date("-768/octobe/01"); 	# 472  (_332:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 473 MTIMEdate_fromstr (date_06:date)<-(_334:str)
#var date_06 := date("5000\\novembe\\01"); 	# 474  (_335:str)
    date_07 := mtime.date("-1999/jun/01");	# 475 MTIMEdate_fromstr (date_07:date)<-(_337:str)
#var date_07 := date("-1999/jun/01"); 	# 476  (_338:str)
    date_08 := mtime.date("2000-jul-14");	# 477 MTIMEdate_fromstr (date_08:date)<-(_340:str)
#var date_08 := date("2000-jul-14"); 	# 478  (_341:str)
    date_09 := mtime.date("1999-sept-01");	# 479 MTIMEdate_fromstr (date_09:date)<-(_343:str)
#var date_09 := date("1999-sept-01"); 	# 480  (_344:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 481 MTIMEdate_fromstr (date_10:date)<-(_346:str)
#var date_10 := date("1998-decemBeR-01"); 	# 482  (_347:str)
    date_11 := mtime.date("1953 may                01");	# 483 MTIMEdate_fromstr (date_11:date)<-(_349:str)
#var date_11 := date("1953 may                01"); 	# 484  (_350:str)
    date_12 := mtime.date("5867411-DEC-31");	# 485 MTIMEdate_fromstr (date_12:date)<-(_352:str)
#var date_12 := date("5867411-DEC-31"); 	# 486  (_353:str)
## nil dates 	# 487  (_354:str)
    date_13 := mtime.date(1996,13,1);	# 488 MTIMEdate_create (date_13:date)<-(_356:int)(_357:int)(_358:int)
#var date_13 := date(1996,13,1); 	# 489  (_359:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 490 MTIMEdate_fromstr (date_14:date)<-(_361:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 491  (_362:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 492 MTIMEdate_fromstr (date_15:date)<-(_364:str)
#var date_15 := date("1999-JANUARI-01"); 	# 493  (_365:str)
    date_16 := mtime.date("1999-FEBR-29");	# 494 MTIMEdate_fromstr (date_16:date)<-(_367:str)
#var date_16 := date("1999-FEBR-29"); 	# 495  (_368:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 496 MTIMEdate_fromstr (date_17:date)<-(_370:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 497  (_371:str)
    date_18 := mtime.date("5000\novembe31");	# 498 MTIMEdate_fromstr (date_18:date)<-(_373:str)
#var date_18 := date("5000\novembe\31"); 	# 499  (_374:str)
    date_19 := mtime.date("nil");	# 500 MTIMEdate_fromstr (date_19:date)<-(_376:str)
#var date_19 := date("nil"); 	# 501  (_377:str)
    date_20 := mtime.date("1999-sept-31");	# 502 MTIMEdate_fromstr (date_20:date)<-(_379:str)
#var date_20 := date("1999-sept-31"); 	# 503  (_380:str)
    date_bat := bat.new(:oid,:date);	# 504 CMDBATnew (date_bat:bat[:oid,:date])<-(_243:oid)(_382:date)
#var date_bat := bat.new(oid,date); 	# 505  (_383:str)
    bat.insert(date_bat,0@0,date_00);	# 506 BKCinsert_bun (_384:void)<-(date_bat:bat[:oid,:date])(_385:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 507 BKCinsert_bun (_386:void)<-(date_bat:bat[:oid,:date])(_387:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 508 BKCinsert_bun (_388:void)<-(date_bat:bat[:oid,:date])(_389:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 509  (_390:str)
    bat.insert(date_bat,3@0,date_03);	# 510 BKCinsert_bun (_391:void)<-(date_bat:bat[:oid,:date])(_392:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 511 BKCinsert_bun (_393:void)<-(date_bat:bat[:oid,:date])(_394:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 512 BKCinsert_bun (_395:void)<-(date_bat:bat[:oid,:date])(_396:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 513  (_397:str)
    bat.insert(date_bat,6@0,date_06);	# 514 BKCinsert_bun (_398:void)<-(date_bat:bat[:oid,:date])(_399:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 515 BKCinsert_bun (_400:void)<-(date_bat:bat[:oid,:date])(_401:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 516 BKCinsert_bun (_402:void)<-(date_bat:bat[:oid,:date])(_403:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 517  (_404:str)
    bat.insert(date_bat,9@0,date_09);	# 518 BKCinsert_bun (_405:void)<-(date_bat:bat[:oid,:date])(_406:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 519 BKCinsert_bun (_407:void)<-(date_bat:bat[:oid,:date])(_408:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 520 BKCinsert_bun (_409:void)<-(date_bat:bat[:oid,:date])(_410:oid)(date_11:date)
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 521  (_411:str)
    bat.insert(date_bat,12@0,date_12);	# 522 BKCinsert_bun (_412:void)<-(date_bat:bat[:oid,:date])(_413:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 523 BKCinsert_bun (_414:void)<-(date_bat:bat[:oid,:date])(_415:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 524 BKCinsert_bun (_416:void)<-(date_bat:bat[:oid,:date])(_417:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 525  (_418:str)
    bat.insert(date_bat,15@0,date_15);	# 526 BKCinsert_bun (_419:void)<-(date_bat:bat[:oid,:date])(_420:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 527 BKCinsert_bun (_421:void)<-(date_bat:bat[:oid,:date])(_422:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 528 BKCinsert_bun (_423:void)<-(date_bat:bat[:oid,:date])(_424:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 529  (_425:str)
    bat.insert(date_bat,18@0,date_18);	# 530 BKCinsert_bun (_426:void)<-(date_bat:bat[:oid,:date])(_427:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 531 BKCinsert_bun (_428:void)<-(date_bat:bat[:oid,:date])(_429:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 532 BKCinsert_bun (_430:void)<-(date_bat:bat[:oid,:date])(_431:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 533  (_432:str)
## test the operations on dates 	# 534  (_433:str)
    ne_a := bat.setColumn(date_bat,"date");	# 535 BKCsetColumn (ne_a:void)<-(date_bat:bat[:oid,:date])(_435:str)
#io.print(date_bat.bat.setColumn("date"), 	# 536  (_436:str)
    _1211 := bat.new(nil:oid,nil:int);	# 537 CMDBATnew (_1211:bat[:oid,:int])<-(_1212:oid)(_1213:int)
barrier (_1215,_1216,_1217):= bat.newIterator(date_bat);	# 538 CHPbunIterator (_1215:lng)(_1216:oid)(_1217:date)<-(date_bat:bat[:oid,:date]) jump 544
    _1219 := mtime.year(_1217);	# 539 MTIMEdate_extract_year (_1219:int)<-(_1217:date)
    bat.insert(_1211,_1216,_1219);	# 540 BKCinsert_bun (_1220:void)<-(_1211:bat[:oid,:int])(_1216:oid)(_1219:int)
catch MALexception:str ;	# 541  (MALexception:str) jump 542
exit MALexception:str ;	# 542  (MALexception:str)
    redo (_1215,_1216,_1217):= bat.hasMoreElements(date_bat);	# 543 CHPbunHasMoreElements (_1215:lng)(_1216:oid)(_1217:date)<-(date_bat:bat[:oid,:date]) jump 539
exit (_1215,_1216,_1217);	# 544  (_1215:lng)(_1216:oid)(_1217:date)
    oe_a:bat[:oid,:int]  := _1211;	# 545  (oe_a:bat[:oid,:int])<-(_1211:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 546 BKCsetColumn (pe_a:void)<-(oe_a:bat[:oid,:int])(_440:str)
#      [year](date_bat).bat.setColumn("year"), 	# 547  (_441:str)
    _1225 := bat.new(nil:oid,nil:int);	# 548 CMDBATnew (_1225:bat[:oid,:int])<-(_1212:oid)(_1213:int)
barrier (_1227,_1228,_1229):= bat.newIterator(date_bat);	# 549 CHPbunIterator (_1227:lng)(_1228:oid)(_1229:date)<-(date_bat:bat[:oid,:date]) jump 555
    _1231 := mtime.day(_1229);	# 550 MTIMEdate_extract_day (_1231:int)<-(_1229:date)
    bat.insert(_1225,_1228,_1231);	# 551 BKCinsert_bun (_1232:void)<-(_1225:bat[:oid,:int])(_1228:oid)(_1231:int)
catch MALexception:str ;	# 552  (MALexception:str) jump 553
exit MALexception:str ;	# 553  (MALexception:str)
    redo (_1227,_1228,_1229):= bat.hasMoreElements(date_bat);	# 554 CHPbunHasMoreElements (_1227:lng)(_1228:oid)(_1229:date)<-(date_bat:bat[:oid,:date]) jump 550
exit (_1227,_1228,_1229);	# 555  (_1227:lng)(_1228:oid)(_1229:date)
    qe_a:bat[:oid,:int]  := _1225;	# 556  (qe_a:bat[:oid,:int])<-(_1225:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 557 BKCsetColumn (re_a:void)<-(qe_a:bat[:oid,:int])(_445:str)
#      [day](date_bat).bat.setColumn("day"), 	# 558  (_446:str)
    _1237 := bat.new(nil:oid,nil:int);	# 559 CMDBATnew (_1237:bat[:oid,:int])<-(_1212:oid)(_1213:int)
barrier (_1239,_1240,_1241):= bat.newIterator(date_bat);	# 560 CHPbunIterator (_1239:lng)(_1240:oid)(_1241:date)<-(date_bat:bat[:oid,:date]) jump 566
    _1243 := mtime.month(_1241);	# 561 MTIMEdate_extract_month (_1243:int)<-(_1241:date)
    bat.insert(_1237,_1240,_1243);	# 562 BKCinsert_bun (_1244:void)<-(_1237:bat[:oid,:int])(_1240:oid)(_1243:int)
catch MALexception:str ;	# 563  (MALexception:str) jump 564
exit MALexception:str ;	# 564  (MALexception:str)
    redo (_1239,_1240,_1241):= bat.hasMoreElements(date_bat);	# 565 CHPbunHasMoreElements (_1239:lng)(_1240:oid)(_1241:date)<-(date_bat:bat[:oid,:date]) jump 561
exit (_1239,_1240,_1241);	# 566  (_1239:lng)(_1240:oid)(_1241:date)
    se_a:bat[:oid,:int]  := _1237;	# 567  (se_a:bat[:oid,:int])<-(_1237:bat[:oid,:int])
    _1249 := bat.new(nil:oid,nil:str);	# 568 CMDBATnew (_1249:bat[:oid,:str])<-(_1250:oid)(_1251:str)
barrier (_1253,_1254,_1255):= bat.newIterator(se_a);	# 569 CHPbunIterator (_1253:lng)(_1254:oid)(_1255:int)<-(se_a:bat[:oid,:int]) jump 575
    _1257 := mtime.monthname(_1255);	# 570 MTIMEmonth_to_str (_1257:str)<-(_1255:int)
    bat.insert(_1249,_1254,_1257);	# 571 BKCinsert_bun (_1258:void)<-(_1249:bat[:oid,:str])(_1254:oid)(_1257:str)
catch MALexception:str ;	# 572  (MALexception:str) jump 573
exit MALexception:str ;	# 573  (MALexception:str)
    redo (_1253,_1254,_1255):= bat.hasMoreElements(se_a);	# 574 CHPbunHasMoreElements (_1253:lng)(_1254:oid)(_1255:int)<-(se_a:bat[:oid,:int]) jump 570
exit (_1253,_1254,_1255);	# 575  (_1253:lng)(_1254:oid)(_1255:int)
    te_a:bat[:oid,:str]  := _1249;	# 576  (te_a:bat[:oid,:str])<-(_1249:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 577 BKCsetColumn (ue_a:void)<-(te_a:bat[:oid,:str])(_452:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 578  (_453:str)
    _1263 := bat.new(nil:oid,nil:int);	# 579 CMDBATnew (_1263:bat[:oid,:int])<-(_1250:oid)(_1264:int)
barrier (_1266,_1267,_1268):= bat.newIterator(date_bat);	# 580 CHPbunIterator (_1266:lng)(_1267:oid)(_1268:date)<-(date_bat:bat[:oid,:date]) jump 586
    _1270 := mtime.month(_1268);	# 581 MTIMEdate_extract_month (_1270:int)<-(_1268:date)
    bat.insert(_1263,_1267,_1270);	# 582 BKCinsert_bun (_1271:void)<-(_1263:bat[:oid,:int])(_1267:oid)(_1270:int)
catch MALexception:str ;	# 583  (MALexception:str) jump 584
exit MALexception:str ;	# 584  (MALexception:str)
    redo (_1266,_1267,_1268):= bat.hasMoreElements(date_bat);	# 585 CHPbunHasMoreElements (_1266:lng)(_1267:oid)(_1268:date)<-(date_bat:bat[:oid,:date]) jump 581
exit (_1266,_1267,_1268);	# 586  (_1266:lng)(_1267:oid)(_1268:date)
    ve_a:bat[:oid,:int]  := _1263;	# 587  (ve_a:bat[:oid,:int])<-(_1263:bat[:oid,:int])
    _1276 := bat.new(nil:oid,nil:str);	# 588 CMDBATnew (_1276:bat[:oid,:str])<-(_1250:oid)(_1251:str)
barrier (_1278,_1279,_1280):= bat.newIterator(ve_a);	# 589 CHPbunIterator (_1278:lng)(_1279:oid)(_1280:int)<-(ve_a:bat[:oid,:int]) jump 595
    _1282 := mtime.monthname(_1280);	# 590 MTIMEmonth_to_str (_1282:str)<-(_1280:int)
    bat.insert(_1276,_1279,_1282);	# 591 BKCinsert_bun (_1283:void)<-(_1276:bat[:oid,:str])(_1279:oid)(_1282:str)
catch MALexception:str ;	# 592  (MALexception:str) jump 593
exit MALexception:str ;	# 593  (MALexception:str)
    redo (_1278,_1279,_1280):= bat.hasMoreElements(ve_a);	# 594 CHPbunHasMoreElements (_1278:lng)(_1279:oid)(_1280:int)<-(ve_a:bat[:oid,:int]) jump 590
exit (_1278,_1279,_1280);	# 595  (_1278:lng)(_1279:oid)(_1280:int)
    we_a:bat[:oid,:str]  := _1276;	# 596  (we_a:bat[:oid,:str])<-(_1276:bat[:oid,:str])
    _1288 := bat.new(nil:oid,nil:int);	# 597 CMDBATnew (_1288:bat[:oid,:int])<-(_1289:oid)(_1264:int)
barrier (_1291,_1292,_1293):= bat.newIterator(we_a);	# 598 CHPbunIterator (_1291:lng)(_1292:oid)(_1293:str)<-(we_a:bat[:oid,:str]) jump 604
    _1295 := mtime.monthnum(_1293);	# 599 MTIMEmonth_from_str (_1295:int)<-(_1293:str)
    bat.insert(_1288,_1292,_1295);	# 600 BKCinsert_bun (_1296:void)<-(_1288:bat[:oid,:int])(_1292:oid)(_1295:int)
catch MALexception:str ;	# 601  (MALexception:str) jump 602
exit MALexception:str ;	# 602  (MALexception:str)
    redo (_1291,_1292,_1293):= bat.hasMoreElements(we_a);	# 603 CHPbunHasMoreElements (_1291:lng)(_1292:oid)(_1293:str)<-(we_a:bat[:oid,:str]) jump 599
exit (_1291,_1292,_1293);	# 604  (_1291:lng)(_1292:oid)(_1293:str)
    xe_a:bat[:oid,:int]  := _1288;	# 605  (xe_a:bat[:oid,:int])<-(_1288:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 606 BKCsetColumn (ye_a:void)<-(xe_a:bat[:oid,:int])(_459:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 607 IOprint_val (_460:int)<-(_461:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 608 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 609  (_463:str)
    _1301 := bat.new(nil:oid,nil:date);	# 610 CMDBATnew (_1301:bat[:oid,:date])<-(_1289:oid)(_1302:date)
barrier (_1304,_1305,_1306):= bat.newIterator(date_bat);	# 611 CHPbunIterator (_1304:lng)(_1305:oid)(_1306:date)<-(date_bat:bat[:oid,:date]) jump 617
    _1308 := mtime.addyears(_1306,-100);	# 612 MTIMEdate_addyears (_1308:date)<-(_1306:date)(_466:int)
    bat.insert(_1301,_1305,_1308);	# 613 BKCinsert_bun (_1309:void)<-(_1301:bat[:oid,:date])(_1305:oid)(_1308:date)
catch MALexception:str ;	# 614  (MALexception:str) jump 615
exit MALexception:str ;	# 615  (MALexception:str)
    redo (_1304,_1305,_1306):= bat.hasMoreElements(date_bat);	# 616 CHPbunHasMoreElements (_1304:lng)(_1305:oid)(_1306:date)<-(date_bat:bat[:oid,:date]) jump 612
exit (_1304,_1305,_1306);	# 617  (_1304:lng)(_1305:oid)(_1306:date)
    date_addyears:bat[:oid,:date]  := _1301;	# 618  (date_addyears:bat[:oid,:date])<-(_1301:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 619  (_467:str)
    _1314 := bat.new(nil:oid,nil:date);	# 620 CMDBATnew (_1314:bat[:oid,:date])<-(_1289:oid)(_1302:date)
barrier (_1316,_1317,_1318):= bat.newIterator(date_bat);	# 621 CHPbunIterator (_1316:lng)(_1317:oid)(_1318:date)<-(date_bat:bat[:oid,:date]) jump 627
    _1320 := mtime.addmonths(_1318,1);	# 622 MTIMEdate_addmonths (_1320:date)<-(_1318:date)(_470:int)
    bat.insert(_1314,_1317,_1320);	# 623 BKCinsert_bun (_1321:void)<-(_1314:bat[:oid,:date])(_1317:oid)(_1320:date)
catch MALexception:str ;	# 624  (MALexception:str) jump 625
exit MALexception:str ;	# 625  (MALexception:str)
    redo (_1316,_1317,_1318):= bat.hasMoreElements(date_bat);	# 626 CHPbunHasMoreElements (_1316:lng)(_1317:oid)(_1318:date)<-(date_bat:bat[:oid,:date]) jump 622
exit (_1316,_1317,_1318);	# 627  (_1316:lng)(_1317:oid)(_1318:date)
    date_addmonths:bat[:oid,:date]  := _1314;	# 628  (date_addmonths:bat[:oid,:date])<-(_1314:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 629  (_471:str)
    bat.setColumn(date_bat,"date");	# 630 BKCsetColumn (_472:void)<-(date_bat:bat[:oid,:date])(_473:str)
#io.print(date_bat.bat.setColumn("date"), 	# 631  (_474:str)
    bat.setColumn(date_addyears,"min100y");	# 632 BKCsetColumn (_475:void)<-(date_addyears:bat[:oid,:date])(_476:str)
#      date_addyears.bat.setColumn("min100y"), 	# 633  (_477:str)
    _1326 := bat.new(nil:oid,nil:int);	# 634 CMDBATnew (_1326:bat[:oid,:int])<-(_1327:oid)(_1328:int)
barrier (_1330,_1331,_1332):= bat.newIterator(date_addyears);	# 635 CHPbunIterator (_1330:lng)(_1331:oid)(_1332:date)<-(date_addyears:bat[:oid,:date]) jump 642
    _1334 := algebra.find(date_bat,_1331);	# 636 ALGfind (_1334:date)<-(date_bat:bat[:oid,:date])(_1331:oid)
    _1336 := mtime.diff(_1332,_1334);	# 637 MTIMEdate_diff (_1336:int)<-(_1332:date)(_1334:date)
    bat.insert(_1326,_1331,_1336);	# 638 BKCinsert_bun (_1337:void)<-(_1326:bat[:oid,:int])(_1331:oid)(_1336:int)
catch MALexception:str ;	# 639  (MALexception:str) jump 640
exit MALexception:str ;	# 640  (MALexception:str)
    redo (_1330,_1331,_1332):= bat.hasMoreElements(date_addyears);	# 641 CHPbunHasMoreElements (_1330:lng)(_1331:oid)(_1332:date)<-(date_addyears:bat[:oid,:date]) jump 636
exit (_1330,_1331,_1332);	# 642  (_1330:lng)(_1331:oid)(_1332:date)
    df_a:bat[:oid,:int]  := _1326;	# 643  (df_a:bat[:oid,:int])<-(_1326:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 644 BKCsetColumn (_480:void)<-(df_a:bat[:oid,:int])(_481:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 645 IOprint_val (_482:int)<-(_483:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 646 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 647  (_485:str)
    bat.setColumn(date_bat,"date");	# 648 BKCsetColumn (_486:void)<-(date_bat:bat[:oid,:date])(_473:str)
#io.print(date_bat.bat.setColumn("date"), 	# 649  (_474:str)
    bat.setColumn(date_addmonths,"plus1m");	# 650 BKCsetColumn (_487:void)<-(date_addmonths:bat[:oid,:date])(_488:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 651  (_489:str)
    _1342 := bat.new(nil:oid,nil:int);	# 652 CMDBATnew (_1342:bat[:oid,:int])<-(_1327:oid)(_1328:int)
barrier (_1344,_1345,_1346):= bat.newIterator(date_addmonths);	# 653 CHPbunIterator (_1344:lng)(_1345:oid)(_1346:date)<-(date_addmonths:bat[:oid,:date]) jump 660
    _1348 := algebra.find(date_bat,_1345);	# 654 ALGfind (_1348:date)<-(date_bat:bat[:oid,:date])(_1345:oid)
    _1350 := mtime.diff(_1346,_1348);	# 655 MTIMEdate_diff (_1350:int)<-(_1346:date)(_1348:date)
    bat.insert(_1342,_1345,_1350);	# 656 BKCinsert_bun (_1351:void)<-(_1342:bat[:oid,:int])(_1345:oid)(_1350:int)
catch MALexception:str ;	# 657  (MALexception:str) jump 658
exit MALexception:str ;	# 658  (MALexception:str)
    redo (_1344,_1345,_1346):= bat.hasMoreElements(date_addmonths);	# 659 CHPbunHasMoreElements (_1344:lng)(_1345:oid)(_1346:date)<-(date_addmonths:bat[:oid,:date]) jump 654
exit (_1344,_1345,_1346);	# 660  (_1344:lng)(_1345:oid)(_1346:date)
    if_a:bat[:oid,:int]  := _1342;	# 661  (if_a:bat[:oid,:int])<-(_1342:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 662 BKCsetColumn (_491:void)<-(if_a:bat[:oid,:int])(_481:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 663 IOprint_val (_492:int)<-(_493:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 664 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 665  (_495:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 666  (_496:str)
    date_seq := bat.new(:int,:date);	# 667 CMDBATnew (date_seq:bat[:int,:date])<-(_498:int)(_382:date)
#var date_seq := bat.new(int, date); 	# 668  (_499:str)
    i := -375;	# 669  (i:int)<-(_501:int)
#var i := -375; 	# 670  (_502:str)
barrier lf_a := true;	# 671  (lf_a:bit)<-(_504:bit) jump 681
    i := calc.+(i,1);	# 672 CALCbinaryADDintint (i:int)<-(i:int)(_470:int)
    of_a := calc.<(i,375);	# 673 CALCcompLTintint (of_a:bit)<-(i:int)(_506:int)
barrier mf_a := of_a;	# 674  (mf_a:bit)<-(of_a:bit) jump 680
#while ((i :+= 1) < 375) { 	# 675  (_508:str)
    pf_a := mtime.adddays(date_00,i);	# 676 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 677 BKCinsert_bun (_510:void)<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 678  (_511:str)
    redo lf_a;	# 679  (lf_a:bit) jump 672
exit mf_a;	# 680  (mf_a:bit)
exit lf_a;	# 681  (lf_a:bit)
#} 	# 682  (_512:str)
    rf_a := bat.setColumn(date_seq,"date");	# 683 BKCsetColumn (rf_a:void)<-(date_seq:bat[:int,:date])(_514:str)
#io.print(date_seq.bat.setColumn("date"), 	# 684  (_515:str)
    _1356 := bat.new(nil:int,nil:int);	# 685 CMDBATnew (_1356:bat[:int,:int])<-(_1328:int)(_1328:int)
barrier (_1358,_1359,_1360):= bat.newIterator(date_seq);	# 686 CHPbunIterator (_1358:lng)(_1359:int)(_1360:date)<-(date_seq:bat[:int,:date]) jump 692
    _1362 := mtime.weekofyear(_1360);	# 687 MTIMEdate_extract_weekofyear (_1362:int)<-(_1360:date)
    bat.insert(_1356,_1359,_1362);	# 688 BKCinsert_bun (_1363:void)<-(_1356:bat[:int,:int])(_1359:int)(_1362:int)
catch MALexception:str ;	# 689  (MALexception:str) jump 690
exit MALexception:str ;	# 690  (MALexception:str)
    redo (_1358,_1359,_1360):= bat.hasMoreElements(date_seq);	# 691 CHPbunHasMoreElements (_1358:lng)(_1359:int)(_1360:date)<-(date_seq:bat[:int,:date]) jump 687
exit (_1358,_1359,_1360);	# 692  (_1358:lng)(_1359:int)(_1360:date)
    sf_a:bat[:int,:int]  := _1356;	# 693  (sf_a:bat[:int,:int])<-(_1356:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 694 BKCsetColumn (tf_a:void)<-(sf_a:bat[:int,:int])(_519:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 695  (_520:str)
    _1368 := bat.new(nil:int,nil:int);	# 696 CMDBATnew (_1368:bat[:int,:int])<-(_1369:int)(_1369:int)
barrier (_1371,_1372,_1373):= bat.newIterator(date_seq);	# 697 CHPbunIterator (_1371:lng)(_1372:int)(_1373:date)<-(date_seq:bat[:int,:date]) jump 703
    _1375 := mtime.dayofweek(_1373);	# 698 MTIMEdate_extract_dayofweek (_1375:int)<-(_1373:date)
    bat.insert(_1368,_1372,_1375);	# 699 BKCinsert_bun (_1376:void)<-(_1368:bat[:int,:int])(_1372:int)(_1375:int)
catch MALexception:str ;	# 700  (MALexception:str) jump 701
exit MALexception:str ;	# 701  (MALexception:str)
    redo (_1371,_1372,_1373):= bat.hasMoreElements(date_seq);	# 702 CHPbunHasMoreElements (_1371:lng)(_1372:int)(_1373:date)<-(date_seq:bat[:int,:date]) jump 698
exit (_1371,_1372,_1373);	# 703  (_1371:lng)(_1372:int)(_1373:date)
    uf_a:bat[:int,:int]  := _1368;	# 704  (uf_a:bat[:int,:int])<-(_1368:bat[:int,:int])
    _1381 := bat.new(nil:int,nil:str);	# 705 CMDBATnew (_1381:bat[:int,:str])<-(_1369:int)(_1382:str)
barrier (_1384,_1385,_1386):= bat.newIterator(uf_a);	# 706 CHPbunIterator (_1384:lng)(_1385:int)(_1386:int)<-(uf_a:bat[:int,:int]) jump 712
    _1388 := mtime.dayname(_1386);	# 707 MTIMEday_to_str (_1388:str)<-(_1386:int)
    bat.insert(_1381,_1385,_1388);	# 708 BKCinsert_bun (_1389:void)<-(_1381:bat[:int,:str])(_1385:int)(_1388:str)
catch MALexception:str ;	# 709  (MALexception:str) jump 710
exit MALexception:str ;	# 710  (MALexception:str)
    redo (_1384,_1385,_1386):= bat.hasMoreElements(uf_a);	# 711 CHPbunHasMoreElements (_1384:lng)(_1385:int)(_1386:int)<-(uf_a:bat[:int,:int]) jump 707
exit (_1384,_1385,_1386);	# 712  (_1384:lng)(_1385:int)(_1386:int)
    vf_a:bat[:int,:str]  := _1381;	# 713  (vf_a:bat[:int,:str])<-(_1381:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 714 BKCsetColumn (wf_a:void)<-(vf_a:bat[:int,:str])(_526:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 715  (_527:str)
    _1394 := bat.new(nil:int,nil:int);	# 716 CMDBATnew (_1394:bat[:int,:int])<-(_1369:int)(_1369:int)
barrier (_1396,_1397,_1398):= bat.newIterator(date_seq);	# 717 CHPbunIterator (_1396:lng)(_1397:int)(_1398:date)<-(date_seq:bat[:int,:date]) jump 723
    _1400 := mtime.dayofweek(_1398);	# 718 MTIMEdate_extract_dayofweek (_1400:int)<-(_1398:date)
    bat.insert(_1394,_1397,_1400);	# 719 BKCinsert_bun (_1401:void)<-(_1394:bat[:int,:int])(_1397:int)(_1400:int)
catch MALexception:str ;	# 720  (MALexception:str) jump 721
exit MALexception:str ;	# 721  (MALexception:str)
    redo (_1396,_1397,_1398):= bat.hasMoreElements(date_seq);	# 722 CHPbunHasMoreElements (_1396:lng)(_1397:int)(_1398:date)<-(date_seq:bat[:int,:date]) jump 718
exit (_1396,_1397,_1398);	# 723  (_1396:lng)(_1397:int)(_1398:date)
    xf_a:bat[:int,:int]  := _1394;	# 724  (xf_a:bat[:int,:int])<-(_1394:bat[:int,:int])
    _1406 := bat.new(nil:int,nil:str);	# 725 CMDBATnew (_1406:bat[:int,:str])<-(_1407:int)(_1382:str)
barrier (_1409,_1410,_1411):= bat.newIterator(xf_a);	# 726 CHPbunIterator (_1409:lng)(_1410:int)(_1411:int)<-(xf_a:bat[:int,:int]) jump 732
    _1413 := mtime.dayname(_1411);	# 727 MTIMEday_to_str (_1413:str)<-(_1411:int)
    bat.insert(_1406,_1410,_1413);	# 728 BKCinsert_bun (_1414:void)<-(_1406:bat[:int,:str])(_1410:int)(_1413:str)
catch MALexception:str ;	# 729  (MALexception:str) jump 730
exit MALexception:str ;	# 730  (MALexception:str)
    redo (_1409,_1410,_1411):= bat.hasMoreElements(xf_a);	# 731 CHPbunHasMoreElements (_1409:lng)(_1410:int)(_1411:int)<-(xf_a:bat[:int,:int]) jump 727
exit (_1409,_1410,_1411);	# 732  (_1409:lng)(_1410:int)(_1411:int)
    yf_a:bat[:int,:str]  := _1406;	# 733  (yf_a:bat[:int,:str])<-(_1406:bat[:int,:str])
    _1419 := bat.new(nil:int,nil:int);	# 734 CMDBATnew (_1419:bat[:int,:int])<-(_1407:int)(_1407:int)
barrier (_1421,_1422,_1423):= bat.newIterator(yf_a);	# 735 CHPbunIterator (_1421:lng)(_1422:int)(_1423:str)<-(yf_a:bat[:int,:str]) jump 741
    _1425 := mtime.daynum(_1423);	# 736 MTIMEday_from_str (_1425:int)<-(_1423:str)
    bat.insert(_1419,_1422,_1425);	# 737 BKCinsert_bun (_1426:void)<-(_1419:bat[:int,:int])(_1422:int)(_1425:int)
catch MALexception:str ;	# 738  (MALexception:str) jump 739
exit MALexception:str ;	# 739  (MALexception:str)
    redo (_1421,_1422,_1423):= bat.hasMoreElements(yf_a);	# 740 CHPbunHasMoreElements (_1421:lng)(_1422:int)(_1423:str)<-(yf_a:bat[:int,:str]) jump 736
exit (_1421,_1422,_1423);	# 741  (_1421:lng)(_1422:int)(_1423:str)
    ag_a:bat[:int,:int]  := _1419;	# 742  (ag_a:bat[:int,:int])<-(_1419:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 743 BKCsetColumn (bg_a:void)<-(ag_a:bat[:int,:int])(_533:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 744  (_534:str)
    _1431 := bat.new(nil:int,nil:int);	# 745 CMDBATnew (_1431:bat[:int,:int])<-(_1407:int)(_1407:int)
barrier (_1433,_1434,_1435):= bat.newIterator(date_seq);	# 746 CHPbunIterator (_1433:lng)(_1434:int)(_1435:date)<-(date_seq:bat[:int,:date]) jump 752
    _1437 := mtime.dayofyear(_1435);	# 747 MTIMEdate_extract_dayofyear (_1437:int)<-(_1435:date)
    bat.insert(_1431,_1434,_1437);	# 748 BKCinsert_bun (_1438:void)<-(_1431:bat[:int,:int])(_1434:int)(_1437:int)
catch MALexception:str ;	# 749  (MALexception:str) jump 750
exit MALexception:str ;	# 750  (MALexception:str)
    redo (_1433,_1434,_1435):= bat.hasMoreElements(date_seq);	# 751 CHPbunHasMoreElements (_1433:lng)(_1434:int)(_1435:date)<-(date_seq:bat[:int,:date]) jump 747
exit (_1433,_1434,_1435);	# 752  (_1433:lng)(_1434:int)(_1435:date)
    cg_a:bat[:int,:int]  := _1431;	# 753  (cg_a:bat[:int,:int])<-(_1431:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 754 BKCsetColumn (dg_a:void)<-(cg_a:bat[:int,:int])(_538:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 755 IOprint_val (_539:int)<-(_540:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 756 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 757  (_542:str)
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 758  (_543:str)
## test the various ways top create daytimes 	# 759  (_544:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 760 MTIMEdaytime_create (daytime_00:daytime)<-(_546:int)(_547:int)(_547:int)(_548:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 761  (_549:str)
    daytime_01 := mtime.daytime("23:59");	# 762 MTIMEdaytime_fromstr (daytime_01:daytime)<-(_551:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 763  (_552:str)
    daytime_02 := mtime.daytime("00:00");	# 764 MTIMEdaytime_fromstr (daytime_02:daytime)<-(_554:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 765  (_555:str)
    daytime_03 := mtime.daytime("23:59:59");	# 766 MTIMEdaytime_fromstr (daytime_03:daytime)<-(_557:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 767  (_558:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 768 MTIMEdaytime_fromstr (daytime_04:daytime)<-(_560:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 769  (_561:str)
    daytime_05 := mtime.daytime("00:00:00");	# 770 MTIMEdaytime_fromstr (daytime_05:daytime)<-(_563:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 771  (_564:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 772 MTIMEdaytime_fromstr (daytime_06:daytime)<-(_566:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 773  (_567:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 774 MTIMEdaytime_fromstr (daytime_07:daytime)<-(_569:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 775  (_570:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 776 MTIMEdaytime_fromstr (daytime_08:daytime)<-(_572:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 777  (_573:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 778 MTIMEdaytime_fromstr (daytime_09:daytime)<-(_575:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 779  (_576:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 780 MTIMEdaytime_fromstr (daytime_10:daytime)<-(_578:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 781  (_579:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 782 MTIMEdaytime_fromstr (daytime_11:daytime)<-(_581:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 783  (_582:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 784 MTIMEdaytime_fromstr (daytime_12:daytime)<-(_584:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 785  (_585:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 786 MTIMEdaytime_fromstr (daytime_13:daytime)<-(_587:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 787  (_588:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 788 MTIMEdaytime_fromstr (daytime_14:daytime)<-(_590:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 789  (_591:str)
## nil daytimes 	# 790  (_592:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 791 MTIMEdaytime_create (daytime_15:daytime)<-(_594:int)(_595:int)(_595:int)(_596:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 792  (_597:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 793 MTIMEdaytime_create (daytime_16:daytime)<-(_599:int)(_600:int)(_595:int)(_596:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 794  (_601:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 795 MTIMEdaytime_create (daytime_17:daytime)<-(_599:int)(_595:int)(_600:int)(_596:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 796  (_603:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 797 MTIMEdaytime_create (daytime_18:daytime)<-(_599:int)(_595:int)(_600:int)(_605:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 798  (_606:str)
    daytime_19 := mtime.daytime("nil");	# 799 MTIMEdaytime_fromstr (daytime_19:daytime)<-(_608:str)
#var daytime_19 := mtime.daytime("nil"); 	# 800  (_609:str)
    daytime_bat := bat.new(:oid,:daytime);	# 801 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-(_243:oid)(_611:daytime)
#var daytime_bat := bat.new(oid,daytime); 	# 802  (_612:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 803 BKCinsert_bun (_613:void)<-(daytime_bat:bat[:oid,:daytime])(_614:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 804 BKCinsert_bun (_615:void)<-(daytime_bat:bat[:oid,:daytime])(_616:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 805 BKCinsert_bun (_617:void)<-(daytime_bat:bat[:oid,:daytime])(_618:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 806  (_619:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 807 BKCinsert_bun (_620:void)<-(daytime_bat:bat[:oid,:daytime])(_621:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 808 BKCinsert_bun (_622:void)<-(daytime_bat:bat[:oid,:daytime])(_623:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 809 BKCinsert_bun (_624:void)<-(daytime_bat:bat[:oid,:daytime])(_625:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 810  (_626:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 811 BKCinsert_bun (_627:void)<-(daytime_bat:bat[:oid,:daytime])(_628:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 812 BKCinsert_bun (_629:void)<-(daytime_bat:bat[:oid,:daytime])(_630:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 813 BKCinsert_bun (_631:void)<-(daytime_bat:bat[:oid,:daytime])(_632:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 814  (_633:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 815 BKCinsert_bun (_634:void)<-(daytime_bat:bat[:oid,:daytime])(_635:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 816 BKCinsert_bun (_636:void)<-(daytime_bat:bat[:oid,:daytime])(_637:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 817 BKCinsert_bun (_638:void)<-(daytime_bat:bat[:oid,:daytime])(_639:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 818  (_640:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 819 BKCinsert_bun (_641:void)<-(daytime_bat:bat[:oid,:daytime])(_642:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 820 BKCinsert_bun (_643:void)<-(daytime_bat:bat[:oid,:daytime])(_644:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 821 BKCinsert_bun (_645:void)<-(daytime_bat:bat[:oid,:daytime])(_646:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 822  (_647:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 823 BKCinsert_bun (_648:void)<-(daytime_bat:bat[:oid,:daytime])(_649:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 824 BKCinsert_bun (_650:void)<-(daytime_bat:bat[:oid,:daytime])(_651:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 825 BKCinsert_bun (_652:void)<-(daytime_bat:bat[:oid,:daytime])(_653:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 826  (_654:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 827 BKCinsert_bun (_655:void)<-(daytime_bat:bat[:oid,:daytime])(_656:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 828 BKCinsert_bun (_657:void)<-(daytime_bat:bat[:oid,:daytime])(_658:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 829  (_659:str)
    bat.setColumn(daytime_bat,"daytime");	# 830 BKCsetColumn (_660:void)<-(daytime_bat:bat[:oid,:daytime])(_661:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 831  (_662:str)
    _1443 := bat.new(nil:oid,nil:int);	# 832 CMDBATnew (_1443:bat[:oid,:int])<-(_1444:oid)(_1445:int)
barrier (_1447,_1448,_1449):= bat.newIterator(daytime_bat);	# 833 CHPbunIterator (_1447:lng)(_1448:oid)(_1449:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 839
    _1451 := mtime.hours(_1449);	# 834 MTIMEdaytime_extract_hours (_1451:int)<-(_1449:daytime)
    bat.insert(_1443,_1448,_1451);	# 835 BKCinsert_bun (_1452:void)<-(_1443:bat[:oid,:int])(_1448:oid)(_1451:int)
catch MALexception:str ;	# 836  (MALexception:str) jump 837
exit MALexception:str ;	# 837  (MALexception:str)
    redo (_1447,_1448,_1449):= bat.hasMoreElements(daytime_bat);	# 838 CHPbunHasMoreElements (_1447:lng)(_1448:oid)(_1449:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 834
exit (_1447,_1448,_1449);	# 839  (_1447:lng)(_1448:oid)(_1449:daytime)
    bh_a:bat[:oid,:int]  := _1443;	# 840  (bh_a:bat[:oid,:int])<-(_1443:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 841 BKCsetColumn (_665:void)<-(bh_a:bat[:oid,:int])(_666:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 842  (_667:str)
    _1457 := bat.new(nil:oid,nil:int);	# 843 CMDBATnew (_1457:bat[:oid,:int])<-(_1444:oid)(_1445:int)
barrier (_1459,_1460,_1461):= bat.newIterator(daytime_bat);	# 844 CHPbunIterator (_1459:lng)(_1460:oid)(_1461:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 850
    _1463 := mtime.minutes(_1461);	# 845 MTIMEdaytime_extract_minutes (_1463:int)<-(_1461:daytime)
    bat.insert(_1457,_1460,_1463);	# 846 BKCinsert_bun (_1464:void)<-(_1457:bat[:oid,:int])(_1460:oid)(_1463:int)
catch MALexception:str ;	# 847  (MALexception:str) jump 848
exit MALexception:str ;	# 848  (MALexception:str)
    redo (_1459,_1460,_1461):= bat.hasMoreElements(daytime_bat);	# 849 CHPbunHasMoreElements (_1459:lng)(_1460:oid)(_1461:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 845
exit (_1459,_1460,_1461);	# 850  (_1459:lng)(_1460:oid)(_1461:daytime)
    dh_a:bat[:oid,:int]  := _1457;	# 851  (dh_a:bat[:oid,:int])<-(_1457:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 852 BKCsetColumn (_670:void)<-(dh_a:bat[:oid,:int])(_671:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 853  (_672:str)
    _1469 := bat.new(nil:oid,nil:int);	# 854 CMDBATnew (_1469:bat[:oid,:int])<-(_1444:oid)(_1445:int)
barrier (_1471,_1472,_1473):= bat.newIterator(daytime_bat);	# 855 CHPbunIterator (_1471:lng)(_1472:oid)(_1473:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 861
    _1475 := mtime.seconds(_1473);	# 856 MTIMEdaytime_extract_seconds (_1475:int)<-(_1473:daytime)
    bat.insert(_1469,_1472,_1475);	# 857 BKCinsert_bun (_1476:void)<-(_1469:bat[:oid,:int])(_1472:oid)(_1475:int)
catch MALexception:str ;	# 858  (MALexception:str) jump 859
exit MALexception:str ;	# 859  (MALexception:str)
    redo (_1471,_1472,_1473):= bat.hasMoreElements(daytime_bat);	# 860 CHPbunHasMoreElements (_1471:lng)(_1472:oid)(_1473:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 856
exit (_1471,_1472,_1473);	# 861  (_1471:lng)(_1472:oid)(_1473:daytime)
    fh_a:bat[:oid,:int]  := _1469;	# 862  (fh_a:bat[:oid,:int])<-(_1469:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 863 BKCsetColumn (_675:void)<-(fh_a:bat[:oid,:int])(_676:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 864  (_677:str)
    _1481 := bat.new(nil:oid,nil:int);	# 865 CMDBATnew (_1481:bat[:oid,:int])<-(_1482:oid)(_1483:int)
barrier (_1485,_1486,_1487):= bat.newIterator(daytime_bat);	# 866 CHPbunIterator (_1485:lng)(_1486:oid)(_1487:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 872
    _1489 := mtime.milliseconds(_1487);	# 867 MTIMEdaytime_extract_milliseconds (_1489:int)<-(_1487:daytime)
    bat.insert(_1481,_1486,_1489);	# 868 BKCinsert_bun (_1490:void)<-(_1481:bat[:oid,:int])(_1486:oid)(_1489:int)
catch MALexception:str ;	# 869  (MALexception:str) jump 870
exit MALexception:str ;	# 870  (MALexception:str)
    redo (_1485,_1486,_1487):= bat.hasMoreElements(daytime_bat);	# 871 CHPbunHasMoreElements (_1485:lng)(_1486:oid)(_1487:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 867
exit (_1485,_1486,_1487);	# 872  (_1485:lng)(_1486:oid)(_1487:daytime)
    hh_a:bat[:oid,:int]  := _1481;	# 873  (hh_a:bat[:oid,:int])<-(_1481:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 874 BKCsetColumn (_680:void)<-(hh_a:bat[:oid,:int])(_681:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 875 IOprint_val (_682:int)<-(_683:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 876 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 877  (_685:str)
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 878  (_686:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 879  (_687:str)
# Skipped due to coercion implication 	# 880  (_688:str)
    _1495 := bat.new(nil:oid,nil:timestamp);	# 881 CMDBATnew (_1495:bat[:oid,:timestamp])<-(_1482:oid)(_1496:timestamp)
barrier (_1498,_1499,_1500):= bat.newIterator(date_bat);	# 882 CHPbunIterator (_1498:lng)(_1499:oid)(_1500:date)<-(date_bat:bat[:oid,:date]) jump 890
    _1502 := algebra.find(daytime_bat,_1499);	# 883 ALGfind (_1502:daytime)<-(daytime_bat:bat[:oid,:daytime])(_1499:oid)
    _1504 := algebra.find(tzone_bat,_1499);	# 884 ALGfind (_1504:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1499:oid)
    _1506 := mtime.timestamp(_1500,_1502,_1504);	# 885 MTIMEtimestamp_create (_1506:timestamp)<-(_1500:date)(_1502:daytime)(_1504:timezone)
    bat.insert(_1495,_1499,_1506);	# 886 BKCinsert_bun (_1507:void)<-(_1495:bat[:oid,:timestamp])(_1499:oid)(_1506:timestamp)
catch MALexception:str ;	# 887  (MALexception:str) jump 888
exit MALexception:str ;	# 888  (MALexception:str)
    redo (_1498,_1499,_1500):= bat.hasMoreElements(date_bat);	# 889 CHPbunHasMoreElements (_1498:lng)(_1499:oid)(_1500:date)<-(date_bat:bat[:oid,:date]) jump 883
exit (_1498,_1499,_1500);	# 890  (_1498:lng)(_1499:oid)(_1500:date)
    kh_a:bat[:oid,:timestamp]  := _1495;	# 891  (kh_a:bat[:oid,:timestamp])<-(_1495:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 892  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 893 BKCsetWriteMode (_692:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 894  (_693:str)
## KILL 	# 895  (_694:str)
## var timestamp_now := timestamp(epoch()); 	# 896  (_695:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 897  (_696:str)
## test the timestamp operations 	# 898  (_697:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 899 BKCsetColumn (_698:void)<-(timestamp_bat:bat[:oid,:timestamp])(_699:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 900  (_700:str)
    _1512 := bat.new(nil:oid,nil:date);	# 901 CMDBATnew (_1512:bat[:oid,:date])<-(_1482:oid)(_1513:date)
barrier (_1515,_1516,_1517):= bat.newIterator(timestamp_bat);	# 902 CHPbunIterator (_1515:lng)(_1516:oid)(_1517:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 909
    _1519 := algebra.find(tzone_bat,_1516);	# 903 ALGfind (_1519:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1516:oid)
    _1521 := mtime.date(_1517,_1519);	# 904 MTIMEtimestamp_extract_date (_1521:date)<-(_1517:timestamp)(_1519:timezone)
    bat.insert(_1512,_1516,_1521);	# 905 BKCinsert_bun (_1522:void)<-(_1512:bat[:oid,:date])(_1516:oid)(_1521:date)
catch MALexception:str ;	# 906  (MALexception:str) jump 907
exit MALexception:str ;	# 907  (MALexception:str)
    redo (_1515,_1516,_1517):= bat.hasMoreElements(timestamp_bat);	# 908 CHPbunHasMoreElements (_1515:lng)(_1516:oid)(_1517:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 903
exit (_1515,_1516,_1517);	# 909  (_1515:lng)(_1516:oid)(_1517:timestamp)
    mh_a:bat[:oid,:date]  := _1512;	# 910  (mh_a:bat[:oid,:date])<-(_1512:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 911 BKCsetColumn (_703:void)<-(mh_a:bat[:oid,:date])(_704:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 912  (_705:str)
    _1527 := bat.new(nil:oid,nil:daytime);	# 913 CMDBATnew (_1527:bat[:oid,:daytime])<-(_1528:oid)(_1529:daytime)
barrier (_1531,_1532,_1533):= bat.newIterator(timestamp_bat);	# 914 CHPbunIterator (_1531:lng)(_1532:oid)(_1533:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 921
    _1535 := algebra.find(tzone_bat,_1532);	# 915 ALGfind (_1535:timezone)<-(tzone_bat:bat[:oid,:timezone])(_1532:oid)
    _1537 := mtime.daytime(_1533,_1535);	# 916 MTIMEtimestamp_extract_daytime (_1537:daytime)<-(_1533:timestamp)(_1535:timezone)
    bat.insert(_1527,_1532,_1537);	# 917 BKCinsert_bun (_1538:void)<-(_1527:bat[:oid,:daytime])(_1532:oid)(_1537:daytime)
catch MALexception:str ;	# 918  (MALexception:str) jump 919
exit MALexception:str ;	# 919  (MALexception:str)
    redo (_1531,_1532,_1533):= bat.hasMoreElements(timestamp_bat);	# 920 CHPbunHasMoreElements (_1531:lng)(_1532:oid)(_1533:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 915
exit (_1531,_1532,_1533);	# 921  (_1531:lng)(_1532:oid)(_1533:timestamp)
    oh_a:bat[:oid,:daytime]  := _1527;	# 922  (oh_a:bat[:oid,:daytime])<-(_1527:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 923 BKCsetColumn (_708:void)<-(oh_a:bat[:oid,:daytime])(_709:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 924 IOprint_val (_710:int)<-(_711:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 925 IOtable (_712:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 926  (_713:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 927 BKCsetColumn (rh_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_699:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 928  (_700:str)
    timezones:bat[:str,:timezone]  := bbp.bind("timezones");	# 929 CMDbbpbind (timezones:bat[:str,:timezone])<-(_716:str)
    io.print("print(timezones)");	# 930 IOprint_val (_717:int)<-(_718:str)
    io.print(timezones);	# 931 IOprint_val (_719:int)<-(timezones:bat[:str,:timezone])
    sh_a:timezone  := algebra.find(timezones,"Wake Island");	# 932 ALGfind (sh_a:timezone)<-(timezones:bat[:str,:timezone])(_721:str)
    _1543 := bat.new(nil:oid,nil:date);	# 933 CMDBATnew (_1543:bat[:oid,:date])<-(_1528:oid)(_1513:date)
barrier (_1545,_1546,_1547):= bat.newIterator(timestamp_bat);	# 934 CHPbunIterator (_1545:lng)(_1546:oid)(_1547:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 940
    _1549 := mtime.date(_1547,sh_a);	# 935 MTIMEtimestamp_extract_date (_1549:date)<-(_1547:timestamp)(sh_a:timezone)
    bat.insert(_1543,_1546,_1549);	# 936 BKCinsert_bun (_1550:void)<-(_1543:bat[:oid,:date])(_1546:oid)(_1549:date)
catch MALexception:str ;	# 937  (MALexception:str) jump 938
exit MALexception:str ;	# 938  (MALexception:str)
    redo (_1545,_1546,_1547):= bat.hasMoreElements(timestamp_bat);	# 939 CHPbunHasMoreElements (_1545:lng)(_1546:oid)(_1547:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 935
exit (_1545,_1546,_1547);	# 940  (_1545:lng)(_1546:oid)(_1547:timestamp)
    th_a:bat[:oid,:date]  := _1543;	# 941  (th_a:bat[:oid,:date])<-(_1543:bat[:oid,:date])
    bat.setColumn(th_a,"Wake Island");	# 942 BKCsetColumn (_723:void)<-(th_a:bat[:oid,:date])(_721:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 943  (_724:str)
    vh_a:timezone  := algebra.find(timezones,"Wake Island");	# 944 ALGfind (vh_a:timezone)<-(timezones:bat[:str,:timezone])(_721:str)
    _1555 := bat.new(nil:oid,nil:daytime);	# 945 CMDBATnew (_1555:bat[:oid,:daytime])<-(_1528:oid)(_1529:daytime)
barrier (_1557,_1558,_1559):= bat.newIterator(timestamp_bat);	# 946 CHPbunIterator (_1557:lng)(_1558:oid)(_1559:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 952
    _1561 := mtime.daytime(_1559,vh_a);	# 947 MTIMEtimestamp_extract_daytime (_1561:daytime)<-(_1559:timestamp)(vh_a:timezone)
    bat.insert(_1555,_1558,_1561);	# 948 BKCinsert_bun (_1562:void)<-(_1555:bat[:oid,:daytime])(_1558:oid)(_1561:daytime)
catch MALexception:str ;	# 949  (MALexception:str) jump 950
exit MALexception:str ;	# 950  (MALexception:str)
    redo (_1557,_1558,_1559):= bat.hasMoreElements(timestamp_bat);	# 951 CHPbunHasMoreElements (_1557:lng)(_1558:oid)(_1559:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 947
exit (_1557,_1558,_1559);	# 952  (_1557:lng)(_1558:oid)(_1559:timestamp)
    wh_a:bat[:oid,:daytime]  := _1555;	# 953  (wh_a:bat[:oid,:daytime])<-(_1555:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 954  (_727:str)
    xh_a:timezone  := algebra.find(timezones,"American Samoa");	# 955 ALGfind (xh_a:timezone)<-(timezones:bat[:str,:timezone])(_729:str)
    _1567 := bat.new(nil:oid,nil:date);	# 956 CMDBATnew (_1567:bat[:oid,:date])<-(_1568:oid)(_1569:date)
barrier (_1571,_1572,_1573):= bat.newIterator(timestamp_bat);	# 957 CHPbunIterator (_1571:lng)(_1572:oid)(_1573:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 963
    _1575 := mtime.date(_1573,xh_a);	# 958 MTIMEtimestamp_extract_date (_1575:date)<-(_1573:timestamp)(xh_a:timezone)
    bat.insert(_1567,_1572,_1575);	# 959 BKCinsert_bun (_1576:void)<-(_1567:bat[:oid,:date])(_1572:oid)(_1575:date)
catch MALexception:str ;	# 960  (MALexception:str) jump 961
exit MALexception:str ;	# 961  (MALexception:str)
    redo (_1571,_1572,_1573):= bat.hasMoreElements(timestamp_bat);	# 962 CHPbunHasMoreElements (_1571:lng)(_1572:oid)(_1573:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 958
exit (_1571,_1572,_1573);	# 963  (_1571:lng)(_1572:oid)(_1573:timestamp)
    yh_a:bat[:oid,:date]  := _1567;	# 964  (yh_a:bat[:oid,:date])<-(_1567:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 965 BKCsetColumn (ai_a:void)<-(yh_a:bat[:oid,:date])(_729:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 966  (_732:str)
    bi_a:timezone  := algebra.find(timezones,"American Samoa");	# 967 ALGfind (bi_a:timezone)<-(timezones:bat[:str,:timezone])(_729:str)
    _1581 := bat.new(nil:oid,nil:daytime);	# 968 CMDBATnew (_1581:bat[:oid,:daytime])<-(_1568:oid)(_1582:daytime)
barrier (_1584,_1585,_1586):= bat.newIterator(timestamp_bat);	# 969 CHPbunIterator (_1584:lng)(_1585:oid)(_1586:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 975
    _1588 := mtime.daytime(_1586,bi_a);	# 970 MTIMEtimestamp_extract_daytime (_1588:daytime)<-(_1586:timestamp)(bi_a:timezone)
    bat.insert(_1581,_1585,_1588);	# 971 BKCinsert_bun (_1589:void)<-(_1581:bat[:oid,:daytime])(_1585:oid)(_1588:daytime)
catch MALexception:str ;	# 972  (MALexception:str) jump 973
exit MALexception:str ;	# 973  (MALexception:str)
    redo (_1584,_1585,_1586):= bat.hasMoreElements(timestamp_bat);	# 974 CHPbunHasMoreElements (_1584:lng)(_1585:oid)(_1586:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 970
exit (_1584,_1585,_1586);	# 975  (_1584:lng)(_1585:oid)(_1586:timestamp)
    ci_a:bat[:oid,:daytime]  := _1581;	# 976  (ci_a:bat[:oid,:daytime])<-(_1581:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 977 IOprint_val (_735:int)<-(_736:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 978 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 979  (_738:str)
    ei_a := calc.*(60,1000);	# 980 CALCbinaryMULintint (ei_a:int)<-(_740:int)(_741:int)
    fi_a := calc.*(60,ei_a);	# 981 CALCbinaryMULintint (fi_a:int)<-(_740:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 982 CALCbinaryMULintint (gi_a:int)<-(_744:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 983 CALCint2lng (hi_a:lng)<-(gi_a:int)
    _1594 := bat.new(nil:oid,nil:timestamp);	# 984 CMDBATnew (_1594:bat[:oid,:timestamp])<-(_1568:oid)(_1595:timestamp)
barrier (_1597,_1598,_1599):= bat.newIterator(timestamp_bat);	# 985 CHPbunIterator (_1597:lng)(_1598:oid)(_1599:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 991
    _1601 := mtime.add(_1599,hi_a);	# 986 MTIMEtimestamp_add (_1601:timestamp)<-(_1599:timestamp)(hi_a:lng)
    bat.insert(_1594,_1598,_1601);	# 987 BKCinsert_bun (_1602:void)<-(_1594:bat[:oid,:timestamp])(_1598:oid)(_1601:timestamp)
catch MALexception:str ;	# 988  (MALexception:str) jump 989
exit MALexception:str ;	# 989  (MALexception:str)
    redo (_1597,_1598,_1599):= bat.hasMoreElements(timestamp_bat);	# 990 CHPbunHasMoreElements (_1597:lng)(_1598:oid)(_1599:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 986
exit (_1597,_1598,_1599);	# 991  (_1597:lng)(_1598:oid)(_1599:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := _1594;	# 992  (timestamp_plus:bat[:oid,:timestamp])<-(_1594:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 993  (_748:str)
    ii_a := calc.*(-60,1000);	# 994 CALCbinaryMULintint (ii_a:int)<-(_750:int)(_741:int)
    ji_a := calc.lng(ii_a);	# 995 CALCint2lng (ji_a:lng)<-(ii_a:int)
    _1607 := bat.new(nil:oid,nil:timestamp);	# 996 CMDBATnew (_1607:bat[:oid,:timestamp])<-(_1608:oid)(_1595:timestamp)
barrier (_1610,_1611,_1612):= bat.newIterator(timestamp_bat);	# 997 CHPbunIterator (_1610:lng)(_1611:oid)(_1612:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1003
    _1614 := mtime.add(_1612,ji_a);	# 998 MTIMEtimestamp_add (_1614:timestamp)<-(_1612:timestamp)(ji_a:lng)
    bat.insert(_1607,_1611,_1614);	# 999 BKCinsert_bun (_1615:void)<-(_1607:bat[:oid,:timestamp])(_1611:oid)(_1614:timestamp)
catch MALexception:str ;	# 1000  (MALexception:str) jump 1001
exit MALexception:str ;	# 1001  (MALexception:str)
    redo (_1610,_1611,_1612):= bat.hasMoreElements(timestamp_bat);	# 1002 CHPbunHasMoreElements (_1610:lng)(_1611:oid)(_1612:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 998
exit (_1610,_1611,_1612);	# 1003  (_1610:lng)(_1611:oid)(_1612:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := _1607;	# 1004  (timestamp_minus:bat[:oid,:timestamp])<-(_1607:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 1005  (_753:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1006 BKCsetColumn (ki_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_755:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1007  (_756:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1008 BKCsetColumn (li_a:void)<-(timestamp_plus:bat[:oid,:timestamp])(_758:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1009  (_759:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1010 BKCsetColumn (mi_a:void)<-(timestamp_minus:bat[:oid,:timestamp])(_761:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1011  (_762:str)
    _1620 := bat.new(nil:oid,nil:lng);	# 1012 CMDBATnew (_1620:bat[:oid,:lng])<-(_1608:oid)(_1621:lng)
barrier (_1623,_1624,_1625):= bat.newIterator(timestamp_plus);	# 1013 CHPbunIterator (_1623:lng)(_1624:oid)(_1625:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1020
    _1627 := algebra.find(timestamp_minus,_1624);	# 1014 ALGfind (_1627:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])(_1624:oid)
    _1629 := mtime.diff(_1625,_1627);	# 1015 MTIMEtimestamp_diff (_1629:lng)<-(_1625:timestamp)(_1627:timestamp)
    bat.insert(_1620,_1624,_1629);	# 1016 BKCinsert_bun (_1630:void)<-(_1620:bat[:oid,:lng])(_1624:oid)(_1629:lng)
catch MALexception:str ;	# 1017  (MALexception:str) jump 1018
exit MALexception:str ;	# 1018  (MALexception:str)
    redo (_1623,_1624,_1625):= bat.hasMoreElements(timestamp_plus);	# 1019 CHPbunHasMoreElements (_1623:lng)(_1624:oid)(_1625:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1014
exit (_1623,_1624,_1625);	# 1020  (_1623:lng)(_1624:oid)(_1625:timestamp)
    ni_a:bat[:oid,:lng]  := _1620;	# 1021  (ni_a:bat[:oid,:lng])<-(_1620:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1022 CALCbinaryMULintint (oi_a:int)<-(_740:int)(_741:int)
    pi_a := calc.*(60,oi_a);	# 1023 CALCbinaryMULintint (pi_a:int)<-(_740:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1024 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1025 CMDbatDIVcst_lng_lng_lng (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1026 BKCsetColumn (si_a:void)<-(ri_a:bat[:oid,:lng])(_770:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1027 IOprint_val (_771:int)<-(_772:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1028 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1029  (_774:str)
    ui_a:timezone  := algebra.find(timezones,"West/Europe");	# 1030 ALGfind (ui_a:timezone)<-(timezones:bat[:str,:timezone])(_776:str)
    _1635 := bat.new(nil:int,nil:timestamp);	# 1031 CMDBATnew (_1635:bat[:int,:timestamp])<-(_1636:int)(_1637:timestamp)
barrier (_1639,_1640,_1641):= bat.newIterator(date_seq);	# 1032 CHPbunIterator (_1639:lng)(_1640:int)(_1641:date)<-(date_seq:bat[:int,:date]) jump 1038
    _1643 := mtime.timestamp(_1641,daytime_00,ui_a);	# 1033 MTIMEtimestamp_create (_1643:timestamp)<-(_1641:date)(daytime_00:daytime)(ui_a:timezone)
    bat.insert(_1635,_1640,_1643);	# 1034 BKCinsert_bun (_1644:void)<-(_1635:bat[:int,:timestamp])(_1640:int)(_1643:timestamp)
catch MALexception:str ;	# 1035  (MALexception:str) jump 1036
exit MALexception:str ;	# 1036  (MALexception:str)
    redo (_1639,_1640,_1641):= bat.hasMoreElements(date_seq);	# 1037 CHPbunHasMoreElements (_1639:lng)(_1640:int)(_1641:date)<-(date_seq:bat[:int,:date]) jump 1033
exit (_1639,_1640,_1641);	# 1038  (_1639:lng)(_1640:int)(_1641:date)
    timestamp_eur:bat[:int,:timestamp]  := _1635;	# 1039  (timestamp_eur:bat[:int,:timestamp])<-(_1635:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1040  (_779:str)
    vi_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1041 ALGfind (vi_a:timezone)<-(timezones:bat[:str,:timezone])(_781:str)
    _1649 := bat.new(nil:int,nil:timestamp);	# 1042 CMDBATnew (_1649:bat[:int,:timestamp])<-(_1636:int)(_1637:timestamp)
barrier (_1651,_1652,_1653):= bat.newIterator(date_seq);	# 1043 CHPbunIterator (_1651:lng)(_1652:int)(_1653:date)<-(date_seq:bat[:int,:date]) jump 1049
    _1655 := mtime.timestamp(_1653,daytime_00,vi_a);	# 1044 MTIMEtimestamp_create (_1655:timestamp)<-(_1653:date)(daytime_00:daytime)(vi_a:timezone)
    bat.insert(_1649,_1652,_1655);	# 1045 BKCinsert_bun (_1656:void)<-(_1649:bat[:int,:timestamp])(_1652:int)(_1655:timestamp)
catch MALexception:str ;	# 1046  (MALexception:str) jump 1047
exit MALexception:str ;	# 1047  (MALexception:str)
    redo (_1651,_1652,_1653):= bat.hasMoreElements(date_seq);	# 1048 CHPbunHasMoreElements (_1651:lng)(_1652:int)(_1653:date)<-(date_seq:bat[:int,:date]) jump 1044
exit (_1651,_1652,_1653);	# 1049  (_1651:lng)(_1652:int)(_1653:date)
    timestamp_bra:bat[:int,:timestamp]  := _1649;	# 1050  (timestamp_bra:bat[:int,:timestamp])<-(_1649:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1051  (_783:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1052 BKCsetColumn (wi_a:void)<-(date_seq:bat[:int,:date])(_785:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1053  (_786:str)
    _1661 := bat.new(nil:int,nil:int);	# 1054 CMDBATnew (_1661:bat[:int,:int])<-(_1636:int)(_1636:int)
barrier (_1663,_1664,_1665):= bat.newIterator(date_seq);	# 1055 CHPbunIterator (_1663:lng)(_1664:int)(_1665:date)<-(date_seq:bat[:int,:date]) jump 1061
    _1667 := mtime.dayofweek(_1665);	# 1056 MTIMEdate_extract_dayofweek (_1667:int)<-(_1665:date)
    bat.insert(_1661,_1664,_1667);	# 1057 BKCinsert_bun (_1668:void)<-(_1661:bat[:int,:int])(_1664:int)(_1667:int)
catch MALexception:str ;	# 1058  (MALexception:str) jump 1059
exit MALexception:str ;	# 1059  (MALexception:str)
    redo (_1663,_1664,_1665):= bat.hasMoreElements(date_seq);	# 1060 CHPbunHasMoreElements (_1663:lng)(_1664:int)(_1665:date)<-(date_seq:bat[:int,:date]) jump 1056
exit (_1663,_1664,_1665);	# 1061  (_1663:lng)(_1664:int)(_1665:date)
    xi_a:bat[:int,:int]  := _1661;	# 1062  (xi_a:bat[:int,:int])<-(_1661:bat[:int,:int])
    _1673 := bat.new(nil:int,nil:str);	# 1063 CMDBATnew (_1673:bat[:int,:str])<-(_1674:int)(_1675:str)
barrier (_1677,_1678,_1679):= bat.newIterator(xi_a);	# 1064 CHPbunIterator (_1677:lng)(_1678:int)(_1679:int)<-(xi_a:bat[:int,:int]) jump 1070
    _1681 := mtime.dayname(_1679);	# 1065 MTIMEday_to_str (_1681:str)<-(_1679:int)
    bat.insert(_1673,_1678,_1681);	# 1066 BKCinsert_bun (_1682:void)<-(_1673:bat[:int,:str])(_1678:int)(_1681:str)
catch MALexception:str ;	# 1067  (MALexception:str) jump 1068
exit MALexception:str ;	# 1068  (MALexception:str)
    redo (_1677,_1678,_1679):= bat.hasMoreElements(xi_a);	# 1069 CHPbunHasMoreElements (_1677:lng)(_1678:int)(_1679:int)<-(xi_a:bat[:int,:int]) jump 1065
exit (_1677,_1678,_1679);	# 1070  (_1677:lng)(_1678:int)(_1679:int)
    yi_a:bat[:int,:str]  := _1673;	# 1071  (yi_a:bat[:int,:str])<-(_1673:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1072 BKCsetColumn (aj_a:void)<-(yi_a:bat[:int,:str])(_792:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1073  (_793:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1074 BKCsetColumn (bj_a:void)<-(timestamp_eur:bat[:int,:timestamp])(_776:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1075  (_795:str)
    cj_a:timezone  := algebra.find(timezones,"West/Europe");	# 1076 ALGfind (cj_a:timezone)<-(timezones:bat[:str,:timezone])(_776:str)
    _1687 := bat.new(nil:int,nil:bit);	# 1077 CMDBATnew (_1687:bat[:int,:bit])<-(_1674:int)(_1688:bit)
barrier (_1690,_1691,_1692):= bat.newIterator(timestamp_eur);	# 1078 CHPbunIterator (_1690:lng)(_1691:int)(_1692:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1084
    _1694 := mtime.dst(_1692,cj_a);	# 1079 MTIMEtimestamp_inside_dst (_1694:bit)<-(_1692:timestamp)(cj_a:timezone)
    bat.insert(_1687,_1691,_1694);	# 1080 BKCinsert_bun (_1695:void)<-(_1687:bat[:int,:bit])(_1691:int)(_1694:bit)
catch MALexception:str ;	# 1081  (MALexception:str) jump 1082
exit MALexception:str ;	# 1082  (MALexception:str)
    redo (_1690,_1691,_1692):= bat.hasMoreElements(timestamp_eur);	# 1083 CHPbunHasMoreElements (_1690:lng)(_1691:int)(_1692:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1079
exit (_1690,_1691,_1692);	# 1084  (_1690:lng)(_1691:int)(_1692:timestamp)
    dj_a:bat[:int,:bit]  := _1687;	# 1085  (dj_a:bat[:int,:bit])<-(_1687:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1086 BKCsetColumn (ej_a:void)<-(dj_a:bat[:int,:bit])(_800:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1087  (_801:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1088 BKCsetColumn (fj_a:void)<-(timestamp_bra:bat[:int,:timestamp])(_781:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1089  (_803:str)
    gj_a:timezone  := algebra.find(timezones,"Andes/Brazil");	# 1090 ALGfind (gj_a:timezone)<-(timezones:bat[:str,:timezone])(_781:str)
    _1700 := bat.new(nil:int,nil:bit);	# 1091 CMDBATnew (_1700:bat[:int,:bit])<-(_1674:int)(_1688:bit)
barrier (_1702,_1703,_1704):= bat.newIterator(timestamp_bra);	# 1092 CHPbunIterator (_1702:lng)(_1703:int)(_1704:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1098
    _1706 := mtime.dst(_1704,gj_a);	# 1093 MTIMEtimestamp_inside_dst (_1706:bit)<-(_1704:timestamp)(gj_a:timezone)
    bat.insert(_1700,_1703,_1706);	# 1094 BKCinsert_bun (_1707:void)<-(_1700:bat[:int,:bit])(_1703:int)(_1706:bit)
catch MALexception:str ;	# 1095  (MALexception:str) jump 1096
exit MALexception:str ;	# 1096  (MALexception:str)
    redo (_1702,_1703,_1704):= bat.hasMoreElements(timestamp_bra);	# 1097 CHPbunHasMoreElements (_1702:lng)(_1703:int)(_1704:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1093
exit (_1702,_1703,_1704);	# 1098  (_1702:lng)(_1703:int)(_1704:timestamp)
    hj_a:bat[:int,:bit]  := _1700;	# 1099  (hj_a:bat[:int,:bit])<-(_1700:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1100 BKCsetColumn (ij_a:void)<-(hj_a:bat[:int,:bit])(_800:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1101 IOprint_val (_807:int)<-(_808:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1102 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1103  (_810:str)
#quit; 	# 1104  (_811:str)
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 1105  (_812:str)
end main;	# 1106  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "tzone_bat" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

