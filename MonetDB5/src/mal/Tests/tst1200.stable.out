stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():int;	# 0  (main:int)
# Mil compiler Version 1.0) 	# 1  (_2:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  (_4:str)
# Predefined code segment 	# 3  (_6:str)
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 4  (_8:str)
#module(monettime,alarm); 	# 5  (_10:str)
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 6  (_12:str)
## test the various ways to create rules 	# 7  (_14:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 8 MTIMErule_fromstr (rule_jan:rule)<-(_16:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 9  (_18:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 10 MTIMErule_fromstr (rule_mar:rule)<-(_20:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 11  (_22:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 12 MTIMErule_fromstr (rule_apr:rule)<-(_24:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 13  (_26:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 14 MTIMErule_fromstr (rule_may:rule)<-(_28:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 15  (_30:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 16 MTIMErule_fromstr (rule_jun:rule)<-(_32:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 17  (_34:str)
    rule_jul := mtime.rule(7,1,1,75);	# 18 MTIMErule_create (rule_jul:rule)<-(_36:int)(_37:int)(_37:int)(_38:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 19  (_40:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 20 MTIMErule_create (rule_aug:rule)<-(_42:int)(_43:int)(_37:int)(_38:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 21  (_45:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 22 MTIMErule_create (rule_sep:rule)<-(_47:int)(_48:int)(_49:int)(_38:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 23  (_51:str)
    rule_oct := mtime.rule(10,31,0,75);	# 24 MTIMErule_create (rule_oct:rule)<-(_53:int)(_54:int)(_55:int)(_38:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 25  (_57:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 26 MTIMErule_create (rule_nov:rule)<-(_59:int)(_48:int)(_60:int)(_38:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 27  (_62:str)
## nil rules 	# 28  (_64:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 29 MTIMErule_create (rule_dec:rule)<-(_66:int)(_67:int)(_55:int)(_38:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 30  (_69:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 31 MTIMErule_fromstr (rule_feb:rule)<-(_71:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 32  (_73:str)
#  	# 33  (_75:str)
    rule_bat := bat.new(:str,:rule,10);	# 34 CMDBATnewint (rule_bat:bat[:str,:rule])<-(_77:str)(_78:rule)(_53:int)
#var rule_bat := bat.new(str,rule,10); 	# 35  (_80:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 36 BKCinsert_bun (_81:void)<-(rule_bat:bat[:str,:rule])(_82:str)(rule_jan:rule)
    bat.insert(rule_bat,"feb",rule_feb);	# 37 BKCinsert_bun (_83:void)<-(rule_bat:bat[:str,:rule])(_84:str)(rule_feb:rule)
    bat.insert(rule_bat,"mar",rule_mar);	# 38 BKCinsert_bun (_85:void)<-(rule_bat:bat[:str,:rule])(_86:str)(rule_mar:rule)
    bat.insert(rule_bat,"apr",rule_apr);	# 39 BKCinsert_bun (_87:void)<-(rule_bat:bat[:str,:rule])(_88:str)(rule_apr:rule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 40  (_90:str)
    bat.insert(rule_bat,"may",rule_may);	# 41 BKCinsert_bun (_91:void)<-(rule_bat:bat[:str,:rule])(_92:str)(rule_may:rule)
    bat.insert(rule_bat,"jun",rule_jun);	# 42 BKCinsert_bun (_93:void)<-(rule_bat:bat[:str,:rule])(_94:str)(rule_jun:rule)
    bat.insert(rule_bat,"jul",rule_jul);	# 43 BKCinsert_bun (_95:void)<-(rule_bat:bat[:str,:rule])(_96:str)(rule_jul:rule)
    bat.insert(rule_bat,"aug",rule_aug);	# 44 BKCinsert_bun (_97:void)<-(rule_bat:bat[:str,:rule])(_98:str)(rule_aug:rule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 45  (_100:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 46 BKCinsert_bun (_101:void)<-(rule_bat:bat[:str,:rule])(_102:str)(rule_sep:rule)
    bat.insert(rule_bat,"oct",rule_oct);	# 47 BKCinsert_bun (_103:void)<-(rule_bat:bat[:str,:rule])(_104:str)(rule_oct:rule)
    bat.insert(rule_bat,"nov",rule_nov);	# 48 BKCinsert_bun (_105:void)<-(rule_bat:bat[:str,:rule])(_106:str)(rule_nov:rule)
    bat.insert(rule_bat,"dec",rule_dec);	# 49 BKCinsert_bun (_107:void)<-(rule_bat:bat[:str,:rule])(_108:str)(rule_dec:rule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 50  (_110:str)
## test the operations on rules 	# 51  (_112:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 52 BKCsetColumn (ma_a:void)<-(rule_bat:bat[:str,:rule])(_114:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 53  (_116:str)
    _1020 := bat.new(:str,:int);	# 54 CMDBATnew (_1020:bat[:str,:int])<-(_1021:str)(_1022:int)
barrier (_1024,_1025,_1026):= chop.newIterator(rule_bat);	# 55 CHPbunIterator (_1024:lng)(_1025:str)(_1026:rule)<-(rule_bat:bat[:str,:rule]) jump 61
    _1028 := mtime.month(_1026);	# 56 MTIMErule_extract_month (_1028:int)<-(_1026:rule)
    bat.insert(_1020,_1025,_1028);	# 57 BKCinsert_bun (_1029:void)<-(_1020:bat[:str,:int])(_1025:str)(_1028:int)
catch MALexception;	# 58  (MALexception:str) jump 59
exit MALexception;	# 59  (MALexception:str)
    redo (_1024,_1025,_1026):= chop.hasMoreElements(rule_bat);	# 60 CHPbunHasMoreElements (_1024:lng)(_1025:str)(_1026:rule)<-(rule_bat:bat[:str,:rule]) jump 56
exit (_1024,_1025,_1026);	# 61  (_1024:lng)(_1025:str)(_1026:rule)
    na_a:bat[:str,:int]  := _1020;	# 62  (na_a:bat[:str,:int])<-(_1020:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 63 BKCsetColumn (oa_a:void)<-(na_a:bat[:str,:int])(_120:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 64  (_122:str)
    _1034 := bat.new(:str,:int);	# 65 CMDBATnew (_1034:bat[:str,:int])<-(_1035:str)(_1036:int)
barrier (_1038,_1039,_1040):= chop.newIterator(rule_bat);	# 66 CHPbunIterator (_1038:lng)(_1039:str)(_1040:rule)<-(rule_bat:bat[:str,:rule]) jump 72
    _1042 := mtime.weekday(_1040);	# 67 MTIMErule_extract_weekday (_1042:int)<-(_1040:rule)
    bat.insert(_1034,_1039,_1042);	# 68 BKCinsert_bun (_1043:void)<-(_1034:bat[:str,:int])(_1039:str)(_1042:int)
catch MALexception;	# 69  (MALexception:str) jump 70
exit MALexception;	# 70  (MALexception:str)
    redo (_1038,_1039,_1040):= chop.hasMoreElements(rule_bat);	# 71 CHPbunHasMoreElements (_1038:lng)(_1039:str)(_1040:rule)<-(rule_bat:bat[:str,:rule]) jump 67
exit (_1038,_1039,_1040);	# 72  (_1038:lng)(_1039:str)(_1040:rule)
    pa_a:bat[:str,:int]  := _1034;	# 73  (pa_a:bat[:str,:int])<-(_1034:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 74 BKCsetColumn (qa_a:void)<-(pa_a:bat[:str,:int])(_126:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 75  (_128:str)
    _1048 := bat.new(:str,:int);	# 76 CMDBATnew (_1048:bat[:str,:int])<-(_1049:str)(_1050:int)
barrier (_1052,_1053,_1054):= chop.newIterator(rule_bat);	# 77 CHPbunIterator (_1052:lng)(_1053:str)(_1054:rule)<-(rule_bat:bat[:str,:rule]) jump 83
    _1056 := mtime.day(_1054);	# 78 MTIMErule_extract_day (_1056:int)<-(_1054:rule)
    bat.insert(_1048,_1053,_1056);	# 79 BKCinsert_bun (_1057:void)<-(_1048:bat[:str,:int])(_1053:str)(_1056:int)
catch MALexception;	# 80  (MALexception:str) jump 81
exit MALexception;	# 81  (MALexception:str)
    redo (_1052,_1053,_1054):= chop.hasMoreElements(rule_bat);	# 82 CHPbunHasMoreElements (_1052:lng)(_1053:str)(_1054:rule)<-(rule_bat:bat[:str,:rule]) jump 78
exit (_1052,_1053,_1054);	# 83  (_1052:lng)(_1053:str)(_1054:rule)
    ra_a:bat[:str,:int]  := _1048;	# 84  (ra_a:bat[:str,:int])<-(_1048:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 85 BKCsetColumn (sa_a:void)<-(ra_a:bat[:str,:int])(_132:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 86  (_134:str)
    _1062 := bat.new(:str,:int);	# 87 CMDBATnew (_1062:bat[:str,:int])<-(_1063:str)(_1064:int)
barrier (_1066,_1067,_1068):= chop.newIterator(rule_bat);	# 88 CHPbunIterator (_1066:lng)(_1067:str)(_1068:rule)<-(rule_bat:bat[:str,:rule]) jump 94
    _1070 := mtime.minutes(_1068);	# 89 MTIMErule_extract_minutes (_1070:int)<-(_1068:rule)
    bat.insert(_1062,_1067,_1070);	# 90 BKCinsert_bun (_1071:void)<-(_1062:bat[:str,:int])(_1067:str)(_1070:int)
catch MALexception;	# 91  (MALexception:str) jump 92
exit MALexception;	# 92  (MALexception:str)
    redo (_1066,_1067,_1068):= chop.hasMoreElements(rule_bat);	# 93 CHPbunHasMoreElements (_1066:lng)(_1067:str)(_1068:rule)<-(rule_bat:bat[:str,:rule]) jump 89
exit (_1066,_1067,_1068);	# 94  (_1066:lng)(_1067:str)(_1068:rule)
    ta_a:bat[:str,:int]  := _1062;	# 95  (ta_a:bat[:str,:int])<-(_1062:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 96 BKCsetColumn (ua_a:void)<-(ta_a:bat[:str,:int])(_138:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 97 IOprint_val (_139:int)<-(_140:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 98 IOtable (va_a:int)<-(rule_bat:bat[:str,:rule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 99  (_143:str)
    bat.setColumn(rule_bat,"rule");	# 100 BKCsetColumn (_144:void)<-(rule_bat:bat[:str,:rule])(_114:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 101  (_116:str)
    _1076 := bat.new(:str,:date);	# 102 CMDBATnew (_1076:bat[:str,:date])<-(_1077:str)(_485:date)
barrier (_1079,_1080,_1081):= chop.newIterator(rule_bat);	# 103 CHPbunIterator (_1079:lng)(_1080:str)(_1081:rule)<-(rule_bat:bat[:str,:rule]) jump 109
    _1083 := mtime.compute(_1081,2001);	# 104 MTIMEcompute_rule_foryear (_1083:date)<-(_1081:rule)(_148:int)
    bat.insert(_1076,_1080,_1083);	# 105 BKCinsert_bun (_1084:void)<-(_1076:bat[:str,:date])(_1080:str)(_1083:date)
catch MALexception;	# 106  (MALexception:str) jump 107
exit MALexception;	# 107  (MALexception:str)
    redo (_1079,_1080,_1081):= chop.hasMoreElements(rule_bat);	# 108 CHPbunHasMoreElements (_1079:lng)(_1080:str)(_1081:rule)<-(rule_bat:bat[:str,:rule]) jump 104
exit (_1079,_1080,_1081);	# 109  (_1079:lng)(_1080:str)(_1081:rule)
    xa_a:bat[:str,:date]  := _1076;	# 110  (xa_a:bat[:str,:date])<-(_1076:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 111 BKCsetColumn (ya_a:void)<-(xa_a:bat[:str,:date])(_150:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 112  (_152:str)
    _1089 := bat.new(:str,:date);	# 113 CMDBATnew (_1089:bat[:str,:date])<-(_1090:str)(_485:date)
barrier (_1092,_1093,_1094):= chop.newIterator(rule_bat);	# 114 CHPbunIterator (_1092:lng)(_1093:str)(_1094:rule)<-(rule_bat:bat[:str,:rule]) jump 120
    _1096 := mtime.compute(_1094,2001);	# 115 MTIMEcompute_rule_foryear (_1096:date)<-(_1094:rule)(_148:int)
    bat.insert(_1089,_1093,_1096);	# 116 BKCinsert_bun (_1097:void)<-(_1089:bat[:str,:date])(_1093:str)(_1096:date)
catch MALexception;	# 117  (MALexception:str) jump 118
exit MALexception;	# 118  (MALexception:str)
    redo (_1092,_1093,_1094):= chop.hasMoreElements(rule_bat);	# 119 CHPbunHasMoreElements (_1092:lng)(_1093:str)(_1094:rule)<-(rule_bat:bat[:str,:rule]) jump 115
exit (_1092,_1093,_1094);	# 120  (_1092:lng)(_1093:str)(_1094:rule)
    ab_a:bat[:str,:date]  := _1089;	# 121  (ab_a:bat[:str,:date])<-(_1089:bat[:str,:date])
    _1102 := bat.new(:str,:int);	# 122 CMDBATnew (_1102:bat[:str,:int])<-(_1103:str)(_1104:int)
barrier (_1106,_1107,_1108):= chop.newIterator(ab_a);	# 123 CHPbunIterator (_1106:lng)(_1107:str)(_1108:date)<-(ab_a:bat[:str,:date]) jump 129
    _1110 := mtime.dayofweek(_1108);	# 124 MTIMEdate_extract_dayofweek (_1110:int)<-(_1108:date)
    bat.insert(_1102,_1107,_1110);	# 125 BKCinsert_bun (_1111:void)<-(_1102:bat[:str,:int])(_1107:str)(_1110:int)
catch MALexception;	# 126  (MALexception:str) jump 127
exit MALexception;	# 127  (MALexception:str)
    redo (_1106,_1107,_1108):= chop.hasMoreElements(ab_a);	# 128 CHPbunHasMoreElements (_1106:lng)(_1107:str)(_1108:date)<-(ab_a:bat[:str,:date]) jump 124
exit (_1106,_1107,_1108);	# 129  (_1106:lng)(_1107:str)(_1108:date)
    bb_a:bat[:str,:int]  := _1102;	# 130  (bb_a:bat[:str,:int])<-(_1102:bat[:str,:int])
    _1116 := bat.new(:str,:str);	# 131 CMDBATnew (_1116:bat[:str,:str])<-(_1117:str)(_1118:str)
barrier (_1120,_1121,_1122):= chop.newIterator(bb_a);	# 132 CHPbunIterator (_1120:lng)(_1121:str)(_1122:int)<-(bb_a:bat[:str,:int]) jump 138
    _1124 := mtime.dayname(_1122);	# 133 MTIMEday_to_str (_1124:str)<-(_1122:int)
    bat.insert(_1116,_1121,_1124);	# 134 BKCinsert_bun (_1125:void)<-(_1116:bat[:str,:str])(_1121:str)(_1124:str)
catch MALexception;	# 135  (MALexception:str) jump 136
exit MALexception;	# 136  (MALexception:str)
    redo (_1120,_1121,_1122):= chop.hasMoreElements(bb_a);	# 137 CHPbunHasMoreElements (_1120:lng)(_1121:str)(_1122:int)<-(bb_a:bat[:str,:int]) jump 133
exit (_1120,_1121,_1122);	# 138  (_1120:lng)(_1121:str)(_1122:int)
    cb_a:bat[:str,:str]  := _1116;	# 139  (cb_a:bat[:str,:str])<-(_1116:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 140 BKCsetColumn (_158:void)<-(cb_a:bat[:str,:str])(_150:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 141  (_160:str)
    _1130 := bat.new(:str,:date);	# 142 CMDBATnew (_1130:bat[:str,:date])<-(_1131:str)(_485:date)
barrier (_1133,_1134,_1135):= chop.newIterator(rule_bat);	# 143 CHPbunIterator (_1133:lng)(_1134:str)(_1135:rule)<-(rule_bat:bat[:str,:rule]) jump 149
    _1137 := mtime.compute(_1135,1999);	# 144 MTIMEcompute_rule_foryear (_1137:date)<-(_1135:rule)(_162:int)
    bat.insert(_1130,_1134,_1137);	# 145 BKCinsert_bun (_1138:void)<-(_1130:bat[:str,:date])(_1134:str)(_1137:date)
catch MALexception;	# 146  (MALexception:str) jump 147
exit MALexception;	# 147  (MALexception:str)
    redo (_1133,_1134,_1135):= chop.hasMoreElements(rule_bat);	# 148 CHPbunHasMoreElements (_1133:lng)(_1134:str)(_1135:rule)<-(rule_bat:bat[:str,:rule]) jump 144
exit (_1133,_1134,_1135);	# 149  (_1133:lng)(_1134:str)(_1135:rule)
    eb_a:bat[:str,:date]  := _1130;	# 150  (eb_a:bat[:str,:date])<-(_1130:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 151 BKCsetColumn (_163:void)<-(eb_a:bat[:str,:date])(_164:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 152  (_166:str)
    _1143 := bat.new(:str,:date);	# 153 CMDBATnew (_1143:bat[:str,:date])<-(_1144:str)(_485:date)
barrier (_1146,_1147,_1148):= chop.newIterator(rule_bat);	# 154 CHPbunIterator (_1146:lng)(_1147:str)(_1148:rule)<-(rule_bat:bat[:str,:rule]) jump 160
    _1150 := mtime.compute(_1148,1999);	# 155 MTIMEcompute_rule_foryear (_1150:date)<-(_1148:rule)(_162:int)
    bat.insert(_1143,_1147,_1150);	# 156 BKCinsert_bun (_1151:void)<-(_1143:bat[:str,:date])(_1147:str)(_1150:date)
catch MALexception;	# 157  (MALexception:str) jump 158
exit MALexception;	# 158  (MALexception:str)
    redo (_1146,_1147,_1148):= chop.hasMoreElements(rule_bat);	# 159 CHPbunHasMoreElements (_1146:lng)(_1147:str)(_1148:rule)<-(rule_bat:bat[:str,:rule]) jump 155
exit (_1146,_1147,_1148);	# 160  (_1146:lng)(_1147:str)(_1148:rule)
    gb_a:bat[:str,:date]  := _1143;	# 161  (gb_a:bat[:str,:date])<-(_1143:bat[:str,:date])
    _1156 := bat.new(:str,:int);	# 162 CMDBATnew (_1156:bat[:str,:int])<-(_1157:str)(_1158:int)
barrier (_1160,_1161,_1162):= chop.newIterator(gb_a);	# 163 CHPbunIterator (_1160:lng)(_1161:str)(_1162:date)<-(gb_a:bat[:str,:date]) jump 169
    _1164 := mtime.dayofweek(_1162);	# 164 MTIMEdate_extract_dayofweek (_1164:int)<-(_1162:date)
    bat.insert(_1156,_1161,_1164);	# 165 BKCinsert_bun (_1165:void)<-(_1156:bat[:str,:int])(_1161:str)(_1164:int)
catch MALexception;	# 166  (MALexception:str) jump 167
exit MALexception;	# 167  (MALexception:str)
    redo (_1160,_1161,_1162):= chop.hasMoreElements(gb_a);	# 168 CHPbunHasMoreElements (_1160:lng)(_1161:str)(_1162:date)<-(gb_a:bat[:str,:date]) jump 164
exit (_1160,_1161,_1162);	# 169  (_1160:lng)(_1161:str)(_1162:date)
    hb_a:bat[:str,:int]  := _1156;	# 170  (hb_a:bat[:str,:int])<-(_1156:bat[:str,:int])
    _1170 := bat.new(:str,:str);	# 171 CMDBATnew (_1170:bat[:str,:str])<-(_1171:str)(_1172:str)
barrier (_1174,_1175,_1176):= chop.newIterator(hb_a);	# 172 CHPbunIterator (_1174:lng)(_1175:str)(_1176:int)<-(hb_a:bat[:str,:int]) jump 178
    _1178 := mtime.dayname(_1176);	# 173 MTIMEday_to_str (_1178:str)<-(_1176:int)
    bat.insert(_1170,_1175,_1178);	# 174 BKCinsert_bun (_1179:void)<-(_1170:bat[:str,:str])(_1175:str)(_1178:str)
catch MALexception;	# 175  (MALexception:str) jump 176
exit MALexception;	# 176  (MALexception:str)
    redo (_1174,_1175,_1176):= chop.hasMoreElements(hb_a);	# 177 CHPbunHasMoreElements (_1174:lng)(_1175:str)(_1176:int)<-(hb_a:bat[:str,:int]) jump 173
exit (_1174,_1175,_1176);	# 178  (_1174:lng)(_1175:str)(_1176:int)
    ib_a:bat[:str,:str]  := _1170;	# 179  (ib_a:bat[:str,:str])<-(_1170:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 180 BKCsetColumn (_170:void)<-(ib_a:bat[:str,:str])(_164:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 181  (_172:str)
    _1184 := bat.new(:str,:date);	# 182 CMDBATnew (_1184:bat[:str,:date])<-(_1185:str)(_485:date)
barrier (_1187,_1188,_1189):= chop.newIterator(rule_bat);	# 183 CHPbunIterator (_1187:lng)(_1188:str)(_1189:rule)<-(rule_bat:bat[:str,:rule]) jump 189
    _1191 := mtime.compute(_1189,1992);	# 184 MTIMEcompute_rule_foryear (_1191:date)<-(_1189:rule)(_174:int)
    bat.insert(_1184,_1188,_1191);	# 185 BKCinsert_bun (_1192:void)<-(_1184:bat[:str,:date])(_1188:str)(_1191:date)
catch MALexception;	# 186  (MALexception:str) jump 187
exit MALexception;	# 187  (MALexception:str)
    redo (_1187,_1188,_1189):= chop.hasMoreElements(rule_bat);	# 188 CHPbunHasMoreElements (_1187:lng)(_1188:str)(_1189:rule)<-(rule_bat:bat[:str,:rule]) jump 184
exit (_1187,_1188,_1189);	# 189  (_1187:lng)(_1188:str)(_1189:rule)
    kb_a:bat[:str,:date]  := _1184;	# 190  (kb_a:bat[:str,:date])<-(_1184:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 191 BKCsetColumn (_175:void)<-(kb_a:bat[:str,:date])(_176:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 192  (_178:str)
    _1197 := bat.new(:str,:date);	# 193 CMDBATnew (_1197:bat[:str,:date])<-(_1198:str)(_485:date)
barrier (_1200,_1201,_1202):= chop.newIterator(rule_bat);	# 194 CHPbunIterator (_1200:lng)(_1201:str)(_1202:rule)<-(rule_bat:bat[:str,:rule]) jump 200
    _1204 := mtime.compute(_1202,1992);	# 195 MTIMEcompute_rule_foryear (_1204:date)<-(_1202:rule)(_174:int)
    bat.insert(_1197,_1201,_1204);	# 196 BKCinsert_bun (_1205:void)<-(_1197:bat[:str,:date])(_1201:str)(_1204:date)
catch MALexception;	# 197  (MALexception:str) jump 198
exit MALexception;	# 198  (MALexception:str)
    redo (_1200,_1201,_1202):= chop.hasMoreElements(rule_bat);	# 199 CHPbunHasMoreElements (_1200:lng)(_1201:str)(_1202:rule)<-(rule_bat:bat[:str,:rule]) jump 195
exit (_1200,_1201,_1202);	# 200  (_1200:lng)(_1201:str)(_1202:rule)
    mb_a:bat[:str,:date]  := _1197;	# 201  (mb_a:bat[:str,:date])<-(_1197:bat[:str,:date])
    _1210 := bat.new(:str,:int);	# 202 CMDBATnew (_1210:bat[:str,:int])<-(_1211:str)(_1212:int)
barrier (_1214,_1215,_1216):= chop.newIterator(mb_a);	# 203 CHPbunIterator (_1214:lng)(_1215:str)(_1216:date)<-(mb_a:bat[:str,:date]) jump 209
    _1218 := mtime.dayofweek(_1216);	# 204 MTIMEdate_extract_dayofweek (_1218:int)<-(_1216:date)
    bat.insert(_1210,_1215,_1218);	# 205 BKCinsert_bun (_1219:void)<-(_1210:bat[:str,:int])(_1215:str)(_1218:int)
catch MALexception;	# 206  (MALexception:str) jump 207
exit MALexception;	# 207  (MALexception:str)
    redo (_1214,_1215,_1216):= chop.hasMoreElements(mb_a);	# 208 CHPbunHasMoreElements (_1214:lng)(_1215:str)(_1216:date)<-(mb_a:bat[:str,:date]) jump 204
exit (_1214,_1215,_1216);	# 209  (_1214:lng)(_1215:str)(_1216:date)
    nb_a:bat[:str,:int]  := _1210;	# 210  (nb_a:bat[:str,:int])<-(_1210:bat[:str,:int])
    _1224 := bat.new(:str,:str);	# 211 CMDBATnew (_1224:bat[:str,:str])<-(_1225:str)(_1226:str)
barrier (_1228,_1229,_1230):= chop.newIterator(nb_a);	# 212 CHPbunIterator (_1228:lng)(_1229:str)(_1230:int)<-(nb_a:bat[:str,:int]) jump 218
    _1232 := mtime.dayname(_1230);	# 213 MTIMEday_to_str (_1232:str)<-(_1230:int)
    bat.insert(_1224,_1229,_1232);	# 214 BKCinsert_bun (_1233:void)<-(_1224:bat[:str,:str])(_1229:str)(_1232:str)
catch MALexception;	# 215  (MALexception:str) jump 216
exit MALexception;	# 216  (MALexception:str)
    redo (_1228,_1229,_1230):= chop.hasMoreElements(nb_a);	# 217 CHPbunHasMoreElements (_1228:lng)(_1229:str)(_1230:int)<-(nb_a:bat[:str,:int]) jump 213
exit (_1228,_1229,_1230);	# 218  (_1228:lng)(_1229:str)(_1230:int)
    ob_a:bat[:str,:str]  := _1224;	# 219  (ob_a:bat[:str,:str])<-(_1224:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 220 BKCsetColumn (_183:void)<-(ob_a:bat[:str,:str])(_176:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 221 IOprint_val (_184:int)<-(_185:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 222 IOtable (qb_a:int)<-(rule_bat:bat[:str,:rule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 223  (_188:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 224 BKCsetColumn (rb_a:void)<-(rule_bat:bat[:str,:rule])(_190:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 225  (_192:str)
    _1238 := bat.new(:str,:date);	# 226 CMDBATnew (_1238:bat[:str,:date])<-(_1239:str)(_485:date)
barrier (_1241,_1242,_1243):= chop.newIterator(rule_bat);	# 227 CHPbunIterator (_1241:lng)(_1242:str)(_1243:rule)<-(rule_bat:bat[:str,:rule]) jump 233
    _1245 := mtime.compute(_1243,1572);	# 228 MTIMEcompute_rule_foryear (_1245:date)<-(_1243:rule)(_194:int)
    bat.insert(_1238,_1242,_1245);	# 229 BKCinsert_bun (_1246:void)<-(_1238:bat[:str,:date])(_1242:str)(_1245:date)
catch MALexception;	# 230  (MALexception:str) jump 231
exit MALexception;	# 231  (MALexception:str)
    redo (_1241,_1242,_1243):= chop.hasMoreElements(rule_bat);	# 232 CHPbunHasMoreElements (_1241:lng)(_1242:str)(_1243:rule)<-(rule_bat:bat[:str,:rule]) jump 228
exit (_1241,_1242,_1243);	# 233  (_1241:lng)(_1242:str)(_1243:rule)
    sb_a:bat[:str,:date]  := _1238;	# 234  (sb_a:bat[:str,:date])<-(_1238:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 235 BKCsetColumn (tb_a:void)<-(sb_a:bat[:str,:date])(_196:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 236  (_198:str)
    _1251 := bat.new(:str,:date);	# 237 CMDBATnew (_1251:bat[:str,:date])<-(_1252:str)(_485:date)
barrier (_1254,_1255,_1256):= chop.newIterator(rule_bat);	# 238 CHPbunIterator (_1254:lng)(_1255:str)(_1256:rule)<-(rule_bat:bat[:str,:rule]) jump 244
    _1258 := mtime.compute(_1256,1572);	# 239 MTIMEcompute_rule_foryear (_1258:date)<-(_1256:rule)(_194:int)
    bat.insert(_1251,_1255,_1258);	# 240 BKCinsert_bun (_1259:void)<-(_1251:bat[:str,:date])(_1255:str)(_1258:date)
catch MALexception;	# 241  (MALexception:str) jump 242
exit MALexception;	# 242  (MALexception:str)
    redo (_1254,_1255,_1256):= chop.hasMoreElements(rule_bat);	# 243 CHPbunHasMoreElements (_1254:lng)(_1255:str)(_1256:rule)<-(rule_bat:bat[:str,:rule]) jump 239
exit (_1254,_1255,_1256);	# 244  (_1254:lng)(_1255:str)(_1256:rule)
    ub_a:bat[:str,:date]  := _1251;	# 245  (ub_a:bat[:str,:date])<-(_1251:bat[:str,:date])
    _1264 := bat.new(:str,:int);	# 246 CMDBATnew (_1264:bat[:str,:int])<-(_1265:str)(_1266:int)
barrier (_1268,_1269,_1270):= chop.newIterator(ub_a);	# 247 CHPbunIterator (_1268:lng)(_1269:str)(_1270:date)<-(ub_a:bat[:str,:date]) jump 253
    _1272 := mtime.dayofweek(_1270);	# 248 MTIMEdate_extract_dayofweek (_1272:int)<-(_1270:date)
    bat.insert(_1264,_1269,_1272);	# 249 BKCinsert_bun (_1273:void)<-(_1264:bat[:str,:int])(_1269:str)(_1272:int)
catch MALexception;	# 250  (MALexception:str) jump 251
exit MALexception;	# 251  (MALexception:str)
    redo (_1268,_1269,_1270):= chop.hasMoreElements(ub_a);	# 252 CHPbunHasMoreElements (_1268:lng)(_1269:str)(_1270:date)<-(ub_a:bat[:str,:date]) jump 248
exit (_1268,_1269,_1270);	# 253  (_1268:lng)(_1269:str)(_1270:date)
    vb_a:bat[:str,:int]  := _1264;	# 254  (vb_a:bat[:str,:int])<-(_1264:bat[:str,:int])
    _1278 := bat.new(:str,:str);	# 255 CMDBATnew (_1278:bat[:str,:str])<-(_1279:str)(_1280:str)
barrier (_1282,_1283,_1284):= chop.newIterator(vb_a);	# 256 CHPbunIterator (_1282:lng)(_1283:str)(_1284:int)<-(vb_a:bat[:str,:int]) jump 262
    _1286 := mtime.dayname(_1284);	# 257 MTIMEday_to_str (_1286:str)<-(_1284:int)
    bat.insert(_1278,_1283,_1286);	# 258 BKCinsert_bun (_1287:void)<-(_1278:bat[:str,:str])(_1283:str)(_1286:str)
catch MALexception;	# 259  (MALexception:str) jump 260
exit MALexception;	# 260  (MALexception:str)
    redo (_1282,_1283,_1284):= chop.hasMoreElements(vb_a);	# 261 CHPbunHasMoreElements (_1282:lng)(_1283:str)(_1284:int)<-(vb_a:bat[:str,:int]) jump 257
exit (_1282,_1283,_1284);	# 262  (_1282:lng)(_1283:str)(_1284:int)
    wb_a:bat[:str,:str]  := _1278;	# 263  (wb_a:bat[:str,:str])<-(_1278:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 264 BKCsetColumn (xb_a:void)<-(wb_a:bat[:str,:str])(_196:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 265  (_206:str)
    _1292 := bat.new(:str,:date);	# 266 CMDBATnew (_1292:bat[:str,:date])<-(_1293:str)(_485:date)
barrier (_1295,_1296,_1297):= chop.newIterator(rule_bat);	# 267 CHPbunIterator (_1295:lng)(_1296:str)(_1297:rule)<-(rule_bat:bat[:str,:rule]) jump 273
    _1299 := mtime.compute(_1297,1);	# 268 MTIMEcompute_rule_foryear (_1299:date)<-(_1297:rule)(_208:int)
    bat.insert(_1292,_1296,_1299);	# 269 BKCinsert_bun (_1300:void)<-(_1292:bat[:str,:date])(_1296:str)(_1299:date)
catch MALexception;	# 270  (MALexception:str) jump 271
exit MALexception;	# 271  (MALexception:str)
    redo (_1295,_1296,_1297):= chop.hasMoreElements(rule_bat);	# 272 CHPbunHasMoreElements (_1295:lng)(_1296:str)(_1297:rule)<-(rule_bat:bat[:str,:rule]) jump 268
exit (_1295,_1296,_1297);	# 273  (_1295:lng)(_1296:str)(_1297:rule)
    yb_a:bat[:str,:date]  := _1292;	# 274  (yb_a:bat[:str,:date])<-(_1292:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 275 BKCsetColumn (ac_a:void)<-(yb_a:bat[:str,:date])(_210:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 276  (_212:str)
    _1305 := bat.new(:str,:date);	# 277 CMDBATnew (_1305:bat[:str,:date])<-(_1306:str)(_485:date)
barrier (_1308,_1309,_1310):= chop.newIterator(rule_bat);	# 278 CHPbunIterator (_1308:lng)(_1309:str)(_1310:rule)<-(rule_bat:bat[:str,:rule]) jump 284
    _1312 := mtime.compute(_1310,1);	# 279 MTIMEcompute_rule_foryear (_1312:date)<-(_1310:rule)(_208:int)
    bat.insert(_1305,_1309,_1312);	# 280 BKCinsert_bun (_1313:void)<-(_1305:bat[:str,:date])(_1309:str)(_1312:date)
catch MALexception;	# 281  (MALexception:str) jump 282
exit MALexception;	# 282  (MALexception:str)
    redo (_1308,_1309,_1310):= chop.hasMoreElements(rule_bat);	# 283 CHPbunHasMoreElements (_1308:lng)(_1309:str)(_1310:rule)<-(rule_bat:bat[:str,:rule]) jump 279
exit (_1308,_1309,_1310);	# 284  (_1308:lng)(_1309:str)(_1310:rule)
    bc_a:bat[:str,:date]  := _1305;	# 285  (bc_a:bat[:str,:date])<-(_1305:bat[:str,:date])
    _1318 := bat.new(:str,:int);	# 286 CMDBATnew (_1318:bat[:str,:int])<-(_1319:str)(_1320:int)
barrier (_1322,_1323,_1324):= chop.newIterator(bc_a);	# 287 CHPbunIterator (_1322:lng)(_1323:str)(_1324:date)<-(bc_a:bat[:str,:date]) jump 293
    _1326 := mtime.dayofweek(_1324);	# 288 MTIMEdate_extract_dayofweek (_1326:int)<-(_1324:date)
    bat.insert(_1318,_1323,_1326);	# 289 BKCinsert_bun (_1327:void)<-(_1318:bat[:str,:int])(_1323:str)(_1326:int)
catch MALexception;	# 290  (MALexception:str) jump 291
exit MALexception;	# 291  (MALexception:str)
    redo (_1322,_1323,_1324):= chop.hasMoreElements(bc_a);	# 292 CHPbunHasMoreElements (_1322:lng)(_1323:str)(_1324:date)<-(bc_a:bat[:str,:date]) jump 288
exit (_1322,_1323,_1324);	# 293  (_1322:lng)(_1323:str)(_1324:date)
    cc_a:bat[:str,:int]  := _1318;	# 294  (cc_a:bat[:str,:int])<-(_1318:bat[:str,:int])
    _1332 := bat.new(:str,:str);	# 295 CMDBATnew (_1332:bat[:str,:str])<-(_1333:str)(_1334:str)
barrier (_1336,_1337,_1338):= chop.newIterator(cc_a);	# 296 CHPbunIterator (_1336:lng)(_1337:str)(_1338:int)<-(cc_a:bat[:str,:int]) jump 302
    _1340 := mtime.dayname(_1338);	# 297 MTIMEday_to_str (_1340:str)<-(_1338:int)
    bat.insert(_1332,_1337,_1340);	# 298 BKCinsert_bun (_1341:void)<-(_1332:bat[:str,:str])(_1337:str)(_1340:str)
catch MALexception;	# 299  (MALexception:str) jump 300
exit MALexception;	# 300  (MALexception:str)
    redo (_1336,_1337,_1338):= chop.hasMoreElements(cc_a);	# 301 CHPbunHasMoreElements (_1336:lng)(_1337:str)(_1338:int)<-(cc_a:bat[:str,:int]) jump 297
exit (_1336,_1337,_1338);	# 302  (_1336:lng)(_1337:str)(_1338:int)
    dc_a:bat[:str,:str]  := _1332;	# 303  (dc_a:bat[:str,:str])<-(_1332:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 304 BKCsetColumn (ec_a:void)<-(dc_a:bat[:str,:str])(_210:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 305  (_219:str)
    _1346 := bat.new(:str,:date);	# 306 CMDBATnew (_1346:bat[:str,:date])<-(_1347:str)(_485:date)
barrier (_1349,_1350,_1351):= chop.newIterator(rule_bat);	# 307 CHPbunIterator (_1349:lng)(_1350:str)(_1351:rule)<-(rule_bat:bat[:str,:rule]) jump 313
    _1353 := mtime.compute(_1351,-2000);	# 308 MTIMEcompute_rule_foryear (_1353:date)<-(_1351:rule)(_221:int)
    bat.insert(_1346,_1350,_1353);	# 309 BKCinsert_bun (_1354:void)<-(_1346:bat[:str,:date])(_1350:str)(_1353:date)
catch MALexception;	# 310  (MALexception:str) jump 311
exit MALexception;	# 311  (MALexception:str)
    redo (_1349,_1350,_1351):= chop.hasMoreElements(rule_bat);	# 312 CHPbunHasMoreElements (_1349:lng)(_1350:str)(_1351:rule)<-(rule_bat:bat[:str,:rule]) jump 308
exit (_1349,_1350,_1351);	# 313  (_1349:lng)(_1350:str)(_1351:rule)
    fc_a:bat[:str,:date]  := _1346;	# 314  (fc_a:bat[:str,:date])<-(_1346:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 315 BKCsetColumn (gc_a:void)<-(fc_a:bat[:str,:date])(_223:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 316  (_225:str)
    _1359 := bat.new(:str,:date);	# 317 CMDBATnew (_1359:bat[:str,:date])<-(_1360:str)(_485:date)
barrier (_1362,_1363,_1364):= chop.newIterator(rule_bat);	# 318 CHPbunIterator (_1362:lng)(_1363:str)(_1364:rule)<-(rule_bat:bat[:str,:rule]) jump 324
    _1366 := mtime.compute(_1364,-2000);	# 319 MTIMEcompute_rule_foryear (_1366:date)<-(_1364:rule)(_221:int)
    bat.insert(_1359,_1363,_1366);	# 320 BKCinsert_bun (_1367:void)<-(_1359:bat[:str,:date])(_1363:str)(_1366:date)
catch MALexception;	# 321  (MALexception:str) jump 322
exit MALexception;	# 322  (MALexception:str)
    redo (_1362,_1363,_1364):= chop.hasMoreElements(rule_bat);	# 323 CHPbunHasMoreElements (_1362:lng)(_1363:str)(_1364:rule)<-(rule_bat:bat[:str,:rule]) jump 319
exit (_1362,_1363,_1364);	# 324  (_1362:lng)(_1363:str)(_1364:rule)
    hc_a:bat[:str,:date]  := _1359;	# 325  (hc_a:bat[:str,:date])<-(_1359:bat[:str,:date])
    _1372 := bat.new(:str,:int);	# 326 CMDBATnew (_1372:bat[:str,:int])<-(_1373:str)(_1374:int)
barrier (_1376,_1377,_1378):= chop.newIterator(hc_a);	# 327 CHPbunIterator (_1376:lng)(_1377:str)(_1378:date)<-(hc_a:bat[:str,:date]) jump 333
    _1380 := mtime.dayofweek(_1378);	# 328 MTIMEdate_extract_dayofweek (_1380:int)<-(_1378:date)
    bat.insert(_1372,_1377,_1380);	# 329 BKCinsert_bun (_1381:void)<-(_1372:bat[:str,:int])(_1377:str)(_1380:int)
catch MALexception;	# 330  (MALexception:str) jump 331
exit MALexception;	# 331  (MALexception:str)
    redo (_1376,_1377,_1378):= chop.hasMoreElements(hc_a);	# 332 CHPbunHasMoreElements (_1376:lng)(_1377:str)(_1378:date)<-(hc_a:bat[:str,:date]) jump 328
exit (_1376,_1377,_1378);	# 333  (_1376:lng)(_1377:str)(_1378:date)
    ic_a:bat[:str,:int]  := _1372;	# 334  (ic_a:bat[:str,:int])<-(_1372:bat[:str,:int])
    _1386 := bat.new(:str,:str);	# 335 CMDBATnew (_1386:bat[:str,:str])<-(_1387:str)(_1388:str)
barrier (_1390,_1391,_1392):= chop.newIterator(ic_a);	# 336 CHPbunIterator (_1390:lng)(_1391:str)(_1392:int)<-(ic_a:bat[:str,:int]) jump 342
    _1394 := mtime.dayname(_1392);	# 337 MTIMEday_to_str (_1394:str)<-(_1392:int)
    bat.insert(_1386,_1391,_1394);	# 338 BKCinsert_bun (_1395:void)<-(_1386:bat[:str,:str])(_1391:str)(_1394:str)
catch MALexception;	# 339  (MALexception:str) jump 340
exit MALexception;	# 340  (MALexception:str)
    redo (_1390,_1391,_1392):= chop.hasMoreElements(ic_a);	# 341 CHPbunHasMoreElements (_1390:lng)(_1391:str)(_1392:int)<-(ic_a:bat[:str,:int]) jump 337
exit (_1390,_1391,_1392);	# 342  (_1390:lng)(_1391:str)(_1392:int)
    jc_a:bat[:str,:str]  := _1386;	# 343  (jc_a:bat[:str,:str])<-(_1386:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 344 BKCsetColumn (kc_a:void)<-(jc_a:bat[:str,:str])(_223:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 345 IOprint_val (_230:int)<-(_231:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 346 IOtable (lc_a:int)<-(rule_bat:bat[:str,:rule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 347  (_234:str)
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 348  (_236:str)
## test the various ways to create tzones, using some of the above created rules 	# 349  (_238:str)
    tzone_00 := mtime.tzone("GMT");	# 350 MTIMEtzone_fromstr (tzone_00:tzone)<-(_240:str)
#var tzone_00 := mtime.tzone("GMT"); 	# 351  (_242:str)
    tzone_01 := mtime.tzone("GMT+01:00");	# 352 MTIMEtzone_fromstr (tzone_01:tzone)<-(_244:str)
#var tzone_01 := mtime.tzone("GMT+01:00"); 	# 353  (_246:str)
    tzone_02 := mtime.tzone("GMT+0100");	# 354 MTIMEtzone_fromstr (tzone_02:tzone)<-(_248:str)
#var tzone_02 := mtime.tzone("GMT+0100"); 	# 355  (_250:str)
    tzone_03 := mtime.tzone(60,rule_oct,rule_mar);	# 356 MTIMEtzone_create_dst (tzone_03:tzone)<-(_252:int)(rule_oct:rule)(rule_mar:rule)
#var tzone_03 := mtime.tzone(60, rule_oct, rule_mar); 	# 357  (_254:str)
    tzone_04 := mtime.tzone(0,rule_jan,rule_aug);	# 358 MTIMEtzone_create_dst (tzone_04:tzone)<-(_256:int)(rule_jan:rule)(rule_aug:rule)
#var tzone_04 := mtime.tzone(0, rule_jan, rule_aug); 	# 359  (_258:str)
    tzone_05 := mtime.tzone(-97,rule_oct,rule_apr);	# 360 MTIMEtzone_create_dst (tzone_05:tzone)<-(_260:int)(rule_oct:rule)(rule_apr:rule)
#var tzone_05 := mtime.tzone(-97, rule_oct, rule_apr); 	# 361  (_262:str)
    tzone_06 := mtime.tzone(-97,rule_may,rule_sep);	# 362 MTIMEtzone_create_dst (tzone_06:tzone)<-(_260:int)(rule_may:rule)(rule_sep:rule)
#var tzone_06 := mtime.tzone(-97, rule_may, rule_sep); 	# 363  (_265:str)
    mc_a := calc.*(23,60);	# 364 CALCbinaryMULintint (mc_a:int)<-(_267:int)(_252:int)
    tzone_07 := mtime.tzone(mc_a,rule_apr,rule_nov);	# 365 MTIMEtzone_create_dst (tzone_07:tzone)<-(mc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_07 := mtime.tzone(23*60, rule_apr, rule_nov); 	# 366  (_270:str)
    nc_a := calc.*(-23,59);	# 367 CALCbinaryMULintint (nc_a:int)<-(_272:int)(_273:int)
    oc_a := calc.-(nc_a,59);	# 368 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)(_273:int)
    tzone_08 := mtime.tzone(oc_a);	# 369 MTIMEtzone_create (tzone_08:tzone)<-(oc_a:int)
#var tzone_08 := mtime.tzone((-23*59) - 59); 	# 370  (_277:str)
    tzone_09 := mtime.tzone(0);	# 371 MTIMEtzone_create (tzone_09:tzone)<-(_256:int)
#var tzone_09 := mtime.tzone(0); 	# 372  (_280:str)
    tzone_10 := mtime.tzone(-60);	# 373 MTIMEtzone_create (tzone_10:tzone)<-(_282:int)
#var tzone_10 := mtime.tzone(-60); 	# 374  (_284:str)
    pc_a := calc.*(23,60);	# 375 CALCbinaryMULintint (pc_a:int)<-(_267:int)(_286:int)
    qc_a := calc.+(pc_a,59);	# 376 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)(_273:int)
    tzone_11 := mtime.tzone(qc_a);	# 377 MTIMEtzone_create (tzone_11:tzone)<-(qc_a:int)
#var tzone_11 := mtime.tzone((23*60)+59); 	# 378  (_290:str)
    tzone_12 := mtime.tzone(60);	# 379 MTIMEtzone_create (tzone_12:tzone)<-(_286:int)
#var tzone_12 := mtime.tzone(60); 	# 380  (_293:str)
## nil tzones 	# 381  (_295:str)
    tzone_13 := mtime.tzone(60,rule_feb,rule_dec);	# 382 MTIMEtzone_create_dst (tzone_13:tzone)<-(_286:int)(rule_feb:rule)(rule_dec:rule)
#var tzone_13 := mtime.tzone(60, rule_feb, rule_dec); 	# 383  (_298:str)
    rc_a := calc.*(24,60);	# 384 CALCbinaryMULintint (rc_a:int)<-(_300:int)(_286:int)
    tzone_15 := mtime.tzone(rc_a,rule_apr,rule_nov);	# 385 MTIMEtzone_create_dst (tzone_15:tzone)<-(rc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_15 := mtime.tzone(24*60, rule_apr, rule_nov); 	# 386  (_303:str)
    tzone_bat := bat.new(:oid,:tzone);	# 387 CMDBATnew (tzone_bat:bat[:oid,:tzone])<-(_305:oid)(_306:tzone)
#var tzone_bat := bat.new(oid,tzone); 	# 388  (_308:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 389 BKCinsert_bun_oid_any (_309:void)<-(tzone_bat:bat[:oid,:tzone])(_310:oid)(tzone_00:tzone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 390 BKCinsert_bun_oid_any (_311:void)<-(tzone_bat:bat[:oid,:tzone])(_312:oid)(tzone_01:tzone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 391 BKCinsert_bun_oid_any (_313:void)<-(tzone_bat:bat[:oid,:tzone])(_314:oid)(tzone_02:tzone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 392  (_316:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 393 BKCinsert_bun_oid_any (_317:void)<-(tzone_bat:bat[:oid,:tzone])(_318:oid)(tzone_03:tzone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 394 BKCinsert_bun_oid_any (_319:void)<-(tzone_bat:bat[:oid,:tzone])(_320:oid)(tzone_04:tzone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 395 BKCinsert_bun_oid_any (_321:void)<-(tzone_bat:bat[:oid,:tzone])(_322:oid)(tzone_05:tzone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 396  (_324:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 397 BKCinsert_bun_oid_any (_325:void)<-(tzone_bat:bat[:oid,:tzone])(_326:oid)(tzone_06:tzone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 398 BKCinsert_bun_oid_any (_327:void)<-(tzone_bat:bat[:oid,:tzone])(_328:oid)(tzone_07:tzone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 399 BKCinsert_bun_oid_any (_329:void)<-(tzone_bat:bat[:oid,:tzone])(_330:oid)(tzone_08:tzone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 400  (_332:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 401 BKCinsert_bun_oid_any (_333:void)<-(tzone_bat:bat[:oid,:tzone])(_334:oid)(tzone_09:tzone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 402 BKCinsert_bun_oid_any (_335:void)<-(tzone_bat:bat[:oid,:tzone])(_336:oid)(tzone_10:tzone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 403 BKCinsert_bun_oid_any (_337:void)<-(tzone_bat:bat[:oid,:tzone])(_338:oid)(tzone_11:tzone)
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 404  (_340:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 405 BKCinsert_bun_oid_any (_341:void)<-(tzone_bat:bat[:oid,:tzone])(_342:oid)(tzone_12:tzone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 406 BKCinsert_bun_oid_any (_343:void)<-(tzone_bat:bat[:oid,:tzone])(_344:oid)(tzone_13:tzone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 407 BKCinsert_bun_oid_any (_345:void)<-(tzone_bat:bat[:oid,:tzone])(_346:oid)(tzone_15:tzone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 408  (_348:str)
## test the operations on tzones 	# 409  (_350:str)
    bat.setName(tzone_bat,"tzone");	# 410 BKCsetName (_351:void)<-(tzone_bat:bat[:oid,:tzone])(_352:str)
#io.print(tzone_bat); 	# 411  (_354:str)
#io.print("start error"); 	# 412  (_356:str)
#x:= getRefCount(tzone_bat); 	# 413  (_358:str)
#io.print(x); 	# 414  (_360:str)
#jd_a := io.print(tzone_bat); 	# 415  (_362:str)
#io.print("end"); 	# 416  (_364:str)
#io.print(x); 	# 417  (_360:str)
#x:= getRefCount(tzone_bat); 	# 418  (_358:str)
    io.print(tzone_bat);	# 419 IOprint_val (_367:int)<-(tzone_bat:bat[:oid,:tzone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 420  (_369:str)
    _1400 := bat.new(:oid,:int);	# 421 CMDBATnew (_1400:bat[:oid,:int])<-(_305:oid)(_1401:int)
barrier (_1403,_1404,_1405):= chop.newIterator(tzone_bat);	# 422 CHPbunIterator (_1403:lng)(_1404:oid)(_1405:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 428
    _1407 := mtime.minutes(_1405);	# 423 MTIMEtzone_extract_minutes (_1407:int)<-(_1405:tzone)
    bat.insert(_1400,_1404,_1407);	# 424 BKCinsert_bun_oid_any (_1408:void)<-(_1400:bat[:oid,:int])(_1404:oid)(_1407:int)
catch MALexception;	# 425  (MALexception:str) jump 426
exit MALexception;	# 426  (MALexception:str)
    redo (_1403,_1404,_1405):= chop.hasMoreElements(tzone_bat);	# 427 CHPbunHasMoreElements (_1403:lng)(_1404:oid)(_1405:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 423
exit (_1403,_1404,_1405);	# 428  (_1403:lng)(_1404:oid)(_1405:tzone)
    kd_a:bat[:oid,:int]  := _1400;	# 429  (kd_a:bat[:oid,:int])<-(_1400:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 430 BKCsetColumn (_372:void)<-(kd_a:bat[:oid,:int])(_373:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 431  (_375:str)
    _1413 := bat.new(:oid,:rule);	# 432 CMDBATnew (_1413:bat[:oid,:rule])<-(_305:oid)(_78:rule)
barrier (_1415,_1416,_1417):= chop.newIterator(tzone_bat);	# 433 CHPbunIterator (_1415:lng)(_1416:oid)(_1417:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 439
    _1419 := mtime.start_dst(_1417);	# 434 MTIMEtzone_extract_start (_1419:rule)<-(_1417:tzone)
    bat.insert(_1413,_1416,_1419);	# 435 BKCinsert_bun_oid_any (_1420:void)<-(_1413:bat[:oid,:rule])(_1416:oid)(_1419:rule)
catch MALexception;	# 436  (MALexception:str) jump 437
exit MALexception;	# 437  (MALexception:str)
    redo (_1415,_1416,_1417):= chop.hasMoreElements(tzone_bat);	# 438 CHPbunHasMoreElements (_1415:lng)(_1416:oid)(_1417:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 434
exit (_1415,_1416,_1417);	# 439  (_1415:lng)(_1416:oid)(_1417:tzone)
    md_a:bat[:oid,:rule]  := _1413;	# 440  (md_a:bat[:oid,:rule])<-(_1413:bat[:oid,:rule])
    bat.setColumn(md_a,"start_dst");	# 441 BKCsetColumn (_378:void)<-(md_a:bat[:oid,:rule])(_379:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 442  (_381:str)
    _1425 := bat.new(:oid,:rule);	# 443 CMDBATnew (_1425:bat[:oid,:rule])<-(_305:oid)(_78:rule)
barrier (_1427,_1428,_1429):= chop.newIterator(tzone_bat);	# 444 CHPbunIterator (_1427:lng)(_1428:oid)(_1429:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 450
    _1431 := mtime.end_dst(_1429);	# 445 MTIMEtzone_extract_end (_1431:rule)<-(_1429:tzone)
    bat.insert(_1425,_1428,_1431);	# 446 BKCinsert_bun_oid_any (_1432:void)<-(_1425:bat[:oid,:rule])(_1428:oid)(_1431:rule)
catch MALexception;	# 447  (MALexception:str) jump 448
exit MALexception;	# 448  (MALexception:str)
    redo (_1427,_1428,_1429):= chop.hasMoreElements(tzone_bat);	# 449 CHPbunHasMoreElements (_1427:lng)(_1428:oid)(_1429:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 445
exit (_1427,_1428,_1429);	# 450  (_1427:lng)(_1428:oid)(_1429:tzone)
    od_a:bat[:oid,:rule]  := _1425;	# 451  (od_a:bat[:oid,:rule])<-(_1425:bat[:oid,:rule])
    bat.setColumn(od_a,"end_dst");	# 452 BKCsetColumn (_384:void)<-(od_a:bat[:oid,:rule])(_385:str)
    io.print("print(kd_a,md_a,od_a)");	# 453 IOprint_val (_386:int)<-(_387:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 454 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:rule])(od_a:bat[:oid,:rule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 455  (_390:str)
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 456  (_392:str)
## test the various ways to create dates 	# 457  (_394:str)
    date_00 := mtime.date(2000,1,1);	# 458 MTIMEdate_create (date_00:date)<-(_396:int)(_397:int)(_397:int)
#var date_00 := date(2000,01,01); 	# 459  (_399:str)
    date_01 := mtime.date("5000-JAN-01");	# 460 MTIMEdate_fromstr (date_01:date)<-(_401:str)
#var date_01 := date("5000-JAN-01"); 	# 461  (_403:str)
    date_02 := mtime.date("1968-FEBR-29");	# 462 MTIMEdate_fromstr (date_02:date)<-(_405:str)
#var date_02 := date("1968-FEBR-29"); 	# 463  (_407:str)
    date_03 := mtime.date("1-MARCH-01");	# 464 MTIMEdate_fromstr (date_03:date)<-(_409:str)
#var date_03 := date("1-MARCH-01"); 	# 465  (_411:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 466 MTIMEdate_fromstr (date_04:date)<-(_413:str)
#var date_04 := date("-5867411-JAN-1"); 	# 467  (_415:str)
    date_05 := mtime.date("-768/octobe/01");	# 468 MTIMEdate_fromstr (date_05:date)<-(_417:str)
#var date_05 := date("-768/octobe/01"); 	# 469  (_419:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 470 MTIMEdate_fromstr (date_06:date)<-(_421:str)
#var date_06 := date("5000\\novembe\\01"); 	# 471  (_423:str)
    date_07 := mtime.date("-1999/jun/01");	# 472 MTIMEdate_fromstr (date_07:date)<-(_425:str)
#var date_07 := date("-1999/jun/01"); 	# 473  (_427:str)
    date_08 := mtime.date("2000-jul-14");	# 474 MTIMEdate_fromstr (date_08:date)<-(_429:str)
#var date_08 := date("2000-jul-14"); 	# 475  (_431:str)
    date_09 := mtime.date("1999-sept-01");	# 476 MTIMEdate_fromstr (date_09:date)<-(_433:str)
#var date_09 := date("1999-sept-01"); 	# 477  (_435:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 478 MTIMEdate_fromstr (date_10:date)<-(_437:str)
#var date_10 := date("1998-decemBeR-01"); 	# 479  (_439:str)
    date_11 := mtime.date("1953 may                01");	# 480 MTIMEdate_fromstr (date_11:date)<-(_441:str)
#var date_11 := date("1953 may                01"); 	# 481  (_443:str)
    date_12 := mtime.date("5867411-DEC-31");	# 482 MTIMEdate_fromstr (date_12:date)<-(_445:str)
#var date_12 := date("5867411-DEC-31"); 	# 483  (_447:str)
## nil dates 	# 484  (_449:str)
    date_13 := mtime.date(1996,13,1);	# 485 MTIMEdate_create (date_13:date)<-(_451:int)(_452:int)(_453:int)
#var date_13 := date(1996,13,1); 	# 486  (_455:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 487 MTIMEdate_fromstr (date_14:date)<-(_457:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 488  (_459:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 489 MTIMEdate_fromstr (date_15:date)<-(_461:str)
#var date_15 := date("1999-JANUARI-01"); 	# 490  (_463:str)
    date_16 := mtime.date("1999-FEBR-29");	# 491 MTIMEdate_fromstr (date_16:date)<-(_465:str)
#var date_16 := date("1999-FEBR-29"); 	# 492  (_467:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 493 MTIMEdate_fromstr (date_17:date)<-(_469:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 494  (_471:str)
    date_18 := mtime.date("5000\novembe31");	# 495 MTIMEdate_fromstr (date_18:date)<-(_473:str)
#var date_18 := date("5000\novembe\31"); 	# 496  (_475:str)
    date_19 := mtime.date("nil");	# 497 MTIMEdate_fromstr (date_19:date)<-(_477:str)
#var date_19 := date("nil"); 	# 498  (_479:str)
    date_20 := mtime.date("1999-sept-31");	# 499 MTIMEdate_fromstr (date_20:date)<-(_481:str)
#var date_20 := date("1999-sept-31"); 	# 500  (_483:str)
    date_bat := bat.new(:oid,:date);	# 501 CMDBATnew (date_bat:bat[:oid,:date])<-(_305:oid)(_485:date)
#var date_bat := bat.new(oid,date); 	# 502  (_487:str)
    bat.insert(date_bat,0@0,date_00);	# 503 BKCinsert_bun_oid_any (_488:void)<-(date_bat:bat[:oid,:date])(_489:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 504 BKCinsert_bun_oid_any (_490:void)<-(date_bat:bat[:oid,:date])(_491:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 505 BKCinsert_bun_oid_any (_492:void)<-(date_bat:bat[:oid,:date])(_493:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 506  (_495:str)
    bat.insert(date_bat,3@0,date_03);	# 507 BKCinsert_bun_oid_any (_496:void)<-(date_bat:bat[:oid,:date])(_497:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 508 BKCinsert_bun_oid_any (_498:void)<-(date_bat:bat[:oid,:date])(_499:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 509 BKCinsert_bun_oid_any (_500:void)<-(date_bat:bat[:oid,:date])(_501:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 510  (_503:str)
    bat.insert(date_bat,6@0,date_06);	# 511 BKCinsert_bun_oid_any (_504:void)<-(date_bat:bat[:oid,:date])(_505:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 512 BKCinsert_bun_oid_any (_506:void)<-(date_bat:bat[:oid,:date])(_507:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 513 BKCinsert_bun_oid_any (_508:void)<-(date_bat:bat[:oid,:date])(_509:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 514  (_511:str)
    bat.insert(date_bat,9@0,date_09);	# 515 BKCinsert_bun_oid_any (_512:void)<-(date_bat:bat[:oid,:date])(_513:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 516 BKCinsert_bun_oid_any (_514:void)<-(date_bat:bat[:oid,:date])(_515:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 517 BKCinsert_bun_oid_any (_516:void)<-(date_bat:bat[:oid,:date])(_517:oid)(date_11:date)
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 518  (_519:str)
    bat.insert(date_bat,12@0,date_12);	# 519 BKCinsert_bun_oid_any (_520:void)<-(date_bat:bat[:oid,:date])(_521:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 520 BKCinsert_bun_oid_any (_522:void)<-(date_bat:bat[:oid,:date])(_523:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 521 BKCinsert_bun_oid_any (_524:void)<-(date_bat:bat[:oid,:date])(_525:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 522  (_527:str)
    bat.insert(date_bat,15@0,date_15);	# 523 BKCinsert_bun_oid_any (_528:void)<-(date_bat:bat[:oid,:date])(_529:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 524 BKCinsert_bun_oid_any (_530:void)<-(date_bat:bat[:oid,:date])(_531:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 525 BKCinsert_bun_oid_any (_532:void)<-(date_bat:bat[:oid,:date])(_533:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 526  (_535:str)
    bat.insert(date_bat,18@0,date_18);	# 527 BKCinsert_bun_oid_any (_536:void)<-(date_bat:bat[:oid,:date])(_537:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 528 BKCinsert_bun_oid_any (_538:void)<-(date_bat:bat[:oid,:date])(_539:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 529 BKCinsert_bun_oid_any (_540:void)<-(date_bat:bat[:oid,:date])(_541:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 530  (_543:str)
## test the operations on dates 	# 531  (_545:str)
    ne_a := bat.setColumn(date_bat,"date");	# 532 BKCsetColumn (ne_a:void)<-(date_bat:bat[:oid,:date])(_547:str)
#io.print(date_bat.bat.setColumn("date"), 	# 533  (_549:str)
    _1437 := bat.new(:oid,:int);	# 534 CMDBATnew (_1437:bat[:oid,:int])<-(_305:oid)(_1438:int)
barrier (_1440,_1441,_1442):= chop.newIterator(date_bat);	# 535 CHPbunIterator (_1440:lng)(_1441:oid)(_1442:date)<-(date_bat:bat[:oid,:date]) jump 541
    _1444 := mtime.year(_1442);	# 536 MTIMEdate_extract_year (_1444:int)<-(_1442:date)
    bat.insert(_1437,_1441,_1444);	# 537 BKCinsert_bun_oid_any (_1445:void)<-(_1437:bat[:oid,:int])(_1441:oid)(_1444:int)
catch MALexception;	# 538  (MALexception:str) jump 539
exit MALexception;	# 539  (MALexception:str)
    redo (_1440,_1441,_1442):= chop.hasMoreElements(date_bat);	# 540 CHPbunHasMoreElements (_1440:lng)(_1441:oid)(_1442:date)<-(date_bat:bat[:oid,:date]) jump 536
exit (_1440,_1441,_1442);	# 541  (_1440:lng)(_1441:oid)(_1442:date)
    oe_a:bat[:oid,:int]  := _1437;	# 542  (oe_a:bat[:oid,:int])<-(_1437:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 543 BKCsetColumn (pe_a:void)<-(oe_a:bat[:oid,:int])(_553:str)
#      [year](date_bat).bat.setColumn("year"), 	# 544  (_555:str)
    _1450 := bat.new(:oid,:int);	# 545 CMDBATnew (_1450:bat[:oid,:int])<-(_305:oid)(_1451:int)
barrier (_1453,_1454,_1455):= chop.newIterator(date_bat);	# 546 CHPbunIterator (_1453:lng)(_1454:oid)(_1455:date)<-(date_bat:bat[:oid,:date]) jump 552
    _1457 := mtime.day(_1455);	# 547 MTIMEdate_extract_day (_1457:int)<-(_1455:date)
    bat.insert(_1450,_1454,_1457);	# 548 BKCinsert_bun_oid_any (_1458:void)<-(_1450:bat[:oid,:int])(_1454:oid)(_1457:int)
catch MALexception;	# 549  (MALexception:str) jump 550
exit MALexception;	# 550  (MALexception:str)
    redo (_1453,_1454,_1455):= chop.hasMoreElements(date_bat);	# 551 CHPbunHasMoreElements (_1453:lng)(_1454:oid)(_1455:date)<-(date_bat:bat[:oid,:date]) jump 547
exit (_1453,_1454,_1455);	# 552  (_1453:lng)(_1454:oid)(_1455:date)
    qe_a:bat[:oid,:int]  := _1450;	# 553  (qe_a:bat[:oid,:int])<-(_1450:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 554 BKCsetColumn (re_a:void)<-(qe_a:bat[:oid,:int])(_559:str)
#      [day](date_bat).bat.setColumn("day"), 	# 555  (_561:str)
    _1463 := bat.new(:oid,:int);	# 556 CMDBATnew (_1463:bat[:oid,:int])<-(_305:oid)(_1464:int)
barrier (_1466,_1467,_1468):= chop.newIterator(date_bat);	# 557 CHPbunIterator (_1466:lng)(_1467:oid)(_1468:date)<-(date_bat:bat[:oid,:date]) jump 563
    _1470 := mtime.month(_1468);	# 558 MTIMEdate_extract_month (_1470:int)<-(_1468:date)
    bat.insert(_1463,_1467,_1470);	# 559 BKCinsert_bun_oid_any (_1471:void)<-(_1463:bat[:oid,:int])(_1467:oid)(_1470:int)
catch MALexception;	# 560  (MALexception:str) jump 561
exit MALexception;	# 561  (MALexception:str)
    redo (_1466,_1467,_1468):= chop.hasMoreElements(date_bat);	# 562 CHPbunHasMoreElements (_1466:lng)(_1467:oid)(_1468:date)<-(date_bat:bat[:oid,:date]) jump 558
exit (_1466,_1467,_1468);	# 563  (_1466:lng)(_1467:oid)(_1468:date)
    se_a:bat[:oid,:int]  := _1463;	# 564  (se_a:bat[:oid,:int])<-(_1463:bat[:oid,:int])
    _1476 := bat.new(:oid,:str);	# 565 CMDBATnew (_1476:bat[:oid,:str])<-(_305:oid)(_1477:str)
barrier (_1479,_1480,_1481):= chop.newIterator(se_a);	# 566 CHPbunIterator (_1479:lng)(_1480:oid)(_1481:int)<-(se_a:bat[:oid,:int]) jump 572
    _1483 := mtime.monthname(_1481);	# 567 MTIMEmonth_to_str (_1483:str)<-(_1481:int)
    bat.insert(_1476,_1480,_1483);	# 568 BKCinsert_bun_oid_str (_1484:void)<-(_1476:bat[:oid,:str])(_1480:oid)(_1483:str)
catch MALexception;	# 569  (MALexception:str) jump 570
exit MALexception;	# 570  (MALexception:str)
    redo (_1479,_1480,_1481):= chop.hasMoreElements(se_a);	# 571 CHPbunHasMoreElements (_1479:lng)(_1480:oid)(_1481:int)<-(se_a:bat[:oid,:int]) jump 567
exit (_1479,_1480,_1481);	# 572  (_1479:lng)(_1480:oid)(_1481:int)
    te_a:bat[:oid,:str]  := _1476;	# 573  (te_a:bat[:oid,:str])<-(_1476:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 574 BKCsetColumn (ue_a:void)<-(te_a:bat[:oid,:str])(_567:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 575  (_569:str)
    _1489 := bat.new(:oid,:int);	# 576 CMDBATnew (_1489:bat[:oid,:int])<-(_305:oid)(_1490:int)
barrier (_1492,_1493,_1494):= chop.newIterator(date_bat);	# 577 CHPbunIterator (_1492:lng)(_1493:oid)(_1494:date)<-(date_bat:bat[:oid,:date]) jump 583
    _1496 := mtime.month(_1494);	# 578 MTIMEdate_extract_month (_1496:int)<-(_1494:date)
    bat.insert(_1489,_1493,_1496);	# 579 BKCinsert_bun_oid_any (_1497:void)<-(_1489:bat[:oid,:int])(_1493:oid)(_1496:int)
catch MALexception;	# 580  (MALexception:str) jump 581
exit MALexception;	# 581  (MALexception:str)
    redo (_1492,_1493,_1494):= chop.hasMoreElements(date_bat);	# 582 CHPbunHasMoreElements (_1492:lng)(_1493:oid)(_1494:date)<-(date_bat:bat[:oid,:date]) jump 578
exit (_1492,_1493,_1494);	# 583  (_1492:lng)(_1493:oid)(_1494:date)
    ve_a:bat[:oid,:int]  := _1489;	# 584  (ve_a:bat[:oid,:int])<-(_1489:bat[:oid,:int])
    _1502 := bat.new(:oid,:str);	# 585 CMDBATnew (_1502:bat[:oid,:str])<-(_305:oid)(_1503:str)
barrier (_1505,_1506,_1507):= chop.newIterator(ve_a);	# 586 CHPbunIterator (_1505:lng)(_1506:oid)(_1507:int)<-(ve_a:bat[:oid,:int]) jump 592
    _1509 := mtime.monthname(_1507);	# 587 MTIMEmonth_to_str (_1509:str)<-(_1507:int)
    bat.insert(_1502,_1506,_1509);	# 588 BKCinsert_bun_oid_str (_1510:void)<-(_1502:bat[:oid,:str])(_1506:oid)(_1509:str)
catch MALexception;	# 589  (MALexception:str) jump 590
exit MALexception;	# 590  (MALexception:str)
    redo (_1505,_1506,_1507):= chop.hasMoreElements(ve_a);	# 591 CHPbunHasMoreElements (_1505:lng)(_1506:oid)(_1507:int)<-(ve_a:bat[:oid,:int]) jump 587
exit (_1505,_1506,_1507);	# 592  (_1505:lng)(_1506:oid)(_1507:int)
    we_a:bat[:oid,:str]  := _1502;	# 593  (we_a:bat[:oid,:str])<-(_1502:bat[:oid,:str])
    _1515 := bat.new(:oid,:int);	# 594 CMDBATnew (_1515:bat[:oid,:int])<-(_305:oid)(_1516:int)
barrier (_1518,_1519,_1520):= chop.newIterator(we_a);	# 595 CHPbunIterator (_1518:lng)(_1519:oid)(_1520:str)<-(we_a:bat[:oid,:str]) jump 601
    _1522 := mtime.monthnum(_1520);	# 596 MTIMEmonth_from_str (_1522:int)<-(_1520:str)
    bat.insert(_1515,_1519,_1522);	# 597 BKCinsert_bun_oid_any (_1523:void)<-(_1515:bat[:oid,:int])(_1519:oid)(_1522:int)
catch MALexception;	# 598  (MALexception:str) jump 599
exit MALexception;	# 599  (MALexception:str)
    redo (_1518,_1519,_1520):= chop.hasMoreElements(we_a);	# 600 CHPbunHasMoreElements (_1518:lng)(_1519:oid)(_1520:str)<-(we_a:bat[:oid,:str]) jump 596
exit (_1518,_1519,_1520);	# 601  (_1518:lng)(_1519:oid)(_1520:str)
    xe_a:bat[:oid,:int]  := _1515;	# 602  (xe_a:bat[:oid,:int])<-(_1515:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 603 BKCsetColumn (ye_a:void)<-(xe_a:bat[:oid,:int])(_575:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 604 IOprint_val (_576:int)<-(_577:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 605 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 606  (_580:str)
    _1528 := bat.new(:oid,:date);	# 607 CMDBATnew (_1528:bat[:oid,:date])<-(_305:oid)(_485:date)
barrier (_1530,_1531,_1532):= chop.newIterator(date_bat);	# 608 CHPbunIterator (_1530:lng)(_1531:oid)(_1532:date)<-(date_bat:bat[:oid,:date]) jump 614
    _1534 := mtime.addyears(_1532,-100);	# 609 MTIMEdate_addyears (_1534:date)<-(_1532:date)(_583:int)
    bat.insert(_1528,_1531,_1534);	# 610 BKCinsert_bun_oid_any (_1535:void)<-(_1528:bat[:oid,:date])(_1531:oid)(_1534:date)
catch MALexception;	# 611  (MALexception:str) jump 612
exit MALexception;	# 612  (MALexception:str)
    redo (_1530,_1531,_1532):= chop.hasMoreElements(date_bat);	# 613 CHPbunHasMoreElements (_1530:lng)(_1531:oid)(_1532:date)<-(date_bat:bat[:oid,:date]) jump 609
exit (_1530,_1531,_1532);	# 614  (_1530:lng)(_1531:oid)(_1532:date)
    date_addyears:bat[:oid,:date]  := _1528;	# 615  (date_addyears:bat[:oid,:date])<-(_1528:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 616  (_585:str)
    _1540 := bat.new(:oid,:date);	# 617 CMDBATnew (_1540:bat[:oid,:date])<-(_305:oid)(_485:date)
barrier (_1542,_1543,_1544):= chop.newIterator(date_bat);	# 618 CHPbunIterator (_1542:lng)(_1543:oid)(_1544:date)<-(date_bat:bat[:oid,:date]) jump 624
    _1546 := mtime.addmonths(_1544,1);	# 619 MTIMEdate_addmonths (_1546:date)<-(_1544:date)(_588:int)
    bat.insert(_1540,_1543,_1546);	# 620 BKCinsert_bun_oid_any (_1547:void)<-(_1540:bat[:oid,:date])(_1543:oid)(_1546:date)
catch MALexception;	# 621  (MALexception:str) jump 622
exit MALexception;	# 622  (MALexception:str)
    redo (_1542,_1543,_1544):= chop.hasMoreElements(date_bat);	# 623 CHPbunHasMoreElements (_1542:lng)(_1543:oid)(_1544:date)<-(date_bat:bat[:oid,:date]) jump 619
exit (_1542,_1543,_1544);	# 624  (_1542:lng)(_1543:oid)(_1544:date)
    date_addmonths:bat[:oid,:date]  := _1540;	# 625  (date_addmonths:bat[:oid,:date])<-(_1540:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 626  (_590:str)
    bat.setColumn(date_bat,"date");	# 627 BKCsetColumn (_591:void)<-(date_bat:bat[:oid,:date])(_592:str)
#io.print(date_bat.bat.setColumn("date"), 	# 628  (_594:str)
    bat.setColumn(date_addyears,"min100y");	# 629 BKCsetColumn (_595:void)<-(date_addyears:bat[:oid,:date])(_596:str)
#      date_addyears.bat.setColumn("min100y"), 	# 630  (_598:str)
    _1552 := bat.new(:oid,:int);	# 631 CMDBATnew (_1552:bat[:oid,:int])<-(_305:oid)(_1553:int)
barrier (_1555,_1556,_1557):= chop.newIterator(date_addyears);	# 632 CHPbunIterator (_1555:lng)(_1556:oid)(_1557:date)<-(date_addyears:bat[:oid,:date]) jump 639
    _1559 := algebra.find(date_bat,_1556);	# 633 ALGfind (_1559:date)<-(date_bat:bat[:oid,:date])(_1556:oid)
    _1561 := mtime.diff(_1557,_1559);	# 634 MTIMEdate_diff (_1561:int)<-(_1557:date)(_1559:date)
    bat.insert(_1552,_1556,_1561);	# 635 BKCinsert_bun_oid_any (_1562:void)<-(_1552:bat[:oid,:int])(_1556:oid)(_1561:int)
catch MALexception;	# 636  (MALexception:str) jump 637
exit MALexception;	# 637  (MALexception:str)
    redo (_1555,_1556,_1557):= chop.hasMoreElements(date_addyears);	# 638 CHPbunHasMoreElements (_1555:lng)(_1556:oid)(_1557:date)<-(date_addyears:bat[:oid,:date]) jump 633
exit (_1555,_1556,_1557);	# 639  (_1555:lng)(_1556:oid)(_1557:date)
    df_a:bat[:oid,:int]  := _1552;	# 640  (df_a:bat[:oid,:int])<-(_1552:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 641 BKCsetColumn (_601:void)<-(df_a:bat[:oid,:int])(_602:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 642 IOprint_val (_603:int)<-(_604:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 643 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 644  (_607:str)
    bat.setColumn(date_bat,"date");	# 645 BKCsetColumn (_608:void)<-(date_bat:bat[:oid,:date])(_592:str)
#io.print(date_bat.bat.setColumn("date"), 	# 646  (_594:str)
    bat.setColumn(date_addmonths,"plus1m");	# 647 BKCsetColumn (_610:void)<-(date_addmonths:bat[:oid,:date])(_611:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 648  (_613:str)
    _1567 := bat.new(:oid,:int);	# 649 CMDBATnew (_1567:bat[:oid,:int])<-(_305:oid)(_1568:int)
barrier (_1570,_1571,_1572):= chop.newIterator(date_addmonths);	# 650 CHPbunIterator (_1570:lng)(_1571:oid)(_1572:date)<-(date_addmonths:bat[:oid,:date]) jump 657
    _1574 := algebra.find(date_bat,_1571);	# 651 ALGfind (_1574:date)<-(date_bat:bat[:oid,:date])(_1571:oid)
    _1576 := mtime.diff(_1572,_1574);	# 652 MTIMEdate_diff (_1576:int)<-(_1572:date)(_1574:date)
    bat.insert(_1567,_1571,_1576);	# 653 BKCinsert_bun_oid_any (_1577:void)<-(_1567:bat[:oid,:int])(_1571:oid)(_1576:int)
catch MALexception;	# 654  (MALexception:str) jump 655
exit MALexception;	# 655  (MALexception:str)
    redo (_1570,_1571,_1572):= chop.hasMoreElements(date_addmonths);	# 656 CHPbunHasMoreElements (_1570:lng)(_1571:oid)(_1572:date)<-(date_addmonths:bat[:oid,:date]) jump 651
exit (_1570,_1571,_1572);	# 657  (_1570:lng)(_1571:oid)(_1572:date)
    if_a:bat[:oid,:int]  := _1567;	# 658  (if_a:bat[:oid,:int])<-(_1567:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 659 BKCsetColumn (_615:void)<-(if_a:bat[:oid,:int])(_602:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 660 IOprint_val (_616:int)<-(_617:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 661 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 662  (_620:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 663  (_622:str)
    date_seq := bat.new(:int,:date);	# 664 CMDBATnew (date_seq:bat[:int,:date])<-(_624:int)(_485:date)
#var date_seq := bat.new(int, date); 	# 665  (_626:str)
    i := -375;	# 666  (i:int)<-(_628:int)
#var i := -375; 	# 667  (_630:str)
barrier lf_a := true;	# 668  (lf_a:bit)<-(_632:bit) jump 678
    i := calc.+(i,1);	# 669 CALCbinaryADDintint (i:int)<-(i:int)(_633:int)
    of_a := calc.<(i,375);	# 670 CALCcompLTintint (of_a:bit)<-(i:int)(_635:int)
barrier mf_a := of_a;	# 671  (mf_a:bit)<-(of_a:bit) jump 677
#while ((i :+= 1) < 375) { 	# 672  ($640:str)
    pf_a := mtime.adddays(date_00,i);	# 673 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 674 BKCinsert_bun (_640:void)<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 675  (_642:str)
    redo lf_a;	# 676  (lf_a:bit) jump 669
exit mf_a;	# 677  (mf_a:bit)
exit lf_a;	# 678  (lf_a:bit)
#} 	# 679  (_644:str)
    rf_a := bat.setColumn(date_seq,"date");	# 680 BKCsetColumn (rf_a:void)<-(date_seq:bat[:int,:date])(_646:str)
#io.print(date_seq.bat.setColumn("date"), 	# 681  (_648:str)
    _1582 := bat.new(:int,:int);	# 682 CMDBATnew (_1582:bat[:int,:int])<-(_1583:int)(_1584:int)
barrier (_1586,_1587,_1588):= chop.newIterator(date_seq);	# 683 CHPbunIterator (_1586:lng)(_1587:int)(_1588:date)<-(date_seq:bat[:int,:date]) jump 689
    _1590 := mtime.weekofyear(_1588);	# 684 MTIMEdate_extract_weekofyear (_1590:int)<-(_1588:date)
    bat.insert(_1582,_1587,_1590);	# 685 BKCinsert_bun_int_int (_1591:void)<-(_1582:bat[:int,:int])(_1587:int)(_1590:int)
catch MALexception;	# 686  (MALexception:str) jump 687
exit MALexception;	# 687  (MALexception:str)
    redo (_1586,_1587,_1588):= chop.hasMoreElements(date_seq);	# 688 CHPbunHasMoreElements (_1586:lng)(_1587:int)(_1588:date)<-(date_seq:bat[:int,:date]) jump 684
exit (_1586,_1587,_1588);	# 689  (_1586:lng)(_1587:int)(_1588:date)
    sf_a:bat[:int,:int]  := _1582;	# 690  (sf_a:bat[:int,:int])<-(_1582:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 691 BKCsetColumn (tf_a:void)<-(sf_a:bat[:int,:int])(_652:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 692  (_654:str)
    _1596 := bat.new(:int,:int);	# 693 CMDBATnew (_1596:bat[:int,:int])<-(_1597:int)(_1598:int)
barrier (_1600,_1601,_1602):= chop.newIterator(date_seq);	# 694 CHPbunIterator (_1600:lng)(_1601:int)(_1602:date)<-(date_seq:bat[:int,:date]) jump 700
    _1604 := mtime.dayofweek(_1602);	# 695 MTIMEdate_extract_dayofweek (_1604:int)<-(_1602:date)
    bat.insert(_1596,_1601,_1604);	# 696 BKCinsert_bun_int_int (_1605:void)<-(_1596:bat[:int,:int])(_1601:int)(_1604:int)
catch MALexception;	# 697  (MALexception:str) jump 698
exit MALexception;	# 698  (MALexception:str)
    redo (_1600,_1601,_1602):= chop.hasMoreElements(date_seq);	# 699 CHPbunHasMoreElements (_1600:lng)(_1601:int)(_1602:date)<-(date_seq:bat[:int,:date]) jump 695
exit (_1600,_1601,_1602);	# 700  (_1600:lng)(_1601:int)(_1602:date)
    uf_a:bat[:int,:int]  := _1596;	# 701  (uf_a:bat[:int,:int])<-(_1596:bat[:int,:int])
    _1610 := bat.new(:int,:str);	# 702 CMDBATnew (_1610:bat[:int,:str])<-(_1611:int)(_1612:str)
barrier (_1614,_1615,_1616):= chop.newIterator(uf_a);	# 703 CHPbunIterator (_1614:lng)(_1615:int)(_1616:int)<-(uf_a:bat[:int,:int]) jump 709
    _1618 := mtime.dayname(_1616);	# 704 MTIMEday_to_str (_1618:str)<-(_1616:int)
    bat.insert(_1610,_1615,_1618);	# 705 BKCinsert_bun (_1619:void)<-(_1610:bat[:int,:str])(_1615:int)(_1618:str)
catch MALexception;	# 706  (MALexception:str) jump 707
exit MALexception;	# 707  (MALexception:str)
    redo (_1614,_1615,_1616):= chop.hasMoreElements(uf_a);	# 708 CHPbunHasMoreElements (_1614:lng)(_1615:int)(_1616:int)<-(uf_a:bat[:int,:int]) jump 704
exit (_1614,_1615,_1616);	# 709  (_1614:lng)(_1615:int)(_1616:int)
    vf_a:bat[:int,:str]  := _1610;	# 710  (vf_a:bat[:int,:str])<-(_1610:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 711 BKCsetColumn (wf_a:void)<-(vf_a:bat[:int,:str])(_660:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 712  (_662:str)
    _1624 := bat.new(:int,:int);	# 713 CMDBATnew (_1624:bat[:int,:int])<-(_1625:int)(_1626:int)
barrier (_1628,_1629,_1630):= chop.newIterator(date_seq);	# 714 CHPbunIterator (_1628:lng)(_1629:int)(_1630:date)<-(date_seq:bat[:int,:date]) jump 720
    _1632 := mtime.dayofweek(_1630);	# 715 MTIMEdate_extract_dayofweek (_1632:int)<-(_1630:date)
    bat.insert(_1624,_1629,_1632);	# 716 BKCinsert_bun_int_int (_1633:void)<-(_1624:bat[:int,:int])(_1629:int)(_1632:int)
catch MALexception;	# 717  (MALexception:str) jump 718
exit MALexception;	# 718  (MALexception:str)
    redo (_1628,_1629,_1630):= chop.hasMoreElements(date_seq);	# 719 CHPbunHasMoreElements (_1628:lng)(_1629:int)(_1630:date)<-(date_seq:bat[:int,:date]) jump 715
exit (_1628,_1629,_1630);	# 720  (_1628:lng)(_1629:int)(_1630:date)
    xf_a:bat[:int,:int]  := _1624;	# 721  (xf_a:bat[:int,:int])<-(_1624:bat[:int,:int])
    _1638 := bat.new(:int,:str);	# 722 CMDBATnew (_1638:bat[:int,:str])<-(_1639:int)(_1640:str)
barrier (_1642,_1643,_1644):= chop.newIterator(xf_a);	# 723 CHPbunIterator (_1642:lng)(_1643:int)(_1644:int)<-(xf_a:bat[:int,:int]) jump 729
    _1646 := mtime.dayname(_1644);	# 724 MTIMEday_to_str (_1646:str)<-(_1644:int)
    bat.insert(_1638,_1643,_1646);	# 725 BKCinsert_bun (_1647:void)<-(_1638:bat[:int,:str])(_1643:int)(_1646:str)
catch MALexception;	# 726  (MALexception:str) jump 727
exit MALexception;	# 727  (MALexception:str)
    redo (_1642,_1643,_1644):= chop.hasMoreElements(xf_a);	# 728 CHPbunHasMoreElements (_1642:lng)(_1643:int)(_1644:int)<-(xf_a:bat[:int,:int]) jump 724
exit (_1642,_1643,_1644);	# 729  (_1642:lng)(_1643:int)(_1644:int)
    yf_a:bat[:int,:str]  := _1638;	# 730  (yf_a:bat[:int,:str])<-(_1638:bat[:int,:str])
    _1652 := bat.new(:int,:int);	# 731 CMDBATnew (_1652:bat[:int,:int])<-(_1653:int)(_1654:int)
barrier (_1656,_1657,_1658):= chop.newIterator(yf_a);	# 732 CHPbunIterator (_1656:lng)(_1657:int)(_1658:str)<-(yf_a:bat[:int,:str]) jump 738
    _1660 := mtime.daynum(_1658);	# 733 MTIMEday_from_str (_1660:int)<-(_1658:str)
    bat.insert(_1652,_1657,_1660);	# 734 BKCinsert_bun_int_int (_1661:void)<-(_1652:bat[:int,:int])(_1657:int)(_1660:int)
catch MALexception;	# 735  (MALexception:str) jump 736
exit MALexception;	# 736  (MALexception:str)
    redo (_1656,_1657,_1658):= chop.hasMoreElements(yf_a);	# 737 CHPbunHasMoreElements (_1656:lng)(_1657:int)(_1658:str)<-(yf_a:bat[:int,:str]) jump 733
exit (_1656,_1657,_1658);	# 738  (_1656:lng)(_1657:int)(_1658:str)
    ag_a:bat[:int,:int]  := _1652;	# 739  (ag_a:bat[:int,:int])<-(_1652:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 740 BKCsetColumn (bg_a:void)<-(ag_a:bat[:int,:int])(_668:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 741  (_670:str)
    _1666 := bat.new(:int,:int);	# 742 CMDBATnew (_1666:bat[:int,:int])<-(_1667:int)(_1668:int)
barrier (_1670,_1671,_1672):= chop.newIterator(date_seq);	# 743 CHPbunIterator (_1670:lng)(_1671:int)(_1672:date)<-(date_seq:bat[:int,:date]) jump 749
    _1674 := mtime.dayofyear(_1672);	# 744 MTIMEdate_extract_dayofyear (_1674:int)<-(_1672:date)
    bat.insert(_1666,_1671,_1674);	# 745 BKCinsert_bun_int_int (_1675:void)<-(_1666:bat[:int,:int])(_1671:int)(_1674:int)
catch MALexception;	# 746  (MALexception:str) jump 747
exit MALexception;	# 747  (MALexception:str)
    redo (_1670,_1671,_1672):= chop.hasMoreElements(date_seq);	# 748 CHPbunHasMoreElements (_1670:lng)(_1671:int)(_1672:date)<-(date_seq:bat[:int,:date]) jump 744
exit (_1670,_1671,_1672);	# 749  (_1670:lng)(_1671:int)(_1672:date)
    cg_a:bat[:int,:int]  := _1666;	# 750  (cg_a:bat[:int,:int])<-(_1666:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 751 BKCsetColumn (dg_a:void)<-(cg_a:bat[:int,:int])(_674:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 752 IOprint_val (_675:int)<-(_676:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 753 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 754  (_679:str)
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 755  (_681:str)
## test the various ways top create daytimes 	# 756  (_683:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 757 MTIMEdaytime_create (daytime_00:daytime)<-(_685:int)(_686:int)(_686:int)(_687:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 758  (_689:str)
    daytime_01 := mtime.daytime("23:59");	# 759 MTIMEdaytime_fromstr (daytime_01:daytime)<-(_691:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 760  (_693:str)
    daytime_02 := mtime.daytime("00:00");	# 761 MTIMEdaytime_fromstr (daytime_02:daytime)<-(_695:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 762  (_697:str)
    daytime_03 := mtime.daytime("23:59:59");	# 763 MTIMEdaytime_fromstr (daytime_03:daytime)<-(_699:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 764  (_701:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 765 MTIMEdaytime_fromstr (daytime_04:daytime)<-(_703:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 766  (_705:str)
    daytime_05 := mtime.daytime("00:00:00");	# 767 MTIMEdaytime_fromstr (daytime_05:daytime)<-(_707:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 768  (_709:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 769 MTIMEdaytime_fromstr (daytime_06:daytime)<-(_711:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 770  (_713:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 771 MTIMEdaytime_fromstr (daytime_07:daytime)<-(_715:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 772  (_717:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 773 MTIMEdaytime_fromstr (daytime_08:daytime)<-(_719:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 774  (_721:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 775 MTIMEdaytime_fromstr (daytime_09:daytime)<-(_723:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 776  (_725:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 777 MTIMEdaytime_fromstr (daytime_10:daytime)<-(_727:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 778  (_729:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 779 MTIMEdaytime_fromstr (daytime_11:daytime)<-(_731:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 780  (_733:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 781 MTIMEdaytime_fromstr (daytime_12:daytime)<-(_735:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 782  (_737:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 783 MTIMEdaytime_fromstr (daytime_13:daytime)<-(_739:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 784  (_741:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 785 MTIMEdaytime_fromstr (daytime_14:daytime)<-(_743:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 786  (_745:str)
## nil daytimes 	# 787  (_747:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 788 MTIMEdaytime_create (daytime_15:daytime)<-(_749:int)(_750:int)(_750:int)(_751:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 789  (_753:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 790 MTIMEdaytime_create (daytime_16:daytime)<-(_755:int)(_756:int)(_750:int)(_751:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 791  (_758:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 792 MTIMEdaytime_create (daytime_17:daytime)<-(_755:int)(_750:int)(_756:int)(_751:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 793  (_761:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 794 MTIMEdaytime_create (daytime_18:daytime)<-(_755:int)(_750:int)(_756:int)(_763:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 795  (_765:str)
    daytime_19 := mtime.daytime("nil");	# 796 MTIMEdaytime_fromstr (daytime_19:daytime)<-(_767:str)
#var daytime_19 := mtime.daytime("nil"); 	# 797  (_769:str)
    daytime_bat := bat.new(:oid,:daytime);	# 798 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-(_305:oid)(_771:daytime)
#var daytime_bat := bat.new(oid,daytime); 	# 799  (_773:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 800 BKCinsert_bun_oid_any (_774:void)<-(daytime_bat:bat[:oid,:daytime])(_775:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 801 BKCinsert_bun_oid_any (_776:void)<-(daytime_bat:bat[:oid,:daytime])(_777:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 802 BKCinsert_bun_oid_any (_778:void)<-(daytime_bat:bat[:oid,:daytime])(_779:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 803  (_781:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 804 BKCinsert_bun_oid_any (_782:void)<-(daytime_bat:bat[:oid,:daytime])(_783:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 805 BKCinsert_bun_oid_any (_784:void)<-(daytime_bat:bat[:oid,:daytime])(_785:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 806 BKCinsert_bun_oid_any (_786:void)<-(daytime_bat:bat[:oid,:daytime])(_787:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 807  (_789:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 808 BKCinsert_bun_oid_any (_790:void)<-(daytime_bat:bat[:oid,:daytime])(_791:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 809 BKCinsert_bun_oid_any (_792:void)<-(daytime_bat:bat[:oid,:daytime])(_793:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 810 BKCinsert_bun_oid_any (_794:void)<-(daytime_bat:bat[:oid,:daytime])(_795:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 811  (_797:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 812 BKCinsert_bun_oid_any (_798:void)<-(daytime_bat:bat[:oid,:daytime])(_799:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 813 BKCinsert_bun_oid_any (_800:void)<-(daytime_bat:bat[:oid,:daytime])(_801:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 814 BKCinsert_bun_oid_any (_802:void)<-(daytime_bat:bat[:oid,:daytime])(_803:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 815  (_805:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 816 BKCinsert_bun_oid_any (_806:void)<-(daytime_bat:bat[:oid,:daytime])(_807:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 817 BKCinsert_bun_oid_any (_808:void)<-(daytime_bat:bat[:oid,:daytime])(_809:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 818 BKCinsert_bun_oid_any (_810:void)<-(daytime_bat:bat[:oid,:daytime])(_811:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 819  (_813:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 820 BKCinsert_bun_oid_any (_814:void)<-(daytime_bat:bat[:oid,:daytime])(_815:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 821 BKCinsert_bun_oid_any (_816:void)<-(daytime_bat:bat[:oid,:daytime])(_817:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 822 BKCinsert_bun_oid_any (_818:void)<-(daytime_bat:bat[:oid,:daytime])(_819:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 823  (_821:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 824 BKCinsert_bun_oid_any (_822:void)<-(daytime_bat:bat[:oid,:daytime])(_823:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 825 BKCinsert_bun_oid_any (_824:void)<-(daytime_bat:bat[:oid,:daytime])(_825:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 826  (_827:str)
    bat.setColumn(daytime_bat,"daytime");	# 827 BKCsetColumn (_828:void)<-(daytime_bat:bat[:oid,:daytime])(_829:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 828  (_831:str)
    _1680 := bat.new(:oid,:int);	# 829 CMDBATnew (_1680:bat[:oid,:int])<-(_305:oid)(_1681:int)
barrier (_1683,_1684,_1685):= chop.newIterator(daytime_bat);	# 830 CHPbunIterator (_1683:lng)(_1684:oid)(_1685:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 836
    _1687 := mtime.hours(_1685);	# 831 MTIMEdaytime_extract_hours (_1687:int)<-(_1685:daytime)
    bat.insert(_1680,_1684,_1687);	# 832 BKCinsert_bun_oid_any (_1688:void)<-(_1680:bat[:oid,:int])(_1684:oid)(_1687:int)
catch MALexception;	# 833  (MALexception:str) jump 834
exit MALexception;	# 834  (MALexception:str)
    redo (_1683,_1684,_1685):= chop.hasMoreElements(daytime_bat);	# 835 CHPbunHasMoreElements (_1683:lng)(_1684:oid)(_1685:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 831
exit (_1683,_1684,_1685);	# 836  (_1683:lng)(_1684:oid)(_1685:daytime)
    bh_a:bat[:oid,:int]  := _1680;	# 837  (bh_a:bat[:oid,:int])<-(_1680:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 838 BKCsetColumn (_834:void)<-(bh_a:bat[:oid,:int])(_835:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 839  (_837:str)
    _1693 := bat.new(:oid,:int);	# 840 CMDBATnew (_1693:bat[:oid,:int])<-(_305:oid)(_1694:int)
barrier (_1696,_1697,_1698):= chop.newIterator(daytime_bat);	# 841 CHPbunIterator (_1696:lng)(_1697:oid)(_1698:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 847
    _1700 := mtime.minutes(_1698);	# 842 MTIMEdaytime_extract_minutes (_1700:int)<-(_1698:daytime)
    bat.insert(_1693,_1697,_1700);	# 843 BKCinsert_bun_oid_any (_1701:void)<-(_1693:bat[:oid,:int])(_1697:oid)(_1700:int)
catch MALexception;	# 844  (MALexception:str) jump 845
exit MALexception;	# 845  (MALexception:str)
    redo (_1696,_1697,_1698):= chop.hasMoreElements(daytime_bat);	# 846 CHPbunHasMoreElements (_1696:lng)(_1697:oid)(_1698:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 842
exit (_1696,_1697,_1698);	# 847  (_1696:lng)(_1697:oid)(_1698:daytime)
    dh_a:bat[:oid,:int]  := _1693;	# 848  (dh_a:bat[:oid,:int])<-(_1693:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 849 BKCsetColumn (_840:void)<-(dh_a:bat[:oid,:int])(_841:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 850  (_843:str)
    _1706 := bat.new(:oid,:int);	# 851 CMDBATnew (_1706:bat[:oid,:int])<-(_305:oid)(_1707:int)
barrier (_1709,_1710,_1711):= chop.newIterator(daytime_bat);	# 852 CHPbunIterator (_1709:lng)(_1710:oid)(_1711:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 858
    _1713 := mtime.seconds(_1711);	# 853 MTIMEdaytime_extract_seconds (_1713:int)<-(_1711:daytime)
    bat.insert(_1706,_1710,_1713);	# 854 BKCinsert_bun_oid_any (_1714:void)<-(_1706:bat[:oid,:int])(_1710:oid)(_1713:int)
catch MALexception;	# 855  (MALexception:str) jump 856
exit MALexception;	# 856  (MALexception:str)
    redo (_1709,_1710,_1711):= chop.hasMoreElements(daytime_bat);	# 857 CHPbunHasMoreElements (_1709:lng)(_1710:oid)(_1711:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 853
exit (_1709,_1710,_1711);	# 858  (_1709:lng)(_1710:oid)(_1711:daytime)
    fh_a:bat[:oid,:int]  := _1706;	# 859  (fh_a:bat[:oid,:int])<-(_1706:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 860 BKCsetColumn (_846:void)<-(fh_a:bat[:oid,:int])(_847:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 861  (_849:str)
    _1719 := bat.new(:oid,:int);	# 862 CMDBATnew (_1719:bat[:oid,:int])<-(_305:oid)(_1720:int)
barrier (_1722,_1723,_1724):= chop.newIterator(daytime_bat);	# 863 CHPbunIterator (_1722:lng)(_1723:oid)(_1724:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 869
    _1726 := mtime.milliseconds(_1724);	# 864 MTIMEdaytime_extract_milliseconds (_1726:int)<-(_1724:daytime)
    bat.insert(_1719,_1723,_1726);	# 865 BKCinsert_bun_oid_any (_1727:void)<-(_1719:bat[:oid,:int])(_1723:oid)(_1726:int)
catch MALexception;	# 866  (MALexception:str) jump 867
exit MALexception;	# 867  (MALexception:str)
    redo (_1722,_1723,_1724):= chop.hasMoreElements(daytime_bat);	# 868 CHPbunHasMoreElements (_1722:lng)(_1723:oid)(_1724:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 864
exit (_1722,_1723,_1724);	# 869  (_1722:lng)(_1723:oid)(_1724:daytime)
    hh_a:bat[:oid,:int]  := _1719;	# 870  (hh_a:bat[:oid,:int])<-(_1719:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 871 BKCsetColumn (_852:void)<-(hh_a:bat[:oid,:int])(_853:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 872 IOprint_val (_854:int)<-(_855:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 873 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 874  (_858:str)
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 875  (_860:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 876  (_862:str)
# Skipped due to coercion implication 	# 877  (_864:str)
    _1732 := bat.new(:oid,:timestamp);	# 878 CMDBATnew (_1732:bat[:oid,:timestamp])<-(_305:oid)(_1733:timestamp)
barrier (_1735,_1736,_1737):= chop.newIterator(date_bat);	# 879 CHPbunIterator (_1735:lng)(_1736:oid)(_1737:date)<-(date_bat:bat[:oid,:date]) jump 887
    _1739 := algebra.find(daytime_bat,_1736);	# 880 ALGfind (_1739:daytime)<-(daytime_bat:bat[:oid,:daytime])(_1736:oid)
    _1741 := algebra.find(tzone_bat,_1736);	# 881 ALGfind (_1741:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1736:oid)
    _1743 := mtime.timestamp(_1737,_1739,_1741);	# 882 MTIMEtimestamp_create (_1743:timestamp)<-(_1737:date)(_1739:daytime)(_1741:tzone)
    bat.insert(_1732,_1736,_1743);	# 883 BKCinsert_bun_oid_any (_1744:void)<-(_1732:bat[:oid,:timestamp])(_1736:oid)(_1743:timestamp)
catch MALexception;	# 884  (MALexception:str) jump 885
exit MALexception;	# 885  (MALexception:str)
    redo (_1735,_1736,_1737):= chop.hasMoreElements(date_bat);	# 886 CHPbunHasMoreElements (_1735:lng)(_1736:oid)(_1737:date)<-(date_bat:bat[:oid,:date]) jump 880
exit (_1735,_1736,_1737);	# 887  (_1735:lng)(_1736:oid)(_1737:date)
    kh_a:bat[:oid,:timestamp]  := _1732;	# 888  (kh_a:bat[:oid,:timestamp])<-(_1732:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 889  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 890 BKCsetWriteMode (_868:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 891  (_870:str)
## KILL 	# 892  (_872:str)
## var timestamp_now := timestamp(epoch()); 	# 893  (_874:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 894  (_876:str)
## test the timestamp operations 	# 895  (_878:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 896 BKCsetColumn (_879:void)<-(timestamp_bat:bat[:oid,:timestamp])(_880:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 897  (_882:str)
    _1749 := bat.new(:oid,:date);	# 898 CMDBATnew (_1749:bat[:oid,:date])<-(_305:oid)(_485:date)
barrier (_1751,_1752,_1753):= chop.newIterator(timestamp_bat);	# 899 CHPbunIterator (_1751:lng)(_1752:oid)(_1753:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 906
    _1755 := algebra.find(tzone_bat,_1752);	# 900 ALGfind (_1755:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1752:oid)
    _1757 := mtime.date(_1753,_1755);	# 901 MTIMEtimestamp_extract_date (_1757:date)<-(_1753:timestamp)(_1755:tzone)
    bat.insert(_1749,_1752,_1757);	# 902 BKCinsert_bun_oid_any (_1758:void)<-(_1749:bat[:oid,:date])(_1752:oid)(_1757:date)
catch MALexception;	# 903  (MALexception:str) jump 904
exit MALexception;	# 904  (MALexception:str)
    redo (_1751,_1752,_1753):= chop.hasMoreElements(timestamp_bat);	# 905 CHPbunHasMoreElements (_1751:lng)(_1752:oid)(_1753:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 900
exit (_1751,_1752,_1753);	# 906  (_1751:lng)(_1752:oid)(_1753:timestamp)
    mh_a:bat[:oid,:date]  := _1749;	# 907  (mh_a:bat[:oid,:date])<-(_1749:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 908 BKCsetColumn (_885:void)<-(mh_a:bat[:oid,:date])(_886:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 909  (_888:str)
    _1763 := bat.new(:oid,:daytime);	# 910 CMDBATnew (_1763:bat[:oid,:daytime])<-(_305:oid)(_771:daytime)
barrier (_1765,_1766,_1767):= chop.newIterator(timestamp_bat);	# 911 CHPbunIterator (_1765:lng)(_1766:oid)(_1767:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 918
    _1769 := algebra.find(tzone_bat,_1766);	# 912 ALGfind (_1769:tzone)<-(tzone_bat:bat[:oid,:tzone])(_1766:oid)
    _1771 := mtime.daytime(_1767,_1769);	# 913 MTIMEtimestamp_extract_daytime (_1771:daytime)<-(_1767:timestamp)(_1769:tzone)
    bat.insert(_1763,_1766,_1771);	# 914 BKCinsert_bun_oid_any (_1772:void)<-(_1763:bat[:oid,:daytime])(_1766:oid)(_1771:daytime)
catch MALexception;	# 915  (MALexception:str) jump 916
exit MALexception;	# 916  (MALexception:str)
    redo (_1765,_1766,_1767):= chop.hasMoreElements(timestamp_bat);	# 917 CHPbunHasMoreElements (_1765:lng)(_1766:oid)(_1767:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 912
exit (_1765,_1766,_1767);	# 918  (_1765:lng)(_1766:oid)(_1767:timestamp)
    oh_a:bat[:oid,:daytime]  := _1763;	# 919  (oh_a:bat[:oid,:daytime])<-(_1763:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 920 BKCsetColumn (_891:void)<-(oh_a:bat[:oid,:daytime])(_892:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 921 IOprint_val (_893:int)<-(_894:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 922 IOtable (_895:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 923  (_897:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 924 BKCsetColumn (rh_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_880:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 925  (_882:str)
    timezones:bat[:str,:tzone]  := bbp.bind("timezones");	# 926 CMDbbpbind (timezones:bat[:str,:tzone])<-(_901:str)
    io.print("print(timezones)");	# 927 IOprint_val (_902:int)<-(_903:str)
    io.print(timezones);	# 928 IOprint_val (_904:int)<-(timezones:bat[:str,:tzone])
    sh_a:tzone  := algebra.find(timezones,"Wake Island");	# 929 ALGfind (sh_a:tzone)<-(timezones:bat[:str,:tzone])(_906:str)
    _1777 := bat.new(:oid,:date);	# 930 CMDBATnew (_1777:bat[:oid,:date])<-(_305:oid)(_485:date)
barrier (_1779,_1780,_1781):= chop.newIterator(timestamp_bat);	# 931 CHPbunIterator (_1779:lng)(_1780:oid)(_1781:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 937
    _1783 := mtime.date(_1781,sh_a);	# 932 MTIMEtimestamp_extract_date (_1783:date)<-(_1781:timestamp)(sh_a:tzone)
    bat.insert(_1777,_1780,_1783);	# 933 BKCinsert_bun_oid_any (_1784:void)<-(_1777:bat[:oid,:date])(_1780:oid)(_1783:date)
catch MALexception;	# 934  (MALexception:str) jump 935
exit MALexception;	# 935  (MALexception:str)
    redo (_1779,_1780,_1781):= chop.hasMoreElements(timestamp_bat);	# 936 CHPbunHasMoreElements (_1779:lng)(_1780:oid)(_1781:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 932
exit (_1779,_1780,_1781);	# 937  (_1779:lng)(_1780:oid)(_1781:timestamp)
    th_a:bat[:oid,:date]  := _1777;	# 938  (th_a:bat[:oid,:date])<-(_1777:bat[:oid,:date])
    bat.setColumn(th_a,"Wake Island");	# 939 BKCsetColumn (_908:void)<-(th_a:bat[:oid,:date])(_906:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 940  (_910:str)
    vh_a:tzone  := algebra.find(timezones,"Wake Island");	# 941 ALGfind (vh_a:tzone)<-(timezones:bat[:str,:tzone])(_906:str)
    _1789 := bat.new(:oid,:daytime);	# 942 CMDBATnew (_1789:bat[:oid,:daytime])<-(_305:oid)(_771:daytime)
barrier (_1791,_1792,_1793):= chop.newIterator(timestamp_bat);	# 943 CHPbunIterator (_1791:lng)(_1792:oid)(_1793:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 949
    _1795 := mtime.daytime(_1793,vh_a);	# 944 MTIMEtimestamp_extract_daytime (_1795:daytime)<-(_1793:timestamp)(vh_a:tzone)
    bat.insert(_1789,_1792,_1795);	# 945 BKCinsert_bun_oid_any (_1796:void)<-(_1789:bat[:oid,:daytime])(_1792:oid)(_1795:daytime)
catch MALexception;	# 946  (MALexception:str) jump 947
exit MALexception;	# 947  (MALexception:str)
    redo (_1791,_1792,_1793):= chop.hasMoreElements(timestamp_bat);	# 948 CHPbunHasMoreElements (_1791:lng)(_1792:oid)(_1793:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 944
exit (_1791,_1792,_1793);	# 949  (_1791:lng)(_1792:oid)(_1793:timestamp)
    wh_a:bat[:oid,:daytime]  := _1789;	# 950  (wh_a:bat[:oid,:daytime])<-(_1789:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 951  (_914:str)
    xh_a:tzone  := algebra.find(timezones,"American Samoa");	# 952 ALGfind (xh_a:tzone)<-(timezones:bat[:str,:tzone])(_916:str)
    _1801 := bat.new(:oid,:date);	# 953 CMDBATnew (_1801:bat[:oid,:date])<-(_305:oid)(_485:date)
barrier (_1803,_1804,_1805):= chop.newIterator(timestamp_bat);	# 954 CHPbunIterator (_1803:lng)(_1804:oid)(_1805:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 960
    _1807 := mtime.date(_1805,xh_a);	# 955 MTIMEtimestamp_extract_date (_1807:date)<-(_1805:timestamp)(xh_a:tzone)
    bat.insert(_1801,_1804,_1807);	# 956 BKCinsert_bun_oid_any (_1808:void)<-(_1801:bat[:oid,:date])(_1804:oid)(_1807:date)
catch MALexception;	# 957  (MALexception:str) jump 958
exit MALexception;	# 958  (MALexception:str)
    redo (_1803,_1804,_1805):= chop.hasMoreElements(timestamp_bat);	# 959 CHPbunHasMoreElements (_1803:lng)(_1804:oid)(_1805:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 955
exit (_1803,_1804,_1805);	# 960  (_1803:lng)(_1804:oid)(_1805:timestamp)
    yh_a:bat[:oid,:date]  := _1801;	# 961  (yh_a:bat[:oid,:date])<-(_1801:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 962 BKCsetColumn (ai_a:void)<-(yh_a:bat[:oid,:date])(_916:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 963  (_921:str)
    bi_a:tzone  := algebra.find(timezones,"American Samoa");	# 964 ALGfind (bi_a:tzone)<-(timezones:bat[:str,:tzone])(_916:str)
    _1813 := bat.new(:oid,:daytime);	# 965 CMDBATnew (_1813:bat[:oid,:daytime])<-(_305:oid)(_771:daytime)
barrier (_1815,_1816,_1817):= chop.newIterator(timestamp_bat);	# 966 CHPbunIterator (_1815:lng)(_1816:oid)(_1817:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 972
    _1819 := mtime.daytime(_1817,bi_a);	# 967 MTIMEtimestamp_extract_daytime (_1819:daytime)<-(_1817:timestamp)(bi_a:tzone)
    bat.insert(_1813,_1816,_1819);	# 968 BKCinsert_bun_oid_any (_1820:void)<-(_1813:bat[:oid,:daytime])(_1816:oid)(_1819:daytime)
catch MALexception;	# 969  (MALexception:str) jump 970
exit MALexception;	# 970  (MALexception:str)
    redo (_1815,_1816,_1817):= chop.hasMoreElements(timestamp_bat);	# 971 CHPbunHasMoreElements (_1815:lng)(_1816:oid)(_1817:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 967
exit (_1815,_1816,_1817);	# 972  (_1815:lng)(_1816:oid)(_1817:timestamp)
    ci_a:bat[:oid,:daytime]  := _1813;	# 973  (ci_a:bat[:oid,:daytime])<-(_1813:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 974 IOprint_val (_925:int)<-(_926:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 975 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 976  (_929:str)
    ei_a := calc.*(60,1000);	# 977 CALCbinaryMULintint (ei_a:int)<-(_931:int)(_932:int)
    fi_a := calc.*(60,ei_a);	# 978 CALCbinaryMULintint (fi_a:int)<-(_931:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 979 CALCbinaryMULintint (gi_a:int)<-(_935:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 980 CALCint2lng (hi_a:lng)<-(gi_a:int)
    _1825 := bat.new(:oid,:timestamp);	# 981 CMDBATnew (_1825:bat[:oid,:timestamp])<-(_305:oid)(_1733:timestamp)
barrier (_1827,_1828,_1829):= chop.newIterator(timestamp_bat);	# 982 CHPbunIterator (_1827:lng)(_1828:oid)(_1829:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 988
    _1831 := mtime.add(_1829,hi_a);	# 983 MTIMEtimestamp_add (_1831:timestamp)<-(_1829:timestamp)(hi_a:lng)
    bat.insert(_1825,_1828,_1831);	# 984 BKCinsert_bun_oid_any (_1832:void)<-(_1825:bat[:oid,:timestamp])(_1828:oid)(_1831:timestamp)
catch MALexception;	# 985  (MALexception:str) jump 986
exit MALexception;	# 986  (MALexception:str)
    redo (_1827,_1828,_1829):= chop.hasMoreElements(timestamp_bat);	# 987 CHPbunHasMoreElements (_1827:lng)(_1828:oid)(_1829:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 983
exit (_1827,_1828,_1829);	# 988  (_1827:lng)(_1828:oid)(_1829:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := _1825;	# 989  (timestamp_plus:bat[:oid,:timestamp])<-(_1825:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 990  (_940:str)
    ii_a := calc.*(-60,1000);	# 991 CALCbinaryMULintint (ii_a:int)<-(_942:int)(_932:int)
    ji_a := calc.lng(ii_a);	# 992 CALCint2lng (ji_a:lng)<-(ii_a:int)
    _1837 := bat.new(:oid,:timestamp);	# 993 CMDBATnew (_1837:bat[:oid,:timestamp])<-(_305:oid)(_1733:timestamp)
barrier (_1839,_1840,_1841):= chop.newIterator(timestamp_bat);	# 994 CHPbunIterator (_1839:lng)(_1840:oid)(_1841:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1000
    _1843 := mtime.add(_1841,ji_a);	# 995 MTIMEtimestamp_add (_1843:timestamp)<-(_1841:timestamp)(ji_a:lng)
    bat.insert(_1837,_1840,_1843);	# 996 BKCinsert_bun_oid_any (_1844:void)<-(_1837:bat[:oid,:timestamp])(_1840:oid)(_1843:timestamp)
catch MALexception;	# 997  (MALexception:str) jump 998
exit MALexception;	# 998  (MALexception:str)
    redo (_1839,_1840,_1841):= chop.hasMoreElements(timestamp_bat);	# 999 CHPbunHasMoreElements (_1839:lng)(_1840:oid)(_1841:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 995
exit (_1839,_1840,_1841);	# 1000  (_1839:lng)(_1840:oid)(_1841:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := _1837;	# 1001  (timestamp_minus:bat[:oid,:timestamp])<-(_1837:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 1002  (_946:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1003 BKCsetColumn (ki_a:void)<-(timestamp_bat:bat[:oid,:timestamp])(_948:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1004  (_950:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1005 BKCsetColumn (li_a:void)<-(timestamp_plus:bat[:oid,:timestamp])(_952:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1006  (_954:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1007 BKCsetColumn (mi_a:void)<-(timestamp_minus:bat[:oid,:timestamp])(_956:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1008  (_958:str)
    _1849 := bat.new(:oid,:lng);	# 1009 CMDBATnew (_1849:bat[:oid,:lng])<-(_305:oid)(_1850:lng)
barrier (_1852,_1853,_1854):= chop.newIterator(timestamp_plus);	# 1010 CHPbunIterator (_1852:lng)(_1853:oid)(_1854:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1017
    _1856 := algebra.find(timestamp_minus,_1853);	# 1011 ALGfind (_1856:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])(_1853:oid)
    _1858 := mtime.diff(_1854,_1856);	# 1012 MTIMEtimestamp_diff (_1858:lng)<-(_1854:timestamp)(_1856:timestamp)
    bat.insert(_1849,_1853,_1858);	# 1013 BKCinsert_bun_oid_any (_1859:void)<-(_1849:bat[:oid,:lng])(_1853:oid)(_1858:lng)
catch MALexception;	# 1014  (MALexception:str) jump 1015
exit MALexception;	# 1015  (MALexception:str)
    redo (_1852,_1853,_1854):= chop.hasMoreElements(timestamp_plus);	# 1016 CHPbunHasMoreElements (_1852:lng)(_1853:oid)(_1854:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1011
exit (_1852,_1853,_1854);	# 1017  (_1852:lng)(_1853:oid)(_1854:timestamp)
    ni_a:bat[:oid,:lng]  := _1849;	# 1018  (ni_a:bat[:oid,:lng])<-(_1849:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1019 CALCbinaryMULintint (oi_a:int)<-(_931:int)(_932:int)
    pi_a := calc.*(60,oi_a);	# 1020 CALCbinaryMULintint (pi_a:int)<-(_931:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1021 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1022 CMDbatDIVcst_lng_lng_lng (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1023 BKCsetColumn (si_a:void)<-(ri_a:bat[:oid,:lng])(_966:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1024 IOprint_val (_967:int)<-(_968:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1025 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1026  (_971:str)
    ui_a:tzone  := algebra.find(timezones,"West/Europe");	# 1027 ALGfind (ui_a:tzone)<-(timezones:bat[:str,:tzone])(_973:str)
    _1864 := bat.new(:int,:timestamp);	# 1028 CMDBATnew (_1864:bat[:int,:timestamp])<-(_1865:int)(_1733:timestamp)
barrier (_1867,_1868,_1869):= chop.newIterator(date_seq);	# 1029 CHPbunIterator (_1867:lng)(_1868:int)(_1869:date)<-(date_seq:bat[:int,:date]) jump 1035
    _1871 := mtime.timestamp(_1869,daytime_00,ui_a);	# 1030 MTIMEtimestamp_create (_1871:timestamp)<-(_1869:date)(daytime_00:daytime)(ui_a:tzone)
    bat.insert(_1864,_1868,_1871);	# 1031 BKCinsert_bun (_1872:void)<-(_1864:bat[:int,:timestamp])(_1868:int)(_1871:timestamp)
catch MALexception;	# 1032  (MALexception:str) jump 1033
exit MALexception;	# 1033  (MALexception:str)
    redo (_1867,_1868,_1869):= chop.hasMoreElements(date_seq);	# 1034 CHPbunHasMoreElements (_1867:lng)(_1868:int)(_1869:date)<-(date_seq:bat[:int,:date]) jump 1030
exit (_1867,_1868,_1869);	# 1035  (_1867:lng)(_1868:int)(_1869:date)
    timestamp_eur:bat[:int,:timestamp]  := _1864;	# 1036  (timestamp_eur:bat[:int,:timestamp])<-(_1864:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1037  (_977:str)
    vi_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1038 ALGfind (vi_a:tzone)<-(timezones:bat[:str,:tzone])(_979:str)
    _1877 := bat.new(:int,:timestamp);	# 1039 CMDBATnew (_1877:bat[:int,:timestamp])<-(_1878:int)(_1733:timestamp)
barrier (_1880,_1881,_1882):= chop.newIterator(date_seq);	# 1040 CHPbunIterator (_1880:lng)(_1881:int)(_1882:date)<-(date_seq:bat[:int,:date]) jump 1046
    _1884 := mtime.timestamp(_1882,daytime_00,vi_a);	# 1041 MTIMEtimestamp_create (_1884:timestamp)<-(_1882:date)(daytime_00:daytime)(vi_a:tzone)
    bat.insert(_1877,_1881,_1884);	# 1042 BKCinsert_bun (_1885:void)<-(_1877:bat[:int,:timestamp])(_1881:int)(_1884:timestamp)
catch MALexception;	# 1043  (MALexception:str) jump 1044
exit MALexception;	# 1044  (MALexception:str)
    redo (_1880,_1881,_1882):= chop.hasMoreElements(date_seq);	# 1045 CHPbunHasMoreElements (_1880:lng)(_1881:int)(_1882:date)<-(date_seq:bat[:int,:date]) jump 1041
exit (_1880,_1881,_1882);	# 1046  (_1880:lng)(_1881:int)(_1882:date)
    timestamp_bra:bat[:int,:timestamp]  := _1877;	# 1047  (timestamp_bra:bat[:int,:timestamp])<-(_1877:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1048  (_982:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1049 BKCsetColumn (wi_a:void)<-(date_seq:bat[:int,:date])(_984:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1050  (_986:str)
    _1890 := bat.new(:int,:int);	# 1051 CMDBATnew (_1890:bat[:int,:int])<-(_1891:int)(_1892:int)
barrier (_1894,_1895,_1896):= chop.newIterator(date_seq);	# 1052 CHPbunIterator (_1894:lng)(_1895:int)(_1896:date)<-(date_seq:bat[:int,:date]) jump 1058
    _1898 := mtime.dayofweek(_1896);	# 1053 MTIMEdate_extract_dayofweek (_1898:int)<-(_1896:date)
    bat.insert(_1890,_1895,_1898);	# 1054 BKCinsert_bun_int_int (_1899:void)<-(_1890:bat[:int,:int])(_1895:int)(_1898:int)
catch MALexception;	# 1055  (MALexception:str) jump 1056
exit MALexception;	# 1056  (MALexception:str)
    redo (_1894,_1895,_1896):= chop.hasMoreElements(date_seq);	# 1057 CHPbunHasMoreElements (_1894:lng)(_1895:int)(_1896:date)<-(date_seq:bat[:int,:date]) jump 1053
exit (_1894,_1895,_1896);	# 1058  (_1894:lng)(_1895:int)(_1896:date)
    xi_a:bat[:int,:int]  := _1890;	# 1059  (xi_a:bat[:int,:int])<-(_1890:bat[:int,:int])
    _1904 := bat.new(:int,:str);	# 1060 CMDBATnew (_1904:bat[:int,:str])<-(_1905:int)(_1906:str)
barrier (_1908,_1909,_1910):= chop.newIterator(xi_a);	# 1061 CHPbunIterator (_1908:lng)(_1909:int)(_1910:int)<-(xi_a:bat[:int,:int]) jump 1067
    _1912 := mtime.dayname(_1910);	# 1062 MTIMEday_to_str (_1912:str)<-(_1910:int)
    bat.insert(_1904,_1909,_1912);	# 1063 BKCinsert_bun (_1913:void)<-(_1904:bat[:int,:str])(_1909:int)(_1912:str)
catch MALexception;	# 1064  (MALexception:str) jump 1065
exit MALexception;	# 1065  (MALexception:str)
    redo (_1908,_1909,_1910):= chop.hasMoreElements(xi_a);	# 1066 CHPbunHasMoreElements (_1908:lng)(_1909:int)(_1910:int)<-(xi_a:bat[:int,:int]) jump 1062
exit (_1908,_1909,_1910);	# 1067  (_1908:lng)(_1909:int)(_1910:int)
    yi_a:bat[:int,:str]  := _1904;	# 1068  (yi_a:bat[:int,:str])<-(_1904:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1069 BKCsetColumn (aj_a:void)<-(yi_a:bat[:int,:str])(_992:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1070  (_994:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1071 BKCsetColumn (bj_a:void)<-(timestamp_eur:bat[:int,:timestamp])(_973:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1072  (_997:str)
    cj_a:tzone  := algebra.find(timezones,"West/Europe");	# 1073 ALGfind (cj_a:tzone)<-(timezones:bat[:str,:tzone])(_973:str)
    _1918 := bat.new(:int,:bit);	# 1074 CMDBATnew (_1918:bat[:int,:bit])<-(_1919:int)(_1920:bit)
barrier (_1922,_1923,_1924):= chop.newIterator(timestamp_eur);	# 1075 CHPbunIterator (_1922:lng)(_1923:int)(_1924:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1081
    _1926 := mtime.dst(_1924,cj_a);	# 1076 MTIMEtimestamp_inside_dst (_1926:bit)<-(_1924:timestamp)(cj_a:tzone)
    bat.insert(_1918,_1923,_1926);	# 1077 BKCinsert_bun (_1927:void)<-(_1918:bat[:int,:bit])(_1923:int)(_1926:bit)
catch MALexception;	# 1078  (MALexception:str) jump 1079
exit MALexception;	# 1079  (MALexception:str)
    redo (_1922,_1923,_1924):= chop.hasMoreElements(timestamp_eur);	# 1080 CHPbunHasMoreElements (_1922:lng)(_1923:int)(_1924:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1076
exit (_1922,_1923,_1924);	# 1081  (_1922:lng)(_1923:int)(_1924:timestamp)
    dj_a:bat[:int,:bit]  := _1918;	# 1082  (dj_a:bat[:int,:bit])<-(_1918:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1083 BKCsetColumn (ej_a:void)<-(dj_a:bat[:int,:bit])(_1002:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1084  (_1004:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1085 BKCsetColumn (fj_a:void)<-(timestamp_bra:bat[:int,:timestamp])(_979:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1086  (_1007:str)
    gj_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1087 ALGfind (gj_a:tzone)<-(timezones:bat[:str,:tzone])(_979:str)
    _1932 := bat.new(:int,:bit);	# 1088 CMDBATnew (_1932:bat[:int,:bit])<-(_1933:int)(_1934:bit)
barrier (_1936,_1937,_1938):= chop.newIterator(timestamp_bra);	# 1089 CHPbunIterator (_1936:lng)(_1937:int)(_1938:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1095
    _1940 := mtime.dst(_1938,gj_a);	# 1090 MTIMEtimestamp_inside_dst (_1940:bit)<-(_1938:timestamp)(gj_a:tzone)
    bat.insert(_1932,_1937,_1940);	# 1091 BKCinsert_bun (_1941:void)<-(_1932:bat[:int,:bit])(_1937:int)(_1940:bit)
catch MALexception;	# 1092  (MALexception:str) jump 1093
exit MALexception;	# 1093  (MALexception:str)
    redo (_1936,_1937,_1938):= chop.hasMoreElements(timestamp_bra);	# 1094 CHPbunHasMoreElements (_1936:lng)(_1937:int)(_1938:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1090
exit (_1936,_1937,_1938);	# 1095  (_1936:lng)(_1937:int)(_1938:timestamp)
    hj_a:bat[:int,:bit]  := _1932;	# 1096  (hj_a:bat[:int,:bit])<-(_1932:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1097 BKCsetColumn (ij_a:void)<-(hj_a:bat[:int,:bit])(_1002:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1098 IOprint_val (_1011:int)<-(_1012:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1099 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1100  ($1018:str)
#quit; 	# 1101  ($1020:str)
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 1102  ($1022:str)
end main;	# 1103  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 20:47:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 19:47:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 19:48:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 18:47:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 22:25:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 21:25:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-29 00:37:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 17:12:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-30 14:41:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-29 11:03:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-28 04:23:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 19:47:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 20:47:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 19:47:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 19:48:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 18:47:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 22:25:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 21:25:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-29 00:37:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 17:12:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-30 14:41:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-29 11:03:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-28 04:23:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 19:47:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 20:47:59.999,	  1999-12-31 19:47:59.999,	  1999-12-30 20:46:59.999,	  23	  ]
[ 1@0,	  4999-12-30 19:47:00.000,	  4999-12-31 18:47:00.000,	  4999-12-30 19:46:00.000,	  23	  ]
[ 2@0,	  1968-02-26 19:48:00.000,	  1968-02-27 18:48:00.000,	  1968-02-26 19:47:00.000,	  23	  ]
[ 3@0,	  1-02-27 18:47:59.000,		  1-02-28 17:47:59.000,		  1-02-27 18:46:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 22:25:00.000,	  -768-09-29 21:25:00.000,	  -768-09-28 22:24:00.000,	  23	  ]
[ 6@0,	  5000-10-29 21:25:00.001,	  5000-10-30 20:25:00.001,	  5000-10-29 21:24:00.001,	  23	  ]
[ 7@0,	  -1999-05-29 00:37:02.999,	  -1999-05-29 23:37:02.999,	  -1999-05-29 00:36:02.999,	  23	  ]
[ 8@0,	  2000-07-13 17:12:42.999,	  2000-07-14 16:12:42.999,	  2000-07-13 17:11:42.999,	  23	  ]
[ 9@0,	  1999-08-30 14:41:38.999,	  1999-08-31 13:41:38.999,	  1999-08-30 14:40:38.999,	  23	  ]
[ 10@0,	  1998-11-29 11:03:34.999,	  1998-11-30 10:03:34.999,	  1998-11-29 11:02:34.999,	  23	  ]
[ 11@0,	  1953-04-28 04:23:27.999,	  1953-04-29 03:23:27.999,	  1953-04-28 04:22:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 19:47:59.999,	  nil,				  5867411-12-29 19:46:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 19:47:59.999,	  false,  1998-12-21 23:47:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 19:47:59.999,	  false,  1998-12-22 23:47:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 19:47:59.999,	  false,  1998-12-23 23:47:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 19:47:59.999,	  false,  1998-12-24 23:47:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 19:47:59.999,	  false,  1998-12-25 23:47:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 19:47:59.999,	  false,  1998-12-26 23:47:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 19:47:59.999,	  false,  1998-12-27 23:47:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 19:47:59.999,	  false,  1998-12-28 23:47:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 19:47:59.999,	  false,  1998-12-29 23:47:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 19:47:59.999,	  false,  1998-12-30 23:47:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 19:47:59.999,	  false,  1998-12-31 23:47:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 19:47:59.999,	  false,  1999-01-01 23:47:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 19:47:59.999,	  false,  1999-01-02 23:47:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 19:47:59.999,	  false,  1999-01-03 23:47:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 19:47:59.999,	  false,  1999-01-04 23:47:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 19:47:59.999,	  false,  1999-01-05 23:47:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 19:47:59.999,	  false,  1999-01-06 23:47:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 19:47:59.999,	  false,  1999-01-07 23:47:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 19:47:59.999,	  false,  1999-01-08 23:47:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 19:47:59.999,	  false,  1999-01-09 23:47:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 19:47:59.999,	  false,  1999-01-10 23:47:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 19:47:59.999,	  false,  1999-01-11 23:47:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 19:47:59.999,	  false,  1999-01-12 23:47:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 19:47:59.999,	  false,  1999-01-13 23:47:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 19:47:59.999,	  false,  1999-01-14 23:47:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 19:47:59.999,	  false,  1999-01-15 23:47:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 19:47:59.999,	  false,  1999-01-16 23:47:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 19:47:59.999,	  false,  1999-01-17 23:47:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 19:47:59.999,	  false,  1999-01-18 23:47:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 19:47:59.999,	  false,  1999-01-19 23:47:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 19:47:59.999,	  false,  1999-01-20 23:47:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 19:47:59.999,	  false,  1999-01-21 23:47:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 19:47:59.999,	  false,  1999-01-22 23:47:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 19:47:59.999,	  false,  1999-01-23 23:47:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 19:47:59.999,	  false,  1999-01-24 23:47:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 19:47:59.999,	  false,  1999-01-25 23:47:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 19:47:59.999,	  false,  1999-01-26 23:47:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 19:47:59.999,	  false,  1999-01-27 23:47:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 19:47:59.999,	  false,  1999-01-28 23:47:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 19:47:59.999,	  false,  1999-01-29 23:47:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 19:47:59.999,	  false,  1999-01-30 23:47:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 19:47:59.999,	  false,  1999-01-31 23:47:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 19:47:59.999,	  false,  1999-02-01 23:47:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 19:47:59.999,	  false,  1999-02-02 23:47:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 19:47:59.999,	  false,  1999-02-03 23:47:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 19:47:59.999,	  false,  1999-02-04 23:47:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 19:47:59.999,	  false,  1999-02-05 23:47:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 19:47:59.999,	  false,  1999-02-06 23:47:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 19:47:59.999,	  false,  1999-02-07 23:47:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 19:47:59.999,	  false,  1999-02-08 23:47:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 19:47:59.999,	  false,  1999-02-09 23:47:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 19:47:59.999,	  false,  1999-02-10 23:47:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 19:47:59.999,	  false,  1999-02-11 23:47:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 19:47:59.999,	  false,  1999-02-12 23:47:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 19:47:59.999,	  false,  1999-02-13 23:47:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 19:47:59.999,	  false,  1999-02-14 23:47:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 19:47:59.999,	  false,  1999-02-15 23:47:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 19:47:59.999,	  false,  1999-02-16 23:47:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 19:47:59.999,	  false,  1999-02-17 23:47:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 19:47:59.999,	  false,  1999-02-18 23:47:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 19:47:59.999,	  false,  1999-02-19 23:47:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 19:47:59.999,	  false,  1999-02-20 23:47:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 19:47:59.999,	  false,  1999-02-21 23:47:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 19:47:59.999,	  false,  1999-02-22 23:47:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 19:47:59.999,	  false,  1999-02-23 23:47:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 19:47:59.999,	  false,  1999-02-24 23:47:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 19:47:59.999,	  false,  1999-02-25 23:47:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 19:47:59.999,	  false,  1999-02-26 23:47:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 19:47:59.999,	  false,  1999-02-27 23:47:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 19:47:59.999,	  false,  1999-02-28 23:47:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 19:47:59.999,	  false,  1999-03-01 23:47:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 19:47:59.999,	  false,  1999-03-02 23:47:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 19:47:59.999,	  false,  1999-03-03 23:47:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 19:47:59.999,	  false,  1999-03-04 23:47:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 19:47:59.999,	  false,  1999-03-05 23:47:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 19:47:59.999,	  false,  1999-03-06 23:47:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 19:47:59.999,	  false,  1999-03-07 23:47:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 19:47:59.999,	  false,  1999-03-08 23:47:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 19:47:59.999,	  false,  1999-03-09 23:47:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 19:47:59.999,	  false,  1999-03-10 23:47:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 19:47:59.999,	  false,  1999-03-11 23:47:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 19:47:59.999,	  false,  1999-03-12 23:47:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 19:47:59.999,	  false,  1999-03-13 23:47:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 19:47:59.999,	  false,  1999-03-14 23:47:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 19:47:59.999,	  false,  1999-03-15 23:47:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 19:47:59.999,	  false,  1999-03-16 23:47:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 19:47:59.999,	  false,  1999-03-17 23:47:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 19:47:59.999,	  false,  1999-03-18 23:47:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 19:47:59.999,	  false,  1999-03-19 23:47:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 19:47:59.999,	  false,  1999-03-20 23:47:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 19:47:59.999,	  false,  1999-03-21 23:47:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 19:47:59.999,	  false,  1999-03-22 23:47:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 19:47:59.999,	  false,  1999-03-23 23:47:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 19:47:59.999,	  false,  1999-03-24 23:47:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 19:47:59.999,	  false,  1999-03-25 23:47:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 18:47:59.999,	  true,	  1999-03-27 00:47:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 18:47:59.999,	  true,	  1999-03-28 00:47:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 18:47:59.999,	  true,	  1999-03-29 00:47:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 18:47:59.999,	  true,	  1999-03-30 00:47:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 18:47:59.999,	  true,	  1999-03-31 00:47:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 18:47:59.999,	  true,	  1999-04-01 00:47:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 18:47:59.999,	  true,	  1999-04-02 00:47:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 18:47:59.999,	  true,	  1999-04-03 00:47:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 18:47:59.999,	  true,	  1999-04-04 00:47:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 18:47:59.999,	  true,	  1999-04-05 00:47:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 18:47:59.999,	  true,	  1999-04-06 00:47:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 18:47:59.999,	  true,	  1999-04-07 00:47:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 18:47:59.999,	  true,	  1999-04-08 00:47:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 18:47:59.999,	  true,	  1999-04-09 00:47:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 18:47:59.999,	  true,	  1999-04-10 00:47:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 18:47:59.999,	  true,	  1999-04-11 00:47:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 18:47:59.999,	  true,	  1999-04-12 00:47:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 18:47:59.999,	  true,	  1999-04-13 00:47:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 18:47:59.999,	  true,	  1999-04-14 00:47:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 18:47:59.999,	  true,	  1999-04-15 00:47:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 18:47:59.999,	  true,	  1999-04-16 00:47:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 18:47:59.999,	  true,	  1999-04-17 00:47:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 18:47:59.999,	  true,	  1999-04-18 00:47:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 18:47:59.999,	  true,	  1999-04-19 00:47:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 18:47:59.999,	  true,	  1999-04-20 00:47:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 18:47:59.999,	  true,	  1999-04-21 00:47:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 18:47:59.999,	  true,	  1999-04-22 00:47:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 18:47:59.999,	  true,	  1999-04-23 00:47:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 18:47:59.999,	  true,	  1999-04-24 00:47:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 18:47:59.999,	  true,	  1999-04-25 00:47:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 18:47:59.999,	  true,	  1999-04-26 00:47:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 18:47:59.999,	  true,	  1999-04-27 00:47:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 18:47:59.999,	  true,	  1999-04-28 00:47:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 18:47:59.999,	  true,	  1999-04-29 00:47:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 18:47:59.999,	  true,	  1999-04-30 00:47:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 18:47:59.999,	  true,	  1999-05-01 00:47:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 18:47:59.999,	  true,	  1999-05-02 00:47:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 18:47:59.999,	  true,	  1999-05-03 00:47:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 18:47:59.999,	  true,	  1999-05-04 00:47:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 18:47:59.999,	  true,	  1999-05-05 00:47:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 18:47:59.999,	  true,	  1999-05-06 00:47:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 18:47:59.999,	  true,	  1999-05-07 00:47:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 18:47:59.999,	  true,	  1999-05-08 00:47:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 18:47:59.999,	  true,	  1999-05-09 00:47:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 18:47:59.999,	  true,	  1999-05-10 00:47:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 18:47:59.999,	  true,	  1999-05-11 00:47:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 18:47:59.999,	  true,	  1999-05-12 00:47:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 18:47:59.999,	  true,	  1999-05-13 00:47:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 18:47:59.999,	  true,	  1999-05-14 00:47:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 18:47:59.999,	  true,	  1999-05-15 00:47:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 18:47:59.999,	  true,	  1999-05-16 00:47:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 18:47:59.999,	  true,	  1999-05-17 00:47:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 18:47:59.999,	  true,	  1999-05-18 00:47:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 18:47:59.999,	  true,	  1999-05-19 00:47:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 18:47:59.999,	  true,	  1999-05-20 00:47:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 18:47:59.999,	  true,	  1999-05-21 00:47:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 18:47:59.999,	  true,	  1999-05-22 00:47:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 18:47:59.999,	  true,	  1999-05-23 00:47:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 18:47:59.999,	  true,	  1999-05-24 00:47:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 18:47:59.999,	  true,	  1999-05-25 00:47:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 18:47:59.999,	  true,	  1999-05-26 00:47:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 18:47:59.999,	  true,	  1999-05-27 00:47:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 18:47:59.999,	  true,	  1999-05-28 00:47:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 18:47:59.999,	  true,	  1999-05-29 00:47:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 18:47:59.999,	  true,	  1999-05-30 00:47:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 18:47:59.999,	  true,	  1999-05-31 00:47:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 18:47:59.999,	  true,	  1999-06-01 00:47:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 18:47:59.999,	  true,	  1999-06-02 00:47:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 18:47:59.999,	  true,	  1999-06-03 00:47:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 18:47:59.999,	  true,	  1999-06-04 00:47:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 18:47:59.999,	  true,	  1999-06-05 00:47:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 18:47:59.999,	  true,	  1999-06-06 00:47:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 18:47:59.999,	  true,	  1999-06-07 00:47:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 18:47:59.999,	  true,	  1999-06-08 00:47:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 18:47:59.999,	  true,	  1999-06-09 00:47:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 18:47:59.999,	  true,	  1999-06-10 00:47:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 18:47:59.999,	  true,	  1999-06-11 00:47:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 18:47:59.999,	  true,	  1999-06-12 00:47:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 18:47:59.999,	  true,	  1999-06-13 00:47:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 18:47:59.999,	  true,	  1999-06-14 00:47:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 18:47:59.999,	  true,	  1999-06-15 00:47:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 18:47:59.999,	  true,	  1999-06-16 00:47:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 18:47:59.999,	  true,	  1999-06-17 00:47:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 18:47:59.999,	  true,	  1999-06-18 00:47:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 18:47:59.999,	  true,	  1999-06-19 00:47:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 18:47:59.999,	  true,	  1999-06-20 00:47:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 18:47:59.999,	  true,	  1999-06-21 00:47:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 18:47:59.999,	  true,	  1999-06-22 00:47:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 18:47:59.999,	  true,	  1999-06-23 00:47:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 18:47:59.999,	  true,	  1999-06-24 00:47:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 18:47:59.999,	  true,	  1999-06-25 00:47:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 18:47:59.999,	  true,	  1999-06-26 00:47:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 18:47:59.999,	  true,	  1999-06-27 00:47:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 18:47:59.999,	  true,	  1999-06-28 00:47:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 18:47:59.999,	  true,	  1999-06-29 00:47:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 18:47:59.999,	  true,	  1999-06-30 00:47:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 18:47:59.999,	  true,	  1999-07-01 00:47:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 18:47:59.999,	  true,	  1999-07-02 00:47:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 18:47:59.999,	  true,	  1999-07-03 00:47:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 18:47:59.999,	  true,	  1999-07-04 00:47:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 18:47:59.999,	  true,	  1999-07-05 00:47:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 18:47:59.999,	  true,	  1999-07-06 00:47:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 18:47:59.999,	  true,	  1999-07-07 00:47:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 18:47:59.999,	  true,	  1999-07-08 00:47:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 18:47:59.999,	  true,	  1999-07-09 00:47:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 18:47:59.999,	  true,	  1999-07-10 00:47:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 18:47:59.999,	  true,	  1999-07-11 00:47:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 18:47:59.999,	  true,	  1999-07-12 00:47:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 18:47:59.999,	  true,	  1999-07-13 00:47:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 18:47:59.999,	  true,	  1999-07-14 00:47:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 18:47:59.999,	  true,	  1999-07-15 00:47:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 18:47:59.999,	  true,	  1999-07-16 00:47:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 18:47:59.999,	  true,	  1999-07-17 00:47:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 18:47:59.999,	  true,	  1999-07-18 00:47:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 18:47:59.999,	  true,	  1999-07-19 00:47:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 18:47:59.999,	  true,	  1999-07-20 00:47:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 18:47:59.999,	  true,	  1999-07-21 00:47:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 18:47:59.999,	  true,	  1999-07-22 00:47:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 18:47:59.999,	  true,	  1999-07-23 00:47:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 18:47:59.999,	  true,	  1999-07-24 00:47:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 18:47:59.999,	  true,	  1999-07-25 00:47:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 18:47:59.999,	  true,	  1999-07-26 00:47:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 18:47:59.999,	  true,	  1999-07-27 00:47:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 18:47:59.999,	  true,	  1999-07-28 00:47:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 18:47:59.999,	  true,	  1999-07-29 00:47:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 18:47:59.999,	  true,	  1999-07-30 00:47:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 18:47:59.999,	  true,	  1999-07-31 00:47:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 18:47:59.999,	  true,	  1999-08-01 00:47:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 18:47:59.999,	  true,	  1999-08-02 00:47:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 18:47:59.999,	  true,	  1999-08-03 00:47:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 18:47:59.999,	  true,	  1999-08-04 00:47:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 18:47:59.999,	  true,	  1999-08-05 00:47:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 18:47:59.999,	  true,	  1999-08-06 00:47:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 18:47:59.999,	  true,	  1999-08-07 00:47:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 18:47:59.999,	  true,	  1999-08-08 00:47:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 18:47:59.999,	  true,	  1999-08-09 00:47:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 18:47:59.999,	  true,	  1999-08-10 00:47:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 18:47:59.999,	  true,	  1999-08-11 00:47:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 18:47:59.999,	  true,	  1999-08-12 00:47:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 18:47:59.999,	  true,	  1999-08-13 00:47:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 18:47:59.999,	  true,	  1999-08-14 00:47:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 18:47:59.999,	  true,	  1999-08-15 00:47:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 18:47:59.999,	  true,	  1999-08-16 00:47:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 18:47:59.999,	  true,	  1999-08-17 00:47:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 18:47:59.999,	  true,	  1999-08-18 00:47:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 18:47:59.999,	  true,	  1999-08-19 00:47:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 18:47:59.999,	  true,	  1999-08-20 00:47:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 18:47:59.999,	  true,	  1999-08-21 00:47:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 18:47:59.999,	  true,	  1999-08-22 00:47:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 18:47:59.999,	  true,	  1999-08-23 00:47:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 18:47:59.999,	  true,	  1999-08-24 00:47:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 18:47:59.999,	  true,	  1999-08-25 00:47:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 18:47:59.999,	  true,	  1999-08-26 00:47:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 18:47:59.999,	  true,	  1999-08-27 00:47:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 18:47:59.999,	  true,	  1999-08-28 00:47:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 18:47:59.999,	  true,	  1999-08-29 00:47:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 18:47:59.999,	  true,	  1999-08-30 00:47:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 18:47:59.999,	  true,	  1999-08-31 00:47:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 18:47:59.999,	  true,	  1999-09-01 00:47:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 18:47:59.999,	  true,	  1999-09-02 00:47:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 18:47:59.999,	  true,	  1999-09-03 00:47:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 18:47:59.999,	  true,	  1999-09-04 00:47:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 18:47:59.999,	  true,	  1999-09-05 00:47:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 18:47:59.999,	  true,	  1999-09-06 00:47:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 18:47:59.999,	  true,	  1999-09-07 00:47:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 18:47:59.999,	  true,	  1999-09-08 00:47:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 18:47:59.999,	  true,	  1999-09-09 00:47:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 18:47:59.999,	  true,	  1999-09-10 00:47:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 18:47:59.999,	  true,	  1999-09-11 00:47:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 18:47:59.999,	  true,	  1999-09-12 00:47:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 18:47:59.999,	  true,	  1999-09-13 00:47:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 18:47:59.999,	  true,	  1999-09-14 00:47:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 18:47:59.999,	  true,	  1999-09-15 00:47:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 18:47:59.999,	  true,	  1999-09-16 00:47:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 18:47:59.999,	  true,	  1999-09-17 00:47:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 18:47:59.999,	  true,	  1999-09-18 00:47:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 18:47:59.999,	  true,	  1999-09-19 00:47:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 18:47:59.999,	  true,	  1999-09-20 00:47:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 18:47:59.999,	  true,	  1999-09-21 00:47:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 18:47:59.999,	  true,	  1999-09-22 00:47:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 18:47:59.999,	  true,	  1999-09-23 00:47:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 18:47:59.999,	  true,	  1999-09-24 00:47:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 18:47:59.999,	  true,	  1999-09-25 00:47:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 18:47:59.999,	  true,	  1999-09-26 00:47:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 18:47:59.999,	  true,	  1999-09-27 00:47:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 18:47:59.999,	  true,	  1999-09-28 00:47:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 18:47:59.999,	  true,	  1999-09-29 00:47:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 18:47:59.999,	  true,	  1999-09-30 00:47:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 18:47:59.999,	  true,	  1999-10-01 00:47:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 18:47:59.999,	  true,	  1999-10-02 00:47:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 18:47:59.999,	  true,	  1999-10-03 00:47:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 18:47:59.999,	  true,	  1999-10-04 00:47:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 18:47:59.999,	  true,	  1999-10-05 00:47:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 18:47:59.999,	  true,	  1999-10-06 00:47:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 18:47:59.999,	  true,	  1999-10-07 00:47:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 18:47:59.999,	  true,	  1999-10-08 00:47:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 18:47:59.999,	  true,	  1999-10-09 00:47:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 18:47:59.999,	  true,	  1999-10-10 00:47:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 18:47:59.999,	  true,	  1999-10-11 00:47:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 18:47:59.999,	  true,	  1999-10-12 00:47:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 18:47:59.999,	  true,	  1999-10-13 00:47:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 18:47:59.999,	  true,	  1999-10-14 00:47:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 18:47:59.999,	  true,	  1999-10-15 00:47:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 18:47:59.999,	  true,	  1999-10-16 00:47:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 18:47:59.999,	  true,	  1999-10-17 00:47:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 18:47:59.999,	  true,	  1999-10-18 00:47:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 18:47:59.999,	  true,	  1999-10-19 00:47:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 18:47:59.999,	  true,	  1999-10-20 00:47:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 18:47:59.999,	  true,	  1999-10-21 00:47:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 18:47:59.999,	  true,	  1999-10-22 00:47:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 18:47:59.999,	  true,	  1999-10-23 00:47:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 18:47:59.999,	  true,	  1999-10-24 00:47:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 18:47:59.999,	  true,	  1999-10-25 00:47:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 18:47:59.999,	  true,	  1999-10-26 00:47:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 18:47:59.999,	  true,	  1999-10-27 00:47:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 18:47:59.999,	  true,	  1999-10-28 00:47:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 18:47:59.999,	  true,	  1999-10-29 00:47:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 19:47:59.999,	  false,  1999-10-29 23:47:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 19:47:59.999,	  false,  1999-10-30 23:47:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 19:47:59.999,	  false,  1999-10-31 23:47:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 19:47:59.999,	  false,  1999-11-01 23:47:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 19:47:59.999,	  false,  1999-11-02 23:47:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 19:47:59.999,	  false,  1999-11-03 23:47:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 19:47:59.999,	  false,  1999-11-04 23:47:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 19:47:59.999,	  false,  1999-11-05 23:47:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 19:47:59.999,	  false,  1999-11-06 23:47:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 19:47:59.999,	  false,  1999-11-07 23:47:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 19:47:59.999,	  false,  1999-11-08 23:47:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 19:47:59.999,	  false,  1999-11-09 23:47:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 19:47:59.999,	  false,  1999-11-10 23:47:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 19:47:59.999,	  false,  1999-11-11 23:47:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 19:47:59.999,	  false,  1999-11-12 23:47:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 19:47:59.999,	  false,  1999-11-13 23:47:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 19:47:59.999,	  false,  1999-11-14 23:47:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 19:47:59.999,	  false,  1999-11-15 23:47:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 19:47:59.999,	  false,  1999-11-16 23:47:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 19:47:59.999,	  false,  1999-11-17 23:47:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 19:47:59.999,	  false,  1999-11-18 23:47:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 19:47:59.999,	  false,  1999-11-19 23:47:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 19:47:59.999,	  false,  1999-11-20 23:47:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 19:47:59.999,	  false,  1999-11-21 23:47:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 19:47:59.999,	  false,  1999-11-22 23:47:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 19:47:59.999,	  false,  1999-11-23 23:47:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 19:47:59.999,	  false,  1999-11-24 23:47:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 19:47:59.999,	  false,  1999-11-25 23:47:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 19:47:59.999,	  false,  1999-11-26 23:47:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 19:47:59.999,	  false,  1999-11-27 23:47:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 19:47:59.999,	  false,  1999-11-28 23:47:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 19:47:59.999,	  false,  1999-11-29 23:47:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 19:47:59.999,	  false,  1999-11-30 23:47:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 19:47:59.999,	  false,  1999-12-01 23:47:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 19:47:59.999,	  false,  1999-12-02 23:47:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 19:47:59.999,	  false,  1999-12-03 23:47:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 19:47:59.999,	  false,  1999-12-04 23:47:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 19:47:59.999,	  false,  1999-12-05 23:47:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 19:47:59.999,	  false,  1999-12-06 23:47:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 19:47:59.999,	  false,  1999-12-07 23:47:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 19:47:59.999,	  false,  1999-12-08 23:47:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 19:47:59.999,	  false,  1999-12-09 23:47:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 19:47:59.999,	  false,  1999-12-10 23:47:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 19:47:59.999,	  false,  1999-12-11 23:47:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 19:47:59.999,	  false,  1999-12-12 23:47:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 19:47:59.999,	  false,  1999-12-13 23:47:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 19:47:59.999,	  false,  1999-12-14 23:47:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 19:47:59.999,	  false,  1999-12-15 23:47:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 19:47:59.999,	  false,  1999-12-16 23:47:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 19:47:59.999,	  false,  1999-12-17 23:47:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 19:47:59.999,	  false,  1999-12-18 23:47:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 19:47:59.999,	  false,  1999-12-19 23:47:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 19:47:59.999,	  false,  1999-12-20 23:47:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 19:47:59.999,	  false,  1999-12-21 23:47:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 19:47:59.999,	  false,  1999-12-22 23:47:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 19:47:59.999,	  false,  1999-12-23 23:47:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 19:47:59.999,	  false,  1999-12-24 23:47:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 19:47:59.999,	  false,  1999-12-25 23:47:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 19:47:59.999,	  false,  1999-12-26 23:47:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 19:47:59.999,	  false,  1999-12-27 23:47:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 19:47:59.999,	  false,  1999-12-28 23:47:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 19:47:59.999,	  false,  1999-12-29 23:47:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 19:47:59.999,	  false,  1999-12-30 23:47:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 19:47:59.999,	  false,  1999-12-31 23:47:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 19:47:59.999,	  false,  2000-01-01 23:47:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 19:47:59.999,	  false,  2000-01-02 23:47:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 19:47:59.999,	  false,  2000-01-03 23:47:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 19:47:59.999,	  false,  2000-01-04 23:47:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 19:47:59.999,	  false,  2000-01-05 23:47:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 19:47:59.999,	  false,  2000-01-06 23:47:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 19:47:59.999,	  false,  2000-01-07 23:47:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 19:47:59.999,	  false,  2000-01-08 23:47:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 19:47:59.999,	  false,  2000-01-09 23:47:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 19:47:59.999,	  false,  2000-01-10 23:47:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 19:47:59.999,	  false,  2000-01-11 23:47:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 19:47:59.999,	  false,  2000-01-12 23:47:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 19:47:59.999,	  false,  2000-01-13 23:47:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 19:47:59.999,	  false,  2000-01-14 23:47:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 19:47:59.999,	  false,  2000-01-15 23:47:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 19:47:59.999,	  false,  2000-01-16 23:47:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 19:47:59.999,	  false,  2000-01-17 23:47:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 19:47:59.999,	  false,  2000-01-18 23:47:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 19:47:59.999,	  false,  2000-01-19 23:47:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 19:47:59.999,	  false,  2000-01-20 23:47:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 19:47:59.999,	  false,  2000-01-21 23:47:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 19:47:59.999,	  false,  2000-01-22 23:47:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 19:47:59.999,	  false,  2000-01-23 23:47:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 19:47:59.999,	  false,  2000-01-24 23:47:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 19:47:59.999,	  false,  2000-01-25 23:47:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 19:47:59.999,	  false,  2000-01-26 23:47:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 19:47:59.999,	  false,  2000-01-27 23:47:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 19:47:59.999,	  false,  2000-01-28 23:47:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 19:47:59.999,	  false,  2000-01-29 23:47:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 19:47:59.999,	  false,  2000-01-30 23:47:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 19:47:59.999,	  false,  2000-01-31 23:47:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 19:47:59.999,	  false,  2000-02-01 23:47:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 19:47:59.999,	  false,  2000-02-02 23:47:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 19:47:59.999,	  false,  2000-02-03 23:47:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 19:47:59.999,	  false,  2000-02-04 23:47:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 19:47:59.999,	  false,  2000-02-05 23:47:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 19:47:59.999,	  false,  2000-02-06 23:47:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 19:47:59.999,	  false,  2000-02-07 23:47:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 19:47:59.999,	  false,  2000-02-08 23:47:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 19:47:59.999,	  false,  2000-02-09 23:47:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 19:47:59.999,	  false,  2000-02-10 23:47:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 19:47:59.999,	  false,  2000-02-11 23:47:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 19:47:59.999,	  false,  2000-02-12 23:47:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 19:47:59.999,	  false,  2000-02-13 23:47:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 19:47:59.999,	  false,  2000-02-14 23:47:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 19:47:59.999,	  false,  2000-02-15 23:47:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 19:47:59.999,	  false,  2000-02-16 23:47:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 19:47:59.999,	  false,  2000-02-17 23:47:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 19:47:59.999,	  false,  2000-02-18 23:47:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 19:47:59.999,	  false,  2000-02-19 23:47:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 19:47:59.999,	  false,  2000-02-20 23:47:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 19:47:59.999,	  false,  2000-02-21 23:47:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 19:47:59.999,	  false,  2000-02-22 23:47:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 19:47:59.999,	  false,  2000-02-23 23:47:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 19:47:59.999,	  false,  2000-02-24 23:47:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 19:47:59.999,	  false,  2000-02-25 23:47:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 19:47:59.999,	  false,  2000-02-26 23:47:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 19:47:59.999,	  false,  2000-02-27 23:47:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 19:47:59.999,	  false,  2000-02-28 23:47:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 19:47:59.999,	  false,  2000-02-29 23:47:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 19:47:59.999,	  false,  2000-03-01 23:47:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 19:47:59.999,	  false,  2000-03-02 23:47:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 19:47:59.999,	  false,  2000-03-03 23:47:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 19:47:59.999,	  false,  2000-03-04 23:47:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 19:47:59.999,	  false,  2000-03-05 23:47:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 19:47:59.999,	  false,  2000-03-06 23:47:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 19:47:59.999,	  false,  2000-03-07 23:47:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 19:47:59.999,	  false,  2000-03-08 23:47:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 19:47:59.999,	  false,  2000-03-09 23:47:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 19:47:59.999,	  false,  2000-03-10 23:47:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 19:47:59.999,	  false,  2000-03-11 23:47:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 19:47:59.999,	  false,  2000-03-12 23:47:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 19:47:59.999,	  false,  2000-03-13 23:47:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 19:47:59.999,	  false,  2000-03-14 23:47:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 19:47:59.999,	  false,  2000-03-15 23:47:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 19:47:59.999,	  false,  2000-03-16 23:47:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 19:47:59.999,	  false,  2000-03-17 23:47:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 19:47:59.999,	  false,  2000-03-18 23:47:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 19:47:59.999,	  false,  2000-03-19 23:47:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 19:47:59.999,	  false,  2000-03-20 23:47:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 19:47:59.999,	  false,  2000-03-21 23:47:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 19:47:59.999,	  false,  2000-03-22 23:47:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 19:47:59.999,	  false,  2000-03-23 23:47:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 18:47:59.999,	  true,	  2000-03-25 00:47:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 18:47:59.999,	  true,	  2000-03-26 00:47:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 18:47:59.999,	  true,	  2000-03-27 00:47:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 18:47:59.999,	  true,	  2000-03-28 00:47:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 18:47:59.999,	  true,	  2000-03-29 00:47:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 18:47:59.999,	  true,	  2000-03-30 00:47:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 18:47:59.999,	  true,	  2000-03-31 00:47:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 18:47:59.999,	  true,	  2000-04-01 00:47:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 18:47:59.999,	  true,	  2000-04-02 00:47:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 18:47:59.999,	  true,	  2000-04-03 00:47:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 18:47:59.999,	  true,	  2000-04-04 00:47:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 18:47:59.999,	  true,	  2000-04-05 00:47:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 18:47:59.999,	  true,	  2000-04-06 00:47:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 18:47:59.999,	  true,	  2000-04-07 00:47:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 18:47:59.999,	  true,	  2000-04-08 00:47:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 18:47:59.999,	  true,	  2000-04-09 00:47:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 18:47:59.999,	  true,	  2000-04-10 00:47:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 18:47:59.999,	  true,	  2000-04-11 00:47:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 18:47:59.999,	  true,	  2000-04-12 00:47:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 18:47:59.999,	  true,	  2000-04-13 00:47:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 18:47:59.999,	  true,	  2000-04-14 00:47:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 18:47:59.999,	  true,	  2000-04-15 00:47:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 18:47:59.999,	  true,	  2000-04-16 00:47:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 18:47:59.999,	  true,	  2000-04-17 00:47:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 18:47:59.999,	  true,	  2000-04-18 00:47:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 18:47:59.999,	  true,	  2000-04-19 00:47:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 18:47:59.999,	  true,	  2000-04-20 00:47:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 18:47:59.999,	  true,	  2000-04-21 00:47:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 18:47:59.999,	  true,	  2000-04-22 00:47:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 18:47:59.999,	  true,	  2000-04-23 00:47:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 18:47:59.999,	  true,	  2000-04-24 00:47:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 18:47:59.999,	  true,	  2000-04-25 00:47:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 18:47:59.999,	  true,	  2000-04-26 00:47:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 18:47:59.999,	  true,	  2000-04-27 00:47:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 18:47:59.999,	  true,	  2000-04-28 00:47:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 18:47:59.999,	  true,	  2000-04-29 00:47:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 18:47:59.999,	  true,	  2000-04-30 00:47:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 18:47:59.999,	  true,	  2000-05-01 00:47:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 18:47:59.999,	  true,	  2000-05-02 00:47:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 18:47:59.999,	  true,	  2000-05-03 00:47:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 18:47:59.999,	  true,	  2000-05-04 00:47:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 18:47:59.999,	  true,	  2000-05-05 00:47:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 18:47:59.999,	  true,	  2000-05-06 00:47:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 18:47:59.999,	  true,	  2000-05-07 00:47:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 18:47:59.999,	  true,	  2000-05-08 00:47:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 18:47:59.999,	  true,	  2000-05-09 00:47:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 18:47:59.999,	  true,	  2000-05-10 00:47:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 18:47:59.999,	  true,	  2000-05-11 00:47:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 18:47:59.999,	  true,	  2000-05-12 00:47:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 18:47:59.999,	  true,	  2000-05-13 00:47:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 18:47:59.999,	  true,	  2000-05-14 00:47:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 18:47:59.999,	  true,	  2000-05-15 00:47:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 18:47:59.999,	  true,	  2000-05-16 00:47:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 18:47:59.999,	  true,	  2000-05-17 00:47:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 18:47:59.999,	  true,	  2000-05-18 00:47:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 18:47:59.999,	  true,	  2000-05-19 00:47:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 18:47:59.999,	  true,	  2000-05-20 00:47:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 18:47:59.999,	  true,	  2000-05-21 00:47:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 18:47:59.999,	  true,	  2000-05-22 00:47:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 18:47:59.999,	  true,	  2000-05-23 00:47:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 18:47:59.999,	  true,	  2000-05-24 00:47:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 18:47:59.999,	  true,	  2000-05-25 00:47:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 18:47:59.999,	  true,	  2000-05-26 00:47:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 18:47:59.999,	  true,	  2000-05-27 00:47:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 18:47:59.999,	  true,	  2000-05-28 00:47:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 18:47:59.999,	  true,	  2000-05-29 00:47:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 18:47:59.999,	  true,	  2000-05-30 00:47:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 18:47:59.999,	  true,	  2000-05-31 00:47:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 18:47:59.999,	  true,	  2000-06-01 00:47:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 18:47:59.999,	  true,	  2000-06-02 00:47:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 18:47:59.999,	  true,	  2000-06-03 00:47:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 18:47:59.999,	  true,	  2000-06-04 00:47:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 18:47:59.999,	  true,	  2000-06-05 00:47:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 18:47:59.999,	  true,	  2000-06-06 00:47:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 18:47:59.999,	  true,	  2000-06-07 00:47:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 18:47:59.999,	  true,	  2000-06-08 00:47:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 18:47:59.999,	  true,	  2000-06-09 00:47:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 18:47:59.999,	  true,	  2000-06-10 00:47:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 18:47:59.999,	  true,	  2000-06-11 00:47:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 18:47:59.999,	  true,	  2000-06-12 00:47:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 18:47:59.999,	  true,	  2000-06-13 00:47:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 18:47:59.999,	  true,	  2000-06-14 00:47:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 18:47:59.999,	  true,	  2000-06-15 00:47:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 18:47:59.999,	  true,	  2000-06-16 00:47:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 18:47:59.999,	  true,	  2000-06-17 00:47:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 18:47:59.999,	  true,	  2000-06-18 00:47:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 18:47:59.999,	  true,	  2000-06-19 00:47:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 18:47:59.999,	  true,	  2000-06-20 00:47:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 18:47:59.999,	  true,	  2000-06-21 00:47:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 18:47:59.999,	  true,	  2000-06-22 00:47:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 18:47:59.999,	  true,	  2000-06-23 00:47:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 18:47:59.999,	  true,	  2000-06-24 00:47:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 18:47:59.999,	  true,	  2000-06-25 00:47:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 18:47:59.999,	  true,	  2000-06-26 00:47:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 18:47:59.999,	  true,	  2000-06-27 00:47:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 18:47:59.999,	  true,	  2000-06-28 00:47:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 18:47:59.999,	  true,	  2000-06-29 00:47:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 18:47:59.999,	  true,	  2000-06-30 00:47:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 18:47:59.999,	  true,	  2000-07-01 00:47:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 18:47:59.999,	  true,	  2000-07-02 00:47:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 18:47:59.999,	  true,	  2000-07-03 00:47:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 18:47:59.999,	  true,	  2000-07-04 00:47:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 18:47:59.999,	  true,	  2000-07-05 00:47:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 18:47:59.999,	  true,	  2000-07-06 00:47:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 18:47:59.999,	  true,	  2000-07-07 00:47:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 18:47:59.999,	  true,	  2000-07-08 00:47:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 18:47:59.999,	  true,	  2000-07-09 00:47:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 18:47:59.999,	  true,	  2000-07-10 00:47:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 18:47:59.999,	  true,	  2000-07-11 00:47:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 18:47:59.999,	  true,	  2000-07-12 00:47:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 18:47:59.999,	  true,	  2000-07-13 00:47:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 18:47:59.999,	  true,	  2000-07-14 00:47:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 18:47:59.999,	  true,	  2000-07-15 00:47:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 18:47:59.999,	  true,	  2000-07-16 00:47:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 18:47:59.999,	  true,	  2000-07-17 00:47:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 18:47:59.999,	  true,	  2000-07-18 00:47:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 18:47:59.999,	  true,	  2000-07-19 00:47:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 18:47:59.999,	  true,	  2000-07-20 00:47:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 18:47:59.999,	  true,	  2000-07-21 00:47:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 18:47:59.999,	  true,	  2000-07-22 00:47:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 18:47:59.999,	  true,	  2000-07-23 00:47:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 18:47:59.999,	  true,	  2000-07-24 00:47:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 18:47:59.999,	  true,	  2000-07-25 00:47:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 18:47:59.999,	  true,	  2000-07-26 00:47:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 18:47:59.999,	  true,	  2000-07-27 00:47:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 18:47:59.999,	  true,	  2000-07-28 00:47:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 18:47:59.999,	  true,	  2000-07-29 00:47:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 18:47:59.999,	  true,	  2000-07-30 00:47:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 18:47:59.999,	  true,	  2000-07-31 00:47:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 18:47:59.999,	  true,	  2000-08-01 00:47:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 18:47:59.999,	  true,	  2000-08-02 00:47:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 18:47:59.999,	  true,	  2000-08-03 00:47:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 18:47:59.999,	  true,	  2000-08-04 00:47:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 18:47:59.999,	  true,	  2000-08-05 00:47:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 18:47:59.999,	  true,	  2000-08-06 00:47:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 18:47:59.999,	  true,	  2000-08-07 00:47:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 18:47:59.999,	  true,	  2000-08-08 00:47:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 18:47:59.999,	  true,	  2000-08-09 00:47:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 18:47:59.999,	  true,	  2000-08-10 00:47:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 18:47:59.999,	  true,	  2000-08-11 00:47:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 18:47:59.999,	  true,	  2000-08-12 00:47:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 18:47:59.999,	  true,	  2000-08-13 00:47:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 18:47:59.999,	  true,	  2000-08-14 00:47:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 18:47:59.999,	  true,	  2000-08-15 00:47:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 18:47:59.999,	  true,	  2000-08-16 00:47:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 18:47:59.999,	  true,	  2000-08-17 00:47:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 18:47:59.999,	  true,	  2000-08-18 00:47:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 18:47:59.999,	  true,	  2000-08-19 00:47:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 18:47:59.999,	  true,	  2000-08-20 00:47:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 18:47:59.999,	  true,	  2000-08-21 00:47:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 18:47:59.999,	  true,	  2000-08-22 00:47:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 18:47:59.999,	  true,	  2000-08-23 00:47:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 18:47:59.999,	  true,	  2000-08-24 00:47:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 18:47:59.999,	  true,	  2000-08-25 00:47:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 18:47:59.999,	  true,	  2000-08-26 00:47:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 18:47:59.999,	  true,	  2000-08-27 00:47:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 18:47:59.999,	  true,	  2000-08-28 00:47:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 18:47:59.999,	  true,	  2000-08-29 00:47:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 18:47:59.999,	  true,	  2000-08-30 00:47:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 18:47:59.999,	  true,	  2000-08-31 00:47:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 18:47:59.999,	  true,	  2000-09-01 00:47:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 18:47:59.999,	  true,	  2000-09-02 00:47:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 18:47:59.999,	  true,	  2000-09-03 00:47:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 18:47:59.999,	  true,	  2000-09-04 00:47:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 18:47:59.999,	  true,	  2000-09-05 00:47:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 18:47:59.999,	  true,	  2000-09-06 00:47:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 18:47:59.999,	  true,	  2000-09-07 00:47:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 18:47:59.999,	  true,	  2000-09-08 00:47:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 18:47:59.999,	  true,	  2000-09-09 00:47:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 18:47:59.999,	  true,	  2000-09-10 00:47:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 18:47:59.999,	  true,	  2000-09-11 00:47:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 18:47:59.999,	  true,	  2000-09-12 00:47:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 18:47:59.999,	  true,	  2000-09-13 00:47:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 18:47:59.999,	  true,	  2000-09-14 00:47:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 18:47:59.999,	  true,	  2000-09-15 00:47:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 18:47:59.999,	  true,	  2000-09-16 00:47:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 18:47:59.999,	  true,	  2000-09-17 00:47:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 18:47:59.999,	  true,	  2000-09-18 00:47:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 18:47:59.999,	  true,	  2000-09-19 00:47:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 18:47:59.999,	  true,	  2000-09-20 00:47:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 18:47:59.999,	  true,	  2000-09-21 00:47:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 18:47:59.999,	  true,	  2000-09-22 00:47:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 18:47:59.999,	  true,	  2000-09-23 00:47:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 18:47:59.999,	  true,	  2000-09-24 00:47:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 18:47:59.999,	  true,	  2000-09-25 00:47:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 18:47:59.999,	  true,	  2000-09-26 00:47:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 18:47:59.999,	  true,	  2000-09-27 00:47:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 18:47:59.999,	  true,	  2000-09-28 00:47:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 18:47:59.999,	  true,	  2000-09-29 00:47:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 18:47:59.999,	  true,	  2000-09-30 00:47:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 18:47:59.999,	  true,	  2000-10-01 00:47:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 18:47:59.999,	  true,	  2000-10-02 00:47:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 18:47:59.999,	  true,	  2000-10-03 00:47:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 18:47:59.999,	  true,	  2000-10-04 00:47:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 18:47:59.999,	  true,	  2000-10-05 00:47:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 18:47:59.999,	  true,	  2000-10-06 00:47:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 18:47:59.999,	  true,	  2000-10-07 00:47:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 18:47:59.999,	  true,	  2000-10-08 00:47:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 18:47:59.999,	  true,	  2000-10-09 00:47:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 18:47:59.999,	  true,	  2000-10-10 00:47:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 18:47:59.999,	  true,	  2000-10-11 00:47:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 18:47:59.999,	  true,	  2000-10-12 00:47:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 18:47:59.999,	  true,	  2000-10-13 00:47:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 18:47:59.999,	  true,	  2000-10-14 00:47:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 18:47:59.999,	  true,	  2000-10-15 00:47:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 18:47:59.999,	  true,	  2000-10-16 00:47:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 18:47:59.999,	  true,	  2000-10-17 00:47:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 18:47:59.999,	  true,	  2000-10-18 00:47:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 18:47:59.999,	  true,	  2000-10-19 00:47:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 18:47:59.999,	  true,	  2000-10-20 00:47:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 18:47:59.999,	  true,	  2000-10-21 00:47:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 18:47:59.999,	  true,	  2000-10-22 00:47:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 18:47:59.999,	  true,	  2000-10-23 00:47:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 18:47:59.999,	  true,	  2000-10-24 00:47:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 18:47:59.999,	  true,	  2000-10-25 00:47:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 18:47:59.999,	  true,	  2000-10-26 00:47:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 18:47:59.999,	  true,	  2000-10-27 00:47:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 19:47:59.999,	  false,  2000-10-27 23:47:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 19:47:59.999,	  false,  2000-10-28 23:47:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 19:47:59.999,	  false,  2000-10-29 23:47:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 19:47:59.999,	  false,  2000-10-30 23:47:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 19:47:59.999,	  false,  2000-10-31 23:47:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 19:47:59.999,	  false,  2000-11-01 23:47:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 19:47:59.999,	  false,  2000-11-02 23:47:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 19:47:59.999,	  false,  2000-11-03 23:47:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 19:47:59.999,	  false,  2000-11-04 23:47:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 19:47:59.999,	  false,  2000-11-05 23:47:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 19:47:59.999,	  false,  2000-11-06 23:47:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 19:47:59.999,	  false,  2000-11-07 23:47:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 19:47:59.999,	  false,  2000-11-08 23:47:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 19:47:59.999,	  false,  2000-11-09 23:47:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 19:47:59.999,	  false,  2000-11-10 23:47:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 19:47:59.999,	  false,  2000-11-11 23:47:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 19:47:59.999,	  false,  2000-11-12 23:47:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 19:47:59.999,	  false,  2000-11-13 23:47:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 19:47:59.999,	  false,  2000-11-14 23:47:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 19:47:59.999,	  false,  2000-11-15 23:47:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 19:47:59.999,	  false,  2000-11-16 23:47:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 19:47:59.999,	  false,  2000-11-17 23:47:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 19:47:59.999,	  false,  2000-11-18 23:47:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 19:47:59.999,	  false,  2000-11-19 23:47:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 19:47:59.999,	  false,  2000-11-20 23:47:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 19:47:59.999,	  false,  2000-11-21 23:47:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 19:47:59.999,	  false,  2000-11-22 23:47:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 19:47:59.999,	  false,  2000-11-23 23:47:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 19:47:59.999,	  false,  2000-11-24 23:47:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 19:47:59.999,	  false,  2000-11-25 23:47:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 19:47:59.999,	  false,  2000-11-26 23:47:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 19:47:59.999,	  false,  2000-11-27 23:47:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 19:47:59.999,	  false,  2000-11-28 23:47:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 19:47:59.999,	  false,  2000-11-29 23:47:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 19:47:59.999,	  false,  2000-11-30 23:47:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 19:47:59.999,	  false,  2000-12-01 23:47:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 19:47:59.999,	  false,  2000-12-02 23:47:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 19:47:59.999,	  false,  2000-12-03 23:47:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 19:47:59.999,	  false,  2000-12-04 23:47:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 19:47:59.999,	  false,  2000-12-05 23:47:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 19:47:59.999,	  false,  2000-12-06 23:47:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 19:47:59.999,	  false,  2000-12-07 23:47:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 19:47:59.999,	  false,  2000-12-08 23:47:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 19:47:59.999,	  false,  2000-12-09 23:47:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 19:47:59.999,	  false,  2000-12-10 23:47:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 19:47:59.999,	  false,  2000-12-11 23:47:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 19:47:59.999,	  false,  2000-12-12 23:47:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 19:47:59.999,	  false,  2000-12-13 23:47:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 19:47:59.999,	  false,  2000-12-14 23:47:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 19:47:59.999,	  false,  2000-12-15 23:47:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 19:47:59.999,	  false,  2000-12-16 23:47:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 19:47:59.999,	  false,  2000-12-17 23:47:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 19:47:59.999,	  false,  2000-12-18 23:47:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 19:47:59.999,	  false,  2000-12-19 23:47:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 19:47:59.999,	  false,  2000-12-20 23:47:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 19:47:59.999,	  false,  2000-12-21 23:47:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 19:47:59.999,	  false,  2000-12-22 23:47:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 19:47:59.999,	  false,  2000-12-23 23:47:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 19:47:59.999,	  false,  2000-12-24 23:47:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 19:47:59.999,	  false,  2000-12-25 23:47:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 19:47:59.999,	  false,  2000-12-26 23:47:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 19:47:59.999,	  false,  2000-12-27 23:47:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 19:47:59.999,	  false,  2000-12-28 23:47:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 19:47:59.999,	  false,  2000-12-29 23:47:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 19:47:59.999,	  false,  2000-12-30 23:47:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 19:47:59.999,	  false,  2000-12-31 23:47:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 19:47:59.999,	  false,  2001-01-01 23:47:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 19:47:59.999,	  false,  2001-01-02 23:47:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 19:47:59.999,	  false,  2001-01-03 23:47:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 19:47:59.999,	  false,  2001-01-04 23:47:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 19:47:59.999,	  false,  2001-01-05 23:47:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 19:47:59.999,	  false,  2001-01-06 23:47:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 19:47:59.999,	  false,  2001-01-07 23:47:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

