stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():int;	# 0  (main:int)
# Mil compiler Version 1.0) 	# 1  ($2:str)
# Copyright (c) 1993-2001, CWI. All rights reserved. 	# 2  ($4:str)
# Predefined code segment 	# 3  ($6:str)
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 4  ($8:str)
#module(monettime,alarm); 	# 5  ($10:str)
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 6  ($12:str)
## test the various ways to create rules 	# 7  ($14:str)
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");	# 8 MTIMErule_fromstr (rule_jan:rule)<-($16:str)
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 	# 9  ($18:str)
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");	# 10 MTIMErule_fromstr (rule_mar:rule)<-($20:str)
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 	# 11  ($22:str)
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");	# 12 MTIMErule_fromstr (rule_apr:rule)<-($24:str)
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 	# 13  ($26:str)
    rule_may := mtime.rule("MAY 26@01:15");	# 14 MTIMErule_fromstr (rule_may:rule)<-($28:str)
#var rule_may := mtime.rule("MAY 26@01:15"); 	# 15  ($30:str)
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");	# 16 MTIMErule_fromstr (rule_jun:rule)<-($32:str)
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 	# 17  ($34:str)
    rule_jul := mtime.rule(7,1,1,75);	# 18 MTIMErule_create (rule_jul:rule)<-($36:int)($37:int)($37:int)($38:int)
#var rule_jul := mtime.rule(7,1,1,75); 	# 19  ($40:str)
    rule_aug := mtime.rule(8,-1,1,75);	# 20 MTIMErule_create (rule_aug:rule)<-($42:int)($43:int)($37:int)($38:int)
#var rule_aug := mtime.rule(8,-1,1,75); 	# 21  ($45:str)
    rule_sep := mtime.rule(9,-10,3,75);	# 22 MTIMErule_create (rule_sep:rule)<-($47:int)($48:int)($49:int)($38:int)
#var rule_sep := mtime.rule(9,-10,3,75); 	# 23  ($51:str)
    rule_oct := mtime.rule(10,31,0,75);	# 24 MTIMErule_create (rule_oct:rule)<-($53:int)($54:int)($55:int)($38:int)
#var rule_oct := mtime.rule(10,31,0,75); 	# 25  ($57:str)
    rule_nov := mtime.rule(11,-10,-4,75);	# 26 MTIMErule_create (rule_nov:rule)<-($59:int)($48:int)($60:int)($38:int)
#var rule_nov := mtime.rule(11,-10,-4,75); 	# 27  ($62:str)
## nil rules 	# 28  ($64:str)
    rule_dec := mtime.rule(12,-31,0,75);	# 29 MTIMErule_create (rule_dec:rule)<-($66:int)($67:int)($55:int)($38:int)
#var rule_dec := mtime.rule(12,-31,0,75); 	# 30  ($69:str)
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");	# 31 MTIMErule_fromstr (rule_feb:rule)<-($71:str)
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 	# 32  ($73:str)
#  	# 33  ($75:str)
    rule_bat := bbp.new(:str,:rule,10);	# 34 CMDBATnewint (rule_bat:bat[:str,:rule])<-($77:str)($78:rule)($53:int)
#var rule_bat := bbp.new(str,rule,10); 	# 35  ($80:str)
    bat.insert(rule_bat,"jan",rule_jan);	# 36 BKCinsert_bun ($81:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($82:str)(rule_jan:rule)
    bat.insert(rule_bat,"feb",rule_feb);	# 37 BKCinsert_bun ($83:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($84:str)(rule_feb:rule)
    bat.insert(rule_bat,"mar",rule_mar);	# 38 BKCinsert_bun ($85:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($86:str)(rule_mar:rule)
    bat.insert(rule_bat,"apr",rule_apr);	# 39 BKCinsert_bun ($87:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($88:str)(rule_apr:rule)
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 	# 40  ($90:str)
    bat.insert(rule_bat,"may",rule_may);	# 41 BKCinsert_bun ($91:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($92:str)(rule_may:rule)
    bat.insert(rule_bat,"jun",rule_jun);	# 42 BKCinsert_bun ($93:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($94:str)(rule_jun:rule)
    bat.insert(rule_bat,"jul",rule_jul);	# 43 BKCinsert_bun ($95:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($96:str)(rule_jul:rule)
    bat.insert(rule_bat,"aug",rule_aug);	# 44 BKCinsert_bun ($97:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($98:str)(rule_aug:rule)
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 	# 45  ($100:str)
    bat.insert(rule_bat,"sep",rule_sep);	# 46 BKCinsert_bun ($101:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($102:str)(rule_sep:rule)
    bat.insert(rule_bat,"oct",rule_oct);	# 47 BKCinsert_bun ($103:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($104:str)(rule_oct:rule)
    bat.insert(rule_bat,"nov",rule_nov);	# 48 BKCinsert_bun ($105:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($106:str)(rule_nov:rule)
    bat.insert(rule_bat,"dec",rule_dec);	# 49 BKCinsert_bun ($107:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($108:str)(rule_dec:rule)
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 	# 50  ($110:str)
## test the operations on rules 	# 51  ($112:str)
    ma_a := bat.setColumn(rule_bat,"rule");	# 52 BKCsetColumn (ma_a:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($114:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 53  ($116:str)
    $1022 := bbp.new(:str,:int);	# 54 CMDBATnew ($1022:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1026,$1027,$1028):= chopper.newIterator(rule_bat);	# 55 CHPbunIterator ($1026:lng)($1027:str)($1028:rule)<-(rule_bat:bat[:str,:rule]) jump 61
    $1030 := mtime.month($1028);	# 56 MTIMErule_extract_month ($1030:int)<-($1028:rule)
    bat.insert($1022,$1027,$1030);	# 57 BKCinsert_bun ($1031:bat[:str,:int])<-($1022:bat[:str,:int])($1027:str)($1030:int)
catch MALexception;	# 58  (MALexception:str) jump 59
exit MALexception;	# 59  (MALexception:str)
    redo ($1026,$1027,$1028):= chopper.hasMoreElements(rule_bat);	# 60 CHPbunHasMoreElements ($1026:lng)($1027:str)($1028:rule)<-(rule_bat:bat[:str,:rule]) jump 56
exit ($1026,$1027,$1028);	# 61  ($1026:lng)($1027:str)($1028:rule)
    na_a:bat[:str,:int]  := $1022;	# 62  (na_a:bat[:str,:int])<-($1022:bat[:str,:int])
    oa_a := bat.setColumn(na_a,"month");	# 63 BKCsetColumn (oa_a:bat[:str,:int])<-(na_a:bat[:str,:int])($120:str)
#      [month](rule_bat).bat.setColumn("month"), 	# 64  ($122:str)
    $1036 := bbp.new(:str,:int);	# 65 CMDBATnew ($1036:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1038,$1039,$1040):= chopper.newIterator(rule_bat);	# 66 CHPbunIterator ($1038:lng)($1039:str)($1040:rule)<-(rule_bat:bat[:str,:rule]) jump 72
    $1042 := mtime.weekday($1040);	# 67 MTIMErule_extract_weekday ($1042:int)<-($1040:rule)
    bat.insert($1036,$1039,$1042);	# 68 BKCinsert_bun ($1043:bat[:str,:int])<-($1036:bat[:str,:int])($1039:str)($1042:int)
catch MALexception;	# 69  (MALexception:str) jump 70
exit MALexception;	# 70  (MALexception:str)
    redo ($1038,$1039,$1040):= chopper.hasMoreElements(rule_bat);	# 71 CHPbunHasMoreElements ($1038:lng)($1039:str)($1040:rule)<-(rule_bat:bat[:str,:rule]) jump 67
exit ($1038,$1039,$1040);	# 72  ($1038:lng)($1039:str)($1040:rule)
    pa_a:bat[:str,:int]  := $1036;	# 73  (pa_a:bat[:str,:int])<-($1036:bat[:str,:int])
    qa_a := bat.setColumn(pa_a,"weekday");	# 74 BKCsetColumn (qa_a:bat[:str,:int])<-(pa_a:bat[:str,:int])($126:str)
#      [weekday](rule_bat).bat.setColumn("weekday"), 	# 75  ($128:str)
    $1048 := bbp.new(:str,:int);	# 76 CMDBATnew ($1048:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1050,$1051,$1052):= chopper.newIterator(rule_bat);	# 77 CHPbunIterator ($1050:lng)($1051:str)($1052:rule)<-(rule_bat:bat[:str,:rule]) jump 83
    $1054 := mtime.day($1052);	# 78 MTIMErule_extract_day ($1054:int)<-($1052:rule)
    bat.insert($1048,$1051,$1054);	# 79 BKCinsert_bun ($1055:bat[:str,:int])<-($1048:bat[:str,:int])($1051:str)($1054:int)
catch MALexception;	# 80  (MALexception:str) jump 81
exit MALexception;	# 81  (MALexception:str)
    redo ($1050,$1051,$1052):= chopper.hasMoreElements(rule_bat);	# 82 CHPbunHasMoreElements ($1050:lng)($1051:str)($1052:rule)<-(rule_bat:bat[:str,:rule]) jump 78
exit ($1050,$1051,$1052);	# 83  ($1050:lng)($1051:str)($1052:rule)
    ra_a:bat[:str,:int]  := $1048;	# 84  (ra_a:bat[:str,:int])<-($1048:bat[:str,:int])
    sa_a := bat.setColumn(ra_a,"day");	# 85 BKCsetColumn (sa_a:bat[:str,:int])<-(ra_a:bat[:str,:int])($132:str)
#      [day](rule_bat).bat.setColumn("day"), 	# 86  ($134:str)
    $1060 := bbp.new(:str,:int);	# 87 CMDBATnew ($1060:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1062,$1063,$1064):= chopper.newIterator(rule_bat);	# 88 CHPbunIterator ($1062:lng)($1063:str)($1064:rule)<-(rule_bat:bat[:str,:rule]) jump 94
    $1066 := mtime.minutes($1064);	# 89 MTIMErule_extract_minutes ($1066:int)<-($1064:rule)
    bat.insert($1060,$1063,$1066);	# 90 BKCinsert_bun ($1067:bat[:str,:int])<-($1060:bat[:str,:int])($1063:str)($1066:int)
catch MALexception;	# 91  (MALexception:str) jump 92
exit MALexception;	# 92  (MALexception:str)
    redo ($1062,$1063,$1064):= chopper.hasMoreElements(rule_bat);	# 93 CHPbunHasMoreElements ($1062:lng)($1063:str)($1064:rule)<-(rule_bat:bat[:str,:rule]) jump 89
exit ($1062,$1063,$1064);	# 94  ($1062:lng)($1063:str)($1064:rule)
    ta_a:bat[:str,:int]  := $1060;	# 95  (ta_a:bat[:str,:int])<-($1060:bat[:str,:int])
    ua_a := bat.setColumn(ta_a,"minutes");	# 96 BKCsetColumn (ua_a:bat[:str,:int])<-(ta_a:bat[:str,:int])($138:str)
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");	# 97 IOprint_val ($139:int)<-($140:str)
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);	# 98 IOtable (va_a:int)<-(rule_bat:bat[:str,:rule])(na_a:bat[:str,:int])(pa_a:bat[:str,:int])(ra_a:bat[:str,:int])(ta_a:bat[:str,:int])
#      [minutes](rule_bat).bat.setColumn("minutes")); 	# 99  ($143:str)
    bat.setColumn(rule_bat,"rule");	# 100 BKCsetColumn ($144:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($114:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 101  ($116:str)
    $1072 := bbp.new(:str,:date);	# 102 CMDBATnew ($1072:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1074,$1075,$1076):= chopper.newIterator(rule_bat);	# 103 CHPbunIterator ($1074:lng)($1075:str)($1076:rule)<-(rule_bat:bat[:str,:rule]) jump 109
    $1078 := mtime.compute($1076,2001);	# 104 MTIMEcompute_rule_foryear ($1078:date)<-($1076:rule)($148:int)
    bat.insert($1072,$1075,$1078);	# 105 BKCinsert_bun ($1079:bat[:str,:date])<-($1072:bat[:str,:date])($1075:str)($1078:date)
catch MALexception;	# 106  (MALexception:str) jump 107
exit MALexception;	# 107  (MALexception:str)
    redo ($1074,$1075,$1076):= chopper.hasMoreElements(rule_bat);	# 108 CHPbunHasMoreElements ($1074:lng)($1075:str)($1076:rule)<-(rule_bat:bat[:str,:rule]) jump 104
exit ($1074,$1075,$1076);	# 109  ($1074:lng)($1075:str)($1076:rule)
    xa_a:bat[:str,:date]  := $1072;	# 110  (xa_a:bat[:str,:date])<-($1072:bat[:str,:date])
    ya_a := bat.setColumn(xa_a,"2001");	# 111 BKCsetColumn (ya_a:bat[:str,:date])<-(xa_a:bat[:str,:date])($150:str)
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 	# 112  ($152:str)
    $1084 := bbp.new(:str,:date);	# 113 CMDBATnew ($1084:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1086,$1087,$1088):= chopper.newIterator(rule_bat);	# 114 CHPbunIterator ($1086:lng)($1087:str)($1088:rule)<-(rule_bat:bat[:str,:rule]) jump 120
    $1090 := mtime.compute($1088,2001);	# 115 MTIMEcompute_rule_foryear ($1090:date)<-($1088:rule)($148:int)
    bat.insert($1084,$1087,$1090);	# 116 BKCinsert_bun ($1091:bat[:str,:date])<-($1084:bat[:str,:date])($1087:str)($1090:date)
catch MALexception;	# 117  (MALexception:str) jump 118
exit MALexception;	# 118  (MALexception:str)
    redo ($1086,$1087,$1088):= chopper.hasMoreElements(rule_bat);	# 119 CHPbunHasMoreElements ($1086:lng)($1087:str)($1088:rule)<-(rule_bat:bat[:str,:rule]) jump 115
exit ($1086,$1087,$1088);	# 120  ($1086:lng)($1087:str)($1088:rule)
    ab_a:bat[:str,:date]  := $1084;	# 121  (ab_a:bat[:str,:date])<-($1084:bat[:str,:date])
    $1096 := bbp.new(:str,:int);	# 122 CMDBATnew ($1096:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1098,$1099,$1100):= chopper.newIterator(ab_a);	# 123 CHPbunIterator ($1098:lng)($1099:str)($1100:date)<-(ab_a:bat[:str,:date]) jump 129
    $1102 := mtime.dayofweek($1100);	# 124 MTIMEdate_extract_dayofweek ($1102:int)<-($1100:date)
    bat.insert($1096,$1099,$1102);	# 125 BKCinsert_bun ($1103:bat[:str,:int])<-($1096:bat[:str,:int])($1099:str)($1102:int)
catch MALexception;	# 126  (MALexception:str) jump 127
exit MALexception;	# 127  (MALexception:str)
    redo ($1098,$1099,$1100):= chopper.hasMoreElements(ab_a);	# 128 CHPbunHasMoreElements ($1098:lng)($1099:str)($1100:date)<-(ab_a:bat[:str,:date]) jump 124
exit ($1098,$1099,$1100);	# 129  ($1098:lng)($1099:str)($1100:date)
    bb_a:bat[:str,:int]  := $1096;	# 130  (bb_a:bat[:str,:int])<-($1096:bat[:str,:int])
    $1108 := bbp.new(:str,:str);	# 131 CMDBATnew ($1108:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1110,$1111,$1112):= chopper.newIterator(bb_a);	# 132 CHPbunIterator ($1110:lng)($1111:str)($1112:int)<-(bb_a:bat[:str,:int]) jump 138
    $1114 := mtime.dayname($1112);	# 133 MTIMEday_to_str ($1114:str)<-($1112:int)
    bat.insert($1108,$1111,$1114);	# 134 BKCinsert_bun ($1115:bat[:str,:str])<-($1108:bat[:str,:str])($1111:str)($1114:str)
catch MALexception;	# 135  (MALexception:str) jump 136
exit MALexception;	# 136  (MALexception:str)
    redo ($1110,$1111,$1112):= chopper.hasMoreElements(bb_a);	# 137 CHPbunHasMoreElements ($1110:lng)($1111:str)($1112:int)<-(bb_a:bat[:str,:int]) jump 133
exit ($1110,$1111,$1112);	# 138  ($1110:lng)($1111:str)($1112:int)
    cb_a:bat[:str,:str]  := $1108;	# 139  (cb_a:bat[:str,:str])<-($1108:bat[:str,:str])
    bat.setColumn(cb_a,"2001");	# 140 BKCsetColumn ($158:bat[:str,:str])<-(cb_a:bat[:str,:str])($150:str)
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 	# 141  ($160:str)
    $1120 := bbp.new(:str,:date);	# 142 CMDBATnew ($1120:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1122,$1123,$1124):= chopper.newIterator(rule_bat);	# 143 CHPbunIterator ($1122:lng)($1123:str)($1124:rule)<-(rule_bat:bat[:str,:rule]) jump 149
    $1126 := mtime.compute($1124,1999);	# 144 MTIMEcompute_rule_foryear ($1126:date)<-($1124:rule)($162:int)
    bat.insert($1120,$1123,$1126);	# 145 BKCinsert_bun ($1127:bat[:str,:date])<-($1120:bat[:str,:date])($1123:str)($1126:date)
catch MALexception;	# 146  (MALexception:str) jump 147
exit MALexception;	# 147  (MALexception:str)
    redo ($1122,$1123,$1124):= chopper.hasMoreElements(rule_bat);	# 148 CHPbunHasMoreElements ($1122:lng)($1123:str)($1124:rule)<-(rule_bat:bat[:str,:rule]) jump 144
exit ($1122,$1123,$1124);	# 149  ($1122:lng)($1123:str)($1124:rule)
    eb_a:bat[:str,:date]  := $1120;	# 150  (eb_a:bat[:str,:date])<-($1120:bat[:str,:date])
    bat.setColumn(eb_a,"1999");	# 151 BKCsetColumn ($163:bat[:str,:date])<-(eb_a:bat[:str,:date])($164:str)
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 	# 152  ($166:str)
    $1132 := bbp.new(:str,:date);	# 153 CMDBATnew ($1132:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1134,$1135,$1136):= chopper.newIterator(rule_bat);	# 154 CHPbunIterator ($1134:lng)($1135:str)($1136:rule)<-(rule_bat:bat[:str,:rule]) jump 160
    $1138 := mtime.compute($1136,1999);	# 155 MTIMEcompute_rule_foryear ($1138:date)<-($1136:rule)($162:int)
    bat.insert($1132,$1135,$1138);	# 156 BKCinsert_bun ($1139:bat[:str,:date])<-($1132:bat[:str,:date])($1135:str)($1138:date)
catch MALexception;	# 157  (MALexception:str) jump 158
exit MALexception;	# 158  (MALexception:str)
    redo ($1134,$1135,$1136):= chopper.hasMoreElements(rule_bat);	# 159 CHPbunHasMoreElements ($1134:lng)($1135:str)($1136:rule)<-(rule_bat:bat[:str,:rule]) jump 155
exit ($1134,$1135,$1136);	# 160  ($1134:lng)($1135:str)($1136:rule)
    gb_a:bat[:str,:date]  := $1132;	# 161  (gb_a:bat[:str,:date])<-($1132:bat[:str,:date])
    $1144 := bbp.new(:str,:int);	# 162 CMDBATnew ($1144:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1146,$1147,$1148):= chopper.newIterator(gb_a);	# 163 CHPbunIterator ($1146:lng)($1147:str)($1148:date)<-(gb_a:bat[:str,:date]) jump 169
    $1150 := mtime.dayofweek($1148);	# 164 MTIMEdate_extract_dayofweek ($1150:int)<-($1148:date)
    bat.insert($1144,$1147,$1150);	# 165 BKCinsert_bun ($1151:bat[:str,:int])<-($1144:bat[:str,:int])($1147:str)($1150:int)
catch MALexception;	# 166  (MALexception:str) jump 167
exit MALexception;	# 167  (MALexception:str)
    redo ($1146,$1147,$1148):= chopper.hasMoreElements(gb_a);	# 168 CHPbunHasMoreElements ($1146:lng)($1147:str)($1148:date)<-(gb_a:bat[:str,:date]) jump 164
exit ($1146,$1147,$1148);	# 169  ($1146:lng)($1147:str)($1148:date)
    hb_a:bat[:str,:int]  := $1144;	# 170  (hb_a:bat[:str,:int])<-($1144:bat[:str,:int])
    $1156 := bbp.new(:str,:str);	# 171 CMDBATnew ($1156:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1158,$1159,$1160):= chopper.newIterator(hb_a);	# 172 CHPbunIterator ($1158:lng)($1159:str)($1160:int)<-(hb_a:bat[:str,:int]) jump 178
    $1162 := mtime.dayname($1160);	# 173 MTIMEday_to_str ($1162:str)<-($1160:int)
    bat.insert($1156,$1159,$1162);	# 174 BKCinsert_bun ($1163:bat[:str,:str])<-($1156:bat[:str,:str])($1159:str)($1162:str)
catch MALexception;	# 175  (MALexception:str) jump 176
exit MALexception;	# 176  (MALexception:str)
    redo ($1158,$1159,$1160):= chopper.hasMoreElements(hb_a);	# 177 CHPbunHasMoreElements ($1158:lng)($1159:str)($1160:int)<-(hb_a:bat[:str,:int]) jump 173
exit ($1158,$1159,$1160);	# 178  ($1158:lng)($1159:str)($1160:int)
    ib_a:bat[:str,:str]  := $1156;	# 179  (ib_a:bat[:str,:str])<-($1156:bat[:str,:str])
    bat.setColumn(ib_a,"1999");	# 180 BKCsetColumn ($170:bat[:str,:str])<-(ib_a:bat[:str,:str])($164:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 	# 181  ($172:str)
    $1168 := bbp.new(:str,:date);	# 182 CMDBATnew ($1168:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1170,$1171,$1172):= chopper.newIterator(rule_bat);	# 183 CHPbunIterator ($1170:lng)($1171:str)($1172:rule)<-(rule_bat:bat[:str,:rule]) jump 189
    $1174 := mtime.compute($1172,1992);	# 184 MTIMEcompute_rule_foryear ($1174:date)<-($1172:rule)($174:int)
    bat.insert($1168,$1171,$1174);	# 185 BKCinsert_bun ($1175:bat[:str,:date])<-($1168:bat[:str,:date])($1171:str)($1174:date)
catch MALexception;	# 186  (MALexception:str) jump 187
exit MALexception;	# 187  (MALexception:str)
    redo ($1170,$1171,$1172):= chopper.hasMoreElements(rule_bat);	# 188 CHPbunHasMoreElements ($1170:lng)($1171:str)($1172:rule)<-(rule_bat:bat[:str,:rule]) jump 184
exit ($1170,$1171,$1172);	# 189  ($1170:lng)($1171:str)($1172:rule)
    kb_a:bat[:str,:date]  := $1168;	# 190  (kb_a:bat[:str,:date])<-($1168:bat[:str,:date])
    bat.setColumn(kb_a,"1992");	# 191 BKCsetColumn ($175:bat[:str,:date])<-(kb_a:bat[:str,:date])($176:str)
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 	# 192  ($178:str)
    $1180 := bbp.new(:str,:date);	# 193 CMDBATnew ($1180:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1182,$1183,$1184):= chopper.newIterator(rule_bat);	# 194 CHPbunIterator ($1182:lng)($1183:str)($1184:rule)<-(rule_bat:bat[:str,:rule]) jump 200
    $1186 := mtime.compute($1184,1992);	# 195 MTIMEcompute_rule_foryear ($1186:date)<-($1184:rule)($174:int)
    bat.insert($1180,$1183,$1186);	# 196 BKCinsert_bun ($1187:bat[:str,:date])<-($1180:bat[:str,:date])($1183:str)($1186:date)
catch MALexception;	# 197  (MALexception:str) jump 198
exit MALexception;	# 198  (MALexception:str)
    redo ($1182,$1183,$1184):= chopper.hasMoreElements(rule_bat);	# 199 CHPbunHasMoreElements ($1182:lng)($1183:str)($1184:rule)<-(rule_bat:bat[:str,:rule]) jump 195
exit ($1182,$1183,$1184);	# 200  ($1182:lng)($1183:str)($1184:rule)
    mb_a:bat[:str,:date]  := $1180;	# 201  (mb_a:bat[:str,:date])<-($1180:bat[:str,:date])
    $1192 := bbp.new(:str,:int);	# 202 CMDBATnew ($1192:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1194,$1195,$1196):= chopper.newIterator(mb_a);	# 203 CHPbunIterator ($1194:lng)($1195:str)($1196:date)<-(mb_a:bat[:str,:date]) jump 209
    $1198 := mtime.dayofweek($1196);	# 204 MTIMEdate_extract_dayofweek ($1198:int)<-($1196:date)
    bat.insert($1192,$1195,$1198);	# 205 BKCinsert_bun ($1199:bat[:str,:int])<-($1192:bat[:str,:int])($1195:str)($1198:int)
catch MALexception;	# 206  (MALexception:str) jump 207
exit MALexception;	# 207  (MALexception:str)
    redo ($1194,$1195,$1196):= chopper.hasMoreElements(mb_a);	# 208 CHPbunHasMoreElements ($1194:lng)($1195:str)($1196:date)<-(mb_a:bat[:str,:date]) jump 204
exit ($1194,$1195,$1196);	# 209  ($1194:lng)($1195:str)($1196:date)
    nb_a:bat[:str,:int]  := $1192;	# 210  (nb_a:bat[:str,:int])<-($1192:bat[:str,:int])
    $1204 := bbp.new(:str,:str);	# 211 CMDBATnew ($1204:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1206,$1207,$1208):= chopper.newIterator(nb_a);	# 212 CHPbunIterator ($1206:lng)($1207:str)($1208:int)<-(nb_a:bat[:str,:int]) jump 218
    $1210 := mtime.dayname($1208);	# 213 MTIMEday_to_str ($1210:str)<-($1208:int)
    bat.insert($1204,$1207,$1210);	# 214 BKCinsert_bun ($1211:bat[:str,:str])<-($1204:bat[:str,:str])($1207:str)($1210:str)
catch MALexception;	# 215  (MALexception:str) jump 216
exit MALexception;	# 216  (MALexception:str)
    redo ($1206,$1207,$1208):= chopper.hasMoreElements(nb_a);	# 217 CHPbunHasMoreElements ($1206:lng)($1207:str)($1208:int)<-(nb_a:bat[:str,:int]) jump 213
exit ($1206,$1207,$1208);	# 218  ($1206:lng)($1207:str)($1208:int)
    ob_a:bat[:str,:str]  := $1204;	# 219  (ob_a:bat[:str,:str])<-($1204:bat[:str,:str])
    bat.setColumn(ob_a,"1992");	# 220 BKCsetColumn ($183:bat[:str,:str])<-(ob_a:bat[:str,:str])($176:str)
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");	# 221 IOprint_val ($184:int)<-($185:str)
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);	# 222 IOtable (qb_a:int)<-(rule_bat:bat[:str,:rule])(xa_a:bat[:str,:date])(cb_a:bat[:str,:str])(eb_a:bat[:str,:date])(ib_a:bat[:str,:str])(kb_a:bat[:str,:date])(ob_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 	# 223  ($188:str)
    rb_a := bat.setColumn(rule_bat,"rule");	# 224 BKCsetColumn (rb_a:bat[:str,:rule])<-(rule_bat:bat[:str,:rule])($190:str)
#io.print(rule_bat.bat.setColumn("rule"), 	# 225  ($192:str)
    $1216 := bbp.new(:str,:date);	# 226 CMDBATnew ($1216:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1218,$1219,$1220):= chopper.newIterator(rule_bat);	# 227 CHPbunIterator ($1218:lng)($1219:str)($1220:rule)<-(rule_bat:bat[:str,:rule]) jump 233
    $1222 := mtime.compute($1220,1572);	# 228 MTIMEcompute_rule_foryear ($1222:date)<-($1220:rule)($194:int)
    bat.insert($1216,$1219,$1222);	# 229 BKCinsert_bun ($1223:bat[:str,:date])<-($1216:bat[:str,:date])($1219:str)($1222:date)
catch MALexception;	# 230  (MALexception:str) jump 231
exit MALexception;	# 231  (MALexception:str)
    redo ($1218,$1219,$1220):= chopper.hasMoreElements(rule_bat);	# 232 CHPbunHasMoreElements ($1218:lng)($1219:str)($1220:rule)<-(rule_bat:bat[:str,:rule]) jump 228
exit ($1218,$1219,$1220);	# 233  ($1218:lng)($1219:str)($1220:rule)
    sb_a:bat[:str,:date]  := $1216;	# 234  (sb_a:bat[:str,:date])<-($1216:bat[:str,:date])
    tb_a := bat.setColumn(sb_a,"1572");	# 235 BKCsetColumn (tb_a:bat[:str,:date])<-(sb_a:bat[:str,:date])($196:str)
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 	# 236  ($198:str)
    $1228 := bbp.new(:str,:date);	# 237 CMDBATnew ($1228:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1230,$1231,$1232):= chopper.newIterator(rule_bat);	# 238 CHPbunIterator ($1230:lng)($1231:str)($1232:rule)<-(rule_bat:bat[:str,:rule]) jump 244
    $1234 := mtime.compute($1232,1572);	# 239 MTIMEcompute_rule_foryear ($1234:date)<-($1232:rule)($194:int)
    bat.insert($1228,$1231,$1234);	# 240 BKCinsert_bun ($1235:bat[:str,:date])<-($1228:bat[:str,:date])($1231:str)($1234:date)
catch MALexception;	# 241  (MALexception:str) jump 242
exit MALexception;	# 242  (MALexception:str)
    redo ($1230,$1231,$1232):= chopper.hasMoreElements(rule_bat);	# 243 CHPbunHasMoreElements ($1230:lng)($1231:str)($1232:rule)<-(rule_bat:bat[:str,:rule]) jump 239
exit ($1230,$1231,$1232);	# 244  ($1230:lng)($1231:str)($1232:rule)
    ub_a:bat[:str,:date]  := $1228;	# 245  (ub_a:bat[:str,:date])<-($1228:bat[:str,:date])
    $1240 := bbp.new(:str,:int);	# 246 CMDBATnew ($1240:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1242,$1243,$1244):= chopper.newIterator(ub_a);	# 247 CHPbunIterator ($1242:lng)($1243:str)($1244:date)<-(ub_a:bat[:str,:date]) jump 253
    $1246 := mtime.dayofweek($1244);	# 248 MTIMEdate_extract_dayofweek ($1246:int)<-($1244:date)
    bat.insert($1240,$1243,$1246);	# 249 BKCinsert_bun ($1247:bat[:str,:int])<-($1240:bat[:str,:int])($1243:str)($1246:int)
catch MALexception;	# 250  (MALexception:str) jump 251
exit MALexception;	# 251  (MALexception:str)
    redo ($1242,$1243,$1244):= chopper.hasMoreElements(ub_a);	# 252 CHPbunHasMoreElements ($1242:lng)($1243:str)($1244:date)<-(ub_a:bat[:str,:date]) jump 248
exit ($1242,$1243,$1244);	# 253  ($1242:lng)($1243:str)($1244:date)
    vb_a:bat[:str,:int]  := $1240;	# 254  (vb_a:bat[:str,:int])<-($1240:bat[:str,:int])
    $1252 := bbp.new(:str,:str);	# 255 CMDBATnew ($1252:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1254,$1255,$1256):= chopper.newIterator(vb_a);	# 256 CHPbunIterator ($1254:lng)($1255:str)($1256:int)<-(vb_a:bat[:str,:int]) jump 262
    $1258 := mtime.dayname($1256);	# 257 MTIMEday_to_str ($1258:str)<-($1256:int)
    bat.insert($1252,$1255,$1258);	# 258 BKCinsert_bun ($1259:bat[:str,:str])<-($1252:bat[:str,:str])($1255:str)($1258:str)
catch MALexception;	# 259  (MALexception:str) jump 260
exit MALexception;	# 260  (MALexception:str)
    redo ($1254,$1255,$1256):= chopper.hasMoreElements(vb_a);	# 261 CHPbunHasMoreElements ($1254:lng)($1255:str)($1256:int)<-(vb_a:bat[:str,:int]) jump 257
exit ($1254,$1255,$1256);	# 262  ($1254:lng)($1255:str)($1256:int)
    wb_a:bat[:str,:str]  := $1252;	# 263  (wb_a:bat[:str,:str])<-($1252:bat[:str,:str])
    xb_a := bat.setColumn(wb_a,"1572");	# 264 BKCsetColumn (xb_a:bat[:str,:str])<-(wb_a:bat[:str,:str])($196:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 	# 265  ($206:str)
    $1264 := bbp.new(:str,:date);	# 266 CMDBATnew ($1264:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1266,$1267,$1268):= chopper.newIterator(rule_bat);	# 267 CHPbunIterator ($1266:lng)($1267:str)($1268:rule)<-(rule_bat:bat[:str,:rule]) jump 273
    $1270 := mtime.compute($1268,1);	# 268 MTIMEcompute_rule_foryear ($1270:date)<-($1268:rule)($208:int)
    bat.insert($1264,$1267,$1270);	# 269 BKCinsert_bun ($1271:bat[:str,:date])<-($1264:bat[:str,:date])($1267:str)($1270:date)
catch MALexception;	# 270  (MALexception:str) jump 271
exit MALexception;	# 271  (MALexception:str)
    redo ($1266,$1267,$1268):= chopper.hasMoreElements(rule_bat);	# 272 CHPbunHasMoreElements ($1266:lng)($1267:str)($1268:rule)<-(rule_bat:bat[:str,:rule]) jump 268
exit ($1266,$1267,$1268);	# 273  ($1266:lng)($1267:str)($1268:rule)
    yb_a:bat[:str,:date]  := $1264;	# 274  (yb_a:bat[:str,:date])<-($1264:bat[:str,:date])
    ac_a := bat.setColumn(yb_a,"1");	# 275 BKCsetColumn (ac_a:bat[:str,:date])<-(yb_a:bat[:str,:date])($210:str)
#      [compute](rule_bat, 1).bat.setColumn("1"), 	# 276  ($212:str)
    $1276 := bbp.new(:str,:date);	# 277 CMDBATnew ($1276:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1278,$1279,$1280):= chopper.newIterator(rule_bat);	# 278 CHPbunIterator ($1278:lng)($1279:str)($1280:rule)<-(rule_bat:bat[:str,:rule]) jump 284
    $1282 := mtime.compute($1280,1);	# 279 MTIMEcompute_rule_foryear ($1282:date)<-($1280:rule)($208:int)
    bat.insert($1276,$1279,$1282);	# 280 BKCinsert_bun ($1283:bat[:str,:date])<-($1276:bat[:str,:date])($1279:str)($1282:date)
catch MALexception;	# 281  (MALexception:str) jump 282
exit MALexception;	# 282  (MALexception:str)
    redo ($1278,$1279,$1280):= chopper.hasMoreElements(rule_bat);	# 283 CHPbunHasMoreElements ($1278:lng)($1279:str)($1280:rule)<-(rule_bat:bat[:str,:rule]) jump 279
exit ($1278,$1279,$1280);	# 284  ($1278:lng)($1279:str)($1280:rule)
    bc_a:bat[:str,:date]  := $1276;	# 285  (bc_a:bat[:str,:date])<-($1276:bat[:str,:date])
    $1288 := bbp.new(:str,:int);	# 286 CMDBATnew ($1288:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1290,$1291,$1292):= chopper.newIterator(bc_a);	# 287 CHPbunIterator ($1290:lng)($1291:str)($1292:date)<-(bc_a:bat[:str,:date]) jump 293
    $1294 := mtime.dayofweek($1292);	# 288 MTIMEdate_extract_dayofweek ($1294:int)<-($1292:date)
    bat.insert($1288,$1291,$1294);	# 289 BKCinsert_bun ($1295:bat[:str,:int])<-($1288:bat[:str,:int])($1291:str)($1294:int)
catch MALexception;	# 290  (MALexception:str) jump 291
exit MALexception;	# 291  (MALexception:str)
    redo ($1290,$1291,$1292):= chopper.hasMoreElements(bc_a);	# 292 CHPbunHasMoreElements ($1290:lng)($1291:str)($1292:date)<-(bc_a:bat[:str,:date]) jump 288
exit ($1290,$1291,$1292);	# 293  ($1290:lng)($1291:str)($1292:date)
    cc_a:bat[:str,:int]  := $1288;	# 294  (cc_a:bat[:str,:int])<-($1288:bat[:str,:int])
    $1300 := bbp.new(:str,:str);	# 295 CMDBATnew ($1300:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1302,$1303,$1304):= chopper.newIterator(cc_a);	# 296 CHPbunIterator ($1302:lng)($1303:str)($1304:int)<-(cc_a:bat[:str,:int]) jump 302
    $1306 := mtime.dayname($1304);	# 297 MTIMEday_to_str ($1306:str)<-($1304:int)
    bat.insert($1300,$1303,$1306);	# 298 BKCinsert_bun ($1307:bat[:str,:str])<-($1300:bat[:str,:str])($1303:str)($1306:str)
catch MALexception;	# 299  (MALexception:str) jump 300
exit MALexception;	# 300  (MALexception:str)
    redo ($1302,$1303,$1304):= chopper.hasMoreElements(cc_a);	# 301 CHPbunHasMoreElements ($1302:lng)($1303:str)($1304:int)<-(cc_a:bat[:str,:int]) jump 297
exit ($1302,$1303,$1304);	# 302  ($1302:lng)($1303:str)($1304:int)
    dc_a:bat[:str,:str]  := $1300;	# 303  (dc_a:bat[:str,:str])<-($1300:bat[:str,:str])
    ec_a := bat.setColumn(dc_a,"1");	# 304 BKCsetColumn (ec_a:bat[:str,:str])<-(dc_a:bat[:str,:str])($210:str)
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 	# 305  ($219:str)
    $1312 := bbp.new(:str,:date);	# 306 CMDBATnew ($1312:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1314,$1315,$1316):= chopper.newIterator(rule_bat);	# 307 CHPbunIterator ($1314:lng)($1315:str)($1316:rule)<-(rule_bat:bat[:str,:rule]) jump 313
    $1318 := mtime.compute($1316,-2000);	# 308 MTIMEcompute_rule_foryear ($1318:date)<-($1316:rule)($221:int)
    bat.insert($1312,$1315,$1318);	# 309 BKCinsert_bun ($1319:bat[:str,:date])<-($1312:bat[:str,:date])($1315:str)($1318:date)
catch MALexception;	# 310  (MALexception:str) jump 311
exit MALexception;	# 311  (MALexception:str)
    redo ($1314,$1315,$1316):= chopper.hasMoreElements(rule_bat);	# 312 CHPbunHasMoreElements ($1314:lng)($1315:str)($1316:rule)<-(rule_bat:bat[:str,:rule]) jump 308
exit ($1314,$1315,$1316);	# 313  ($1314:lng)($1315:str)($1316:rule)
    fc_a:bat[:str,:date]  := $1312;	# 314  (fc_a:bat[:str,:date])<-($1312:bat[:str,:date])
    gc_a := bat.setColumn(fc_a,"-2000");	# 315 BKCsetColumn (gc_a:bat[:str,:date])<-(fc_a:bat[:str,:date])($223:str)
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 	# 316  ($225:str)
    $1324 := bbp.new(:str,:date);	# 317 CMDBATnew ($1324:bat[:str,:date])<-($1023:str)($486:date)
barrier ($1326,$1327,$1328):= chopper.newIterator(rule_bat);	# 318 CHPbunIterator ($1326:lng)($1327:str)($1328:rule)<-(rule_bat:bat[:str,:rule]) jump 324
    $1330 := mtime.compute($1328,-2000);	# 319 MTIMEcompute_rule_foryear ($1330:date)<-($1328:rule)($221:int)
    bat.insert($1324,$1327,$1330);	# 320 BKCinsert_bun ($1331:bat[:str,:date])<-($1324:bat[:str,:date])($1327:str)($1330:date)
catch MALexception;	# 321  (MALexception:str) jump 322
exit MALexception;	# 322  (MALexception:str)
    redo ($1326,$1327,$1328):= chopper.hasMoreElements(rule_bat);	# 323 CHPbunHasMoreElements ($1326:lng)($1327:str)($1328:rule)<-(rule_bat:bat[:str,:rule]) jump 319
exit ($1326,$1327,$1328);	# 324  ($1326:lng)($1327:str)($1328:rule)
    hc_a:bat[:str,:date]  := $1324;	# 325  (hc_a:bat[:str,:date])<-($1324:bat[:str,:date])
    $1336 := bbp.new(:str,:int);	# 326 CMDBATnew ($1336:bat[:str,:int])<-($1023:str)($1024:int)
barrier ($1338,$1339,$1340):= chopper.newIterator(hc_a);	# 327 CHPbunIterator ($1338:lng)($1339:str)($1340:date)<-(hc_a:bat[:str,:date]) jump 333
    $1342 := mtime.dayofweek($1340);	# 328 MTIMEdate_extract_dayofweek ($1342:int)<-($1340:date)
    bat.insert($1336,$1339,$1342);	# 329 BKCinsert_bun ($1343:bat[:str,:int])<-($1336:bat[:str,:int])($1339:str)($1342:int)
catch MALexception;	# 330  (MALexception:str) jump 331
exit MALexception;	# 331  (MALexception:str)
    redo ($1338,$1339,$1340):= chopper.hasMoreElements(hc_a);	# 332 CHPbunHasMoreElements ($1338:lng)($1339:str)($1340:date)<-(hc_a:bat[:str,:date]) jump 328
exit ($1338,$1339,$1340);	# 333  ($1338:lng)($1339:str)($1340:date)
    ic_a:bat[:str,:int]  := $1336;	# 334  (ic_a:bat[:str,:int])<-($1336:bat[:str,:int])
    $1348 := bbp.new(:str,:str);	# 335 CMDBATnew ($1348:bat[:str,:str])<-($1023:str)($1023:str)
barrier ($1350,$1351,$1352):= chopper.newIterator(ic_a);	# 336 CHPbunIterator ($1350:lng)($1351:str)($1352:int)<-(ic_a:bat[:str,:int]) jump 342
    $1354 := mtime.dayname($1352);	# 337 MTIMEday_to_str ($1354:str)<-($1352:int)
    bat.insert($1348,$1351,$1354);	# 338 BKCinsert_bun ($1355:bat[:str,:str])<-($1348:bat[:str,:str])($1351:str)($1354:str)
catch MALexception;	# 339  (MALexception:str) jump 340
exit MALexception;	# 340  (MALexception:str)
    redo ($1350,$1351,$1352):= chopper.hasMoreElements(ic_a);	# 341 CHPbunHasMoreElements ($1350:lng)($1351:str)($1352:int)<-(ic_a:bat[:str,:int]) jump 337
exit ($1350,$1351,$1352);	# 342  ($1350:lng)($1351:str)($1352:int)
    jc_a:bat[:str,:str]  := $1348;	# 343  (jc_a:bat[:str,:str])<-($1348:bat[:str,:str])
    kc_a := bat.setColumn(jc_a,"-2000");	# 344 BKCsetColumn (kc_a:bat[:str,:str])<-(jc_a:bat[:str,:str])($223:str)
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");	# 345 IOprint_val ($230:int)<-($231:str)
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);	# 346 IOtable (lc_a:int)<-(rule_bat:bat[:str,:rule])(sb_a:bat[:str,:date])(wb_a:bat[:str,:str])(yb_a:bat[:str,:date])(dc_a:bat[:str,:str])(fc_a:bat[:str,:date])(jc_a:bat[:str,:str])
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 	# 347  ($234:str)
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 348  ($236:str)
## test the various ways to create tzones, using some of the above created rules 	# 349  ($238:str)
    tzone_00 := mtime.tzone("GMT");	# 350 MTIMEtzone_fromstr (tzone_00:tzone)<-($240:str)
#var tzone_00 := mtime.tzone("GMT"); 	# 351  ($242:str)
    tzone_01 := mtime.tzone("GMT+01:00");	# 352 MTIMEtzone_fromstr (tzone_01:tzone)<-($244:str)
#var tzone_01 := mtime.tzone("GMT+01:00"); 	# 353  ($246:str)
    tzone_02 := mtime.tzone("GMT+0100");	# 354 MTIMEtzone_fromstr (tzone_02:tzone)<-($248:str)
#var tzone_02 := mtime.tzone("GMT+0100"); 	# 355  ($250:str)
    tzone_03 := mtime.tzone(60,rule_oct,rule_mar);	# 356 MTIMEtzone_create_dst (tzone_03:tzone)<-($252:int)(rule_oct:rule)(rule_mar:rule)
#var tzone_03 := mtime.tzone(60, rule_oct, rule_mar); 	# 357  ($254:str)
    tzone_04 := mtime.tzone(0,rule_jan,rule_aug);	# 358 MTIMEtzone_create_dst (tzone_04:tzone)<-($256:int)(rule_jan:rule)(rule_aug:rule)
#var tzone_04 := mtime.tzone(0, rule_jan, rule_aug); 	# 359  ($258:str)
    tzone_05 := mtime.tzone(-97,rule_oct,rule_apr);	# 360 MTIMEtzone_create_dst (tzone_05:tzone)<-($260:int)(rule_oct:rule)(rule_apr:rule)
#var tzone_05 := mtime.tzone(-97, rule_oct, rule_apr); 	# 361  ($262:str)
    tzone_06 := mtime.tzone(-97,rule_may,rule_sep);	# 362 MTIMEtzone_create_dst (tzone_06:tzone)<-($260:int)(rule_may:rule)(rule_sep:rule)
#var tzone_06 := mtime.tzone(-97, rule_may, rule_sep); 	# 363  ($265:str)
    mc_a := calc.*(23,60);	# 364 CALCbinaryMULintint (mc_a:int)<-($267:int)($252:int)
    tzone_07 := mtime.tzone(mc_a,rule_apr,rule_nov);	# 365 MTIMEtzone_create_dst (tzone_07:tzone)<-(mc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_07 := mtime.tzone(23*60, rule_apr, rule_nov); 	# 366  ($270:str)
    nc_a := calc.*(-23,59);	# 367 CALCbinaryMULintint (nc_a:int)<-($272:int)($273:int)
    oc_a := calc.-(nc_a,59);	# 368 CALCbinarySUBintint (oc_a:int)<-(nc_a:int)($273:int)
    tzone_08 := mtime.tzone(oc_a);	# 369 MTIMEtzone_create (tzone_08:tzone)<-(oc_a:int)
#var tzone_08 := mtime.tzone((-23*59) - 59); 	# 370  ($277:str)
    tzone_09 := mtime.tzone(0);	# 371 MTIMEtzone_create (tzone_09:tzone)<-($256:int)
#var tzone_09 := mtime.tzone(0); 	# 372  ($280:str)
    tzone_10 := mtime.tzone(-60);	# 373 MTIMEtzone_create (tzone_10:tzone)<-($282:int)
#var tzone_10 := mtime.tzone(-60); 	# 374  ($284:str)
    pc_a := calc.*(23,60);	# 375 CALCbinaryMULintint (pc_a:int)<-($267:int)($286:int)
    qc_a := calc.+(pc_a,59);	# 376 CALCbinaryADDintint (qc_a:int)<-(pc_a:int)($273:int)
    tzone_11 := mtime.tzone(qc_a);	# 377 MTIMEtzone_create (tzone_11:tzone)<-(qc_a:int)
#var tzone_11 := mtime.tzone((23*60)+59); 	# 378  ($290:str)
    tzone_12 := mtime.tzone(60);	# 379 MTIMEtzone_create (tzone_12:tzone)<-($286:int)
#var tzone_12 := mtime.tzone(60); 	# 380  ($293:str)
## nil tzones 	# 381  ($295:str)
    tzone_13 := mtime.tzone(60,rule_feb,rule_dec);	# 382 MTIMEtzone_create_dst (tzone_13:tzone)<-($286:int)(rule_feb:rule)(rule_dec:rule)
#var tzone_13 := mtime.tzone(60, rule_feb, rule_dec); 	# 383  ($298:str)
    rc_a := calc.*(24,60);	# 384 CALCbinaryMULintint (rc_a:int)<-($300:int)($286:int)
    tzone_15 := mtime.tzone(rc_a,rule_apr,rule_nov);	# 385 MTIMEtzone_create_dst (tzone_15:tzone)<-(rc_a:int)(rule_apr:rule)(rule_nov:rule)
#var tzone_15 := mtime.tzone(24*60, rule_apr, rule_nov); 	# 386  ($303:str)
    tzone_bat := bbp.new(:oid,:tzone);	# 387 CMDBATnew (tzone_bat:bat[:oid,:tzone])<-($305:oid)($306:tzone)
#var tzone_bat := bbp.new(oid,tzone); 	# 388  ($308:str)
    bat.insert(tzone_bat,0@0,tzone_00);	# 389 BKCinsert_bun ($309:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($310:oid)(tzone_00:tzone)
    bat.insert(tzone_bat,1@0,tzone_01);	# 390 BKCinsert_bun ($311:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($312:oid)(tzone_01:tzone)
    bat.insert(tzone_bat,2@0,tzone_02);	# 391 BKCinsert_bun ($313:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($314:oid)(tzone_02:tzone)
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 	# 392  ($316:str)
    bat.insert(tzone_bat,3@0,tzone_03);	# 393 BKCinsert_bun ($317:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($318:oid)(tzone_03:tzone)
    bat.insert(tzone_bat,4@0,tzone_04);	# 394 BKCinsert_bun ($319:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($320:oid)(tzone_04:tzone)
    bat.insert(tzone_bat,5@0,tzone_05);	# 395 BKCinsert_bun ($321:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($322:oid)(tzone_05:tzone)
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 	# 396  ($324:str)
    bat.insert(tzone_bat,6@0,tzone_06);	# 397 BKCinsert_bun ($325:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($326:oid)(tzone_06:tzone)
    bat.insert(tzone_bat,7@0,tzone_07);	# 398 BKCinsert_bun ($327:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($328:oid)(tzone_07:tzone)
    bat.insert(tzone_bat,8@0,tzone_08);	# 399 BKCinsert_bun ($329:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($330:oid)(tzone_08:tzone)
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 	# 400  ($332:str)
    bat.insert(tzone_bat,9@0,tzone_09);	# 401 BKCinsert_bun ($333:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($334:oid)(tzone_09:tzone)
    bat.insert(tzone_bat,10@0,tzone_10);	# 402 BKCinsert_bun ($335:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($336:oid)(tzone_10:tzone)
    bat.insert(tzone_bat,11@0,tzone_11);	# 403 BKCinsert_bun ($337:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($338:oid)(tzone_11:tzone)
#tzone_bat.bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 	# 404  ($340:str)
    bat.insert(tzone_bat,12@0,tzone_12);	# 405 BKCinsert_bun ($341:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($342:oid)(tzone_12:tzone)
    bat.insert(tzone_bat,13@0,tzone_13);	# 406 BKCinsert_bun ($343:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($344:oid)(tzone_13:tzone)
    bat.insert(tzone_bat,15@0,tzone_15);	# 407 BKCinsert_bun ($345:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($346:oid)(tzone_15:tzone)
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 	# 408  ($348:str)
## test the operations on tzones 	# 409  ($350:str)
    id_a := bat.setName(tzone_bat,"tzone");	# 410 BKCsetName (id_a:bat[:oid,:tzone])<-(tzone_bat:bat[:oid,:tzone])($352:str)
#io.print(tzone_bat); 	# 411  ($354:str)
#io.print("start error"); 	# 412  ($356:str)
#x:= getRefCount(tzone_bat); 	# 413  ($358:str)
#io.print(x); 	# 414  ($360:str)
#jd_a := io.print(tzone_bat); 	# 415  ($362:str)
#io.print("end"); 	# 416  ($364:str)
#io.print(x); 	# 417  ($360:str)
#x:= getRefCount(tzone_bat); 	# 418  ($358:str)
    io.print(tzone_bat);	# 419 IOprint_val ($367:int)<-(tzone_bat:bat[:oid,:tzone])
#io.print(tzone_bat.bat.setColumn("tzone")); 	# 420  ($369:str)
    $1360 := bbp.new(:oid,:int);	# 421 CMDBATnew ($1360:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1363,$1364,$1365):= chopper.newIterator(tzone_bat);	# 422 CHPbunIterator ($1363:lng)($1364:oid)($1365:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 428
    $1367 := mtime.minutes($1365);	# 423 MTIMEtzone_extract_minutes ($1367:int)<-($1365:tzone)
    bat.insert($1360,$1364,$1367);	# 424 BKCinsert_bun ($1368:bat[:oid,:int])<-($1360:bat[:oid,:int])($1364:oid)($1367:int)
catch MALexception;	# 425  (MALexception:str) jump 426
exit MALexception;	# 426  (MALexception:str)
    redo ($1363,$1364,$1365):= chopper.hasMoreElements(tzone_bat);	# 427 CHPbunHasMoreElements ($1363:lng)($1364:oid)($1365:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 423
exit ($1363,$1364,$1365);	# 428  ($1363:lng)($1364:oid)($1365:tzone)
    kd_a:bat[:oid,:int]  := $1360;	# 429  (kd_a:bat[:oid,:int])<-($1360:bat[:oid,:int])
    bat.setColumn(kd_a,"minutes");	# 430 BKCsetColumn ($372:bat[:oid,:int])<-(kd_a:bat[:oid,:int])($373:str)
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 	# 431  ($375:str)
    $1373 := bbp.new(:oid,:rule);	# 432 CMDBATnew ($1373:bat[:oid,:rule])<-($1361:oid)($78:rule)
barrier ($1375,$1376,$1377):= chopper.newIterator(tzone_bat);	# 433 CHPbunIterator ($1375:lng)($1376:oid)($1377:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 439
    $1379 := mtime.start_dst($1377);	# 434 MTIMEtzone_extract_start ($1379:rule)<-($1377:tzone)
    bat.insert($1373,$1376,$1379);	# 435 BKCinsert_bun ($1380:bat[:oid,:rule])<-($1373:bat[:oid,:rule])($1376:oid)($1379:rule)
catch MALexception;	# 436  (MALexception:str) jump 437
exit MALexception;	# 437  (MALexception:str)
    redo ($1375,$1376,$1377):= chopper.hasMoreElements(tzone_bat);	# 438 CHPbunHasMoreElements ($1375:lng)($1376:oid)($1377:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 434
exit ($1375,$1376,$1377);	# 439  ($1375:lng)($1376:oid)($1377:tzone)
    md_a:bat[:oid,:rule]  := $1373;	# 440  (md_a:bat[:oid,:rule])<-($1373:bat[:oid,:rule])
    bat.setColumn(md_a,"start_dst");	# 441 BKCsetColumn ($378:bat[:oid,:rule])<-(md_a:bat[:oid,:rule])($379:str)
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 	# 442  ($381:str)
    $1385 := bbp.new(:oid,:rule);	# 443 CMDBATnew ($1385:bat[:oid,:rule])<-($1361:oid)($78:rule)
barrier ($1387,$1388,$1389):= chopper.newIterator(tzone_bat);	# 444 CHPbunIterator ($1387:lng)($1388:oid)($1389:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 450
    $1391 := mtime.end_dst($1389);	# 445 MTIMEtzone_extract_end ($1391:rule)<-($1389:tzone)
    bat.insert($1385,$1388,$1391);	# 446 BKCinsert_bun ($1392:bat[:oid,:rule])<-($1385:bat[:oid,:rule])($1388:oid)($1391:rule)
catch MALexception;	# 447  (MALexception:str) jump 448
exit MALexception;	# 448  (MALexception:str)
    redo ($1387,$1388,$1389):= chopper.hasMoreElements(tzone_bat);	# 449 CHPbunHasMoreElements ($1387:lng)($1388:oid)($1389:tzone)<-(tzone_bat:bat[:oid,:tzone]) jump 445
exit ($1387,$1388,$1389);	# 450  ($1387:lng)($1388:oid)($1389:tzone)
    od_a:bat[:oid,:rule]  := $1385;	# 451  (od_a:bat[:oid,:rule])<-($1385:bat[:oid,:rule])
    bat.setColumn(od_a,"end_dst");	# 452 BKCsetColumn ($384:bat[:oid,:rule])<-(od_a:bat[:oid,:rule])($385:str)
    io.print("print(kd_a,md_a,od_a)");	# 453 IOprint_val ($386:int)<-($387:str)
    qd_a := io.print(kd_a,md_a,od_a);	# 454 IOtable (qd_a:int)<-(kd_a:bat[:oid,:int])(md_a:bat[:oid,:rule])(od_a:bat[:oid,:rule])
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 	# 455  ($390:str)
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 456  ($392:str)
## test the various ways to create dates 	# 457  ($394:str)
    date_00 := mtime.date(2000,01,01);	# 458 MTIMEdate_create (date_00:date)<-($396:int)($397:int)($397:int)
#var date_00 := date(2000,01,01); 	# 459  ($399:str)
    date_01 := mtime.date("5000-JAN-01");	# 460 MTIMEdate_fromstr (date_01:date)<-($401:str)
#var date_01 := date("5000-JAN-01"); 	# 461  ($403:str)
    date_02 := mtime.date("1968-FEBR-29");	# 462 MTIMEdate_fromstr (date_02:date)<-($405:str)
#var date_02 := date("1968-FEBR-29"); 	# 463  ($407:str)
    date_03 := mtime.date("1-MARCH-01");	# 464 MTIMEdate_fromstr (date_03:date)<-($409:str)
#var date_03 := date("1-MARCH-01"); 	# 465  ($411:str)
    date_04 := mtime.date("-5867411-JAN-1");	# 466 MTIMEdate_fromstr (date_04:date)<-($413:str)
#var date_04 := date("-5867411-JAN-1"); 	# 467  ($415:str)
    date_05 := mtime.date("-768/octobe/01");	# 468 MTIMEdate_fromstr (date_05:date)<-($417:str)
#var date_05 := date("-768/octobe/01"); 	# 469  ($419:str)
    date_06 := mtime.date("5000\\novembe\\01");	# 470 MTIMEdate_fromstr (date_06:date)<-($421:str)
#var date_06 := date("5000\\novembe\\01"); 	# 471  ($423:str)
    date_07 := mtime.date("-1999/jun/01");	# 472 MTIMEdate_fromstr (date_07:date)<-($425:str)
#var date_07 := date("-1999/jun/01"); 	# 473  ($427:str)
    date_08 := mtime.date("2000-jul-14");	# 474 MTIMEdate_fromstr (date_08:date)<-($429:str)
#var date_08 := date("2000-jul-14"); 	# 475  ($431:str)
    date_09 := mtime.date("1999-sept-01");	# 476 MTIMEdate_fromstr (date_09:date)<-($433:str)
#var date_09 := date("1999-sept-01"); 	# 477  ($435:str)
    date_10 := mtime.date("1998-decemBeR-01");	# 478 MTIMEdate_fromstr (date_10:date)<-($437:str)
#var date_10 := date("1998-decemBeR-01"); 	# 479  ($439:str)
    date_11 := mtime.date("1953 may                01");	# 480 MTIMEdate_fromstr (date_11:date)<-($441:str)
#var date_11 := date("1953 may                01"); 	# 481  ($443:str)
    date_12 := mtime.date("5867411-DEC-31");	# 482 MTIMEdate_fromstr (date_12:date)<-($445:str)
#var date_12 := date("5867411-DEC-31"); 	# 483  ($447:str)
## nil dates 	# 484  ($449:str)
    date_13 := mtime.date(1996,13,1);	# 485 MTIMEdate_create (date_13:date)<-($451:int)($452:int)($453:int)
#var date_13 := date(1996,13,1); 	# 486  ($455:str)
    date_14 := mtime.date("999999999999999999999-01-01");	# 487 MTIMEdate_fromstr (date_14:date)<-($457:str)
#var date_14 := date("999999999999999999999-01-01"); 	# 488  ($459:str)
    date_15 := mtime.date("1999-JANUARI-01");	# 489 MTIMEdate_fromstr (date_15:date)<-($461:str)
#var date_15 := date("1999-JANUARI-01"); 	# 490  ($463:str)
    date_16 := mtime.date("1999-FEBR-29");	# 491 MTIMEdate_fromstr (date_16:date)<-($465:str)
#var date_16 := date("1999-FEBR-29"); 	# 492  ($467:str)
    date_17 := mtime.date("-1-DECEMBER-0");	# 493 MTIMEdate_fromstr (date_17:date)<-($469:str)
#var date_17 := date("-1-DECEMBER-0"); 	# 494  ($471:str)
    date_18 := mtime.date("5000\novembe\31");	# 495 MTIMEdate_fromstr (date_18:date)<-($473:str)
#var date_18 := date("5000\novembe\31"); 	# 496  ($475:str)
    date_19 := mtime.date("nil");	# 497 MTIMEdate_fromstr (date_19:date)<-($477:str)
#var date_19 := date("nil"); 	# 498  ($479:str)
    date_20 := mtime.date("1999-sept-31");	# 499 MTIMEdate_fromstr (date_20:date)<-($481:str)
#var date_20 := date("1999-sept-31"); 	# 500  ($483:str)
    date_bat := bbp.new(:oid,:date);	# 501 CMDBATnew (date_bat:bat[:oid,:date])<-($485:oid)($486:date)
#var date_bat := bbp.new(oid,date); 	# 502  ($488:str)
    bat.insert(date_bat,0@0,date_00);	# 503 BKCinsert_bun ($489:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($490:oid)(date_00:date)
    bat.insert(date_bat,1@0,date_01);	# 504 BKCinsert_bun ($491:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($492:oid)(date_01:date)
    bat.insert(date_bat,2@0,date_02);	# 505 BKCinsert_bun ($493:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($494:oid)(date_02:date)
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 	# 506  ($496:str)
    bat.insert(date_bat,3@0,date_03);	# 507 BKCinsert_bun ($497:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($498:oid)(date_03:date)
    bat.insert(date_bat,4@0,date_04);	# 508 BKCinsert_bun ($499:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($500:oid)(date_04:date)
    bat.insert(date_bat,5@0,date_05);	# 509 BKCinsert_bun ($501:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($502:oid)(date_05:date)
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 	# 510  ($504:str)
    bat.insert(date_bat,6@0,date_06);	# 511 BKCinsert_bun ($505:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($506:oid)(date_06:date)
    bat.insert(date_bat,7@0,date_07);	# 512 BKCinsert_bun ($507:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($508:oid)(date_07:date)
    bat.insert(date_bat,8@0,date_08);	# 513 BKCinsert_bun ($509:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($510:oid)(date_08:date)
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 	# 514  ($512:str)
    bat.insert(date_bat,9@0,date_09);	# 515 BKCinsert_bun ($513:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($514:oid)(date_09:date)
    bat.insert(date_bat,10@0,date_10);	# 516 BKCinsert_bun ($515:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($516:oid)(date_10:date)
    bat.insert(date_bat,11@0,date_11);	# 517 BKCinsert_bun ($517:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($518:oid)(date_11:date)
#date_bat.bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 	# 518  ($520:str)
    bat.insert(date_bat,12@0,date_12);	# 519 BKCinsert_bun ($521:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($522:oid)(date_12:date)
    bat.insert(date_bat,13@0,date_13);	# 520 BKCinsert_bun ($523:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($524:oid)(date_13:date)
    bat.insert(date_bat,14@0,date_14);	# 521 BKCinsert_bun ($525:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($526:oid)(date_14:date)
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 	# 522  ($528:str)
    bat.insert(date_bat,15@0,date_15);	# 523 BKCinsert_bun ($529:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($530:oid)(date_15:date)
    bat.insert(date_bat,16@0,date_16);	# 524 BKCinsert_bun ($531:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($532:oid)(date_16:date)
    bat.insert(date_bat,17@0,date_17);	# 525 BKCinsert_bun ($533:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($534:oid)(date_17:date)
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 	# 526  ($536:str)
    bat.insert(date_bat,18@0,date_18);	# 527 BKCinsert_bun ($537:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($538:oid)(date_18:date)
    bat.insert(date_bat,19@0,date_19);	# 528 BKCinsert_bun ($539:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($540:oid)(date_19:date)
    bat.insert(date_bat,20@0,date_20);	# 529 BKCinsert_bun ($541:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($542:oid)(date_20:date)
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 	# 530  ($544:str)
## test the operations on dates 	# 531  ($546:str)
    ne_a := bat.setColumn(date_bat,"date");	# 532 BKCsetColumn (ne_a:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($548:str)
#io.print(date_bat.bat.setColumn("date"), 	# 533  ($550:str)
    $1397 := bbp.new(:oid,:int);	# 534 CMDBATnew ($1397:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1399,$1400,$1401):= chopper.newIterator(date_bat);	# 535 CHPbunIterator ($1399:lng)($1400:oid)($1401:date)<-(date_bat:bat[:oid,:date]) jump 541
    $1403 := mtime.year($1401);	# 536 MTIMEdate_extract_year ($1403:int)<-($1401:date)
    bat.insert($1397,$1400,$1403);	# 537 BKCinsert_bun ($1404:bat[:oid,:int])<-($1397:bat[:oid,:int])($1400:oid)($1403:int)
catch MALexception;	# 538  (MALexception:str) jump 539
exit MALexception;	# 539  (MALexception:str)
    redo ($1399,$1400,$1401):= chopper.hasMoreElements(date_bat);	# 540 CHPbunHasMoreElements ($1399:lng)($1400:oid)($1401:date)<-(date_bat:bat[:oid,:date]) jump 536
exit ($1399,$1400,$1401);	# 541  ($1399:lng)($1400:oid)($1401:date)
    oe_a:bat[:oid,:int]  := $1397;	# 542  (oe_a:bat[:oid,:int])<-($1397:bat[:oid,:int])
    pe_a := bat.setColumn(oe_a,"year");	# 543 BKCsetColumn (pe_a:bat[:oid,:int])<-(oe_a:bat[:oid,:int])($554:str)
#      [year](date_bat).bat.setColumn("year"), 	# 544  ($556:str)
    $1409 := bbp.new(:oid,:int);	# 545 CMDBATnew ($1409:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1411,$1412,$1413):= chopper.newIterator(date_bat);	# 546 CHPbunIterator ($1411:lng)($1412:oid)($1413:date)<-(date_bat:bat[:oid,:date]) jump 552
    $1415 := mtime.day($1413);	# 547 MTIMEdate_extract_day ($1415:int)<-($1413:date)
    bat.insert($1409,$1412,$1415);	# 548 BKCinsert_bun ($1416:bat[:oid,:int])<-($1409:bat[:oid,:int])($1412:oid)($1415:int)
catch MALexception;	# 549  (MALexception:str) jump 550
exit MALexception;	# 550  (MALexception:str)
    redo ($1411,$1412,$1413):= chopper.hasMoreElements(date_bat);	# 551 CHPbunHasMoreElements ($1411:lng)($1412:oid)($1413:date)<-(date_bat:bat[:oid,:date]) jump 547
exit ($1411,$1412,$1413);	# 552  ($1411:lng)($1412:oid)($1413:date)
    qe_a:bat[:oid,:int]  := $1409;	# 553  (qe_a:bat[:oid,:int])<-($1409:bat[:oid,:int])
    re_a := bat.setColumn(qe_a,"day");	# 554 BKCsetColumn (re_a:bat[:oid,:int])<-(qe_a:bat[:oid,:int])($560:str)
#      [day](date_bat).bat.setColumn("day"), 	# 555  ($562:str)
    $1421 := bbp.new(:oid,:int);	# 556 CMDBATnew ($1421:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1423,$1424,$1425):= chopper.newIterator(date_bat);	# 557 CHPbunIterator ($1423:lng)($1424:oid)($1425:date)<-(date_bat:bat[:oid,:date]) jump 563
    $1427 := mtime.month($1425);	# 558 MTIMEdate_extract_month ($1427:int)<-($1425:date)
    bat.insert($1421,$1424,$1427);	# 559 BKCinsert_bun ($1428:bat[:oid,:int])<-($1421:bat[:oid,:int])($1424:oid)($1427:int)
catch MALexception;	# 560  (MALexception:str) jump 561
exit MALexception;	# 561  (MALexception:str)
    redo ($1423,$1424,$1425):= chopper.hasMoreElements(date_bat);	# 562 CHPbunHasMoreElements ($1423:lng)($1424:oid)($1425:date)<-(date_bat:bat[:oid,:date]) jump 558
exit ($1423,$1424,$1425);	# 563  ($1423:lng)($1424:oid)($1425:date)
    se_a:bat[:oid,:int]  := $1421;	# 564  (se_a:bat[:oid,:int])<-($1421:bat[:oid,:int])
    $1433 := bbp.new(:oid,:str);	# 565 CMDBATnew ($1433:bat[:oid,:str])<-($1361:oid)($1023:str)
barrier ($1435,$1436,$1437):= chopper.newIterator(se_a);	# 566 CHPbunIterator ($1435:lng)($1436:oid)($1437:int)<-(se_a:bat[:oid,:int]) jump 572
    $1439 := mtime.monthname($1437);	# 567 MTIMEmonth_to_str ($1439:str)<-($1437:int)
    bat.insert($1433,$1436,$1439);	# 568 BKCinsert_bun ($1440:bat[:oid,:str])<-($1433:bat[:oid,:str])($1436:oid)($1439:str)
catch MALexception;	# 569  (MALexception:str) jump 570
exit MALexception;	# 570  (MALexception:str)
    redo ($1435,$1436,$1437):= chopper.hasMoreElements(se_a);	# 571 CHPbunHasMoreElements ($1435:lng)($1436:oid)($1437:int)<-(se_a:bat[:oid,:int]) jump 567
exit ($1435,$1436,$1437);	# 572  ($1435:lng)($1436:oid)($1437:int)
    te_a:bat[:oid,:str]  := $1433;	# 573  (te_a:bat[:oid,:str])<-($1433:bat[:oid,:str])
    ue_a := bat.setColumn(te_a,"monthname");	# 574 BKCsetColumn (ue_a:bat[:oid,:str])<-(te_a:bat[:oid,:str])($568:str)
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 	# 575  ($570:str)
    $1445 := bbp.new(:oid,:int);	# 576 CMDBATnew ($1445:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1447,$1448,$1449):= chopper.newIterator(date_bat);	# 577 CHPbunIterator ($1447:lng)($1448:oid)($1449:date)<-(date_bat:bat[:oid,:date]) jump 583
    $1451 := mtime.month($1449);	# 578 MTIMEdate_extract_month ($1451:int)<-($1449:date)
    bat.insert($1445,$1448,$1451);	# 579 BKCinsert_bun ($1452:bat[:oid,:int])<-($1445:bat[:oid,:int])($1448:oid)($1451:int)
catch MALexception;	# 580  (MALexception:str) jump 581
exit MALexception;	# 581  (MALexception:str)
    redo ($1447,$1448,$1449):= chopper.hasMoreElements(date_bat);	# 582 CHPbunHasMoreElements ($1447:lng)($1448:oid)($1449:date)<-(date_bat:bat[:oid,:date]) jump 578
exit ($1447,$1448,$1449);	# 583  ($1447:lng)($1448:oid)($1449:date)
    ve_a:bat[:oid,:int]  := $1445;	# 584  (ve_a:bat[:oid,:int])<-($1445:bat[:oid,:int])
    $1457 := bbp.new(:oid,:str);	# 585 CMDBATnew ($1457:bat[:oid,:str])<-($1361:oid)($1023:str)
barrier ($1459,$1460,$1461):= chopper.newIterator(ve_a);	# 586 CHPbunIterator ($1459:lng)($1460:oid)($1461:int)<-(ve_a:bat[:oid,:int]) jump 592
    $1463 := mtime.monthname($1461);	# 587 MTIMEmonth_to_str ($1463:str)<-($1461:int)
    bat.insert($1457,$1460,$1463);	# 588 BKCinsert_bun ($1464:bat[:oid,:str])<-($1457:bat[:oid,:str])($1460:oid)($1463:str)
catch MALexception;	# 589  (MALexception:str) jump 590
exit MALexception;	# 590  (MALexception:str)
    redo ($1459,$1460,$1461):= chopper.hasMoreElements(ve_a);	# 591 CHPbunHasMoreElements ($1459:lng)($1460:oid)($1461:int)<-(ve_a:bat[:oid,:int]) jump 587
exit ($1459,$1460,$1461);	# 592  ($1459:lng)($1460:oid)($1461:int)
    we_a:bat[:oid,:str]  := $1457;	# 593  (we_a:bat[:oid,:str])<-($1457:bat[:oid,:str])
    $1469 := bbp.new(:oid,:int);	# 594 CMDBATnew ($1469:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1471,$1472,$1473):= chopper.newIterator(we_a);	# 595 CHPbunIterator ($1471:lng)($1472:oid)($1473:str)<-(we_a:bat[:oid,:str]) jump 601
    $1475 := mtime.monthnum($1473);	# 596 MTIMEmonth_from_str ($1475:int)<-($1473:str)
    bat.insert($1469,$1472,$1475);	# 597 BKCinsert_bun ($1476:bat[:oid,:int])<-($1469:bat[:oid,:int])($1472:oid)($1475:int)
catch MALexception;	# 598  (MALexception:str) jump 599
exit MALexception;	# 599  (MALexception:str)
    redo ($1471,$1472,$1473):= chopper.hasMoreElements(we_a);	# 600 CHPbunHasMoreElements ($1471:lng)($1472:oid)($1473:str)<-(we_a:bat[:oid,:str]) jump 596
exit ($1471,$1472,$1473);	# 601  ($1471:lng)($1472:oid)($1473:str)
    xe_a:bat[:oid,:int]  := $1469;	# 602  (xe_a:bat[:oid,:int])<-($1469:bat[:oid,:int])
    ye_a := bat.setColumn(xe_a,"monthnum");	# 603 BKCsetColumn (ye_a:bat[:oid,:int])<-(xe_a:bat[:oid,:int])($576:str)
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");	# 604 IOprint_val ($577:int)<-($578:str)
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);	# 605 IOtable (af_a:int)<-(date_bat:bat[:oid,:date])(oe_a:bat[:oid,:int])(qe_a:bat[:oid,:int])(te_a:bat[:oid,:str])(xe_a:bat[:oid,:int])
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 	# 606  ($581:str)
    $1481 := bbp.new(:oid,:date);	# 607 CMDBATnew ($1481:bat[:oid,:date])<-($1361:oid)($486:date)
barrier ($1483,$1484,$1485):= chopper.newIterator(date_bat);	# 608 CHPbunIterator ($1483:lng)($1484:oid)($1485:date)<-(date_bat:bat[:oid,:date]) jump 614
    $1487 := mtime.addyears($1485,-100);	# 609 MTIMEdate_addyears ($1487:date)<-($1485:date)($584:int)
    bat.insert($1481,$1484,$1487);	# 610 BKCinsert_bun ($1488:bat[:oid,:date])<-($1481:bat[:oid,:date])($1484:oid)($1487:date)
catch MALexception;	# 611  (MALexception:str) jump 612
exit MALexception;	# 612  (MALexception:str)
    redo ($1483,$1484,$1485):= chopper.hasMoreElements(date_bat);	# 613 CHPbunHasMoreElements ($1483:lng)($1484:oid)($1485:date)<-(date_bat:bat[:oid,:date]) jump 609
exit ($1483,$1484,$1485);	# 614  ($1483:lng)($1484:oid)($1485:date)
    date_addyears:bat[:oid,:date]  := $1481;	# 615  (date_addyears:bat[:oid,:date])<-($1481:bat[:oid,:date])
#var date_addyears := [addyears](date_bat, -100); 	# 616  ($586:str)
    $1493 := bbp.new(:oid,:date);	# 617 CMDBATnew ($1493:bat[:oid,:date])<-($1361:oid)($486:date)
barrier ($1495,$1496,$1497):= chopper.newIterator(date_bat);	# 618 CHPbunIterator ($1495:lng)($1496:oid)($1497:date)<-(date_bat:bat[:oid,:date]) jump 624
    $1499 := mtime.addmonths($1497,1);	# 619 MTIMEdate_addmonths ($1499:date)<-($1497:date)($589:int)
    bat.insert($1493,$1496,$1499);	# 620 BKCinsert_bun ($1500:bat[:oid,:date])<-($1493:bat[:oid,:date])($1496:oid)($1499:date)
catch MALexception;	# 621  (MALexception:str) jump 622
exit MALexception;	# 622  (MALexception:str)
    redo ($1495,$1496,$1497):= chopper.hasMoreElements(date_bat);	# 623 CHPbunHasMoreElements ($1495:lng)($1496:oid)($1497:date)<-(date_bat:bat[:oid,:date]) jump 619
exit ($1495,$1496,$1497);	# 624  ($1495:lng)($1496:oid)($1497:date)
    date_addmonths:bat[:oid,:date]  := $1493;	# 625  (date_addmonths:bat[:oid,:date])<-($1493:bat[:oid,:date])
#var date_addmonths := [addmonths](date_bat, 1); 	# 626  ($591:str)
    bat.setColumn(date_bat,"date");	# 627 BKCsetColumn ($592:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($593:str)
#io.print(date_bat.bat.setColumn("date"), 	# 628  ($595:str)
    bat.setColumn(date_addyears,"min100y");	# 629 BKCsetColumn ($596:bat[:oid,:date])<-(date_addyears:bat[:oid,:date])($597:str)
#      date_addyears.bat.setColumn("min100y"), 	# 630  ($599:str)
    $1505 := bbp.new(:oid,:int);	# 631 CMDBATnew ($1505:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1507,$1508,$1509):= chopper.newIterator(date_addyears);	# 632 CHPbunIterator ($1507:lng)($1508:oid)($1509:date)<-(date_addyears:bat[:oid,:date]) jump 639
    $1511 := algebra.find(date_bat,$1508);	# 633 ALGfind ($1511:date)<-(date_bat:bat[:oid,:date])($1508:oid)
    $1513 := mtime.diff($1509,$1511);	# 634 MTIMEdate_diff ($1513:int)<-($1509:date)($1511:date)
    bat.insert($1505,$1508,$1513);	# 635 BKCinsert_bun ($1514:bat[:oid,:int])<-($1505:bat[:oid,:int])($1508:oid)($1513:int)
catch MALexception;	# 636  (MALexception:str) jump 637
exit MALexception;	# 637  (MALexception:str)
    redo ($1507,$1508,$1509):= chopper.hasMoreElements(date_addyears);	# 638 CHPbunHasMoreElements ($1507:lng)($1508:oid)($1509:date)<-(date_addyears:bat[:oid,:date]) jump 633
exit ($1507,$1508,$1509);	# 639  ($1507:lng)($1508:oid)($1509:date)
    df_a:bat[:oid,:int]  := $1505;	# 640  (df_a:bat[:oid,:int])<-($1505:bat[:oid,:int])
    bat.setColumn(df_a,"diff");	# 641 BKCsetColumn ($602:bat[:oid,:int])<-(df_a:bat[:oid,:int])($603:str)
    io.print("print(date_bat,date_addyears,df_a)");	# 642 IOprint_val ($604:int)<-($605:str)
    ff_a := io.print(date_bat,date_addyears,df_a);	# 643 IOtable (ff_a:int)<-(date_bat:bat[:oid,:date])(date_addyears:bat[:oid,:date])(df_a:bat[:oid,:int])
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 	# 644  ($608:str)
    bat.setColumn(date_bat,"date");	# 645 BKCsetColumn ($609:bat[:oid,:date])<-(date_bat:bat[:oid,:date])($593:str)
#io.print(date_bat.bat.setColumn("date"), 	# 646  ($595:str)
    bat.setColumn(date_addmonths,"plus1m");	# 647 BKCsetColumn ($611:bat[:oid,:date])<-(date_addmonths:bat[:oid,:date])($612:str)
#      date_addmonths.bat.setColumn("plus1m"), 	# 648  ($614:str)
    $1519 := bbp.new(:oid,:int);	# 649 CMDBATnew ($1519:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1521,$1522,$1523):= chopper.newIterator(date_addmonths);	# 650 CHPbunIterator ($1521:lng)($1522:oid)($1523:date)<-(date_addmonths:bat[:oid,:date]) jump 657
    $1525 := algebra.find(date_bat,$1522);	# 651 ALGfind ($1525:date)<-(date_bat:bat[:oid,:date])($1522:oid)
    $1527 := mtime.diff($1523,$1525);	# 652 MTIMEdate_diff ($1527:int)<-($1523:date)($1525:date)
    bat.insert($1519,$1522,$1527);	# 653 BKCinsert_bun ($1528:bat[:oid,:int])<-($1519:bat[:oid,:int])($1522:oid)($1527:int)
catch MALexception;	# 654  (MALexception:str) jump 655
exit MALexception;	# 655  (MALexception:str)
    redo ($1521,$1522,$1523):= chopper.hasMoreElements(date_addmonths);	# 656 CHPbunHasMoreElements ($1521:lng)($1522:oid)($1523:date)<-(date_addmonths:bat[:oid,:date]) jump 651
exit ($1521,$1522,$1523);	# 657  ($1521:lng)($1522:oid)($1523:date)
    if_a:bat[:oid,:int]  := $1519;	# 658  (if_a:bat[:oid,:int])<-($1519:bat[:oid,:int])
    bat.setColumn(if_a,"diff");	# 659 BKCsetColumn ($616:bat[:oid,:int])<-(if_a:bat[:oid,:int])($603:str)
    io.print(" print(date_bat,date_addmonths,if_a)");	# 660 IOprint_val ($617:int)<-($618:str)
    kf_a := io.print(date_bat,date_addmonths,if_a);	# 661 IOtable (kf_a:int)<-(date_bat:bat[:oid,:date])(date_addmonths:bat[:oid,:date])(if_a:bat[:oid,:int])
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 	# 662  ($621:str)
## test dayofweek and weeknumber using more than two years as consecutive days 	# 663  ($623:str)
    date_seq := bbp.new(:int,:date);	# 664 CMDBATnew (date_seq:bat[:int,:date])<-($625:int)($486:date)
#var date_seq := bbp.new(int, date); 	# 665  ($627:str)
    i := -375;	# 666  (i:int)<-($629:int)
#var i := -375; 	# 667  ($631:str)
barrier lf_a := true;	# 668  (lf_a:bit)<-($633:bit) jump 678
    i := calc.+(i,1);	# 669 CALCbinaryADDintint (i:int)<-(i:int)($634:int)
    of_a := calc.<(i,375);	# 670 CALCcompLTintint (of_a:bit)<-(i:int)($636:int)
barrier mf_a := of_a;	# 671  (mf_a:bit)<-(of_a:bit) jump 677
#while ((i :+= 1) < 375) { 	# 672  ($640:str)
    pf_a := mtime.adddays(date_00,i);	# 673 MTIMEdate_adddays (pf_a:date)<-(date_00:date)(i:int)
    bat.insert(date_seq,i,pf_a);	# 674 BKCinsert_bun ($641:bat[:int,:date])<-(date_seq:bat[:int,:date])(i:int)(pf_a:date)
#	date_seq.bat.insert(i,adddays(date_00,i)); 	# 675  ($643:str)
    redo lf_a;	# 676  (lf_a:bit) jump 669
exit mf_a;	# 677  (mf_a:bit)
exit lf_a;	# 678  (lf_a:bit)
#} 	# 679  ($645:str)
    rf_a := bat.setColumn(date_seq,"date");	# 680 BKCsetColumn (rf_a:bat[:int,:date])<-(date_seq:bat[:int,:date])($647:str)
#io.print(date_seq.bat.setColumn("date"), 	# 681  ($649:str)
    $1533 := bbp.new(:int,:int);	# 682 CMDBATnew ($1533:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1535,$1536,$1537):= chopper.newIterator(date_seq);	# 683 CHPbunIterator ($1535:lng)($1536:int)($1537:date)<-(date_seq:bat[:int,:date]) jump 689
    $1539 := mtime.weekofyear($1537);	# 684 MTIMEdate_extract_weekofyear ($1539:int)<-($1537:date)
    bat.insert($1533,$1536,$1539);	# 685 BKCinsert_bun ($1540:bat[:int,:int])<-($1533:bat[:int,:int])($1536:int)($1539:int)
catch MALexception;	# 686  (MALexception:str) jump 687
exit MALexception;	# 687  (MALexception:str)
    redo ($1535,$1536,$1537):= chopper.hasMoreElements(date_seq);	# 688 CHPbunHasMoreElements ($1535:lng)($1536:int)($1537:date)<-(date_seq:bat[:int,:date]) jump 684
exit ($1535,$1536,$1537);	# 689  ($1535:lng)($1536:int)($1537:date)
    sf_a:bat[:int,:int]  := $1533;	# 690  (sf_a:bat[:int,:int])<-($1533:bat[:int,:int])
    tf_a := bat.setColumn(sf_a,"weekofyear");	# 691 BKCsetColumn (tf_a:bat[:int,:int])<-(sf_a:bat[:int,:int])($653:str)
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 	# 692  ($655:str)
    $1545 := bbp.new(:int,:int);	# 693 CMDBATnew ($1545:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1547,$1548,$1549):= chopper.newIterator(date_seq);	# 694 CHPbunIterator ($1547:lng)($1548:int)($1549:date)<-(date_seq:bat[:int,:date]) jump 700
    $1551 := mtime.dayofweek($1549);	# 695 MTIMEdate_extract_dayofweek ($1551:int)<-($1549:date)
    bat.insert($1545,$1548,$1551);	# 696 BKCinsert_bun ($1552:bat[:int,:int])<-($1545:bat[:int,:int])($1548:int)($1551:int)
catch MALexception;	# 697  (MALexception:str) jump 698
exit MALexception;	# 698  (MALexception:str)
    redo ($1547,$1548,$1549):= chopper.hasMoreElements(date_seq);	# 699 CHPbunHasMoreElements ($1547:lng)($1548:int)($1549:date)<-(date_seq:bat[:int,:date]) jump 695
exit ($1547,$1548,$1549);	# 700  ($1547:lng)($1548:int)($1549:date)
    uf_a:bat[:int,:int]  := $1545;	# 701  (uf_a:bat[:int,:int])<-($1545:bat[:int,:int])
    $1557 := bbp.new(:int,:str);	# 702 CMDBATnew ($1557:bat[:int,:str])<-($1024:int)($1023:str)
barrier ($1559,$1560,$1561):= chopper.newIterator(uf_a);	# 703 CHPbunIterator ($1559:lng)($1560:int)($1561:int)<-(uf_a:bat[:int,:int]) jump 709
    $1563 := mtime.dayname($1561);	# 704 MTIMEday_to_str ($1563:str)<-($1561:int)
    bat.insert($1557,$1560,$1563);	# 705 BKCinsert_bun ($1564:bat[:int,:str])<-($1557:bat[:int,:str])($1560:int)($1563:str)
catch MALexception;	# 706  (MALexception:str) jump 707
exit MALexception;	# 707  (MALexception:str)
    redo ($1559,$1560,$1561):= chopper.hasMoreElements(uf_a);	# 708 CHPbunHasMoreElements ($1559:lng)($1560:int)($1561:int)<-(uf_a:bat[:int,:int]) jump 704
exit ($1559,$1560,$1561);	# 709  ($1559:lng)($1560:int)($1561:int)
    vf_a:bat[:int,:str]  := $1557;	# 710  (vf_a:bat[:int,:str])<-($1557:bat[:int,:str])
    wf_a := bat.setColumn(vf_a,"dayofweek");	# 711 BKCsetColumn (wf_a:bat[:int,:str])<-(vf_a:bat[:int,:str])($661:str)
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 	# 712  ($663:str)
    $1569 := bbp.new(:int,:int);	# 713 CMDBATnew ($1569:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1571,$1572,$1573):= chopper.newIterator(date_seq);	# 714 CHPbunIterator ($1571:lng)($1572:int)($1573:date)<-(date_seq:bat[:int,:date]) jump 720
    $1575 := mtime.dayofweek($1573);	# 715 MTIMEdate_extract_dayofweek ($1575:int)<-($1573:date)
    bat.insert($1569,$1572,$1575);	# 716 BKCinsert_bun ($1576:bat[:int,:int])<-($1569:bat[:int,:int])($1572:int)($1575:int)
catch MALexception;	# 717  (MALexception:str) jump 718
exit MALexception;	# 718  (MALexception:str)
    redo ($1571,$1572,$1573):= chopper.hasMoreElements(date_seq);	# 719 CHPbunHasMoreElements ($1571:lng)($1572:int)($1573:date)<-(date_seq:bat[:int,:date]) jump 715
exit ($1571,$1572,$1573);	# 720  ($1571:lng)($1572:int)($1573:date)
    xf_a:bat[:int,:int]  := $1569;	# 721  (xf_a:bat[:int,:int])<-($1569:bat[:int,:int])
    $1581 := bbp.new(:int,:str);	# 722 CMDBATnew ($1581:bat[:int,:str])<-($1024:int)($1023:str)
barrier ($1583,$1584,$1585):= chopper.newIterator(xf_a);	# 723 CHPbunIterator ($1583:lng)($1584:int)($1585:int)<-(xf_a:bat[:int,:int]) jump 729
    $1587 := mtime.dayname($1585);	# 724 MTIMEday_to_str ($1587:str)<-($1585:int)
    bat.insert($1581,$1584,$1587);	# 725 BKCinsert_bun ($1588:bat[:int,:str])<-($1581:bat[:int,:str])($1584:int)($1587:str)
catch MALexception;	# 726  (MALexception:str) jump 727
exit MALexception;	# 727  (MALexception:str)
    redo ($1583,$1584,$1585):= chopper.hasMoreElements(xf_a);	# 728 CHPbunHasMoreElements ($1583:lng)($1584:int)($1585:int)<-(xf_a:bat[:int,:int]) jump 724
exit ($1583,$1584,$1585);	# 729  ($1583:lng)($1584:int)($1585:int)
    yf_a:bat[:int,:str]  := $1581;	# 730  (yf_a:bat[:int,:str])<-($1581:bat[:int,:str])
    $1593 := bbp.new(:int,:int);	# 731 CMDBATnew ($1593:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1595,$1596,$1597):= chopper.newIterator(yf_a);	# 732 CHPbunIterator ($1595:lng)($1596:int)($1597:str)<-(yf_a:bat[:int,:str]) jump 738
    $1599 := mtime.daynum($1597);	# 733 MTIMEday_from_str ($1599:int)<-($1597:str)
    bat.insert($1593,$1596,$1599);	# 734 BKCinsert_bun ($1600:bat[:int,:int])<-($1593:bat[:int,:int])($1596:int)($1599:int)
catch MALexception;	# 735  (MALexception:str) jump 736
exit MALexception;	# 736  (MALexception:str)
    redo ($1595,$1596,$1597):= chopper.hasMoreElements(yf_a);	# 737 CHPbunHasMoreElements ($1595:lng)($1596:int)($1597:str)<-(yf_a:bat[:int,:str]) jump 733
exit ($1595,$1596,$1597);	# 738  ($1595:lng)($1596:int)($1597:str)
    ag_a:bat[:int,:int]  := $1593;	# 739  (ag_a:bat[:int,:int])<-($1593:bat[:int,:int])
    bg_a := bat.setColumn(ag_a,"num");	# 740 BKCsetColumn (bg_a:bat[:int,:int])<-(ag_a:bat[:int,:int])($669:str)
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 	# 741  ($671:str)
    $1605 := bbp.new(:int,:int);	# 742 CMDBATnew ($1605:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1607,$1608,$1609):= chopper.newIterator(date_seq);	# 743 CHPbunIterator ($1607:lng)($1608:int)($1609:date)<-(date_seq:bat[:int,:date]) jump 749
    $1611 := mtime.dayofyear($1609);	# 744 MTIMEdate_extract_dayofyear ($1611:int)<-($1609:date)
    bat.insert($1605,$1608,$1611);	# 745 BKCinsert_bun ($1612:bat[:int,:int])<-($1605:bat[:int,:int])($1608:int)($1611:int)
catch MALexception;	# 746  (MALexception:str) jump 747
exit MALexception;	# 747  (MALexception:str)
    redo ($1607,$1608,$1609):= chopper.hasMoreElements(date_seq);	# 748 CHPbunHasMoreElements ($1607:lng)($1608:int)($1609:date)<-(date_seq:bat[:int,:date]) jump 744
exit ($1607,$1608,$1609);	# 749  ($1607:lng)($1608:int)($1609:date)
    cg_a:bat[:int,:int]  := $1605;	# 750  (cg_a:bat[:int,:int])<-($1605:bat[:int,:int])
    dg_a := bat.setColumn(cg_a,"dayofyear");	# 751 BKCsetColumn (dg_a:bat[:int,:int])<-(cg_a:bat[:int,:int])($675:str)
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");	# 752 IOprint_val ($676:int)<-($677:str)
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);	# 753 IOtable (eg_a:int)<-(date_seq:bat[:int,:date])(sf_a:bat[:int,:int])(vf_a:bat[:int,:str])(ag_a:bat[:int,:int])(cg_a:bat[:int,:int])
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 	# 754  ($680:str)
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 755  ($682:str)
## test the various ways top create daytimes 	# 756  ($684:str)
    daytime_00 := mtime.daytime(23,59,59,999);	# 757 MTIMEdaytime_create (daytime_00:daytime)<-($686:int)($687:int)($687:int)($688:int)
#var daytime_00 := mtime.daytime(23,59,59,999); 	# 758  ($690:str)
    daytime_01 := mtime.daytime("23:59");	# 759 MTIMEdaytime_fromstr (daytime_01:daytime)<-($692:str)
#var daytime_01 := mtime.daytime("23:59"); 	# 760  ($694:str)
    daytime_02 := mtime.daytime("00:00");	# 761 MTIMEdaytime_fromstr (daytime_02:daytime)<-($696:str)
#var daytime_02 := mtime.daytime("00:00"); 	# 762  ($698:str)
    daytime_03 := mtime.daytime("23:59:59");	# 763 MTIMEdaytime_fromstr (daytime_03:daytime)<-($700:str)
#var daytime_03 := mtime.daytime("23:59:59"); 	# 764  ($702:str)
    daytime_04 := mtime.daytime("00:00:00.000");	# 765 MTIMEdaytime_fromstr (daytime_04:daytime)<-($704:str)
#var daytime_04 := mtime.daytime("00:00:00.000"); 	# 766  ($706:str)
    daytime_05 := mtime.daytime("00:00:00");	# 767 MTIMEdaytime_fromstr (daytime_05:daytime)<-($708:str)
#var daytime_05 := mtime.daytime("00:00:00"); 	# 768  ($710:str)
    daytime_06 := mtime.daytime("00:00:00:001");	# 769 MTIMEdaytime_fromstr (daytime_06:daytime)<-($712:str)
#var daytime_06 := mtime.daytime("00:00:00:001"); 	# 770  ($714:str)
    daytime_07 := mtime.daytime("03:49:02.999");	# 771 MTIMEdaytime_fromstr (daytime_07:daytime)<-($716:str)
#var daytime_07 := mtime.daytime("03:49:02.999"); 	# 772  ($718:str)
    daytime_08 := mtime.daytime("20:48:42:999");	# 773 MTIMEdaytime_fromstr (daytime_08:daytime)<-($720:str)
#var daytime_08 := mtime.daytime("20:48:42:999"); 	# 774  ($722:str)
    daytime_09 := mtime.daytime("17:53:38:999");	# 775 MTIMEdaytime_fromstr (daytime_09:daytime)<-($724:str)
#var daytime_09 := mtime.daytime("17:53:38:999"); 	# 776  ($726:str)
    daytime_10 := mtime.daytime("13:15:34:999");	# 777 MTIMEdaytime_fromstr (daytime_10:daytime)<-($728:str)
#var daytime_10 := mtime.daytime("13:15:34:999"); 	# 778  ($730:str)
    daytime_11 := mtime.daytime("07:34:27.999");	# 779 MTIMEdaytime_fromstr (daytime_11:daytime)<-($732:str)
#var daytime_11 := mtime.daytime("07:34:27.999"); 	# 780  ($734:str)
    daytime_12 := mtime.daytime("23:59:59:999");	# 781 MTIMEdaytime_fromstr (daytime_12:daytime)<-($736:str)
#var daytime_12 := mtime.daytime("23:59:59:999"); 	# 782  ($738:str)
    daytime_13 := mtime.daytime("01:00:03.999");	# 783 MTIMEdaytime_fromstr (daytime_13:daytime)<-($740:str)
#var daytime_13 := mtime.daytime("01:00:03.999"); 	# 784  ($742:str)
    daytime_14 := mtime.daytime("23:59:59.999");	# 785 MTIMEdaytime_fromstr (daytime_14:daytime)<-($744:str)
#var daytime_14 := mtime.daytime("23:59:59.999"); 	# 786  ($746:str)
## nil daytimes 	# 787  ($748:str)
    daytime_15 := mtime.daytime(24,59,59,999);	# 788 MTIMEdaytime_create (daytime_15:daytime)<-($750:int)($751:int)($751:int)($752:int)
#var daytime_15 := mtime.daytime(24,59,59,999); 	# 789  ($754:str)
    daytime_16 := mtime.daytime(23,60,59,999);	# 790 MTIMEdaytime_create (daytime_16:daytime)<-($756:int)($757:int)($751:int)($752:int)
#var daytime_16 := mtime.daytime(23,60,59,999); 	# 791  ($759:str)
    daytime_17 := mtime.daytime(23,59,60,999);	# 792 MTIMEdaytime_create (daytime_17:daytime)<-($756:int)($751:int)($757:int)($752:int)
#var daytime_17 := mtime.daytime(23,59,60,999); 	# 793  ($762:str)
    daytime_18 := mtime.daytime(23,59,60,1000);	# 794 MTIMEdaytime_create (daytime_18:daytime)<-($756:int)($751:int)($757:int)($764:int)
#var daytime_18 := mtime.daytime(23,59,60,1000); 	# 795  ($766:str)
    daytime_19 := mtime.daytime("nil");	# 796 MTIMEdaytime_fromstr (daytime_19:daytime)<-($768:str)
#var daytime_19 := mtime.daytime("nil"); 	# 797  ($770:str)
    daytime_bat := bbp.new(:oid,:daytime);	# 798 CMDBATnew (daytime_bat:bat[:oid,:daytime])<-($772:oid)($773:daytime)
#var daytime_bat := bbp.new(oid,daytime); 	# 799  ($775:str)
    bat.insert(daytime_bat,0@0,daytime_00);	# 800 BKCinsert_bun ($776:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($777:oid)(daytime_00:daytime)
    bat.insert(daytime_bat,1@0,daytime_01);	# 801 BKCinsert_bun ($778:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($779:oid)(daytime_01:daytime)
    bat.insert(daytime_bat,2@0,daytime_02);	# 802 BKCinsert_bun ($780:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($781:oid)(daytime_02:daytime)
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 	# 803  ($783:str)
    bat.insert(daytime_bat,3@0,daytime_03);	# 804 BKCinsert_bun ($784:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($785:oid)(daytime_03:daytime)
    bat.insert(daytime_bat,4@0,daytime_04);	# 805 BKCinsert_bun ($786:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($787:oid)(daytime_04:daytime)
    bat.insert(daytime_bat,5@0,daytime_05);	# 806 BKCinsert_bun ($788:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($789:oid)(daytime_05:daytime)
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 	# 807  ($791:str)
    bat.insert(daytime_bat,6@0,daytime_06);	# 808 BKCinsert_bun ($792:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($793:oid)(daytime_06:daytime)
    bat.insert(daytime_bat,7@0,daytime_07);	# 809 BKCinsert_bun ($794:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($795:oid)(daytime_07:daytime)
    bat.insert(daytime_bat,8@0,daytime_08);	# 810 BKCinsert_bun ($796:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($797:oid)(daytime_08:daytime)
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 	# 811  ($799:str)
    bat.insert(daytime_bat,9@0,daytime_09);	# 812 BKCinsert_bun ($800:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($801:oid)(daytime_09:daytime)
    bat.insert(daytime_bat,10@0,daytime_10);	# 813 BKCinsert_bun ($802:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($803:oid)(daytime_10:daytime)
    bat.insert(daytime_bat,11@0,daytime_11);	# 814 BKCinsert_bun ($804:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($805:oid)(daytime_11:daytime)
#daytime_bat.bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 	# 815  ($807:str)
    bat.insert(daytime_bat,12@0,daytime_12);	# 816 BKCinsert_bun ($808:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($809:oid)(daytime_12:daytime)
    bat.insert(daytime_bat,13@0,daytime_13);	# 817 BKCinsert_bun ($810:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($811:oid)(daytime_13:daytime)
    bat.insert(daytime_bat,14@0,daytime_14);	# 818 BKCinsert_bun ($812:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($813:oid)(daytime_14:daytime)
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 	# 819  ($815:str)
    bat.insert(daytime_bat,15@0,daytime_15);	# 820 BKCinsert_bun ($816:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($817:oid)(daytime_15:daytime)
    bat.insert(daytime_bat,16@0,daytime_16);	# 821 BKCinsert_bun ($818:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($819:oid)(daytime_16:daytime)
    bat.insert(daytime_bat,17@0,daytime_17);	# 822 BKCinsert_bun ($820:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($821:oid)(daytime_17:daytime)
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 	# 823  ($823:str)
    bat.insert(daytime_bat,18@0,daytime_18);	# 824 BKCinsert_bun ($824:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($825:oid)(daytime_18:daytime)
    bat.insert(daytime_bat,19@0,daytime_19);	# 825 BKCinsert_bun ($826:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($827:oid)(daytime_19:daytime)
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 	# 826  ($829:str)
    bat.setColumn(daytime_bat,"daytime");	# 827 BKCsetColumn ($830:bat[:oid,:daytime])<-(daytime_bat:bat[:oid,:daytime])($831:str)
#io.print(daytime_bat.bat.setColumn("daytime"), 	# 828  ($833:str)
    $1617 := bbp.new(:oid,:int);	# 829 CMDBATnew ($1617:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1619,$1620,$1621):= chopper.newIterator(daytime_bat);	# 830 CHPbunIterator ($1619:lng)($1620:oid)($1621:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 836
    $1623 := mtime.hours($1621);	# 831 MTIMEdaytime_extract_hours ($1623:int)<-($1621:daytime)
    bat.insert($1617,$1620,$1623);	# 832 BKCinsert_bun ($1624:bat[:oid,:int])<-($1617:bat[:oid,:int])($1620:oid)($1623:int)
catch MALexception;	# 833  (MALexception:str) jump 834
exit MALexception;	# 834  (MALexception:str)
    redo ($1619,$1620,$1621):= chopper.hasMoreElements(daytime_bat);	# 835 CHPbunHasMoreElements ($1619:lng)($1620:oid)($1621:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 831
exit ($1619,$1620,$1621);	# 836  ($1619:lng)($1620:oid)($1621:daytime)
    bh_a:bat[:oid,:int]  := $1617;	# 837  (bh_a:bat[:oid,:int])<-($1617:bat[:oid,:int])
    bat.setColumn(bh_a,"hours");	# 838 BKCsetColumn ($836:bat[:oid,:int])<-(bh_a:bat[:oid,:int])($837:str)
#      [hours](daytime_bat).bat.setColumn("hours"), 	# 839  ($839:str)
    $1629 := bbp.new(:oid,:int);	# 840 CMDBATnew ($1629:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1631,$1632,$1633):= chopper.newIterator(daytime_bat);	# 841 CHPbunIterator ($1631:lng)($1632:oid)($1633:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 847
    $1635 := mtime.minutes($1633);	# 842 MTIMEdaytime_extract_minutes ($1635:int)<-($1633:daytime)
    bat.insert($1629,$1632,$1635);	# 843 BKCinsert_bun ($1636:bat[:oid,:int])<-($1629:bat[:oid,:int])($1632:oid)($1635:int)
catch MALexception;	# 844  (MALexception:str) jump 845
exit MALexception;	# 845  (MALexception:str)
    redo ($1631,$1632,$1633):= chopper.hasMoreElements(daytime_bat);	# 846 CHPbunHasMoreElements ($1631:lng)($1632:oid)($1633:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 842
exit ($1631,$1632,$1633);	# 847  ($1631:lng)($1632:oid)($1633:daytime)
    dh_a:bat[:oid,:int]  := $1629;	# 848  (dh_a:bat[:oid,:int])<-($1629:bat[:oid,:int])
    bat.setColumn(dh_a,"minutes");	# 849 BKCsetColumn ($842:bat[:oid,:int])<-(dh_a:bat[:oid,:int])($843:str)
#      [minutes](daytime_bat).bat.setColumn("minutes"), 	# 850  ($845:str)
    $1641 := bbp.new(:oid,:int);	# 851 CMDBATnew ($1641:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1643,$1644,$1645):= chopper.newIterator(daytime_bat);	# 852 CHPbunIterator ($1643:lng)($1644:oid)($1645:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 858
    $1647 := mtime.seconds($1645);	# 853 MTIMEdaytime_extract_seconds ($1647:int)<-($1645:daytime)
    bat.insert($1641,$1644,$1647);	# 854 BKCinsert_bun ($1648:bat[:oid,:int])<-($1641:bat[:oid,:int])($1644:oid)($1647:int)
catch MALexception;	# 855  (MALexception:str) jump 856
exit MALexception;	# 856  (MALexception:str)
    redo ($1643,$1644,$1645):= chopper.hasMoreElements(daytime_bat);	# 857 CHPbunHasMoreElements ($1643:lng)($1644:oid)($1645:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 853
exit ($1643,$1644,$1645);	# 858  ($1643:lng)($1644:oid)($1645:daytime)
    fh_a:bat[:oid,:int]  := $1641;	# 859  (fh_a:bat[:oid,:int])<-($1641:bat[:oid,:int])
    bat.setColumn(fh_a,"seconds");	# 860 BKCsetColumn ($848:bat[:oid,:int])<-(fh_a:bat[:oid,:int])($849:str)
#      [seconds](daytime_bat).bat.setColumn("seconds"), 	# 861  ($851:str)
    $1653 := bbp.new(:oid,:int);	# 862 CMDBATnew ($1653:bat[:oid,:int])<-($1361:oid)($1024:int)
barrier ($1655,$1656,$1657):= chopper.newIterator(daytime_bat);	# 863 CHPbunIterator ($1655:lng)($1656:oid)($1657:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 869
    $1659 := mtime.milliseconds($1657);	# 864 MTIMEdaytime_extract_milliseconds ($1659:int)<-($1657:daytime)
    bat.insert($1653,$1656,$1659);	# 865 BKCinsert_bun ($1660:bat[:oid,:int])<-($1653:bat[:oid,:int])($1656:oid)($1659:int)
catch MALexception;	# 866  (MALexception:str) jump 867
exit MALexception;	# 867  (MALexception:str)
    redo ($1655,$1656,$1657):= chopper.hasMoreElements(daytime_bat);	# 868 CHPbunHasMoreElements ($1655:lng)($1656:oid)($1657:daytime)<-(daytime_bat:bat[:oid,:daytime]) jump 864
exit ($1655,$1656,$1657);	# 869  ($1655:lng)($1656:oid)($1657:daytime)
    hh_a:bat[:oid,:int]  := $1653;	# 870  (hh_a:bat[:oid,:int])<-($1653:bat[:oid,:int])
    bat.setColumn(hh_a,"milliseconds");	# 871 BKCsetColumn ($854:bat[:oid,:int])<-(hh_a:bat[:oid,:int])($855:str)
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");	# 872 IOprint_val ($856:int)<-($857:str)
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);	# 873 IOtable (jh_a:int)<-(daytime_bat:bat[:oid,:daytime])(bh_a:bat[:oid,:int])(dh_a:bat[:oid,:int])(fh_a:bat[:oid,:int])(hh_a:bat[:oid,:int])
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 	# 874  ($860:str)
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 875  ($862:str)
## create timestamps in bulk from the above bats with dates, daytimes and tzones 	# 876  ($864:str)
# Skipped due to coercion implication 	# 877  ($866:str)
    $1665 := bbp.new(:oid,:timestamp);	# 878 CMDBATnew ($1665:bat[:oid,:timestamp])<-($1361:oid)($1666:timestamp)
barrier ($1668,$1669,$1670):= chopper.newIterator(date_bat);	# 879 CHPbunIterator ($1668:lng)($1669:oid)($1670:date)<-(date_bat:bat[:oid,:date]) jump 887
    $1672 := algebra.find(daytime_bat,$1669);	# 880 ALGfind ($1672:daytime)<-(daytime_bat:bat[:oid,:daytime])($1669:oid)
    $1674 := algebra.find(tzone_bat,$1669);	# 881 ALGfind ($1674:tzone)<-(tzone_bat:bat[:oid,:tzone])($1669:oid)
    $1676 := mtime.timestamp($1670,$1672,$1674);	# 882 MTIMEtimestamp_create ($1676:timestamp)<-($1670:date)($1672:daytime)($1674:tzone)
    bat.insert($1665,$1669,$1676);	# 883 BKCinsert_bun ($1677:bat[:oid,:timestamp])<-($1665:bat[:oid,:timestamp])($1669:oid)($1676:timestamp)
catch MALexception;	# 884  (MALexception:str) jump 885
exit MALexception;	# 885  (MALexception:str)
    redo ($1668,$1669,$1670):= chopper.hasMoreElements(date_bat);	# 886 CHPbunHasMoreElements ($1668:lng)($1669:oid)($1670:date)<-(date_bat:bat[:oid,:date]) jump 880
exit ($1668,$1669,$1670);	# 887  ($1668:lng)($1669:oid)($1670:date)
    kh_a:bat[:oid,:timestamp]  := $1665;	# 888  (kh_a:bat[:oid,:timestamp])<-($1665:bat[:oid,:timestamp])
    timestamp_bat := kh_a;	# 889  (timestamp_bat:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
    bat.setWriteMode(kh_a);	# 890 BKCsetWriteMode ($870:bat[:oid,:timestamp])<-(kh_a:bat[:oid,:timestamp])
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 	# 891  ($872:str)
## KILL 	# 892  ($874:str)
## var timestamp_now := timestamp(epoch()); 	# 893  ($876:str)
## timestamp_bat.bat.insert(14@0, timestamp_now); 	# 894  ($878:str)
## test the timestamp operations 	# 895  ($880:str)
    bat.setColumn(timestamp_bat,"timestamp");	# 896 BKCsetColumn ($881:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($882:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 897  ($884:str)
    $1682 := bbp.new(:oid,:date);	# 898 CMDBATnew ($1682:bat[:oid,:date])<-($1361:oid)($1683:date)
barrier ($1685,$1686,$1687):= chopper.newIterator(timestamp_bat);	# 899 CHPbunIterator ($1685:lng)($1686:oid)($1687:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 906
    $1689 := algebra.find(tzone_bat,$1686);	# 900 ALGfind ($1689:tzone)<-(tzone_bat:bat[:oid,:tzone])($1686:oid)
    $1691 := mtime.date($1687,$1689);	# 901 MTIMEtimestamp_extract_date ($1691:date)<-($1687:timestamp)($1689:tzone)
    bat.insert($1682,$1686,$1691);	# 902 BKCinsert_bun ($1692:bat[:oid,:date])<-($1682:bat[:oid,:date])($1686:oid)($1691:date)
catch MALexception;	# 903  (MALexception:str) jump 904
exit MALexception;	# 904  (MALexception:str)
    redo ($1685,$1686,$1687):= chopper.hasMoreElements(timestamp_bat);	# 905 CHPbunHasMoreElements ($1685:lng)($1686:oid)($1687:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 900
exit ($1685,$1686,$1687);	# 906  ($1685:lng)($1686:oid)($1687:timestamp)
    mh_a:bat[:oid,:date]  := $1682;	# 907  (mh_a:bat[:oid,:date])<-($1682:bat[:oid,:date])
    bat.setColumn(mh_a,"date");	# 908 BKCsetColumn ($887:bat[:oid,:date])<-(mh_a:bat[:oid,:date])($888:str)
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 	# 909  ($890:str)
    $1697 := bbp.new(:oid,:daytime);	# 910 CMDBATnew ($1697:bat[:oid,:daytime])<-($1361:oid)($1698:daytime)
barrier ($1700,$1701,$1702):= chopper.newIterator(timestamp_bat);	# 911 CHPbunIterator ($1700:lng)($1701:oid)($1702:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 918
    $1704 := algebra.find(tzone_bat,$1701);	# 912 ALGfind ($1704:tzone)<-(tzone_bat:bat[:oid,:tzone])($1701:oid)
    $1706 := mtime.daytime($1702,$1704);	# 913 MTIMEtimestamp_extract_daytime ($1706:daytime)<-($1702:timestamp)($1704:tzone)
    bat.insert($1697,$1701,$1706);	# 914 BKCinsert_bun ($1707:bat[:oid,:daytime])<-($1697:bat[:oid,:daytime])($1701:oid)($1706:daytime)
catch MALexception;	# 915  (MALexception:str) jump 916
exit MALexception;	# 916  (MALexception:str)
    redo ($1700,$1701,$1702):= chopper.hasMoreElements(timestamp_bat);	# 917 CHPbunHasMoreElements ($1700:lng)($1701:oid)($1702:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 912
exit ($1700,$1701,$1702);	# 918  ($1700:lng)($1701:oid)($1702:timestamp)
    oh_a:bat[:oid,:daytime]  := $1697;	# 919  (oh_a:bat[:oid,:daytime])<-($1697:bat[:oid,:daytime])
    bat.setColumn(oh_a,"daytime");	# 920 BKCsetColumn ($893:bat[:oid,:daytime])<-(oh_a:bat[:oid,:daytime])($894:str)
    io.print("print(timestamp_bat,mh_a,oh_a)");	# 921 IOprint_val ($895:int)<-($896:str)
    io.print(timestamp_bat,mh_a,oh_a);	# 922 IOtable ($897:int)<-(timestamp_bat:bat[:oid,:timestamp])(mh_a:bat[:oid,:date])(oh_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 	# 923  ($899:str)
    rh_a := bat.setColumn(timestamp_bat,"timestamp");	# 924 BKCsetColumn (rh_a:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($882:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 925  ($884:str)
    timezones:bat[:str,:tzone]  := bbp.bind("timezones");	# 926 CMDbbpbind (timezones:bat[:str,:tzone])<-($903:str)
    io.print("print(timezones)");	# 927 IOprint_val ($904:int)<-($905:str)
    io.print(timezones);	# 928 IOprint_val ($906:int)<-(timezones:bat[:str,:tzone])
    sh_a:tzone  := algebra.find(timezones,"Wake Island");	# 929 ALGfind (sh_a:tzone)<-(timezones:bat[:str,:tzone])($908:str)
    $1712 := bbp.new(:oid,:date);	# 930 CMDBATnew ($1712:bat[:oid,:date])<-($1361:oid)($1683:date)
barrier ($1714,$1715,$1716):= chopper.newIterator(timestamp_bat);	# 931 CHPbunIterator ($1714:lng)($1715:oid)($1716:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 937
    $1718 := mtime.date($1716,sh_a);	# 932 MTIMEtimestamp_extract_date ($1718:date)<-($1716:timestamp)(sh_a:tzone)
    bat.insert($1712,$1715,$1718);	# 933 BKCinsert_bun ($1719:bat[:oid,:date])<-($1712:bat[:oid,:date])($1715:oid)($1718:date)
catch MALexception;	# 934  (MALexception:str) jump 935
exit MALexception;	# 935  (MALexception:str)
    redo ($1714,$1715,$1716):= chopper.hasMoreElements(timestamp_bat);	# 936 CHPbunHasMoreElements ($1714:lng)($1715:oid)($1716:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 932
exit ($1714,$1715,$1716);	# 937  ($1714:lng)($1715:oid)($1716:timestamp)
    th_a:bat[:oid,:date]  := $1712;	# 938  (th_a:bat[:oid,:date])<-($1712:bat[:oid,:date])
    uh_a:bat[:oid,:date]  := bat.setColumn(th_a,"Wake Island");	# 939 BKCsetColumn (uh_a:bat[:oid,:date])<-(th_a:bat[:oid,:date])($908:str)
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 	# 940  ($912:str)
    vh_a:tzone  := algebra.find(timezones,"Wake Island");	# 941 ALGfind (vh_a:tzone)<-(timezones:bat[:str,:tzone])($908:str)
    $1724 := bbp.new(:oid,:daytime);	# 942 CMDBATnew ($1724:bat[:oid,:daytime])<-($1361:oid)($1698:daytime)
barrier ($1726,$1727,$1728):= chopper.newIterator(timestamp_bat);	# 943 CHPbunIterator ($1726:lng)($1727:oid)($1728:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 949
    $1730 := mtime.daytime($1728,vh_a);	# 944 MTIMEtimestamp_extract_daytime ($1730:daytime)<-($1728:timestamp)(vh_a:tzone)
    bat.insert($1724,$1727,$1730);	# 945 BKCinsert_bun ($1731:bat[:oid,:daytime])<-($1724:bat[:oid,:daytime])($1727:oid)($1730:daytime)
catch MALexception;	# 946  (MALexception:str) jump 947
exit MALexception;	# 947  (MALexception:str)
    redo ($1726,$1727,$1728):= chopper.hasMoreElements(timestamp_bat);	# 948 CHPbunHasMoreElements ($1726:lng)($1727:oid)($1728:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 944
exit ($1726,$1727,$1728);	# 949  ($1726:lng)($1727:oid)($1728:timestamp)
    wh_a:bat[:oid,:daytime]  := $1724;	# 950  (wh_a:bat[:oid,:daytime])<-($1724:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 	# 951  ($916:str)
    xh_a:tzone  := algebra.find(timezones,"American Samoa");	# 952 ALGfind (xh_a:tzone)<-(timezones:bat[:str,:tzone])($918:str)
    $1736 := bbp.new(:oid,:date);	# 953 CMDBATnew ($1736:bat[:oid,:date])<-($1361:oid)($1683:date)
barrier ($1738,$1739,$1740):= chopper.newIterator(timestamp_bat);	# 954 CHPbunIterator ($1738:lng)($1739:oid)($1740:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 960
    $1742 := mtime.date($1740,xh_a);	# 955 MTIMEtimestamp_extract_date ($1742:date)<-($1740:timestamp)(xh_a:tzone)
    bat.insert($1736,$1739,$1742);	# 956 BKCinsert_bun ($1743:bat[:oid,:date])<-($1736:bat[:oid,:date])($1739:oid)($1742:date)
catch MALexception;	# 957  (MALexception:str) jump 958
exit MALexception;	# 958  (MALexception:str)
    redo ($1738,$1739,$1740):= chopper.hasMoreElements(timestamp_bat);	# 959 CHPbunHasMoreElements ($1738:lng)($1739:oid)($1740:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 955
exit ($1738,$1739,$1740);	# 960  ($1738:lng)($1739:oid)($1740:timestamp)
    yh_a:bat[:oid,:date]  := $1736;	# 961  (yh_a:bat[:oid,:date])<-($1736:bat[:oid,:date])
    ai_a := bat.setColumn(yh_a,"American Samoa");	# 962 BKCsetColumn (ai_a:bat[:oid,:date])<-(yh_a:bat[:oid,:date])($918:str)
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 	# 963  ($923:str)
    bi_a:tzone  := algebra.find(timezones,"American Samoa");	# 964 ALGfind (bi_a:tzone)<-(timezones:bat[:str,:tzone])($918:str)
    $1748 := bbp.new(:oid,:daytime);	# 965 CMDBATnew ($1748:bat[:oid,:daytime])<-($1361:oid)($1698:daytime)
barrier ($1750,$1751,$1752):= chopper.newIterator(timestamp_bat);	# 966 CHPbunIterator ($1750:lng)($1751:oid)($1752:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 972
    $1754 := mtime.daytime($1752,bi_a);	# 967 MTIMEtimestamp_extract_daytime ($1754:daytime)<-($1752:timestamp)(bi_a:tzone)
    bat.insert($1748,$1751,$1754);	# 968 BKCinsert_bun ($1755:bat[:oid,:daytime])<-($1748:bat[:oid,:daytime])($1751:oid)($1754:daytime)
catch MALexception;	# 969  (MALexception:str) jump 970
exit MALexception;	# 970  (MALexception:str)
    redo ($1750,$1751,$1752):= chopper.hasMoreElements(timestamp_bat);	# 971 CHPbunHasMoreElements ($1750:lng)($1751:oid)($1752:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 967
exit ($1750,$1751,$1752);	# 972  ($1750:lng)($1751:oid)($1752:timestamp)
    ci_a:bat[:oid,:daytime]  := $1748;	# 973  (ci_a:bat[:oid,:daytime])<-($1748:bat[:oid,:daytime])
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");	# 974 IOprint_val ($927:int)<-($928:str)
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);	# 975 IOtable (di_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(th_a:bat[:oid,:date])(wh_a:bat[:oid,:daytime])(yh_a:bat[:oid,:date])(ci_a:bat[:oid,:daytime])
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 	# 976  ($931:str)
    ei_a := calc.*(60,1000);	# 977 CALCbinaryMULintint (ei_a:int)<-($933:int)($934:int)
    fi_a := calc.*(60,ei_a);	# 978 CALCbinaryMULintint (fi_a:int)<-($933:int)(ei_a:int)
    gi_a := calc.*(23,fi_a);	# 979 CALCbinaryMULintint (gi_a:int)<-($937:int)(fi_a:int)
    hi_a := calc.lng(gi_a);	# 980 CALCint2lng (hi_a:lng)<-(gi_a:int)
    $1760 := bbp.new(:oid,:timestamp);	# 981 CMDBATnew ($1760:bat[:oid,:timestamp])<-($1361:oid)($1666:timestamp)
barrier ($1762,$1763,$1764):= chopper.newIterator(timestamp_bat);	# 982 CHPbunIterator ($1762:lng)($1763:oid)($1764:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 988
    $1766 := mtime.add($1764,hi_a);	# 983 MTIMEtimestamp_add ($1766:timestamp)<-($1764:timestamp)(hi_a:lng)
    bat.insert($1760,$1763,$1766);	# 984 BKCinsert_bun ($1767:bat[:oid,:timestamp])<-($1760:bat[:oid,:timestamp])($1763:oid)($1766:timestamp)
catch MALexception;	# 985  (MALexception:str) jump 986
exit MALexception;	# 986  (MALexception:str)
    redo ($1762,$1763,$1764):= chopper.hasMoreElements(timestamp_bat);	# 987 CHPbunHasMoreElements ($1762:lng)($1763:oid)($1764:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 983
exit ($1762,$1763,$1764);	# 988  ($1762:lng)($1763:oid)($1764:timestamp)
    timestamp_plus:bat[:oid,:timestamp]  := $1760;	# 989  (timestamp_plus:bat[:oid,:timestamp])<-($1760:bat[:oid,:timestamp])
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 	# 990  ($942:str)
    ii_a := calc.*(-60,1000);	# 991 CALCbinaryMULintint (ii_a:int)<-($944:int)($934:int)
    ji_a := calc.lng(ii_a);	# 992 CALCint2lng (ji_a:lng)<-(ii_a:int)
    $1772 := bbp.new(:oid,:timestamp);	# 993 CMDBATnew ($1772:bat[:oid,:timestamp])<-($1361:oid)($1666:timestamp)
barrier ($1774,$1775,$1776):= chopper.newIterator(timestamp_bat);	# 994 CHPbunIterator ($1774:lng)($1775:oid)($1776:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 1000
    $1778 := mtime.add($1776,ji_a);	# 995 MTIMEtimestamp_add ($1778:timestamp)<-($1776:timestamp)(ji_a:lng)
    bat.insert($1772,$1775,$1778);	# 996 BKCinsert_bun ($1779:bat[:oid,:timestamp])<-($1772:bat[:oid,:timestamp])($1775:oid)($1778:timestamp)
catch MALexception;	# 997  (MALexception:str) jump 998
exit MALexception;	# 998  (MALexception:str)
    redo ($1774,$1775,$1776):= chopper.hasMoreElements(timestamp_bat);	# 999 CHPbunHasMoreElements ($1774:lng)($1775:oid)($1776:timestamp)<-(timestamp_bat:bat[:oid,:timestamp]) jump 995
exit ($1774,$1775,$1776);	# 1000  ($1774:lng)($1775:oid)($1776:timestamp)
    timestamp_minus:bat[:oid,:timestamp]  := $1772;	# 1001  (timestamp_minus:bat[:oid,:timestamp])<-($1772:bat[:oid,:timestamp])
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 	# 1002  ($948:str)
    ki_a := bat.setColumn(timestamp_bat,"timestamp");	# 1003 BKCsetColumn (ki_a:bat[:oid,:timestamp])<-(timestamp_bat:bat[:oid,:timestamp])($950:str)
#io.print(timestamp_bat.bat.setColumn("timestamp"), 	# 1004  ($952:str)
    li_a := bat.setColumn(timestamp_plus,"plus23");	# 1005 BKCsetColumn (li_a:bat[:oid,:timestamp])<-(timestamp_plus:bat[:oid,:timestamp])($954:str)
#	timestamp_plus.bat.setColumn("plus23"), 	# 1006  ($956:str)
    mi_a := bat.setColumn(timestamp_minus,"min1");	# 1007 BKCsetColumn (mi_a:bat[:oid,:timestamp])<-(timestamp_minus:bat[:oid,:timestamp])($958:str)
#	timestamp_minus.bat.setColumn("min1"), 	# 1008  ($960:str)
    $1784 := bbp.new(:oid,:lng);	# 1009 CMDBATnew ($1784:bat[:oid,:lng])<-($1361:oid)($1785:lng)
barrier ($1787,$1788,$1789):= chopper.newIterator(timestamp_plus);	# 1010 CHPbunIterator ($1787:lng)($1788:oid)($1789:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1017
    $1791 := algebra.find(timestamp_minus,$1788);	# 1011 ALGfind ($1791:timestamp)<-(timestamp_minus:bat[:oid,:timestamp])($1788:oid)
    $1793 := mtime.diff($1789,$1791);	# 1012 MTIMEtimestamp_diff ($1793:lng)<-($1789:timestamp)($1791:timestamp)
    bat.insert($1784,$1788,$1793);	# 1013 BKCinsert_bun ($1794:bat[:oid,:lng])<-($1784:bat[:oid,:lng])($1788:oid)($1793:lng)
catch MALexception;	# 1014  (MALexception:str) jump 1015
exit MALexception;	# 1015  (MALexception:str)
    redo ($1787,$1788,$1789):= chopper.hasMoreElements(timestamp_plus);	# 1016 CHPbunHasMoreElements ($1787:lng)($1788:oid)($1789:timestamp)<-(timestamp_plus:bat[:oid,:timestamp]) jump 1011
exit ($1787,$1788,$1789);	# 1017  ($1787:lng)($1788:oid)($1789:timestamp)
    ni_a:bat[:oid,:lng]  := $1784;	# 1018  (ni_a:bat[:oid,:lng])<-($1784:bat[:oid,:lng])
    oi_a := calc.*(60,1000);	# 1019 CALCbinaryMULintint (oi_a:int)<-($933:int)($934:int)
    pi_a := calc.*(60,oi_a);	# 1020 CALCbinaryMULintint (pi_a:int)<-($933:int)(oi_a:int)
    qi_a := calc.lng(pi_a);	# 1021 CALCint2lng (qi_a:lng)<-(pi_a:int)
    ri_a := batcalc./(ni_a,qi_a);	# 1022 CMDbatDIVcst (ri_a:bat[:oid,:lng])<-(ni_a:bat[:oid,:lng])(qi_a:lng)
    si_a := bat.setColumn(ri_a,"diff");	# 1023 BKCsetColumn (si_a:bat[:oid,:lng])<-(ri_a:bat[:oid,:lng])($968:str)
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");	# 1024 IOprint_val ($969:int)<-($970:str)
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);	# 1025 IOtable (ti_a:int)<-(timestamp_bat:bat[:oid,:timestamp])(timestamp_plus:bat[:oid,:timestamp])(timestamp_minus:bat[:oid,:timestamp])(ri_a:bat[:oid,:lng])
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 	# 1026  ($973:str)
    ui_a:tzone  := algebra.find(timezones,"West/Europe");	# 1027 ALGfind (ui_a:tzone)<-(timezones:bat[:str,:tzone])($975:str)
    $1799 := bbp.new(:int,:timestamp);	# 1028 CMDBATnew ($1799:bat[:int,:timestamp])<-($1024:int)($1800:timestamp)
barrier ($1802,$1803,$1804):= chopper.newIterator(date_seq);	# 1029 CHPbunIterator ($1802:lng)($1803:int)($1804:date)<-(date_seq:bat[:int,:date]) jump 1035
    $1806 := mtime.timestamp($1804,daytime_00,ui_a);	# 1030 MTIMEtimestamp_create ($1806:timestamp)<-($1804:date)(daytime_00:daytime)(ui_a:tzone)
    bat.insert($1799,$1803,$1806);	# 1031 BKCinsert_bun ($1807:bat[:int,:timestamp])<-($1799:bat[:int,:timestamp])($1803:int)($1806:timestamp)
catch MALexception;	# 1032  (MALexception:str) jump 1033
exit MALexception;	# 1033  (MALexception:str)
    redo ($1802,$1803,$1804):= chopper.hasMoreElements(date_seq);	# 1034 CHPbunHasMoreElements ($1802:lng)($1803:int)($1804:date)<-(date_seq:bat[:int,:date]) jump 1030
exit ($1802,$1803,$1804);	# 1035  ($1802:lng)($1803:int)($1804:date)
    timestamp_eur:bat[:int,:timestamp]  := $1799;	# 1036  (timestamp_eur:bat[:int,:timestamp])<-($1799:bat[:int,:timestamp])
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 	# 1037  ($979:str)
    vi_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1038 ALGfind (vi_a:tzone)<-(timezones:bat[:str,:tzone])($981:str)
    $1812 := bbp.new(:int,:timestamp);	# 1039 CMDBATnew ($1812:bat[:int,:timestamp])<-($1024:int)($1800:timestamp)
barrier ($1814,$1815,$1816):= chopper.newIterator(date_seq);	# 1040 CHPbunIterator ($1814:lng)($1815:int)($1816:date)<-(date_seq:bat[:int,:date]) jump 1046
    $1818 := mtime.timestamp($1816,daytime_00,vi_a);	# 1041 MTIMEtimestamp_create ($1818:timestamp)<-($1816:date)(daytime_00:daytime)(vi_a:tzone)
    bat.insert($1812,$1815,$1818);	# 1042 BKCinsert_bun ($1819:bat[:int,:timestamp])<-($1812:bat[:int,:timestamp])($1815:int)($1818:timestamp)
catch MALexception;	# 1043  (MALexception:str) jump 1044
exit MALexception;	# 1044  (MALexception:str)
    redo ($1814,$1815,$1816):= chopper.hasMoreElements(date_seq);	# 1045 CHPbunHasMoreElements ($1814:lng)($1815:int)($1816:date)<-(date_seq:bat[:int,:date]) jump 1041
exit ($1814,$1815,$1816);	# 1046  ($1814:lng)($1815:int)($1816:date)
    timestamp_bra:bat[:int,:timestamp]  := $1812;	# 1047  (timestamp_bra:bat[:int,:timestamp])<-($1812:bat[:int,:timestamp])
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 	# 1048  ($984:str)
    wi_a := bat.setColumn(date_seq,"date");	# 1049 BKCsetColumn (wi_a:bat[:int,:date])<-(date_seq:bat[:int,:date])($986:str)
#io.print(date_seq.bat.setColumn("date"),  	# 1050  ($988:str)
    $1824 := bbp.new(:int,:int);	# 1051 CMDBATnew ($1824:bat[:int,:int])<-($1024:int)($1024:int)
barrier ($1826,$1827,$1828):= chopper.newIterator(date_seq);	# 1052 CHPbunIterator ($1826:lng)($1827:int)($1828:date)<-(date_seq:bat[:int,:date]) jump 1058
    $1830 := mtime.dayofweek($1828);	# 1053 MTIMEdate_extract_dayofweek ($1830:int)<-($1828:date)
    bat.insert($1824,$1827,$1830);	# 1054 BKCinsert_bun ($1831:bat[:int,:int])<-($1824:bat[:int,:int])($1827:int)($1830:int)
catch MALexception;	# 1055  (MALexception:str) jump 1056
exit MALexception;	# 1056  (MALexception:str)
    redo ($1826,$1827,$1828):= chopper.hasMoreElements(date_seq);	# 1057 CHPbunHasMoreElements ($1826:lng)($1827:int)($1828:date)<-(date_seq:bat[:int,:date]) jump 1053
exit ($1826,$1827,$1828);	# 1058  ($1826:lng)($1827:int)($1828:date)
    xi_a:bat[:int,:int]  := $1824;	# 1059  (xi_a:bat[:int,:int])<-($1824:bat[:int,:int])
    $1836 := bbp.new(:int,:str);	# 1060 CMDBATnew ($1836:bat[:int,:str])<-($1024:int)($1023:str)
barrier ($1838,$1839,$1840):= chopper.newIterator(xi_a);	# 1061 CHPbunIterator ($1838:lng)($1839:int)($1840:int)<-(xi_a:bat[:int,:int]) jump 1067
    $1842 := mtime.dayname($1840);	# 1062 MTIMEday_to_str ($1842:str)<-($1840:int)
    bat.insert($1836,$1839,$1842);	# 1063 BKCinsert_bun ($1843:bat[:int,:str])<-($1836:bat[:int,:str])($1839:int)($1842:str)
catch MALexception;	# 1064  (MALexception:str) jump 1065
exit MALexception;	# 1065  (MALexception:str)
    redo ($1838,$1839,$1840):= chopper.hasMoreElements(xi_a);	# 1066 CHPbunHasMoreElements ($1838:lng)($1839:int)($1840:int)<-(xi_a:bat[:int,:int]) jump 1062
exit ($1838,$1839,$1840);	# 1067  ($1838:lng)($1839:int)($1840:int)
    yi_a:bat[:int,:str]  := $1836;	# 1068  (yi_a:bat[:int,:str])<-($1836:bat[:int,:str])
    aj_a := bat.setColumn(yi_a,"day");	# 1069 BKCsetColumn (aj_a:bat[:int,:str])<-(yi_a:bat[:int,:str])($994:str)
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 	# 1070  ($996:str)
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");	# 1071 BKCsetColumn (bj_a:bat[:int,:timestamp])<-(timestamp_eur:bat[:int,:timestamp])($975:str)
#	timestamp_eur.bat.setColumn("West/Europe"), 	# 1072  ($999:str)
    cj_a:tzone  := algebra.find(timezones,"West/Europe");	# 1073 ALGfind (cj_a:tzone)<-(timezones:bat[:str,:tzone])($975:str)
    $1848 := bbp.new(:int,:bit);	# 1074 CMDBATnew ($1848:bat[:int,:bit])<-($1024:int)($1849:bit)
barrier ($1851,$1852,$1853):= chopper.newIterator(timestamp_eur);	# 1075 CHPbunIterator ($1851:lng)($1852:int)($1853:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1081
    $1855 := mtime.dst($1853,cj_a);	# 1076 MTIMEtimestamp_inside_dst ($1855:bit)<-($1853:timestamp)(cj_a:tzone)
    bat.insert($1848,$1852,$1855);	# 1077 BKCinsert_bun ($1856:bat[:int,:bit])<-($1848:bat[:int,:bit])($1852:int)($1855:bit)
catch MALexception;	# 1078  (MALexception:str) jump 1079
exit MALexception;	# 1079  (MALexception:str)
    redo ($1851,$1852,$1853):= chopper.hasMoreElements(timestamp_eur);	# 1080 CHPbunHasMoreElements ($1851:lng)($1852:int)($1853:timestamp)<-(timestamp_eur:bat[:int,:timestamp]) jump 1076
exit ($1851,$1852,$1853);	# 1081  ($1851:lng)($1852:int)($1853:timestamp)
    dj_a:bat[:int,:bit]  := $1848;	# 1082  (dj_a:bat[:int,:bit])<-($1848:bat[:int,:bit])
    ej_a := bat.setColumn(dj_a,"dst");	# 1083 BKCsetColumn (ej_a:bat[:int,:bit])<-(dj_a:bat[:int,:bit])($1004:str)
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 	# 1084  ($1006:str)
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");	# 1085 BKCsetColumn (fj_a:bat[:int,:timestamp])<-(timestamp_bra:bat[:int,:timestamp])($981:str)
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 	# 1086  ($1009:str)
    gj_a:tzone  := algebra.find(timezones,"Andes/Brazil");	# 1087 ALGfind (gj_a:tzone)<-(timezones:bat[:str,:tzone])($981:str)
    $1861 := bbp.new(:int,:bit);	# 1088 CMDBATnew ($1861:bat[:int,:bit])<-($1024:int)($1849:bit)
barrier ($1863,$1864,$1865):= chopper.newIterator(timestamp_bra);	# 1089 CHPbunIterator ($1863:lng)($1864:int)($1865:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1095
    $1867 := mtime.dst($1865,gj_a);	# 1090 MTIMEtimestamp_inside_dst ($1867:bit)<-($1865:timestamp)(gj_a:tzone)
    bat.insert($1861,$1864,$1867);	# 1091 BKCinsert_bun ($1868:bat[:int,:bit])<-($1861:bat[:int,:bit])($1864:int)($1867:bit)
catch MALexception;	# 1092  (MALexception:str) jump 1093
exit MALexception;	# 1093  (MALexception:str)
    redo ($1863,$1864,$1865):= chopper.hasMoreElements(timestamp_bra);	# 1094 CHPbunHasMoreElements ($1863:lng)($1864:int)($1865:timestamp)<-(timestamp_bra:bat[:int,:timestamp]) jump 1090
exit ($1863,$1864,$1865);	# 1095  ($1863:lng)($1864:int)($1865:timestamp)
    hj_a:bat[:int,:bit]  := $1861;	# 1096  (hj_a:bat[:int,:bit])<-($1861:bat[:int,:bit])
    ij_a := bat.setColumn(hj_a,"dst");	# 1097 BKCsetColumn (ij_a:bat[:int,:bit])<-(hj_a:bat[:int,:bit])($1004:str)
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");	# 1098 IOprint_val ($1013:int)<-($1014:str)
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);	# 1099 IOtable (jj_a:int)<-(date_seq:bat[:int,:date])(yi_a:bat[:int,:str])(timestamp_eur:bat[:int,:timestamp])(dj_a:bat[:int,:bit])(timestamp_bra:bat[:int,:timestamp])(hj_a:bat[:int,:bit])
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 	# 1100  ($1018:str)
#quit; 	# 1101  ($1020:str)
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 	# 1102  ($1022:str)
end main;	# 1103  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
#-----------------------------------------------------------------------------------------------------------------#
# h	tzone													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  nil,		  nil,		  nil	  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  nil,		  nil,		  nil	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  nil,				  nil,		  nil		  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			timezones											  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	tmp_66		American Samoa	tmp_68		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01 23:59:59.999,	  2000-01-02 22:59:59.999,	  2000-01-01 23:58:59.999,	  23	  ]
[ 1@0,	  5000-01-01 22:59:00.000,	  5000-01-02 21:59:00.000,	  5000-01-01 22:58:00.000,	  23	  ]
[ 2@0,	  1968-02-28 23:00:00.000,	  1968-02-29 22:00:00.000,	  1968-02-28 22:59:00.000,	  23	  ]
[ 3@0,	  1-03-01 21:59:59.000,		  1-03-02 20:59:59.000,		  1-03-01 21:58:59.000,		  23	  ]
[ 4@0,	  -5867411-01-01 00:00:00.000,	  -5867411-01-01 23:00:00.000,	  nil,				  nil	  ]
[ 5@0,	  -768-10-01 01:37:00.000,	  -768-10-02 00:37:00.000,	  -768-10-01 01:36:00.000,	  23	  ]
[ 6@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 7@0,	  -1999-05-31 03:49:02.999,	  -1999-06-01 02:49:02.999,	  -1999-05-31 03:48:02.999,	  23	  ]
[ 8@0,	  2000-07-15 20:24:42.999,	  2000-07-16 19:24:42.999,	  2000-07-15 20:23:42.999,	  23	  ]
[ 9@0,	  1999-09-01 17:53:38.999,	  1999-09-02 16:53:38.999,	  1999-09-01 17:52:38.999,	  23	  ]
[ 10@0,	  1998-12-01 14:15:34.999,	  1998-12-02 13:15:34.999,	  1998-12-01 14:14:34.999,	  23	  ]
[ 11@0,	  1953-04-30 07:35:27.999,	  1953-05-01 06:35:27.999,	  1953-04-30 07:34:27.999,	  23	  ]
[ 12@0,	  5867411-12-31 22:59:59.999,	  nil,				  5867411-12-31 22:58:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-23 22:59:59.999,	  false,  1998-12-24 02:59:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-24 22:59:59.999,	  false,  1998-12-25 02:59:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-25 22:59:59.999,	  false,  1998-12-26 02:59:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-26 22:59:59.999,	  false,  1998-12-27 02:59:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-27 22:59:59.999,	  false,  1998-12-28 02:59:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-28 22:59:59.999,	  false,  1998-12-29 02:59:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-29 22:59:59.999,	  false,  1998-12-30 02:59:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-30 22:59:59.999,	  false,  1998-12-31 02:59:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-31 22:59:59.999,	  false,  1999-01-01 02:59:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1999-01-01 22:59:59.999,	  false,  1999-01-02 02:59:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1999-01-02 22:59:59.999,	  false,  1999-01-03 02:59:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-03 22:59:59.999,	  false,  1999-01-04 02:59:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-04 22:59:59.999,	  false,  1999-01-05 02:59:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-05 22:59:59.999,	  false,  1999-01-06 02:59:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-06 22:59:59.999,	  false,  1999-01-07 02:59:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-07 22:59:59.999,	  false,  1999-01-08 02:59:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-08 22:59:59.999,	  false,  1999-01-09 02:59:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-09 22:59:59.999,	  false,  1999-01-10 02:59:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-10 22:59:59.999,	  false,  1999-01-11 02:59:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-11 22:59:59.999,	  false,  1999-01-12 02:59:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-12 22:59:59.999,	  false,  1999-01-13 02:59:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-13 22:59:59.999,	  false,  1999-01-14 02:59:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-14 22:59:59.999,	  false,  1999-01-15 02:59:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-15 22:59:59.999,	  false,  1999-01-16 02:59:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-16 22:59:59.999,	  false,  1999-01-17 02:59:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-17 22:59:59.999,	  false,  1999-01-18 02:59:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-18 22:59:59.999,	  false,  1999-01-19 02:59:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-19 22:59:59.999,	  false,  1999-01-20 02:59:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-20 22:59:59.999,	  false,  1999-01-21 02:59:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-21 22:59:59.999,	  false,  1999-01-22 02:59:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-22 22:59:59.999,	  false,  1999-01-23 02:59:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-23 22:59:59.999,	  false,  1999-01-24 02:59:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-24 22:59:59.999,	  false,  1999-01-25 02:59:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-25 22:59:59.999,	  false,  1999-01-26 02:59:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-26 22:59:59.999,	  false,  1999-01-27 02:59:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-27 22:59:59.999,	  false,  1999-01-28 02:59:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-28 22:59:59.999,	  false,  1999-01-29 02:59:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-29 22:59:59.999,	  false,  1999-01-30 02:59:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-30 22:59:59.999,	  false,  1999-01-31 02:59:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-31 22:59:59.999,	  false,  1999-02-01 02:59:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-02-01 22:59:59.999,	  false,  1999-02-02 02:59:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-02-02 22:59:59.999,	  false,  1999-02-03 02:59:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-03 22:59:59.999,	  false,  1999-02-04 02:59:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-04 22:59:59.999,	  false,  1999-02-05 02:59:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-05 22:59:59.999,	  false,  1999-02-06 02:59:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-06 22:59:59.999,	  false,  1999-02-07 02:59:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-07 22:59:59.999,	  false,  1999-02-08 02:59:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-08 22:59:59.999,	  false,  1999-02-09 02:59:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-09 22:59:59.999,	  false,  1999-02-10 02:59:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-10 22:59:59.999,	  false,  1999-02-11 02:59:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-11 22:59:59.999,	  false,  1999-02-12 02:59:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-12 22:59:59.999,	  false,  1999-02-13 02:59:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-13 22:59:59.999,	  false,  1999-02-14 02:59:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-14 22:59:59.999,	  false,  1999-02-15 02:59:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-15 22:59:59.999,	  false,  1999-02-16 02:59:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-16 22:59:59.999,	  false,  1999-02-17 02:59:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-17 22:59:59.999,	  false,  1999-02-18 02:59:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-18 22:59:59.999,	  false,  1999-02-19 02:59:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-19 22:59:59.999,	  false,  1999-02-20 02:59:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-20 22:59:59.999,	  false,  1999-02-21 02:59:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-21 22:59:59.999,	  false,  1999-02-22 02:59:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-22 22:59:59.999,	  false,  1999-02-23 02:59:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-23 22:59:59.999,	  false,  1999-02-24 02:59:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-24 22:59:59.999,	  false,  1999-02-25 02:59:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-25 22:59:59.999,	  false,  1999-02-26 02:59:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-26 22:59:59.999,	  false,  1999-02-27 02:59:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-27 22:59:59.999,	  false,  1999-02-28 02:59:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-28 22:59:59.999,	  false,  1999-03-01 02:59:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-03-01 22:59:59.999,	  false,  1999-03-02 02:59:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-03-02 22:59:59.999,	  false,  1999-03-03 02:59:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-03 22:59:59.999,	  false,  1999-03-04 02:59:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-04 22:59:59.999,	  false,  1999-03-05 02:59:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-05 22:59:59.999,	  false,  1999-03-06 02:59:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-06 22:59:59.999,	  false,  1999-03-07 02:59:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-07 22:59:59.999,	  false,  1999-03-08 02:59:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-08 22:59:59.999,	  false,  1999-03-09 02:59:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-09 22:59:59.999,	  false,  1999-03-10 02:59:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-10 22:59:59.999,	  false,  1999-03-11 02:59:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-11 22:59:59.999,	  false,  1999-03-12 02:59:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-12 22:59:59.999,	  false,  1999-03-13 02:59:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-13 22:59:59.999,	  false,  1999-03-14 02:59:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-14 22:59:59.999,	  false,  1999-03-15 02:59:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-15 22:59:59.999,	  false,  1999-03-16 02:59:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-16 22:59:59.999,	  false,  1999-03-17 02:59:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-17 22:59:59.999,	  false,  1999-03-18 02:59:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-18 22:59:59.999,	  false,  1999-03-19 02:59:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-19 22:59:59.999,	  false,  1999-03-20 02:59:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-20 22:59:59.999,	  false,  1999-03-21 02:59:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-21 22:59:59.999,	  false,  1999-03-22 02:59:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-22 22:59:59.999,	  false,  1999-03-23 02:59:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-23 22:59:59.999,	  false,  1999-03-24 02:59:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-24 22:59:59.999,	  false,  1999-03-25 02:59:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-25 22:59:59.999,	  false,  1999-03-26 02:59:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-26 22:59:59.999,	  false,  1999-03-27 02:59:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-27 22:59:59.999,	  false,  1999-03-28 02:59:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-28 21:59:59.999,	  true,	  1999-03-29 03:59:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-29 21:59:59.999,	  true,	  1999-03-30 03:59:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-30 21:59:59.999,	  true,	  1999-03-31 03:59:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-31 21:59:59.999,	  true,	  1999-04-01 03:59:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-04-01 21:59:59.999,	  true,	  1999-04-02 03:59:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-04-02 21:59:59.999,	  true,	  1999-04-03 03:59:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-03 21:59:59.999,	  true,	  1999-04-04 03:59:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-04 21:59:59.999,	  true,	  1999-04-05 03:59:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-05 21:59:59.999,	  true,	  1999-04-06 03:59:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-06 21:59:59.999,	  true,	  1999-04-07 03:59:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-07 21:59:59.999,	  true,	  1999-04-08 03:59:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-08 21:59:59.999,	  true,	  1999-04-09 03:59:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-09 21:59:59.999,	  true,	  1999-04-10 03:59:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-10 21:59:59.999,	  true,	  1999-04-11 03:59:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-11 21:59:59.999,	  true,	  1999-04-12 03:59:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-12 21:59:59.999,	  true,	  1999-04-13 03:59:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-13 21:59:59.999,	  true,	  1999-04-14 03:59:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-14 21:59:59.999,	  true,	  1999-04-15 03:59:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-15 21:59:59.999,	  true,	  1999-04-16 03:59:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-16 21:59:59.999,	  true,	  1999-04-17 03:59:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-17 21:59:59.999,	  true,	  1999-04-18 03:59:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-18 21:59:59.999,	  true,	  1999-04-19 03:59:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-19 21:59:59.999,	  true,	  1999-04-20 03:59:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-20 21:59:59.999,	  true,	  1999-04-21 03:59:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-21 21:59:59.999,	  true,	  1999-04-22 03:59:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-22 21:59:59.999,	  true,	  1999-04-23 03:59:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-23 21:59:59.999,	  true,	  1999-04-24 03:59:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-24 21:59:59.999,	  true,	  1999-04-25 03:59:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-25 21:59:59.999,	  true,	  1999-04-26 03:59:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-26 21:59:59.999,	  true,	  1999-04-27 03:59:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-27 21:59:59.999,	  true,	  1999-04-28 03:59:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-28 21:59:59.999,	  true,	  1999-04-29 03:59:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-29 21:59:59.999,	  true,	  1999-04-30 03:59:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-30 21:59:59.999,	  true,	  1999-05-01 03:59:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-05-01 21:59:59.999,	  true,	  1999-05-02 03:59:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-05-02 21:59:59.999,	  true,	  1999-05-03 03:59:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-03 21:59:59.999,	  true,	  1999-05-04 03:59:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-04 21:59:59.999,	  true,	  1999-05-05 03:59:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-05 21:59:59.999,	  true,	  1999-05-06 03:59:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-06 21:59:59.999,	  true,	  1999-05-07 03:59:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-07 21:59:59.999,	  true,	  1999-05-08 03:59:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-08 21:59:59.999,	  true,	  1999-05-09 03:59:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-09 21:59:59.999,	  true,	  1999-05-10 03:59:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-10 21:59:59.999,	  true,	  1999-05-11 03:59:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-11 21:59:59.999,	  true,	  1999-05-12 03:59:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-12 21:59:59.999,	  true,	  1999-05-13 03:59:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-13 21:59:59.999,	  true,	  1999-05-14 03:59:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-14 21:59:59.999,	  true,	  1999-05-15 03:59:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-15 21:59:59.999,	  true,	  1999-05-16 03:59:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-16 21:59:59.999,	  true,	  1999-05-17 03:59:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-17 21:59:59.999,	  true,	  1999-05-18 03:59:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-18 21:59:59.999,	  true,	  1999-05-19 03:59:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-19 21:59:59.999,	  true,	  1999-05-20 03:59:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-20 21:59:59.999,	  true,	  1999-05-21 03:59:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-21 21:59:59.999,	  true,	  1999-05-22 03:59:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-22 21:59:59.999,	  true,	  1999-05-23 03:59:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-23 21:59:59.999,	  true,	  1999-05-24 03:59:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-24 21:59:59.999,	  true,	  1999-05-25 03:59:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-25 21:59:59.999,	  true,	  1999-05-26 03:59:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-26 21:59:59.999,	  true,	  1999-05-27 03:59:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-27 21:59:59.999,	  true,	  1999-05-28 03:59:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-28 21:59:59.999,	  true,	  1999-05-29 03:59:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-29 21:59:59.999,	  true,	  1999-05-30 03:59:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-30 21:59:59.999,	  true,	  1999-05-31 03:59:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-31 21:59:59.999,	  true,	  1999-06-01 03:59:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-06-01 21:59:59.999,	  true,	  1999-06-02 03:59:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-06-02 21:59:59.999,	  true,	  1999-06-03 03:59:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-03 21:59:59.999,	  true,	  1999-06-04 03:59:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-04 21:59:59.999,	  true,	  1999-06-05 03:59:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-05 21:59:59.999,	  true,	  1999-06-06 03:59:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-06 21:59:59.999,	  true,	  1999-06-07 03:59:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-07 21:59:59.999,	  true,	  1999-06-08 03:59:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-08 21:59:59.999,	  true,	  1999-06-09 03:59:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-09 21:59:59.999,	  true,	  1999-06-10 03:59:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-10 21:59:59.999,	  true,	  1999-06-11 03:59:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-11 21:59:59.999,	  true,	  1999-06-12 03:59:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-12 21:59:59.999,	  true,	  1999-06-13 03:59:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-13 21:59:59.999,	  true,	  1999-06-14 03:59:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-14 21:59:59.999,	  true,	  1999-06-15 03:59:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-15 21:59:59.999,	  true,	  1999-06-16 03:59:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-16 21:59:59.999,	  true,	  1999-06-17 03:59:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-17 21:59:59.999,	  true,	  1999-06-18 03:59:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-18 21:59:59.999,	  true,	  1999-06-19 03:59:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-19 21:59:59.999,	  true,	  1999-06-20 03:59:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-20 21:59:59.999,	  true,	  1999-06-21 03:59:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-21 21:59:59.999,	  true,	  1999-06-22 03:59:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-22 21:59:59.999,	  true,	  1999-06-23 03:59:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-23 21:59:59.999,	  true,	  1999-06-24 03:59:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-24 21:59:59.999,	  true,	  1999-06-25 03:59:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-25 21:59:59.999,	  true,	  1999-06-26 03:59:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-26 21:59:59.999,	  true,	  1999-06-27 03:59:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-27 21:59:59.999,	  true,	  1999-06-28 03:59:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-28 21:59:59.999,	  true,	  1999-06-29 03:59:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-29 21:59:59.999,	  true,	  1999-06-30 03:59:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-30 21:59:59.999,	  true,	  1999-07-01 03:59:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-07-01 21:59:59.999,	  true,	  1999-07-02 03:59:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-07-02 21:59:59.999,	  true,	  1999-07-03 03:59:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-03 21:59:59.999,	  true,	  1999-07-04 03:59:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-04 21:59:59.999,	  true,	  1999-07-05 03:59:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-05 21:59:59.999,	  true,	  1999-07-06 03:59:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-06 21:59:59.999,	  true,	  1999-07-07 03:59:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-07 21:59:59.999,	  true,	  1999-07-08 03:59:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-08 21:59:59.999,	  true,	  1999-07-09 03:59:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-09 21:59:59.999,	  true,	  1999-07-10 03:59:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-10 21:59:59.999,	  true,	  1999-07-11 03:59:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-11 21:59:59.999,	  true,	  1999-07-12 03:59:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-12 21:59:59.999,	  true,	  1999-07-13 03:59:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-13 21:59:59.999,	  true,	  1999-07-14 03:59:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-14 21:59:59.999,	  true,	  1999-07-15 03:59:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-15 21:59:59.999,	  true,	  1999-07-16 03:59:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-16 21:59:59.999,	  true,	  1999-07-17 03:59:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-17 21:59:59.999,	  true,	  1999-07-18 03:59:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-18 21:59:59.999,	  true,	  1999-07-19 03:59:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-19 21:59:59.999,	  true,	  1999-07-20 03:59:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-20 21:59:59.999,	  true,	  1999-07-21 03:59:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-21 21:59:59.999,	  true,	  1999-07-22 03:59:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-22 21:59:59.999,	  true,	  1999-07-23 03:59:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-23 21:59:59.999,	  true,	  1999-07-24 03:59:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-24 21:59:59.999,	  true,	  1999-07-25 03:59:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-25 21:59:59.999,	  true,	  1999-07-26 03:59:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-26 21:59:59.999,	  true,	  1999-07-27 03:59:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-27 21:59:59.999,	  true,	  1999-07-28 03:59:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-28 21:59:59.999,	  true,	  1999-07-29 03:59:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-29 21:59:59.999,	  true,	  1999-07-30 03:59:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-30 21:59:59.999,	  true,	  1999-07-31 03:59:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-31 21:59:59.999,	  true,	  1999-08-01 03:59:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-08-01 21:59:59.999,	  true,	  1999-08-02 03:59:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-08-02 21:59:59.999,	  true,	  1999-08-03 03:59:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-03 21:59:59.999,	  true,	  1999-08-04 03:59:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-04 21:59:59.999,	  true,	  1999-08-05 03:59:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-05 21:59:59.999,	  true,	  1999-08-06 03:59:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-06 21:59:59.999,	  true,	  1999-08-07 03:59:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-07 21:59:59.999,	  true,	  1999-08-08 03:59:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-08 21:59:59.999,	  true,	  1999-08-09 03:59:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-09 21:59:59.999,	  true,	  1999-08-10 03:59:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-10 21:59:59.999,	  true,	  1999-08-11 03:59:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-11 21:59:59.999,	  true,	  1999-08-12 03:59:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-12 21:59:59.999,	  true,	  1999-08-13 03:59:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-13 21:59:59.999,	  true,	  1999-08-14 03:59:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-14 21:59:59.999,	  true,	  1999-08-15 03:59:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-15 21:59:59.999,	  true,	  1999-08-16 03:59:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-16 21:59:59.999,	  true,	  1999-08-17 03:59:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-17 21:59:59.999,	  true,	  1999-08-18 03:59:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-18 21:59:59.999,	  true,	  1999-08-19 03:59:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-19 21:59:59.999,	  true,	  1999-08-20 03:59:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-20 21:59:59.999,	  true,	  1999-08-21 03:59:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-21 21:59:59.999,	  true,	  1999-08-22 03:59:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-22 21:59:59.999,	  true,	  1999-08-23 03:59:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-23 21:59:59.999,	  true,	  1999-08-24 03:59:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-24 21:59:59.999,	  true,	  1999-08-25 03:59:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-25 21:59:59.999,	  true,	  1999-08-26 03:59:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-26 21:59:59.999,	  true,	  1999-08-27 03:59:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-27 21:59:59.999,	  true,	  1999-08-28 03:59:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-28 21:59:59.999,	  true,	  1999-08-29 03:59:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-29 21:59:59.999,	  true,	  1999-08-30 03:59:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-30 21:59:59.999,	  true,	  1999-08-31 03:59:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-31 21:59:59.999,	  true,	  1999-09-01 03:59:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-09-01 21:59:59.999,	  true,	  1999-09-02 03:59:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-09-02 21:59:59.999,	  true,	  1999-09-03 03:59:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-03 21:59:59.999,	  true,	  1999-09-04 03:59:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-04 21:59:59.999,	  true,	  1999-09-05 03:59:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-05 21:59:59.999,	  true,	  1999-09-06 03:59:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-06 21:59:59.999,	  true,	  1999-09-07 03:59:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-07 21:59:59.999,	  true,	  1999-09-08 03:59:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-08 21:59:59.999,	  true,	  1999-09-09 03:59:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-09 21:59:59.999,	  true,	  1999-09-10 03:59:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-10 21:59:59.999,	  true,	  1999-09-11 03:59:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-11 21:59:59.999,	  true,	  1999-09-12 03:59:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-12 21:59:59.999,	  true,	  1999-09-13 03:59:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-13 21:59:59.999,	  true,	  1999-09-14 03:59:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-14 21:59:59.999,	  true,	  1999-09-15 03:59:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-15 21:59:59.999,	  true,	  1999-09-16 03:59:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-16 21:59:59.999,	  true,	  1999-09-17 03:59:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-17 21:59:59.999,	  true,	  1999-09-18 03:59:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-18 21:59:59.999,	  true,	  1999-09-19 03:59:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-19 21:59:59.999,	  true,	  1999-09-20 03:59:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-20 21:59:59.999,	  true,	  1999-09-21 03:59:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-21 21:59:59.999,	  true,	  1999-09-22 03:59:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-22 21:59:59.999,	  true,	  1999-09-23 03:59:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-23 21:59:59.999,	  true,	  1999-09-24 03:59:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-24 21:59:59.999,	  true,	  1999-09-25 03:59:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-25 21:59:59.999,	  true,	  1999-09-26 03:59:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-26 21:59:59.999,	  true,	  1999-09-27 03:59:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-27 21:59:59.999,	  true,	  1999-09-28 03:59:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-28 21:59:59.999,	  true,	  1999-09-29 03:59:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-29 21:59:59.999,	  true,	  1999-09-30 03:59:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-30 21:59:59.999,	  true,	  1999-10-01 03:59:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-10-01 21:59:59.999,	  true,	  1999-10-02 03:59:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-10-02 21:59:59.999,	  true,	  1999-10-03 03:59:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-03 21:59:59.999,	  true,	  1999-10-04 03:59:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-04 21:59:59.999,	  true,	  1999-10-05 03:59:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-05 21:59:59.999,	  true,	  1999-10-06 03:59:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-06 21:59:59.999,	  true,	  1999-10-07 03:59:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-07 21:59:59.999,	  true,	  1999-10-08 03:59:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-08 21:59:59.999,	  true,	  1999-10-09 03:59:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-09 21:59:59.999,	  true,	  1999-10-10 03:59:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-10 21:59:59.999,	  true,	  1999-10-11 03:59:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-11 21:59:59.999,	  true,	  1999-10-12 03:59:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-12 21:59:59.999,	  true,	  1999-10-13 03:59:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-13 21:59:59.999,	  true,	  1999-10-14 03:59:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-14 21:59:59.999,	  true,	  1999-10-15 03:59:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-15 21:59:59.999,	  true,	  1999-10-16 03:59:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-16 21:59:59.999,	  true,	  1999-10-17 03:59:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-17 21:59:59.999,	  true,	  1999-10-18 03:59:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-18 21:59:59.999,	  true,	  1999-10-19 03:59:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-19 21:59:59.999,	  true,	  1999-10-20 03:59:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-20 21:59:59.999,	  true,	  1999-10-21 03:59:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-21 21:59:59.999,	  true,	  1999-10-22 03:59:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-22 21:59:59.999,	  true,	  1999-10-23 03:59:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-23 21:59:59.999,	  true,	  1999-10-24 03:59:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-24 21:59:59.999,	  true,	  1999-10-25 03:59:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-25 21:59:59.999,	  true,	  1999-10-26 03:59:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-26 21:59:59.999,	  true,	  1999-10-27 03:59:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-27 21:59:59.999,	  true,	  1999-10-28 03:59:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-28 21:59:59.999,	  true,	  1999-10-29 03:59:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-29 21:59:59.999,	  true,	  1999-10-30 03:59:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-30 21:59:59.999,	  true,	  1999-10-31 03:59:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-31 22:59:59.999,	  false,  1999-11-01 02:59:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-11-01 22:59:59.999,	  false,  1999-11-02 02:59:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-11-02 22:59:59.999,	  false,  1999-11-03 02:59:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-03 22:59:59.999,	  false,  1999-11-04 02:59:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-04 22:59:59.999,	  false,  1999-11-05 02:59:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-05 22:59:59.999,	  false,  1999-11-06 02:59:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-06 22:59:59.999,	  false,  1999-11-07 02:59:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-07 22:59:59.999,	  false,  1999-11-08 02:59:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-08 22:59:59.999,	  false,  1999-11-09 02:59:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-09 22:59:59.999,	  false,  1999-11-10 02:59:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-10 22:59:59.999,	  false,  1999-11-11 02:59:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-11 22:59:59.999,	  false,  1999-11-12 02:59:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-12 22:59:59.999,	  false,  1999-11-13 02:59:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-13 22:59:59.999,	  false,  1999-11-14 02:59:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-14 22:59:59.999,	  false,  1999-11-15 02:59:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-15 22:59:59.999,	  false,  1999-11-16 02:59:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-16 22:59:59.999,	  false,  1999-11-17 02:59:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-17 22:59:59.999,	  false,  1999-11-18 02:59:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-18 22:59:59.999,	  false,  1999-11-19 02:59:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-19 22:59:59.999,	  false,  1999-11-20 02:59:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-20 22:59:59.999,	  false,  1999-11-21 02:59:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-21 22:59:59.999,	  false,  1999-11-22 02:59:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-22 22:59:59.999,	  false,  1999-11-23 02:59:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-23 22:59:59.999,	  false,  1999-11-24 02:59:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-24 22:59:59.999,	  false,  1999-11-25 02:59:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-25 22:59:59.999,	  false,  1999-11-26 02:59:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-26 22:59:59.999,	  false,  1999-11-27 02:59:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-27 22:59:59.999,	  false,  1999-11-28 02:59:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-28 22:59:59.999,	  false,  1999-11-29 02:59:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-29 22:59:59.999,	  false,  1999-11-30 02:59:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-30 22:59:59.999,	  false,  1999-12-01 02:59:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-12-01 22:59:59.999,	  false,  1999-12-02 02:59:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-12-02 22:59:59.999,	  false,  1999-12-03 02:59:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-03 22:59:59.999,	  false,  1999-12-04 02:59:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-04 22:59:59.999,	  false,  1999-12-05 02:59:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-05 22:59:59.999,	  false,  1999-12-06 02:59:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-06 22:59:59.999,	  false,  1999-12-07 02:59:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-07 22:59:59.999,	  false,  1999-12-08 02:59:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-08 22:59:59.999,	  false,  1999-12-09 02:59:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-09 22:59:59.999,	  false,  1999-12-10 02:59:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-10 22:59:59.999,	  false,  1999-12-11 02:59:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-11 22:59:59.999,	  false,  1999-12-12 02:59:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-12 22:59:59.999,	  false,  1999-12-13 02:59:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-13 22:59:59.999,	  false,  1999-12-14 02:59:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-14 22:59:59.999,	  false,  1999-12-15 02:59:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-15 22:59:59.999,	  false,  1999-12-16 02:59:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-16 22:59:59.999,	  false,  1999-12-17 02:59:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-17 22:59:59.999,	  false,  1999-12-18 02:59:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-18 22:59:59.999,	  false,  1999-12-19 02:59:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-19 22:59:59.999,	  false,  1999-12-20 02:59:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-20 22:59:59.999,	  false,  1999-12-21 02:59:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-21 22:59:59.999,	  false,  1999-12-22 02:59:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-22 22:59:59.999,	  false,  1999-12-23 02:59:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-23 22:59:59.999,	  false,  1999-12-24 02:59:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-24 22:59:59.999,	  false,  1999-12-25 02:59:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-25 22:59:59.999,	  false,  1999-12-26 02:59:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-26 22:59:59.999,	  false,  1999-12-27 02:59:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-27 22:59:59.999,	  false,  1999-12-28 02:59:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-28 22:59:59.999,	  false,  1999-12-29 02:59:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-29 22:59:59.999,	  false,  1999-12-30 02:59:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-30 22:59:59.999,	  false,  1999-12-31 02:59:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-31 22:59:59.999,	  false,  2000-01-01 02:59:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  2000-01-01 22:59:59.999,	  false,  2000-01-02 02:59:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  2000-01-02 22:59:59.999,	  false,  2000-01-03 02:59:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-03 22:59:59.999,	  false,  2000-01-04 02:59:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-04 22:59:59.999,	  false,  2000-01-05 02:59:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-05 22:59:59.999,	  false,  2000-01-06 02:59:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-06 22:59:59.999,	  false,  2000-01-07 02:59:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-07 22:59:59.999,	  false,  2000-01-08 02:59:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-08 22:59:59.999,	  false,  2000-01-09 02:59:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-09 22:59:59.999,	  false,  2000-01-10 02:59:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-10 22:59:59.999,	  false,  2000-01-11 02:59:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-11 22:59:59.999,	  false,  2000-01-12 02:59:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-12 22:59:59.999,	  false,  2000-01-13 02:59:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-13 22:59:59.999,	  false,  2000-01-14 02:59:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-14 22:59:59.999,	  false,  2000-01-15 02:59:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-15 22:59:59.999,	  false,  2000-01-16 02:59:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-16 22:59:59.999,	  false,  2000-01-17 02:59:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-17 22:59:59.999,	  false,  2000-01-18 02:59:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-18 22:59:59.999,	  false,  2000-01-19 02:59:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-19 22:59:59.999,	  false,  2000-01-20 02:59:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-20 22:59:59.999,	  false,  2000-01-21 02:59:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-21 22:59:59.999,	  false,  2000-01-22 02:59:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-22 22:59:59.999,	  false,  2000-01-23 02:59:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-23 22:59:59.999,	  false,  2000-01-24 02:59:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-24 22:59:59.999,	  false,  2000-01-25 02:59:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-25 22:59:59.999,	  false,  2000-01-26 02:59:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-26 22:59:59.999,	  false,  2000-01-27 02:59:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-27 22:59:59.999,	  false,  2000-01-28 02:59:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-28 22:59:59.999,	  false,  2000-01-29 02:59:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-29 22:59:59.999,	  false,  2000-01-30 02:59:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-30 22:59:59.999,	  false,  2000-01-31 02:59:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-31 22:59:59.999,	  false,  2000-02-01 02:59:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-02-01 22:59:59.999,	  false,  2000-02-02 02:59:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-02-02 22:59:59.999,	  false,  2000-02-03 02:59:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-03 22:59:59.999,	  false,  2000-02-04 02:59:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-04 22:59:59.999,	  false,  2000-02-05 02:59:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-05 22:59:59.999,	  false,  2000-02-06 02:59:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-06 22:59:59.999,	  false,  2000-02-07 02:59:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-07 22:59:59.999,	  false,  2000-02-08 02:59:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-08 22:59:59.999,	  false,  2000-02-09 02:59:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-09 22:59:59.999,	  false,  2000-02-10 02:59:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-10 22:59:59.999,	  false,  2000-02-11 02:59:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-11 22:59:59.999,	  false,  2000-02-12 02:59:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-12 22:59:59.999,	  false,  2000-02-13 02:59:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-13 22:59:59.999,	  false,  2000-02-14 02:59:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-14 22:59:59.999,	  false,  2000-02-15 02:59:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-15 22:59:59.999,	  false,  2000-02-16 02:59:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-16 22:59:59.999,	  false,  2000-02-17 02:59:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-17 22:59:59.999,	  false,  2000-02-18 02:59:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-18 22:59:59.999,	  false,  2000-02-19 02:59:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-19 22:59:59.999,	  false,  2000-02-20 02:59:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-20 22:59:59.999,	  false,  2000-02-21 02:59:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-21 22:59:59.999,	  false,  2000-02-22 02:59:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-22 22:59:59.999,	  false,  2000-02-23 02:59:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-23 22:59:59.999,	  false,  2000-02-24 02:59:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-24 22:59:59.999,	  false,  2000-02-25 02:59:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-25 22:59:59.999,	  false,  2000-02-26 02:59:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-26 22:59:59.999,	  false,  2000-02-27 02:59:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-27 22:59:59.999,	  false,  2000-02-28 02:59:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-28 22:59:59.999,	  false,  2000-02-29 02:59:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-29 22:59:59.999,	  false,  2000-03-01 02:59:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-03-01 22:59:59.999,	  false,  2000-03-02 02:59:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-03-02 22:59:59.999,	  false,  2000-03-03 02:59:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-03 22:59:59.999,	  false,  2000-03-04 02:59:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-04 22:59:59.999,	  false,  2000-03-05 02:59:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-05 22:59:59.999,	  false,  2000-03-06 02:59:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-06 22:59:59.999,	  false,  2000-03-07 02:59:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-07 22:59:59.999,	  false,  2000-03-08 02:59:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-08 22:59:59.999,	  false,  2000-03-09 02:59:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-09 22:59:59.999,	  false,  2000-03-10 02:59:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-10 22:59:59.999,	  false,  2000-03-11 02:59:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-11 22:59:59.999,	  false,  2000-03-12 02:59:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-12 22:59:59.999,	  false,  2000-03-13 02:59:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-13 22:59:59.999,	  false,  2000-03-14 02:59:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-14 22:59:59.999,	  false,  2000-03-15 02:59:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-15 22:59:59.999,	  false,  2000-03-16 02:59:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-16 22:59:59.999,	  false,  2000-03-17 02:59:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-17 22:59:59.999,	  false,  2000-03-18 02:59:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-18 22:59:59.999,	  false,  2000-03-19 02:59:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-19 22:59:59.999,	  false,  2000-03-20 02:59:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-20 22:59:59.999,	  false,  2000-03-21 02:59:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-21 22:59:59.999,	  false,  2000-03-22 02:59:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-22 22:59:59.999,	  false,  2000-03-23 02:59:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-23 22:59:59.999,	  false,  2000-03-24 02:59:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-24 22:59:59.999,	  false,  2000-03-25 02:59:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-25 22:59:59.999,	  false,  2000-03-26 02:59:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-26 21:59:59.999,	  true,	  2000-03-27 03:59:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-27 21:59:59.999,	  true,	  2000-03-28 03:59:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-28 21:59:59.999,	  true,	  2000-03-29 03:59:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-29 21:59:59.999,	  true,	  2000-03-30 03:59:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-30 21:59:59.999,	  true,	  2000-03-31 03:59:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-31 21:59:59.999,	  true,	  2000-04-01 03:59:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-04-01 21:59:59.999,	  true,	  2000-04-02 03:59:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-04-02 21:59:59.999,	  true,	  2000-04-03 03:59:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-03 21:59:59.999,	  true,	  2000-04-04 03:59:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-04 21:59:59.999,	  true,	  2000-04-05 03:59:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-05 21:59:59.999,	  true,	  2000-04-06 03:59:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-06 21:59:59.999,	  true,	  2000-04-07 03:59:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-07 21:59:59.999,	  true,	  2000-04-08 03:59:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-08 21:59:59.999,	  true,	  2000-04-09 03:59:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-09 21:59:59.999,	  true,	  2000-04-10 03:59:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-10 21:59:59.999,	  true,	  2000-04-11 03:59:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-11 21:59:59.999,	  true,	  2000-04-12 03:59:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-12 21:59:59.999,	  true,	  2000-04-13 03:59:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-13 21:59:59.999,	  true,	  2000-04-14 03:59:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-14 21:59:59.999,	  true,	  2000-04-15 03:59:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-15 21:59:59.999,	  true,	  2000-04-16 03:59:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-16 21:59:59.999,	  true,	  2000-04-17 03:59:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-17 21:59:59.999,	  true,	  2000-04-18 03:59:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-18 21:59:59.999,	  true,	  2000-04-19 03:59:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-19 21:59:59.999,	  true,	  2000-04-20 03:59:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-20 21:59:59.999,	  true,	  2000-04-21 03:59:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-21 21:59:59.999,	  true,	  2000-04-22 03:59:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-22 21:59:59.999,	  true,	  2000-04-23 03:59:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-23 21:59:59.999,	  true,	  2000-04-24 03:59:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-24 21:59:59.999,	  true,	  2000-04-25 03:59:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-25 21:59:59.999,	  true,	  2000-04-26 03:59:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-26 21:59:59.999,	  true,	  2000-04-27 03:59:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-27 21:59:59.999,	  true,	  2000-04-28 03:59:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-28 21:59:59.999,	  true,	  2000-04-29 03:59:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-29 21:59:59.999,	  true,	  2000-04-30 03:59:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-30 21:59:59.999,	  true,	  2000-05-01 03:59:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-05-01 21:59:59.999,	  true,	  2000-05-02 03:59:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-05-02 21:59:59.999,	  true,	  2000-05-03 03:59:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-03 21:59:59.999,	  true,	  2000-05-04 03:59:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-04 21:59:59.999,	  true,	  2000-05-05 03:59:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-05 21:59:59.999,	  true,	  2000-05-06 03:59:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-06 21:59:59.999,	  true,	  2000-05-07 03:59:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-07 21:59:59.999,	  true,	  2000-05-08 03:59:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-08 21:59:59.999,	  true,	  2000-05-09 03:59:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-09 21:59:59.999,	  true,	  2000-05-10 03:59:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-10 21:59:59.999,	  true,	  2000-05-11 03:59:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-11 21:59:59.999,	  true,	  2000-05-12 03:59:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-12 21:59:59.999,	  true,	  2000-05-13 03:59:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-13 21:59:59.999,	  true,	  2000-05-14 03:59:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-14 21:59:59.999,	  true,	  2000-05-15 03:59:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-15 21:59:59.999,	  true,	  2000-05-16 03:59:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-16 21:59:59.999,	  true,	  2000-05-17 03:59:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-17 21:59:59.999,	  true,	  2000-05-18 03:59:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-18 21:59:59.999,	  true,	  2000-05-19 03:59:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-19 21:59:59.999,	  true,	  2000-05-20 03:59:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-20 21:59:59.999,	  true,	  2000-05-21 03:59:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-21 21:59:59.999,	  true,	  2000-05-22 03:59:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-22 21:59:59.999,	  true,	  2000-05-23 03:59:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-23 21:59:59.999,	  true,	  2000-05-24 03:59:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-24 21:59:59.999,	  true,	  2000-05-25 03:59:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-25 21:59:59.999,	  true,	  2000-05-26 03:59:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-26 21:59:59.999,	  true,	  2000-05-27 03:59:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-27 21:59:59.999,	  true,	  2000-05-28 03:59:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-28 21:59:59.999,	  true,	  2000-05-29 03:59:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-29 21:59:59.999,	  true,	  2000-05-30 03:59:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-30 21:59:59.999,	  true,	  2000-05-31 03:59:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-31 21:59:59.999,	  true,	  2000-06-01 03:59:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-06-01 21:59:59.999,	  true,	  2000-06-02 03:59:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-06-02 21:59:59.999,	  true,	  2000-06-03 03:59:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-03 21:59:59.999,	  true,	  2000-06-04 03:59:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-04 21:59:59.999,	  true,	  2000-06-05 03:59:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-05 21:59:59.999,	  true,	  2000-06-06 03:59:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-06 21:59:59.999,	  true,	  2000-06-07 03:59:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-07 21:59:59.999,	  true,	  2000-06-08 03:59:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-08 21:59:59.999,	  true,	  2000-06-09 03:59:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-09 21:59:59.999,	  true,	  2000-06-10 03:59:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-10 21:59:59.999,	  true,	  2000-06-11 03:59:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-11 21:59:59.999,	  true,	  2000-06-12 03:59:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-12 21:59:59.999,	  true,	  2000-06-13 03:59:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-13 21:59:59.999,	  true,	  2000-06-14 03:59:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-14 21:59:59.999,	  true,	  2000-06-15 03:59:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-15 21:59:59.999,	  true,	  2000-06-16 03:59:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-16 21:59:59.999,	  true,	  2000-06-17 03:59:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-17 21:59:59.999,	  true,	  2000-06-18 03:59:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-18 21:59:59.999,	  true,	  2000-06-19 03:59:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-19 21:59:59.999,	  true,	  2000-06-20 03:59:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-20 21:59:59.999,	  true,	  2000-06-21 03:59:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-21 21:59:59.999,	  true,	  2000-06-22 03:59:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-22 21:59:59.999,	  true,	  2000-06-23 03:59:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-23 21:59:59.999,	  true,	  2000-06-24 03:59:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-24 21:59:59.999,	  true,	  2000-06-25 03:59:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-25 21:59:59.999,	  true,	  2000-06-26 03:59:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-26 21:59:59.999,	  true,	  2000-06-27 03:59:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-27 21:59:59.999,	  true,	  2000-06-28 03:59:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-28 21:59:59.999,	  true,	  2000-06-29 03:59:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-29 21:59:59.999,	  true,	  2000-06-30 03:59:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-30 21:59:59.999,	  true,	  2000-07-01 03:59:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-07-01 21:59:59.999,	  true,	  2000-07-02 03:59:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-07-02 21:59:59.999,	  true,	  2000-07-03 03:59:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-03 21:59:59.999,	  true,	  2000-07-04 03:59:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-04 21:59:59.999,	  true,	  2000-07-05 03:59:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-05 21:59:59.999,	  true,	  2000-07-06 03:59:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-06 21:59:59.999,	  true,	  2000-07-07 03:59:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-07 21:59:59.999,	  true,	  2000-07-08 03:59:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-08 21:59:59.999,	  true,	  2000-07-09 03:59:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-09 21:59:59.999,	  true,	  2000-07-10 03:59:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-10 21:59:59.999,	  true,	  2000-07-11 03:59:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-11 21:59:59.999,	  true,	  2000-07-12 03:59:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-12 21:59:59.999,	  true,	  2000-07-13 03:59:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-13 21:59:59.999,	  true,	  2000-07-14 03:59:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-14 21:59:59.999,	  true,	  2000-07-15 03:59:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-15 21:59:59.999,	  true,	  2000-07-16 03:59:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-16 21:59:59.999,	  true,	  2000-07-17 03:59:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-17 21:59:59.999,	  true,	  2000-07-18 03:59:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-18 21:59:59.999,	  true,	  2000-07-19 03:59:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-19 21:59:59.999,	  true,	  2000-07-20 03:59:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-20 21:59:59.999,	  true,	  2000-07-21 03:59:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-21 21:59:59.999,	  true,	  2000-07-22 03:59:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-22 21:59:59.999,	  true,	  2000-07-23 03:59:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-23 21:59:59.999,	  true,	  2000-07-24 03:59:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-24 21:59:59.999,	  true,	  2000-07-25 03:59:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-25 21:59:59.999,	  true,	  2000-07-26 03:59:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-26 21:59:59.999,	  true,	  2000-07-27 03:59:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-27 21:59:59.999,	  true,	  2000-07-28 03:59:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-28 21:59:59.999,	  true,	  2000-07-29 03:59:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-29 21:59:59.999,	  true,	  2000-07-30 03:59:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-30 21:59:59.999,	  true,	  2000-07-31 03:59:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-31 21:59:59.999,	  true,	  2000-08-01 03:59:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-08-01 21:59:59.999,	  true,	  2000-08-02 03:59:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-08-02 21:59:59.999,	  true,	  2000-08-03 03:59:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-03 21:59:59.999,	  true,	  2000-08-04 03:59:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-04 21:59:59.999,	  true,	  2000-08-05 03:59:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-05 21:59:59.999,	  true,	  2000-08-06 03:59:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-06 21:59:59.999,	  true,	  2000-08-07 03:59:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-07 21:59:59.999,	  true,	  2000-08-08 03:59:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-08 21:59:59.999,	  true,	  2000-08-09 03:59:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-09 21:59:59.999,	  true,	  2000-08-10 03:59:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-10 21:59:59.999,	  true,	  2000-08-11 03:59:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-11 21:59:59.999,	  true,	  2000-08-12 03:59:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-12 21:59:59.999,	  true,	  2000-08-13 03:59:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-13 21:59:59.999,	  true,	  2000-08-14 03:59:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-14 21:59:59.999,	  true,	  2000-08-15 03:59:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-15 21:59:59.999,	  true,	  2000-08-16 03:59:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-16 21:59:59.999,	  true,	  2000-08-17 03:59:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-17 21:59:59.999,	  true,	  2000-08-18 03:59:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-18 21:59:59.999,	  true,	  2000-08-19 03:59:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-19 21:59:59.999,	  true,	  2000-08-20 03:59:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-20 21:59:59.999,	  true,	  2000-08-21 03:59:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-21 21:59:59.999,	  true,	  2000-08-22 03:59:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-22 21:59:59.999,	  true,	  2000-08-23 03:59:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-23 21:59:59.999,	  true,	  2000-08-24 03:59:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-24 21:59:59.999,	  true,	  2000-08-25 03:59:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-25 21:59:59.999,	  true,	  2000-08-26 03:59:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-26 21:59:59.999,	  true,	  2000-08-27 03:59:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-27 21:59:59.999,	  true,	  2000-08-28 03:59:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-28 21:59:59.999,	  true,	  2000-08-29 03:59:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-29 21:59:59.999,	  true,	  2000-08-30 03:59:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-30 21:59:59.999,	  true,	  2000-08-31 03:59:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-31 21:59:59.999,	  true,	  2000-09-01 03:59:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-09-01 21:59:59.999,	  true,	  2000-09-02 03:59:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-09-02 21:59:59.999,	  true,	  2000-09-03 03:59:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-03 21:59:59.999,	  true,	  2000-09-04 03:59:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-04 21:59:59.999,	  true,	  2000-09-05 03:59:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-05 21:59:59.999,	  true,	  2000-09-06 03:59:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-06 21:59:59.999,	  true,	  2000-09-07 03:59:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-07 21:59:59.999,	  true,	  2000-09-08 03:59:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-08 21:59:59.999,	  true,	  2000-09-09 03:59:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-09 21:59:59.999,	  true,	  2000-09-10 03:59:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-10 21:59:59.999,	  true,	  2000-09-11 03:59:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-11 21:59:59.999,	  true,	  2000-09-12 03:59:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-12 21:59:59.999,	  true,	  2000-09-13 03:59:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-13 21:59:59.999,	  true,	  2000-09-14 03:59:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-14 21:59:59.999,	  true,	  2000-09-15 03:59:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-15 21:59:59.999,	  true,	  2000-09-16 03:59:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-16 21:59:59.999,	  true,	  2000-09-17 03:59:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-17 21:59:59.999,	  true,	  2000-09-18 03:59:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-18 21:59:59.999,	  true,	  2000-09-19 03:59:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-19 21:59:59.999,	  true,	  2000-09-20 03:59:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-20 21:59:59.999,	  true,	  2000-09-21 03:59:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-21 21:59:59.999,	  true,	  2000-09-22 03:59:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-22 21:59:59.999,	  true,	  2000-09-23 03:59:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-23 21:59:59.999,	  true,	  2000-09-24 03:59:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-24 21:59:59.999,	  true,	  2000-09-25 03:59:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-25 21:59:59.999,	  true,	  2000-09-26 03:59:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-26 21:59:59.999,	  true,	  2000-09-27 03:59:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-27 21:59:59.999,	  true,	  2000-09-28 03:59:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-28 21:59:59.999,	  true,	  2000-09-29 03:59:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-29 21:59:59.999,	  true,	  2000-09-30 03:59:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-30 21:59:59.999,	  true,	  2000-10-01 03:59:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-10-01 21:59:59.999,	  true,	  2000-10-02 03:59:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-10-02 21:59:59.999,	  true,	  2000-10-03 03:59:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-03 21:59:59.999,	  true,	  2000-10-04 03:59:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-04 21:59:59.999,	  true,	  2000-10-05 03:59:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-05 21:59:59.999,	  true,	  2000-10-06 03:59:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-06 21:59:59.999,	  true,	  2000-10-07 03:59:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-07 21:59:59.999,	  true,	  2000-10-08 03:59:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-08 21:59:59.999,	  true,	  2000-10-09 03:59:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-09 21:59:59.999,	  true,	  2000-10-10 03:59:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-10 21:59:59.999,	  true,	  2000-10-11 03:59:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-11 21:59:59.999,	  true,	  2000-10-12 03:59:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-12 21:59:59.999,	  true,	  2000-10-13 03:59:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-13 21:59:59.999,	  true,	  2000-10-14 03:59:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-14 21:59:59.999,	  true,	  2000-10-15 03:59:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-15 21:59:59.999,	  true,	  2000-10-16 03:59:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-16 21:59:59.999,	  true,	  2000-10-17 03:59:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-17 21:59:59.999,	  true,	  2000-10-18 03:59:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-18 21:59:59.999,	  true,	  2000-10-19 03:59:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-19 21:59:59.999,	  true,	  2000-10-20 03:59:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-20 21:59:59.999,	  true,	  2000-10-21 03:59:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-21 21:59:59.999,	  true,	  2000-10-22 03:59:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-22 21:59:59.999,	  true,	  2000-10-23 03:59:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-23 21:59:59.999,	  true,	  2000-10-24 03:59:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-24 21:59:59.999,	  true,	  2000-10-25 03:59:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-25 21:59:59.999,	  true,	  2000-10-26 03:59:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-26 21:59:59.999,	  true,	  2000-10-27 03:59:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-27 21:59:59.999,	  true,	  2000-10-28 03:59:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-28 21:59:59.999,	  true,	  2000-10-29 03:59:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-29 22:59:59.999,	  false,  2000-10-30 02:59:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-30 22:59:59.999,	  false,  2000-10-31 02:59:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-31 22:59:59.999,	  false,  2000-11-01 02:59:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-11-01 22:59:59.999,	  false,  2000-11-02 02:59:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-11-02 22:59:59.999,	  false,  2000-11-03 02:59:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-03 22:59:59.999,	  false,  2000-11-04 02:59:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-04 22:59:59.999,	  false,  2000-11-05 02:59:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-05 22:59:59.999,	  false,  2000-11-06 02:59:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-06 22:59:59.999,	  false,  2000-11-07 02:59:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-07 22:59:59.999,	  false,  2000-11-08 02:59:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-08 22:59:59.999,	  false,  2000-11-09 02:59:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-09 22:59:59.999,	  false,  2000-11-10 02:59:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-10 22:59:59.999,	  false,  2000-11-11 02:59:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-11 22:59:59.999,	  false,  2000-11-12 02:59:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-12 22:59:59.999,	  false,  2000-11-13 02:59:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-13 22:59:59.999,	  false,  2000-11-14 02:59:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-14 22:59:59.999,	  false,  2000-11-15 02:59:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-15 22:59:59.999,	  false,  2000-11-16 02:59:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-16 22:59:59.999,	  false,  2000-11-17 02:59:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-17 22:59:59.999,	  false,  2000-11-18 02:59:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-18 22:59:59.999,	  false,  2000-11-19 02:59:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-19 22:59:59.999,	  false,  2000-11-20 02:59:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-20 22:59:59.999,	  false,  2000-11-21 02:59:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-21 22:59:59.999,	  false,  2000-11-22 02:59:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-22 22:59:59.999,	  false,  2000-11-23 02:59:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-23 22:59:59.999,	  false,  2000-11-24 02:59:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-24 22:59:59.999,	  false,  2000-11-25 02:59:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-25 22:59:59.999,	  false,  2000-11-26 02:59:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-26 22:59:59.999,	  false,  2000-11-27 02:59:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-27 22:59:59.999,	  false,  2000-11-28 02:59:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-28 22:59:59.999,	  false,  2000-11-29 02:59:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-29 22:59:59.999,	  false,  2000-11-30 02:59:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-30 22:59:59.999,	  false,  2000-12-01 02:59:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-12-01 22:59:59.999,	  false,  2000-12-02 02:59:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-12-02 22:59:59.999,	  false,  2000-12-03 02:59:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-03 22:59:59.999,	  false,  2000-12-04 02:59:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-04 22:59:59.999,	  false,  2000-12-05 02:59:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-05 22:59:59.999,	  false,  2000-12-06 02:59:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-06 22:59:59.999,	  false,  2000-12-07 02:59:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-07 22:59:59.999,	  false,  2000-12-08 02:59:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-08 22:59:59.999,	  false,  2000-12-09 02:59:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-09 22:59:59.999,	  false,  2000-12-10 02:59:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-10 22:59:59.999,	  false,  2000-12-11 02:59:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-11 22:59:59.999,	  false,  2000-12-12 02:59:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-12 22:59:59.999,	  false,  2000-12-13 02:59:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-13 22:59:59.999,	  false,  2000-12-14 02:59:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-14 22:59:59.999,	  false,  2000-12-15 02:59:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-15 22:59:59.999,	  false,  2000-12-16 02:59:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-16 22:59:59.999,	  false,  2000-12-17 02:59:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-17 22:59:59.999,	  false,  2000-12-18 02:59:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-18 22:59:59.999,	  false,  2000-12-19 02:59:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-19 22:59:59.999,	  false,  2000-12-20 02:59:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-20 22:59:59.999,	  false,  2000-12-21 02:59:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-21 22:59:59.999,	  false,  2000-12-22 02:59:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-22 22:59:59.999,	  false,  2000-12-23 02:59:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-23 22:59:59.999,	  false,  2000-12-24 02:59:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-24 22:59:59.999,	  false,  2000-12-25 02:59:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-25 22:59:59.999,	  false,  2000-12-26 02:59:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-26 22:59:59.999,	  false,  2000-12-27 02:59:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-27 22:59:59.999,	  false,  2000-12-28 02:59:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-28 22:59:59.999,	  false,  2000-12-29 02:59:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-29 22:59:59.999,	  false,  2000-12-30 02:59:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-30 22:59:59.999,	  false,  2000-12-31 02:59:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-31 22:59:59.999,	  false,  2001-01-01 02:59:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2001-01-01 22:59:59.999,	  false,  2001-01-02 02:59:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2001-01-02 22:59:59.999,	  false,  2001-01-03 02:59:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-03 22:59:59.999,	  false,  2001-01-04 02:59:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-04 22:59:59.999,	  false,  2001-01-05 02:59:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-05 22:59:59.999,	  false,  2001-01-06 02:59:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-06 22:59:59.999,	  false,  2001-01-07 02:59:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-07 22:59:59.999,	  false,  2001-01-08 02:59:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-08 22:59:59.999,	  false,  2001-01-09 02:59:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-09 22:59:59.999,	  false,  2001-01-10 02:59:59.999,	  true	  ]
