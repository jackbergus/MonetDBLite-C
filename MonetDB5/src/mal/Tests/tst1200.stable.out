stdout of test 'tst1200` in directory 'src/mal` itself:
# Monet Database Server V5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# compiled for 32biti686-pc-linux-gnu/32bit.
# config:/ufs/mk/monet5/src/mal/Tests/tst.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB/dbfarm
# dbname:demo
# Visit http://monetdb.cwi.nl for further information.
## Mil compiler Version 1.0)
## Copyright (c) 1993-2001, CWI. All rights reserved.
#
## Predefined code segment
##
###line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##module(monettime,alarm);
##
##
##
###line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create rules
#	rule_jan:= rule("1st MON from start of JAN@01:15");
##var rule_jan := rule("1st MON from start of JAN@01:15");
#	rule_mar:= rule("first WEDNE on or after march 10@01:15");
##var rule_mar := rule("first WEDNE on or after march 10@01:15");
#	rule_apr:= rule("last THU on or before aPr 1@01:15");
##var rule_apr := rule("last THU on or before aPr 1@01:15");
#	rule_may:= rule("MAY 26@01:15");
##var rule_may := rule("MAY 26@01:15");
#	rule_jun:= rule("2nd TUE from end of june@01:15");
##var rule_jun := rule("2nd TUE from end of june@01:15");
#	rule_jul:= rule(7,1,1,75);
##var rule_jul := rule(7,1,1,75);
#	rule_aug:= rule(8,-1,1,75);
##var rule_aug := rule(8,-1,1,75);
#	rule_sep:= rule(9,-10,3,75);
##var rule_sep := rule(9,-10,3,75);
#	rule_oct:= rule(10,31,0,75);
##var rule_oct := rule(10,31,0,75);
#	rule_nov:= rule(11,-10,-4,75);
##var rule_nov := rule(11,-10,-4,75);
### nil rules
#	rule_dec:= rule(12,-31,0,75);
##var rule_dec := rule(12,-31,0,75);
#	rule_feb:= rule("first fRiDaY on or after february 30@01:15");
##var rule_feb := rule("first fRiDaY on or after february 30@01:15");
## 
#	rule_bat:= new(:str,:rule,10);
##var rule_bat := new(str,rule,10);
#	insert(rule_bat,"jan",rule_jan);
#	insert(rule_bat,"feb",rule_feb);
#	insert(rule_bat,"mar",rule_mar);
#	insert(rule_bat,"apr",rule_apr);
##rule_bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr);
#	insert(rule_bat,"may",rule_may);
#	insert(rule_bat,"jun",rule_jun);
#	insert(rule_bat,"jul",rule_jul);
#	insert(rule_bat,"aug",rule_aug);
##rule_bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug);
#	insert(rule_bat,"sep",rule_sep);
#	insert(rule_bat,"oct",rule_oct);
#	insert(rule_bat,"nov",rule_nov);
#	insert(rule_bat,"dec",rule_dec);
##rule_bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec);
##
### test the operations on rules
#	ma_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	na_a := multiplex.script("month",rule_bat);
#	oa_a := setColumn(na_a,"month");
##      [month](rule_bat).setColumn("month"),
#	pa_a := multiplex.script("weekday",rule_bat);
#	qa_a := setColumn(pa_a,"weekday");
##      [weekday](rule_bat).setColumn("weekday"),
#	ra_a := multiplex.script("day",rule_bat);
#	sa_a := setColumn(ra_a,"day");
##      [day](rule_bat).setColumn("day"),
#	ta_a := multiplex.script("minutes",rule_bat);
#	ua_a := setColumn(ta_a,"minutes");
#print("rule_bat,na_a,pa_a,ra_a,ta_a");
#	va_a := print(rule_bat,na_a,pa_a,ra_a,ta_a);
##      [minutes](rule_bat).setColumn("minutes"));
##
#	setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	xa_a := multiplex.script("compute",rule_bat,2001);
#	ya_a := setColumn(xa_a,"2001");
##      [compute](rule_bat, 2001).setColumn("2001"),
#	ab_a := multiplex.script("compute",rule_bat,2001);
#	bb_a := multiplex.script("dayofweek",ab_a);
#	cb_a := multiplex.script("dayname",bb_a);
#	setColumn(cb_a,"2001");
##      [dayname]([dayofweek]([compute](rule_bat, 2001))).setColumn("2001"),
#	eb_a := multiplex.script("compute",rule_bat,1999);
#	setColumn(eb_a,"1999");
##      [compute](rule_bat, 1999).setColumn("1999"),
#	gb_a := multiplex.script("compute",rule_bat,1999);
#	hb_a := multiplex.script("dayofweek",gb_a);
#	ib_a := multiplex.script("dayname",hb_a);
#	setColumn(ib_a,"1999");
##      [dayname]([dayofweek]([compute](rule_bat, 1999))).setColumn("1999"),
#	kb_a := multiplex.script("compute",rule_bat,1992);
#	setColumn(kb_a,"1992");
##      [compute](rule_bat, 1992).setColumn("1992"),
#	mb_a := multiplex.script("compute",rule_bat,1992);
#	nb_a := multiplex.script("dayofweek",mb_a);
#	ob_a := multiplex.script("dayname",nb_a);
#	setColumn(ob_a,"1992");
#print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");
#	qb_a := print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);
##      [dayname]([dayofweek]([compute](rule_bat, 1992))).setColumn("1992"));
##
#	rb_a := setColumn(rule_bat,"rule");
##print(rule_bat.setColumn("rule"),
#	sb_a := multiplex.script("compute",rule_bat,1572);
#	tb_a := setColumn(sb_a,"1572");
##      [compute](rule_bat, 1572).setColumn("1572"),
#	ub_a := multiplex.script("compute",rule_bat,1572);
#	vb_a := multiplex.script("dayofweek",ub_a);
#	wb_a := multiplex.script("dayname",vb_a);
#	xb_a := setColumn(wb_a,"1572");
##      [dayname]([dayofweek]([compute](rule_bat, 1572))).setColumn("1572"),
#	yb_a := multiplex.script("compute",rule_bat,1);
#	ac_a := setColumn(yb_a,"1");
##      [compute](rule_bat, 1).setColumn("1"),
#	bc_a := multiplex.script("compute",rule_bat,1);
#	cc_a := multiplex.script("dayofweek",bc_a);
#	dc_a := multiplex.script("dayname",cc_a);
#	ec_a := setColumn(dc_a,"1");
##      [dayname]([dayofweek]([compute](rule_bat, 1))).setColumn("1"),
#	fc_a := multiplex.script("compute",rule_bat,-2000);
#	gc_a := setColumn(fc_a,"-2000");
##      [compute](rule_bat, -2000).setColumn("-2000"),
#	hc_a := multiplex.script("compute",rule_bat,-2000);
#	ic_a := multiplex.script("dayofweek",hc_a);
#	jc_a := multiplex.script("dayname",ic_a);
#	kc_a := setColumn(jc_a,"-2000");
#print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");
#	lc_a := print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);
##      [dayname]([dayofweek]([compute](rule_bat, -2000))).setColumn("-2000"));
##
##
##
###line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create tzones, using some of the above created rules
#	tzone_00:= tzone("GMT");
##var tzone_00 := tzone("GMT");
#	tzone_01:= tzone("GMT+01:00");
##var tzone_01 := tzone("GMT+01:00");
#	tzone_02:= tzone("GMT+0100");
##var tzone_02 := tzone("GMT+0100");
#	tzone_03:= tzone(60,rule_oct,rule_mar);
##var tzone_03 := tzone(60, rule_oct, rule_mar);
#	tzone_04:= tzone(0,rule_jan,rule_aug);
##var tzone_04 := tzone(0, rule_jan, rule_aug);
#	tzone_05:= tzone(-97,rule_oct,rule_apr);
##var tzone_05 := tzone(-97, rule_oct, rule_apr);
#	tzone_06:= tzone(-97,rule_may,rule_sep);
##var tzone_06 := tzone(-97, rule_may, rule_sep);
#	mc_a := *(23,60);
#	tzone_07:= tzone(mc_a,rule_apr,rule_nov);
##var tzone_07 := tzone(23*60, rule_apr, rule_nov);
#	nc_a := *(-23,59);
#	oc_a := -(nc_a,59);
#	tzone_08:= tzone(oc_a);
##var tzone_08 := tzone((-23*59) - 59);
#	tzone_09:= tzone(0);
##var tzone_09 := tzone(0);
#	tzone_10:= tzone(-60);
##var tzone_10 := tzone(-60);
#	pc_a := *(23,60);
#	qc_a := +(pc_a,59);
#	tzone_11:= tzone(qc_a);
##var tzone_11 := tzone((23*60)+59);
#	tzone_12:= tzone(60);
##var tzone_12 := tzone(60);
### nil tzones
#	tzone_13:= tzone(60,rule_feb,rule_dec);
##var tzone_13 := tzone(60, rule_feb, rule_dec);
#	rc_a := *(24,60);
#	tzone_15:= tzone(rc_a,rule_apr,rule_nov);
##var tzone_15 := tzone(24*60, rule_apr, rule_nov);
##
##
#	tzone_bat:= new(:oid,:tzone);
##var tzone_bat := new(oid,tzone);
#	insert(tzone_bat,00@0,tzone_00);
#	insert(tzone_bat,01@0,tzone_01);
#	insert(tzone_bat,02@0,tzone_02);
##tzone_bat.insert(00@0, tzone_00).insert(01@0, tzone_01).insert(02@0, tzone_02);
#	insert(tzone_bat,03@0,tzone_03);
#	insert(tzone_bat,04@0,tzone_04);
#	insert(tzone_bat,05@0,tzone_05);
##tzone_bat.insert(03@0, tzone_03).insert(04@0, tzone_04).insert(05@0, tzone_05);
#	insert(tzone_bat,06@0,tzone_06);
#	insert(tzone_bat,07@0,tzone_07);
#	insert(tzone_bat,08@0,tzone_08);
##tzone_bat.insert(06@0, tzone_06).insert(07@0, tzone_07).insert(08@0, tzone_08);
#	insert(tzone_bat,09@0,tzone_09);
#	insert(tzone_bat,10@0,tzone_10);
#	insert(tzone_bat,11@0,tzone_11);
##tzone_bat.insert(09@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11);
#	insert(tzone_bat,12@0,tzone_12);
#	insert(tzone_bat,13@0,tzone_13);
#	insert(tzone_bat,15@0,tzone_15);
##tzone_bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15);
##
### test the operations on tzones
#	id_a := setName(tzone_bat,"tzone");
##print(tzone_bat);
##print("start error");
#	#x:= getRefCount(tzone_bat);
##print(x);
#	#jd_a := print(tzone_bat);
##print("end");
##print(x);
#	#x:= getRefCount(tzone_bat);
#	print(tzone_bat);
##print(tzone_bat.setColumn("tzone"));
#	kd_a := multiplex.script("minutes",tzone_bat);
#	setColumn(kd_a,"minutes");
##print([minutes](tzone_bat).setColumn("minutes"),
#	md_a := multiplex.script("start_dst",tzone_bat);
#	setColumn(md_a,"start_dst");
##      [start_dst](tzone_bat).setColumn("start_dst"),
#	od_a := multiplex.script("end_dst",tzone_bat);
#	setColumn(od_a,"end_dst");
#	qd_a := print(kd_a,md_a,od_a);
##      [end_dst](tzone_bat).setColumn("end_dst"));
##
##
##
###line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways to create dates
#	date_00:= date(2000,01,01);
##var date_00 := date(2000,01,01);
#	date_01:= date("5000-JAN-01");
##var date_01 := date("5000-JAN-01");
#	date_02:= date("1968-FEBR-29");
##var date_02 := date("1968-FEBR-29");
#	date_03:= date("1-MARCH-01");
##var date_03 := date("1-MARCH-01");
#	date_04:= date("-5867411-JAN-1");
##var date_04 := date("-5867411-JAN-1");
#	date_05:= date("-768/octobe/01");
##var date_05 := date("-768/octobe/01");
#	date_06:= date("5000\\novembe\\01");
##var date_06 := date("5000\\novembe\\01");
#	date_07:= date("-1999/jun/01");
##var date_07 := date("-1999/jun/01");
#	date_08:= date("2000-jul-14");
##var date_08 := date("2000-jul-14");
#	date_09:= date("1999-sept-01");
##var date_09 := date("1999-sept-01");
#	date_10:= date("1998-decemBeR-01");
##var date_10 := date("1998-decemBeR-01");
#	date_11:= date("1953 may                01");
##var date_11 := date("1953 may                01");
#	date_12:= date("5867411-DEC-31");
##var date_12 := date("5867411-DEC-31");
### nil dates
#	date_13:= date(1996,13,1);
##var date_13 := date(1996,13,1);
#	date_14:= date("999999999999999999999-01-01");
##var date_14 := date("999999999999999999999-01-01");
#	date_15:= date("1999-JANUARI-01");
##var date_15 := date("1999-JANUARI-01");
#	date_16:= date("1999-FEBR-29");
##var date_16 := date("1999-FEBR-29");
#	date_17:= date("-1-DECEMBER-0");
##var date_17 := date("-1-DECEMBER-0");
#	date_18:= date("5000\novembe\31");
##var date_18 := date("5000\novembe\31");
#	date_19:= date("nil");
##var date_19 := date("nil");
#	date_20:= date("1999-sept-31");
##var date_20 := date("1999-sept-31");
##
#	date_bat:= new(:oid,:date);
##var date_bat := new(oid,date);
#	insert(date_bat,00@0,date_00);
#	insert(date_bat,01@0,date_01);
#	insert(date_bat,02@0,date_02);
##date_bat.insert(00@0, date_00).insert(01@0, date_01).insert(02@0, date_02);
#	insert(date_bat,03@0,date_03);
#	insert(date_bat,04@0,date_04);
#	insert(date_bat,05@0,date_05);
##date_bat.insert(03@0, date_03).insert(04@0, date_04).insert(05@0, date_05);
#	insert(date_bat,06@0,date_06);
#	insert(date_bat,07@0,date_07);
#	insert(date_bat,08@0,date_08);
##date_bat.insert(06@0, date_06).insert(07@0, date_07).insert(08@0, date_08);
#	insert(date_bat,09@0,date_09);
#	insert(date_bat,10@0,date_10);
#	insert(date_bat,11@0,date_11);
##date_bat.insert(09@0, date_09).insert(10@0, date_10).insert(11@0, date_11);
#	insert(date_bat,12@0,date_12);
#	insert(date_bat,13@0,date_13);
#	insert(date_bat,14@0,date_14);
##date_bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14);
#	insert(date_bat,15@0,date_15);
#	insert(date_bat,16@0,date_16);
#	insert(date_bat,17@0,date_17);
##date_bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17);
#	insert(date_bat,18@0,date_18);
#	insert(date_bat,19@0,date_19);
#	insert(date_bat,20@0,date_20);
##date_bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20);
##
### test the operations on dates
#	ne_a := setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	oe_a := multiplex.script("year",date_bat);
#	pe_a := setColumn(oe_a,"year");
##      [year](date_bat).setColumn("year"),
#	qe_a := multiplex.script("day",date_bat);
#	re_a := setColumn(qe_a,"day");
##      [day](date_bat).setColumn("day"),
#	se_a := multiplex.script("month",date_bat);
#	te_a := multiplex.script("monthname",se_a);
#	ue_a := setColumn(te_a,"monthname");
##      [monthname]([month](date_bat)).setColumn("monthname"),
#	ve_a := multiplex.script("month",date_bat);
#	we_a := multiplex.script("monthname",ve_a);
#	xe_a := multiplex.script("monthnum",we_a);
#	ye_a := setColumn(xe_a,"monthnum");
#	af_a := print(date_bat,oe_a,qe_a,te_a,xe_a);
##      [monthnum]([monthname]([month](date_bat))).setColumn("monthnum"));
##
#	date_addyears:= multiplex.script("addyears",date_bat,-100);
##var date_addyears := [addyears](date_bat, -100);
#	date_addmonths:= multiplex.script("addmonths",date_bat,1);
##var date_addmonths := [addmonths](date_bat, 1);
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addyears,"min100y");
##      date_addyears.setColumn("min100y"),
#	df_a := multiplex.script("diff",date_addyears,date_bat);
#	setColumn(df_a,"diff");
#	ff_a := print(date_bat,date_addyears,df_a);
##      [diff](date_addyears, date_bat).setColumn("diff"));
##
#	setColumn(date_bat,"date");
##print(date_bat.setColumn("date"),
#	setColumn(date_addmonths,"plus1m");
##      date_addmonths.setColumn("plus1m"),
#	if_a := multiplex.script("diff",date_addmonths,date_bat);
#	setColumn(if_a,"diff");
#	kf_a := print(date_bat,date_addmonths,if_a);
##      [diff](date_addmonths, date_bat).setColumn("diff"));
##
### test dayofweek and weeknumber using more than two years as consecutive days
#	date_seq:= new(:int,:date);
##var date_seq := new(int, date);
#	i:= -375;
##var i := -375;
#barrier	lf_a:= true;
#	i:= i+1;
#	of_a := <(i,375);
#barrier	mf_a:= of_a;
##while ((i :+= 1) < 375) {
#	pf_a := adddays(date_00,i);
#	insert(date_seq,i,pf_a);
##	date_seq.insert(i,adddays(date_00,i));
#redo	lf_a;
#exit	mf_a;
#exit	lf_a;
##}
#	rf_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"),
#	sf_a := multiplex.script("weekofyear",date_seq);
#	tf_a := setColumn(sf_a,"weekofyear");
##      [weekofyear](date_seq).setColumn("weekofyear"),
#	uf_a := multiplex.script("dayofweek",date_seq);
#	vf_a := multiplex.script("dayname",uf_a);
#	wf_a := setColumn(vf_a,"dayofweek");
##      [dayname]([dayofweek](date_seq)).setColumn("dayofweek"),
#	xf_a := multiplex.script("dayofweek",date_seq);
#	yf_a := multiplex.script("dayname",xf_a);
#	ag_a := multiplex.script("daynum",yf_a);
#	bg_a := setColumn(ag_a,"num");
##      [daynum]([dayname]([dayofweek](date_seq))).setColumn("num"),
#	cg_a := multiplex.script("dayofyear",date_seq);
#	dg_a := setColumn(cg_a,"dayofyear");
#print("date_seq,sf_a,vf_a,ag_a,cg_a");
#	eg_a := print(date_seq,sf_a,vf_a,ag_a,cg_a);
##      [dayofyear](date_seq).setColumn("dayofyear"));
##
##
##
###line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### test the various ways top create daytimes
#	daytime_00:= daytime(23,59,59,999);
##var daytime_00 := daytime(23,59,59,999);
#	daytime_01:= daytime("23:59");
##var daytime_01 := daytime("23:59");
#	daytime_02:= daytime("00:00");
##var daytime_02 := daytime("00:00");
#	daytime_03:= daytime("23:59:59");
##var daytime_03 := daytime("23:59:59");
#	daytime_04:= daytime("00:00:00.000");
##var daytime_04 := daytime("00:00:00.000");
#	daytime_05:= daytime("00:00:00");
##var daytime_05 := daytime("00:00:00");
#	daytime_06:= daytime("00:00:00:001");
##var daytime_06 := daytime("00:00:00:001");
#	daytime_07:= daytime("03:49:02.999");
##var daytime_07 := daytime("03:49:02.999");
#	daytime_08:= daytime("20:48:42:999");
##var daytime_08 := daytime("20:48:42:999");
#	daytime_09:= daytime("17:53:38:999");
##var daytime_09 := daytime("17:53:38:999");
#	daytime_10:= daytime("13:15:34:999");
##var daytime_10 := daytime("13:15:34:999");
#	daytime_11:= daytime("07:34:27.999");
##var daytime_11 := daytime("07:34:27.999");
#	daytime_12:= daytime("23:59:59:999");
##var daytime_12 := daytime("23:59:59:999");
#	daytime_13:= daytime("01:00:03.999");
##var daytime_13 := daytime("01:00:03.999");
#	daytime_14:= daytime("23:59:59.999");
##var daytime_14 := daytime("23:59:59.999");
### nil daytimes
#	daytime_15:= daytime(24,59,59,999);
##var daytime_15 := daytime(24,59,59,999);
#	daytime_16:= daytime(23,60,59,999);
##var daytime_16 := daytime(23,60,59,999);
#	daytime_17:= daytime(23,59,60,999);
##var daytime_17 := daytime(23,59,60,999);
#	daytime_18:= daytime(23,59,60,1000);
##var daytime_18 := daytime(23,59,60,1000);
#	daytime_19:= daytime("nil");
##var daytime_19 := daytime("nil");
##
#	daytime_bat:= new(:oid,:daytime);
##var daytime_bat := new(oid,daytime);
#	insert(daytime_bat,00@0,daytime_00);
#	insert(daytime_bat,01@0,daytime_01);
#	insert(daytime_bat,02@0,daytime_02);
##daytime_bat.insert(00@0, daytime_00).insert(01@0, daytime_01).insert(02@0, daytime_02);
#	insert(daytime_bat,03@0,daytime_03);
#	insert(daytime_bat,04@0,daytime_04);
#	insert(daytime_bat,05@0,daytime_05);
##daytime_bat.insert(03@0, daytime_03).insert(04@0, daytime_04).insert(05@0, daytime_05);
#	insert(daytime_bat,06@0,daytime_06);
#	insert(daytime_bat,07@0,daytime_07);
#	insert(daytime_bat,08@0,daytime_08);
##daytime_bat.insert(06@0, daytime_06).insert(07@0, daytime_07).insert(08@0, daytime_08);
#	insert(daytime_bat,09@0,daytime_09);
#	insert(daytime_bat,10@0,daytime_10);
#	insert(daytime_bat,11@0,daytime_11);
##daytime_bat.insert(09@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11);
#	insert(daytime_bat,12@0,daytime_12);
#	insert(daytime_bat,13@0,daytime_13);
#	insert(daytime_bat,14@0,daytime_14);
##daytime_bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14);
#	insert(daytime_bat,15@0,daytime_15);
#	insert(daytime_bat,16@0,daytime_16);
#	insert(daytime_bat,17@0,daytime_17);
##daytime_bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17);
#	insert(daytime_bat,18@0,daytime_18);
#	insert(daytime_bat,19@0,daytime_19);
##daytime_bat.insert(18@0, daytime_18).insert(19@0, daytime_19);
##
#	setColumn(daytime_bat,"daytime");
##print(daytime_bat.setColumn("daytime"),
#	bh_a := multiplex.script("hours",daytime_bat);
#	setColumn(bh_a,"hours");
##      [hours](daytime_bat).setColumn("hours"),
#	dh_a := multiplex.script("minutes",daytime_bat);
#	setColumn(dh_a,"minutes");
##      [minutes](daytime_bat).setColumn("minutes"),
#	fh_a := multiplex.script("seconds",daytime_bat);
#	setColumn(fh_a,"seconds");
##      [seconds](daytime_bat).setColumn("seconds"),
#	hh_a := multiplex.script("milliseconds",daytime_bat);
#	setColumn(hh_a,"milliseconds");
#print("daytime_bat,bh_a,dh_a,fh_a,hh_a");
#	jh_a := print(daytime_bat,bh_a,dh_a,fh_a,hh_a);
##      [milliseconds](daytime_bat).setColumn("milliseconds"));
##
##
##
###line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
### create timestamps in bulk from the above bats with dates, daytimes and tzones
#	kh_a := multiplex.script("timestamp",date_bat,daytime_bat,tzone_bat);
#	timestamp_bat:=kh_a; bat.setWriteMode(kh_a);
##var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE);
### KILL
### var timestamp_now := timestamp(epoch());
### timestamp_bat.insert(14@0, timestamp_now);
##
### test the timestamp operations
#	setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	mh_a := multiplex.script("date",timestamp_bat,tzone_bat);
#	setColumn(mh_a,"date");
##      [date](timestamp_bat,tzone_bat).setColumn("date"),
#	oh_a := multiplex.script("daytime",timestamp_bat,tzone_bat);
#	setColumn(oh_a,"daytime");
#	print(timestamp_bat,mh_a,oh_a);
##      [daytime](timestamp_bat,tzone_bat).setColumn("daytime"));
##
#	rh_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	timezones:= bbp.bind("timezones");
#	print(timezones);
#	sh_a:tzone := algebra.find(timezones,"Wake Island");
#	th_a := multiplex.script("date",timestamp_bat,sh_a);
#	uh_a := setColumn(th_a,"Wake Island");
##      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).setColumn("Wake Island"),
#	vh_a:tzone := algebra.find(timezones,"Wake Island");
#	wh_a := multiplex.script("daytime",timestamp_bat,vh_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")),
#	xh_a:tzone := algebra.find(timezones,"American Samoa");
#	yh_a := multiplex.script("date",timestamp_bat,xh_a);
#	ai_a := setColumn(yh_a,"American Samoa");
##      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).setColumn("American Samoa"),
#	bi_a:tzone := algebra.find(timezones,"American Samoa");
#	ci_a := multiplex.script("daytime",timestamp_bat,bi_a);
#	di_a := print(timestamp_bat,th_a,wh_a,yh_a,ci_a);
##      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa")));
##
#	ei_a := *(60,1000);
#	fi_a := *(60,ei_a);
#	gi_a := *(23,fi_a);
#	hi_a := lng(gi_a);
#	timestamp_plus:= multiplex.script("add",timestamp_bat,hi_a);
##var timestamp_plus := [add](timestamp_bat, lng(23*60*60*1000));
#	ii_a := *(-60,1000);
#	ji_a := lng(ii_a);
#	timestamp_minus:= multiplex.script("add",timestamp_bat,ji_a);
##var timestamp_minus := [add](timestamp_bat, lng(-60*1000));
##
#	ki_a := setColumn(timestamp_bat,"timestamp");
##print(timestamp_bat.setColumn("timestamp"),
#	li_a := setColumn(timestamp_plus,"plus23");
##	timestamp_plus.setColumn("plus23"),
#	mi_a := setColumn(timestamp_minus,"min1");
##	timestamp_minus.setColumn("min1"),
#	ni_a := multiplex.script("diff",timestamp_plus,timestamp_minus);
#	oi_a := *(60,1000);
#	pi_a := *(60,oi_a);
#	qi_a := lng(pi_a);
#	ri_a := /(ni_a,qi_a);
#	si_a := setColumn(ri_a,"diff");
#	ti_a := print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);
##	[/]([diff](timestamp_plus, timestamp_minus),lng(60*60*1000)).setColumn("diff"));
##
#	ui_a:tzone := algebra.find(timezones,"West/Europe");
#	timestamp_eur:= multiplex.script("timestamp",date_seq,daytime_00,ui_a);
##var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe"));
#	vi_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	timestamp_bra:= multiplex.script("timestamp",date_seq,daytime_00,vi_a);
##var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil"));
##
#	wi_a := setColumn(date_seq,"date");
##print(date_seq.setColumn("date"), 
#	xi_a := multiplex.script("dayofweek",date_seq);
#	yi_a := multiplex.script("dayname",xi_a);
#	aj_a := setColumn(yi_a,"day");
##	[dayname]([dayofweek](date_seq)).setColumn("day"),
#	bj_a := setColumn(timestamp_eur,"West/Europe");
##	timestamp_eur.setColumn("West/Europe"),
#	cj_a:tzone := algebra.find(timezones,"West/Europe");
#	dj_a := multiplex.script("dst",timestamp_eur,cj_a);
#	ej_a := setColumn(dj_a,"dst");
##	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).setColumn("dst"),
#	fj_a := setColumn(timestamp_bra,"Andes/Brazil");
##	timestamp_bra.setColumn("Andes/Brazil"),
#	gj_a:tzone := algebra.find(timezones,"Andes/Brazil");
#	hj_a := multiplex.script("dst",timestamp_bra,gj_a);
#	ij_a := setColumn(hj_a,"dst");
#	jj_a := print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);
##	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).setColumn("dst"));
##
##quit;
##
##
###line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx"
##
#
function user.main():void;              #  0 main:void := user.main() {G}
# Mil compiler Version 1.0) 
# Copyright (c) 1993-2001, CWI. All rights reserved. 
# Predefined code segment 
##line 531 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
#module(monettime,alarm); 
    lzone := mtime.timezone("GMT+1");   #  6 lzone:timezone := MTIMEtzone_fromstr(_7:str) 
    mtime.timezone_local(lzone);        #  7 _8:void := MTIMEtzone_set_local(lzone:timezone) 
##line 535 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create rules 
    rule_jan := mtime.rule("1st MON from start of JAN@01:15");# 10 rule_jan:zrule := MTIMErule_fromstr(_12:str) 
#var rule_jan := mtime.rule("1st MON from start of JAN@01:15"); 
    rule_mar := mtime.rule("first WEDNE on or after march 10@01:15");# 12 rule_mar:zrule := MTIMErule_fromstr(_15:str) 
#var rule_mar := mtime.rule("first WEDNE on or after march 10@01:15"); 
    rule_apr := mtime.rule("last THU on or before aPr 1@01:15");# 14 rule_apr:zrule := MTIMErule_fromstr(_18:str) 
#var rule_apr := mtime.rule("last THU on or before aPr 1@01:15"); 
    rule_may := mtime.rule("MAY 26@01:15");# 16 rule_may:zrule := MTIMErule_fromstr(_21:str) 
#var rule_may := mtime.rule("MAY 26@01:15"); 
    rule_jun := mtime.rule("2nd TUE from end of june@01:15");# 18 rule_jun:zrule := MTIMErule_fromstr(_24:str) 
#var rule_jun := mtime.rule("2nd TUE from end of june@01:15"); 
    rule_jul := mtime.rule(7,1,1,75);   # 20 rule_jul:zrule := MTIMErule_create(_27:int, _28:int, _28:int, _29:int) 
#var rule_jul := mtime.rule(7,1,1,75); 
    rule_aug := mtime.rule(8,-1,1,75);  # 22 rule_aug:zrule := MTIMErule_create(_32:int, _33:int, _28:int, _29:int) 
#var rule_aug := mtime.rule(8,-1,1,75); 
    rule_sep := mtime.rule(9,-10,3,75); # 24 rule_sep:zrule := MTIMErule_create(_36:int, _37:int, _38:int, _29:int) 
#var rule_sep := mtime.rule(9,-10,3,75); 
    rule_oct := mtime.rule(10,31,0,75); # 26 rule_oct:zrule := MTIMErule_create(_41:int, _42:int, _43:int, _29:int) 
#var rule_oct := mtime.rule(10,31,0,75); 
    rule_nov := mtime.rule(11,-10,-4,75);# 28 rule_nov:zrule := MTIMErule_create(_46:int, _37:int, _47:int, _29:int) 
#var rule_nov := mtime.rule(11,-10,-4,75); 
## nil rules 
    rule_dec := mtime.rule(12,-31,0,75);# 31 rule_dec:zrule := MTIMErule_create(_51:int, _52:int, _43:int, _29:int) 
#var rule_dec := mtime.rule(12,-31,0,75); 
    rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15");# 33 rule_feb:zrule := MTIMErule_fromstr(_55:str) 
#var rule_feb := mtime.rule("first fRiDaY on or after february 30@01:15"); 
#  
    rule_bat := bat.new(:str,:zrule,10);# 36 rule_bat:bat[:str,:zrule] := CMDBATnewint(_59:str, _60:zrule, _41:int) {G}
#var rule_bat := bat.new(str,rule,10); 
    bat.insert(rule_bat,"jan",rule_jan);# 38 _62:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _63:str, rule_jan:zrule) {G}
    bat.insert(rule_bat,"feb",rule_feb);# 39 _64:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _65:str, rule_feb:zrule) {G}
    bat.insert(rule_bat,"mar",rule_mar);# 40 _66:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _67:str, rule_mar:zrule) {G}
    bat.insert(rule_bat,"apr",rule_apr);# 41 _68:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _69:str, rule_apr:zrule) {G}
#rule_bat.bat.insert("jan",rule_jan).insert("feb",rule_feb).insert("mar",rule_mar).insert("apr",rule_apr); 
    bat.insert(rule_bat,"may",rule_may);# 43 _71:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _72:str, rule_may:zrule) {G}
    bat.insert(rule_bat,"jun",rule_jun);# 44 _73:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _74:str, rule_jun:zrule) {G}
    bat.insert(rule_bat,"jul",rule_jul);# 45 _75:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _76:str, rule_jul:zrule) {G}
    bat.insert(rule_bat,"aug",rule_aug);# 46 _77:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _78:str, rule_aug:zrule) {G}
#rule_bat.bat.insert("may",rule_may).insert("jun",rule_jun).insert("jul",rule_jul).insert("aug",rule_aug); 
    bat.insert(rule_bat,"sep",rule_sep);# 48 _80:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _81:str, rule_sep:zrule) {G}
    bat.insert(rule_bat,"oct",rule_oct);# 49 _82:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _83:str, rule_oct:zrule) {G}
    bat.insert(rule_bat,"nov",rule_nov);# 50 _84:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _85:str, rule_nov:zrule) {G}
    bat.insert(rule_bat,"dec",rule_dec);# 51 _86:bat[:str,:zrule] := BKCinsert_bun(rule_bat:bat[:str,:zrule], _87:str, rule_dec:zrule) {G}
#rule_bat.bat.insert("sep",rule_sep).insert("oct",rule_oct).insert("nov",rule_nov).insert("dec",rule_dec); 
## test the operations on rules 
    ma_a := bat.setColumn(rule_bat,"rule");# 54 ma_a:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _91:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _823 := bat.new(nil:str,nil:int);   # 56 _823:bat[:str,:int] := CMDBATnew(_824:str, _825:int) {G}
barrier (_827,_828,_829):= bat.newIterator(rule_bat);# 57 (_827:lng, _828:str, _829:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ61}
    _831 := mtime.month(_829);          # 58 _831:int := MTIMErule_extract_month(_829:zrule) 
    bat.insert(_823,_828,_831);         # 59 _832:bat[:str,:int] := BKCinsert_bun(_823:bat[:str,:int], _828:str, _831:int) {G}
    redo (_827,_828,_829):= bat.hasMoreElements(rule_bat);# 60 (_827:lng, _828:str, _829:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ58}
exit (_827,_828,_829);                  # 61 (_827:lng, _828:str, _829:zrule) 
    na_a:bat[:str,:int]  := _823;       # 62 na_a:bat[:str,:int] := _823:bat[:str,:int] {G}
    oa_a := bat.setColumn(na_a,"month");# 63 oa_a:void := BKCsetColumn(na_a:bat[:str,:int], _95:str) 
#      [month](rule_bat).bat.setColumn("month"), 
    _836 := bat.new(nil:str,nil:int);   # 65 _836:bat[:str,:int] := CMDBATnew(_824:str, _825:int) {G}
barrier (_838,_839,_840):= bat.newIterator(rule_bat);# 66 (_838:lng, _839:str, _840:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ70}
    _842 := mtime.weekday(_840);        # 67 _842:int := MTIMErule_extract_weekday(_840:zrule) 
    bat.insert(_836,_839,_842);         # 68 _843:bat[:str,:int] := BKCinsert_bun(_836:bat[:str,:int], _839:str, _842:int) {G}
    redo (_838,_839,_840):= bat.hasMoreElements(rule_bat);# 69 (_838:lng, _839:str, _840:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ67}
exit (_838,_839,_840);                  # 70 (_838:lng, _839:str, _840:zrule) 
    pa_a:bat[:str,:int]  := _836;       # 71 pa_a:bat[:str,:int] := _836:bat[:str,:int] {G}
    qa_a := bat.setColumn(pa_a,"weekday");# 72 qa_a:void := BKCsetColumn(pa_a:bat[:str,:int], _99:str) 
#      [weekday](rule_bat).bat.setColumn("weekday"), 
    _847 := bat.new(nil:str,nil:int);   # 74 _847:bat[:str,:int] := CMDBATnew(_824:str, _825:int) {G}
barrier (_849,_850,_851):= bat.newIterator(rule_bat);# 75 (_849:lng, _850:str, _851:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ79}
    _853 := mtime.day(_851);            # 76 _853:int := MTIMErule_extract_day(_851:zrule) 
    bat.insert(_847,_850,_853);         # 77 _854:bat[:str,:int] := BKCinsert_bun(_847:bat[:str,:int], _850:str, _853:int) {G}
    redo (_849,_850,_851):= bat.hasMoreElements(rule_bat);# 78 (_849:lng, _850:str, _851:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ76}
exit (_849,_850,_851);                  # 79 (_849:lng, _850:str, _851:zrule) 
    ra_a:bat[:str,:int]  := _847;       # 80 ra_a:bat[:str,:int] := _847:bat[:str,:int] {G}
    sa_a := bat.setColumn(ra_a,"day");  # 81 sa_a:void := BKCsetColumn(ra_a:bat[:str,:int], _103:str) 
#      [day](rule_bat).bat.setColumn("day"), 
    _858 := bat.new(nil:str,nil:int);   # 83 _858:bat[:str,:int] := CMDBATnew(_859:str, _860:int) {G}
barrier (_862,_863,_864):= bat.newIterator(rule_bat);# 84 (_862:lng, _863:str, _864:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ88}
    _866 := mtime.minutes(_864);        # 85 _866:int := MTIMErule_extract_minutes(_864:zrule) 
    bat.insert(_858,_863,_866);         # 86 _867:bat[:str,:int] := BKCinsert_bun(_858:bat[:str,:int], _863:str, _866:int) {G}
    redo (_862,_863,_864):= bat.hasMoreElements(rule_bat);# 87 (_862:lng, _863:str, _864:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ85}
exit (_862,_863,_864);                  # 88 (_862:lng, _863:str, _864:zrule) 
    ta_a:bat[:str,:int]  := _858;       # 89 ta_a:bat[:str,:int] := _858:bat[:str,:int] {G}
    ua_a := bat.setColumn(ta_a,"minutes");# 90 ua_a:void := BKCsetColumn(ta_a:bat[:str,:int], _107:str) 
    io.print("rule_bat,na_a,pa_a,ra_a,ta_a");# 91 _109:void := IOprint_val(_110:str) 
    va_a := io.print(rule_bat,na_a,pa_a,ra_a,ta_a);# 92 va_a:void := IOtable(rule_bat:bat[:str,:zrule], na_a:bat[:str,:int], pa_a:bat[:str,:int], ra_a:bat[:str,:int], ta_a:bat[:str,:int]) 
#      [minutes](rule_bat).bat.setColumn("minutes")); 
    bat.setColumn(rule_bat,"rule");     # 94 _113:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _91:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _871 := bat.new(nil:str,nil:date);  # 96 _871:bat[:str,:date] := CMDBATnew(_859:str, _872:date) {G}
barrier (_874,_875,_876):= bat.newIterator(rule_bat);# 97 (_874:lng, _875:str, _876:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ101}
    _878 := mtime.compute(_876,2001);   # 98 _878:date := MTIMEcompute_rule_foryear(_876:zrule, _117:int) 
    bat.insert(_871,_875,_878);         # 99 _879:bat[:str,:date] := BKCinsert_bun(_871:bat[:str,:date], _875:str, _878:date) {G}
    redo (_874,_875,_876):= bat.hasMoreElements(rule_bat);#100 (_874:lng, _875:str, _876:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ98}
exit (_874,_875,_876);                  #101 (_874:lng, _875:str, _876:zrule) 
    xa_a:bat[:str,:date]  := _871;      #102 xa_a:bat[:str,:date] := _871:bat[:str,:date] {G}
    ya_a := bat.setColumn(xa_a,"2001"); #103 ya_a:void := BKCsetColumn(xa_a:bat[:str,:date], _119:str) 
#      [compute](rule_bat, 2001).bat.setColumn("2001"), 
    _883 := bat.new(nil:str,nil:date);  #105 _883:bat[:str,:date] := CMDBATnew(_859:str, _872:date) {G}
barrier (_885,_886,_887):= bat.newIterator(rule_bat);#106 (_885:lng, _886:str, _887:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ110}
    _889 := mtime.compute(_887,2001);   #107 _889:date := MTIMEcompute_rule_foryear(_887:zrule, _117:int) 
    bat.insert(_883,_886,_889);         #108 _890:bat[:str,:date] := BKCinsert_bun(_883:bat[:str,:date], _886:str, _889:date) {G}
    redo (_885,_886,_887):= bat.hasMoreElements(rule_bat);#109 (_885:lng, _886:str, _887:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ107}
exit (_885,_886,_887);                  #110 (_885:lng, _886:str, _887:zrule) 
    ab_a:bat[:str,:date]  := _883;      #111 ab_a:bat[:str,:date] := _883:bat[:str,:date] {G}
    _894 := bat.new(nil:str,nil:int);   #112 _894:bat[:str,:int] := CMDBATnew(_895:str, _896:int) {G}
barrier (_898,_899,_900):= bat.newIterator(ab_a);#113 (_898:lng, _899:str, _900:date) := CHPbunIterator(ab_a:bat[:str,:date]) {GJ117}
    _902 := mtime.dayofweek(_900);      #114 _902:int := MTIMEdate_extract_dayofweek(_900:date) 
    bat.insert(_894,_899,_902);         #115 _903:bat[:str,:int] := BKCinsert_bun(_894:bat[:str,:int], _899:str, _902:int) {G}
    redo (_898,_899,_900):= bat.hasMoreElements(ab_a);#116 (_898:lng, _899:str, _900:date) := CHPbunHasMoreElements(ab_a:bat[:str,:date]) {GJ114}
exit (_898,_899,_900);                  #117 (_898:lng, _899:str, _900:date) 
    bb_a:bat[:str,:int]  := _894;       #118 bb_a:bat[:str,:int] := _894:bat[:str,:int] {G}
    _907 := bat.new(nil:str,nil:str);   #119 _907:bat[:str,:str] := CMDBATnew(_895:str, _895:str) {G}
barrier (_909,_910,_911):= bat.newIterator(bb_a);#120 (_909:lng, _910:str, _911:int) := CHPbunIterator(bb_a:bat[:str,:int]) {GJ124}
    _913 := mtime.dayname(_911);        #121 _913:str := MTIMEday_to_str(_911:int) {G}
    bat.insert(_907,_910,_913);         #122 _914:bat[:str,:str] := BKCinsert_bun(_907:bat[:str,:str], _910:str, _913:str) {G}
    redo (_909,_910,_911):= bat.hasMoreElements(bb_a);#123 (_909:lng, _910:str, _911:int) := CHPbunHasMoreElements(bb_a:bat[:str,:int]) {GJ121}
exit (_909,_910,_911);                  #124 (_909:lng, _910:str, _911:int) 
    cb_a:bat[:str,:str]  := _907;       #125 cb_a:bat[:str,:str] := _907:bat[:str,:str] {G}
    bat.setColumn(cb_a,"2001");         #126 _126:void := BKCsetColumn(cb_a:bat[:str,:str], _119:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 2001))).bat.setColumn("2001"), 
    _918 := bat.new(nil:str,nil:date);  #128 _918:bat[:str,:date] := CMDBATnew(_895:str, _919:date) {G}
barrier (_921,_922,_923):= bat.newIterator(rule_bat);#129 (_921:lng, _922:str, _923:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ133}
    _925 := mtime.compute(_923,1999);   #130 _925:date := MTIMEcompute_rule_foryear(_923:zrule, _130:int) 
    bat.insert(_918,_922,_925);         #131 _926:bat[:str,:date] := BKCinsert_bun(_918:bat[:str,:date], _922:str, _925:date) {G}
    redo (_921,_922,_923):= bat.hasMoreElements(rule_bat);#132 (_921:lng, _922:str, _923:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ130}
exit (_921,_922,_923);                  #133 (_921:lng, _922:str, _923:zrule) 
    eb_a:bat[:str,:date]  := _918;      #134 eb_a:bat[:str,:date] := _918:bat[:str,:date] {G}
    bat.setColumn(eb_a,"1999");         #135 _131:void := BKCsetColumn(eb_a:bat[:str,:date], _132:str) 
#      [compute](rule_bat, 1999).bat.setColumn("1999"), 
    _930 := bat.new(nil:str,nil:date);  #137 _930:bat[:str,:date] := CMDBATnew(_931:str, _919:date) {G}
barrier (_933,_934,_935):= bat.newIterator(rule_bat);#138 (_933:lng, _934:str, _935:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ142}
    _937 := mtime.compute(_935,1999);   #139 _937:date := MTIMEcompute_rule_foryear(_935:zrule, _130:int) 
    bat.insert(_930,_934,_937);         #140 _938:bat[:str,:date] := BKCinsert_bun(_930:bat[:str,:date], _934:str, _937:date) {G}
    redo (_933,_934,_935):= bat.hasMoreElements(rule_bat);#141 (_933:lng, _934:str, _935:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ139}
exit (_933,_934,_935);                  #142 (_933:lng, _934:str, _935:zrule) 
    gb_a:bat[:str,:date]  := _930;      #143 gb_a:bat[:str,:date] := _930:bat[:str,:date] {G}
    _942 := bat.new(nil:str,nil:int);   #144 _942:bat[:str,:int] := CMDBATnew(_931:str, _943:int) {G}
barrier (_945,_946,_947):= bat.newIterator(gb_a);#145 (_945:lng, _946:str, _947:date) := CHPbunIterator(gb_a:bat[:str,:date]) {GJ149}
    _949 := mtime.dayofweek(_947);      #146 _949:int := MTIMEdate_extract_dayofweek(_947:date) 
    bat.insert(_942,_946,_949);         #147 _950:bat[:str,:int] := BKCinsert_bun(_942:bat[:str,:int], _946:str, _949:int) {G}
    redo (_945,_946,_947):= bat.hasMoreElements(gb_a);#148 (_945:lng, _946:str, _947:date) := CHPbunHasMoreElements(gb_a:bat[:str,:date]) {GJ146}
exit (_945,_946,_947);                  #149 (_945:lng, _946:str, _947:date) 
    hb_a:bat[:str,:int]  := _942;       #150 hb_a:bat[:str,:int] := _942:bat[:str,:int] {G}
    _954 := bat.new(nil:str,nil:str);   #151 _954:bat[:str,:str] := CMDBATnew(_931:str, _931:str) {G}
barrier (_956,_957,_958):= bat.newIterator(hb_a);#152 (_956:lng, _957:str, _958:int) := CHPbunIterator(hb_a:bat[:str,:int]) {GJ156}
    _960 := mtime.dayname(_958);        #153 _960:str := MTIMEday_to_str(_958:int) {G}
    bat.insert(_954,_957,_960);         #154 _961:bat[:str,:str] := BKCinsert_bun(_954:bat[:str,:str], _957:str, _960:str) {G}
    redo (_956,_957,_958):= bat.hasMoreElements(hb_a);#155 (_956:lng, _957:str, _958:int) := CHPbunHasMoreElements(hb_a:bat[:str,:int]) {GJ153}
exit (_956,_957,_958);                  #156 (_956:lng, _957:str, _958:int) 
    ib_a:bat[:str,:str]  := _954;       #157 ib_a:bat[:str,:str] := _954:bat[:str,:str] {G}
    bat.setColumn(ib_a,"1999");         #158 _137:void := BKCsetColumn(ib_a:bat[:str,:str], _132:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1999))).bat.setColumn("1999"), 
    _965 := bat.new(nil:str,nil:date);  #160 _965:bat[:str,:date] := CMDBATnew(_966:str, _967:date) {G}
barrier (_969,_970,_971):= bat.newIterator(rule_bat);#161 (_969:lng, _970:str, _971:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ165}
    _973 := mtime.compute(_971,1992);   #162 _973:date := MTIMEcompute_rule_foryear(_971:zrule, _140:int) 
    bat.insert(_965,_970,_973);         #163 _974:bat[:str,:date] := BKCinsert_bun(_965:bat[:str,:date], _970:str, _973:date) {G}
    redo (_969,_970,_971):= bat.hasMoreElements(rule_bat);#164 (_969:lng, _970:str, _971:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ162}
exit (_969,_970,_971);                  #165 (_969:lng, _970:str, _971:zrule) 
    kb_a:bat[:str,:date]  := _965;      #166 kb_a:bat[:str,:date] := _965:bat[:str,:date] {G}
    bat.setColumn(kb_a,"1992");         #167 _141:void := BKCsetColumn(kb_a:bat[:str,:date], _142:str) 
#      [compute](rule_bat, 1992).bat.setColumn("1992"), 
    _978 := bat.new(nil:str,nil:date);  #169 _978:bat[:str,:date] := CMDBATnew(_966:str, _967:date) {G}
barrier (_980,_981,_982):= bat.newIterator(rule_bat);#170 (_980:lng, _981:str, _982:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ174}
    _984 := mtime.compute(_982,1992);   #171 _984:date := MTIMEcompute_rule_foryear(_982:zrule, _140:int) 
    bat.insert(_978,_981,_984);         #172 _985:bat[:str,:date] := BKCinsert_bun(_978:bat[:str,:date], _981:str, _984:date) {G}
    redo (_980,_981,_982):= bat.hasMoreElements(rule_bat);#173 (_980:lng, _981:str, _982:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ171}
exit (_980,_981,_982);                  #174 (_980:lng, _981:str, _982:zrule) 
    mb_a:bat[:str,:date]  := _978;      #175 mb_a:bat[:str,:date] := _978:bat[:str,:date] {G}
    _989 := bat.new(nil:str,nil:int);   #176 _989:bat[:str,:int] := CMDBATnew(_966:str, _990:int) {G}
barrier (_992,_993,_994):= bat.newIterator(mb_a);#177 (_992:lng, _993:str, _994:date) := CHPbunIterator(mb_a:bat[:str,:date]) {GJ181}
    _996 := mtime.dayofweek(_994);      #178 _996:int := MTIMEdate_extract_dayofweek(_994:date) 
    bat.insert(_989,_993,_996);         #179 _997:bat[:str,:int] := BKCinsert_bun(_989:bat[:str,:int], _993:str, _996:int) {G}
    redo (_992,_993,_994):= bat.hasMoreElements(mb_a);#180 (_992:lng, _993:str, _994:date) := CHPbunHasMoreElements(mb_a:bat[:str,:date]) {GJ178}
exit (_992,_993,_994);                  #181 (_992:lng, _993:str, _994:date) 
    nb_a:bat[:str,:int]  := _989;       #182 nb_a:bat[:str,:int] := _989:bat[:str,:int] {G}
    _1001 := bat.new(nil:str,nil:str);  #183 _1001:bat[:str,:str] := CMDBATnew(_1002:str, _1002:str) {G}
barrier (_1004,_1005,_1006):= bat.newIterator(nb_a);#184 (_1004:lng, _1005:str, _1006:int) := CHPbunIterator(nb_a:bat[:str,:int]) {GJ188}
    _1008 := mtime.dayname(_1006);      #185 _1008:str := MTIMEday_to_str(_1006:int) {G}
    bat.insert(_1001,_1005,_1008);      #186 _1009:bat[:str,:str] := BKCinsert_bun(_1001:bat[:str,:str], _1005:str, _1008:str) {G}
    redo (_1004,_1005,_1006):= bat.hasMoreElements(nb_a);#187 (_1004:lng, _1005:str, _1006:int) := CHPbunHasMoreElements(nb_a:bat[:str,:int]) {GJ185}
exit (_1004,_1005,_1006);               #188 (_1004:lng, _1005:str, _1006:int) 
    ob_a:bat[:str,:str]  := _1001;      #189 ob_a:bat[:str,:str] := _1001:bat[:str,:str] {G}
    bat.setColumn(ob_a,"1992");         #190 _147:void := BKCsetColumn(ob_a:bat[:str,:str], _142:str) 
    io.print("rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a");#191 _148:void := IOprint_val(_149:str) 
    qb_a := io.print(rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a);#192 qb_a:void := IOtable(rule_bat:bat[:str,:zrule], xa_a:bat[:str,:date], cb_a:bat[:str,:str], eb_a:bat[:str,:date], ib_a:bat[:str,:str], kb_a:bat[:str,:date], ob_a:bat[:str,:str]) 
#      [dayname]([dayofweek]([compute](rule_bat, 1992))).bat.setColumn("1992")); 
    rb_a := bat.setColumn(rule_bat,"rule");#194 rb_a:void := BKCsetColumn(rule_bat:bat[:str,:zrule], _153:str) 
#io.print(rule_bat.bat.setColumn("rule"), 
    _1013 := bat.new(nil:str,nil:date); #196 _1013:bat[:str,:date] := CMDBATnew(_1002:str, _1014:date) {G}
barrier (_1016,_1017,_1018):= bat.newIterator(rule_bat);#197 (_1016:lng, _1017:str, _1018:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ201}
    _1020 := mtime.compute(_1018,1572); #198 _1020:date := MTIMEcompute_rule_foryear(_1018:zrule, _157:int) 
    bat.insert(_1013,_1017,_1020);      #199 _1021:bat[:str,:date] := BKCinsert_bun(_1013:bat[:str,:date], _1017:str, _1020:date) {G}
    redo (_1016,_1017,_1018):= bat.hasMoreElements(rule_bat);#200 (_1016:lng, _1017:str, _1018:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ198}
exit (_1016,_1017,_1018);               #201 (_1016:lng, _1017:str, _1018:zrule) 
    sb_a:bat[:str,:date]  := _1013;     #202 sb_a:bat[:str,:date] := _1013:bat[:str,:date] {G}
    tb_a := bat.setColumn(sb_a,"1572"); #203 tb_a:void := BKCsetColumn(sb_a:bat[:str,:date], _159:str) 
#      [compute](rule_bat, 1572).bat.setColumn("1572"), 
    _1025 := bat.new(nil:str,nil:date); #205 _1025:bat[:str,:date] := CMDBATnew(_1002:str, _1014:date) {G}
barrier (_1027,_1028,_1029):= bat.newIterator(rule_bat);#206 (_1027:lng, _1028:str, _1029:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ210}
    _1031 := mtime.compute(_1029,1572); #207 _1031:date := MTIMEcompute_rule_foryear(_1029:zrule, _157:int) 
    bat.insert(_1025,_1028,_1031);      #208 _1032:bat[:str,:date] := BKCinsert_bun(_1025:bat[:str,:date], _1028:str, _1031:date) {G}
    redo (_1027,_1028,_1029):= bat.hasMoreElements(rule_bat);#209 (_1027:lng, _1028:str, _1029:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ207}
exit (_1027,_1028,_1029);               #210 (_1027:lng, _1028:str, _1029:zrule) 
    ub_a:bat[:str,:date]  := _1025;     #211 ub_a:bat[:str,:date] := _1025:bat[:str,:date] {G}
    _1036 := bat.new(nil:str,nil:int);  #212 _1036:bat[:str,:int] := CMDBATnew(_1037:str, _1038:int) {G}
barrier (_1040,_1041,_1042):= bat.newIterator(ub_a);#213 (_1040:lng, _1041:str, _1042:date) := CHPbunIterator(ub_a:bat[:str,:date]) {GJ217}
    _1044 := mtime.dayofweek(_1042);    #214 _1044:int := MTIMEdate_extract_dayofweek(_1042:date) 
    bat.insert(_1036,_1041,_1044);      #215 _1045:bat[:str,:int] := BKCinsert_bun(_1036:bat[:str,:int], _1041:str, _1044:int) {G}
    redo (_1040,_1041,_1042):= bat.hasMoreElements(ub_a);#216 (_1040:lng, _1041:str, _1042:date) := CHPbunHasMoreElements(ub_a:bat[:str,:date]) {GJ214}
exit (_1040,_1041,_1042);               #217 (_1040:lng, _1041:str, _1042:date) 
    vb_a:bat[:str,:int]  := _1036;      #218 vb_a:bat[:str,:int] := _1036:bat[:str,:int] {G}
    _1049 := bat.new(nil:str,nil:str);  #219 _1049:bat[:str,:str] := CMDBATnew(_1037:str, _1037:str) {G}
barrier (_1051,_1052,_1053):= bat.newIterator(vb_a);#220 (_1051:lng, _1052:str, _1053:int) := CHPbunIterator(vb_a:bat[:str,:int]) {GJ224}
    _1055 := mtime.dayname(_1053);      #221 _1055:str := MTIMEday_to_str(_1053:int) {G}
    bat.insert(_1049,_1052,_1055);      #222 _1056:bat[:str,:str] := BKCinsert_bun(_1049:bat[:str,:str], _1052:str, _1055:str) {G}
    redo (_1051,_1052,_1053):= bat.hasMoreElements(vb_a);#223 (_1051:lng, _1052:str, _1053:int) := CHPbunHasMoreElements(vb_a:bat[:str,:int]) {GJ221}
exit (_1051,_1052,_1053);               #224 (_1051:lng, _1052:str, _1053:int) 
    wb_a:bat[:str,:str]  := _1049;      #225 wb_a:bat[:str,:str] := _1049:bat[:str,:str] {G}
    xb_a := bat.setColumn(wb_a,"1572"); #226 xb_a:void := BKCsetColumn(wb_a:bat[:str,:str], _159:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1572))).bat.setColumn("1572"), 
    _1060 := bat.new(nil:str,nil:date); #228 _1060:bat[:str,:date] := CMDBATnew(_1037:str, _1061:date) {G}
barrier (_1063,_1064,_1065):= bat.newIterator(rule_bat);#229 (_1063:lng, _1064:str, _1065:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ233}
    _1067 := mtime.compute(_1065,1);    #230 _1067:date := MTIMEcompute_rule_foryear(_1065:zrule, _170:int) 
    bat.insert(_1060,_1064,_1067);      #231 _1068:bat[:str,:date] := BKCinsert_bun(_1060:bat[:str,:date], _1064:str, _1067:date) {G}
    redo (_1063,_1064,_1065):= bat.hasMoreElements(rule_bat);#232 (_1063:lng, _1064:str, _1065:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ230}
exit (_1063,_1064,_1065);               #233 (_1063:lng, _1064:str, _1065:zrule) 
    yb_a:bat[:str,:date]  := _1060;     #234 yb_a:bat[:str,:date] := _1060:bat[:str,:date] {G}
    ac_a := bat.setColumn(yb_a,"1");    #235 ac_a:void := BKCsetColumn(yb_a:bat[:str,:date], _172:str) 
#      [compute](rule_bat, 1).bat.setColumn("1"), 
    _1072 := bat.new(nil:str,nil:date); #237 _1072:bat[:str,:date] := CMDBATnew(_1073:str, _1061:date) {G}
barrier (_1075,_1076,_1077):= bat.newIterator(rule_bat);#238 (_1075:lng, _1076:str, _1077:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ242}
    _1079 := mtime.compute(_1077,1);    #239 _1079:date := MTIMEcompute_rule_foryear(_1077:zrule, _170:int) 
    bat.insert(_1072,_1076,_1079);      #240 _1080:bat[:str,:date] := BKCinsert_bun(_1072:bat[:str,:date], _1076:str, _1079:date) {G}
    redo (_1075,_1076,_1077):= bat.hasMoreElements(rule_bat);#241 (_1075:lng, _1076:str, _1077:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ239}
exit (_1075,_1076,_1077);               #242 (_1075:lng, _1076:str, _1077:zrule) 
    bc_a:bat[:str,:date]  := _1072;     #243 bc_a:bat[:str,:date] := _1072:bat[:str,:date] {G}
    _1084 := bat.new(nil:str,nil:int);  #244 _1084:bat[:str,:int] := CMDBATnew(_1073:str, _1085:int) {G}
barrier (_1087,_1088,_1089):= bat.newIterator(bc_a);#245 (_1087:lng, _1088:str, _1089:date) := CHPbunIterator(bc_a:bat[:str,:date]) {GJ249}
    _1091 := mtime.dayofweek(_1089);    #246 _1091:int := MTIMEdate_extract_dayofweek(_1089:date) 
    bat.insert(_1084,_1088,_1091);      #247 _1092:bat[:str,:int] := BKCinsert_bun(_1084:bat[:str,:int], _1088:str, _1091:int) {G}
    redo (_1087,_1088,_1089):= bat.hasMoreElements(bc_a);#248 (_1087:lng, _1088:str, _1089:date) := CHPbunHasMoreElements(bc_a:bat[:str,:date]) {GJ246}
exit (_1087,_1088,_1089);               #249 (_1087:lng, _1088:str, _1089:date) 
    cc_a:bat[:str,:int]  := _1084;      #250 cc_a:bat[:str,:int] := _1084:bat[:str,:int] {G}
    _1096 := bat.new(nil:str,nil:str);  #251 _1096:bat[:str,:str] := CMDBATnew(_1073:str, _1073:str) {G}
barrier (_1098,_1099,_1100):= bat.newIterator(cc_a);#252 (_1098:lng, _1099:str, _1100:int) := CHPbunIterator(cc_a:bat[:str,:int]) {GJ256}
    _1102 := mtime.dayname(_1100);      #253 _1102:str := MTIMEday_to_str(_1100:int) {G}
    bat.insert(_1096,_1099,_1102);      #254 _1103:bat[:str,:str] := BKCinsert_bun(_1096:bat[:str,:str], _1099:str, _1102:str) {G}
    redo (_1098,_1099,_1100):= bat.hasMoreElements(cc_a);#255 (_1098:lng, _1099:str, _1100:int) := CHPbunHasMoreElements(cc_a:bat[:str,:int]) {GJ253}
exit (_1098,_1099,_1100);               #256 (_1098:lng, _1099:str, _1100:int) 
    dc_a:bat[:str,:str]  := _1096;      #257 dc_a:bat[:str,:str] := _1096:bat[:str,:str] {G}
    ec_a := bat.setColumn(dc_a,"1");    #258 ec_a:void := BKCsetColumn(dc_a:bat[:str,:str], _172:str) 
#      [dayname]([dayofweek]([compute](rule_bat, 1))).bat.setColumn("1"), 
    _1107 := bat.new(nil:str,nil:date); #260 _1107:bat[:str,:date] := CMDBATnew(_1108:str, _1109:date) {G}
barrier (_1111,_1112,_1113):= bat.newIterator(rule_bat);#261 (_1111:lng, _1112:str, _1113:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ265}
    _1115 := mtime.compute(_1113,-2000);#262 _1115:date := MTIMEcompute_rule_foryear(_1113:zrule, _180:int) 
    bat.insert(_1107,_1112,_1115);      #263 _1116:bat[:str,:date] := BKCinsert_bun(_1107:bat[:str,:date], _1112:str, _1115:date) {G}
    redo (_1111,_1112,_1113):= bat.hasMoreElements(rule_bat);#264 (_1111:lng, _1112:str, _1113:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ262}
exit (_1111,_1112,_1113);               #265 (_1111:lng, _1112:str, _1113:zrule) 
    fc_a:bat[:str,:date]  := _1107;     #266 fc_a:bat[:str,:date] := _1107:bat[:str,:date] {G}
    gc_a := bat.setColumn(fc_a,"-2000");#267 gc_a:void := BKCsetColumn(fc_a:bat[:str,:date], _182:str) 
#      [compute](rule_bat, -2000).bat.setColumn("-2000"), 
    _1120 := bat.new(nil:str,nil:date); #269 _1120:bat[:str,:date] := CMDBATnew(_1108:str, _1109:date) {G}
barrier (_1122,_1123,_1124):= bat.newIterator(rule_bat);#270 (_1122:lng, _1123:str, _1124:zrule) := CHPbunIterator(rule_bat:bat[:str,:zrule]) {GJ274}
    _1126 := mtime.compute(_1124,-2000);#271 _1126:date := MTIMEcompute_rule_foryear(_1124:zrule, _180:int) 
    bat.insert(_1120,_1123,_1126);      #272 _1127:bat[:str,:date] := BKCinsert_bun(_1120:bat[:str,:date], _1123:str, _1126:date) {G}
    redo (_1122,_1123,_1124):= bat.hasMoreElements(rule_bat);#273 (_1122:lng, _1123:str, _1124:zrule) := CHPbunHasMoreElements(rule_bat:bat[:str,:zrule]) {GJ271}
exit (_1122,_1123,_1124);               #274 (_1122:lng, _1123:str, _1124:zrule) 
    hc_a:bat[:str,:date]  := _1120;     #275 hc_a:bat[:str,:date] := _1120:bat[:str,:date] {G}
    _1131 := bat.new(nil:str,nil:int);  #276 _1131:bat[:str,:int] := CMDBATnew(_1108:str, _1132:int) {G}
barrier (_1134,_1135,_1136):= bat.newIterator(hc_a);#277 (_1134:lng, _1135:str, _1136:date) := CHPbunIterator(hc_a:bat[:str,:date]) {GJ281}
    _1138 := mtime.dayofweek(_1136);    #278 _1138:int := MTIMEdate_extract_dayofweek(_1136:date) 
    bat.insert(_1131,_1135,_1138);      #279 _1139:bat[:str,:int] := BKCinsert_bun(_1131:bat[:str,:int], _1135:str, _1138:int) {G}
    redo (_1134,_1135,_1136):= bat.hasMoreElements(hc_a);#280 (_1134:lng, _1135:str, _1136:date) := CHPbunHasMoreElements(hc_a:bat[:str,:date]) {GJ278}
exit (_1134,_1135,_1136);               #281 (_1134:lng, _1135:str, _1136:date) 
    ic_a:bat[:str,:int]  := _1131;      #282 ic_a:bat[:str,:int] := _1131:bat[:str,:int] {G}
    _1143 := bat.new(nil:str,nil:str);  #283 _1143:bat[:str,:str] := CMDBATnew(_1144:str, _1144:str) {G}
barrier (_1146,_1147,_1148):= bat.newIterator(ic_a);#284 (_1146:lng, _1147:str, _1148:int) := CHPbunIterator(ic_a:bat[:str,:int]) {GJ288}
    _1150 := mtime.dayname(_1148);      #285 _1150:str := MTIMEday_to_str(_1148:int) {G}
    bat.insert(_1143,_1147,_1150);      #286 _1151:bat[:str,:str] := BKCinsert_bun(_1143:bat[:str,:str], _1147:str, _1150:str) {G}
    redo (_1146,_1147,_1148):= bat.hasMoreElements(ic_a);#287 (_1146:lng, _1147:str, _1148:int) := CHPbunHasMoreElements(ic_a:bat[:str,:int]) {GJ285}
exit (_1146,_1147,_1148);               #288 (_1146:lng, _1147:str, _1148:int) 
    jc_a:bat[:str,:str]  := _1143;      #289 jc_a:bat[:str,:str] := _1143:bat[:str,:str] {G}
    kc_a := bat.setColumn(jc_a,"-2000");#290 kc_a:void := BKCsetColumn(jc_a:bat[:str,:str], _182:str) 
    io.print("rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a");#291 _188:void := IOprint_val(_189:str) 
    lc_a := io.print(rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a);#292 lc_a:void := IOtable(rule_bat:bat[:str,:zrule], sb_a:bat[:str,:date], wb_a:bat[:str,:str], yb_a:bat[:str,:date], dc_a:bat[:str,:str], fc_a:bat[:str,:date], jc_a:bat[:str,:str]) 
#      [dayname]([dayofweek]([compute](rule_bat, -2000))).bat.setColumn("-2000")); 
##line 580 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create timezones, using some of the above created rules 
    tzone_00 := mtime.timezone("GMT");  #296 tzone_00:timezone := MTIMEtzone_fromstr(_195:str) 
#var tzone_00 := mtime.timezone("GMT"); 
    tzone_01 := mtime.timezone("GMT+01:00");#298 tzone_01:timezone := MTIMEtzone_fromstr(_198:str) 
#var tzone_01 := mtime.timezone("GMT+01:00"); 
    tzone_02 := mtime.timezone("GMT+0100");#300 tzone_02:timezone := MTIMEtzone_fromstr(_201:str) 
#var tzone_02 := mtime.timezone("GMT+0100"); 
    tzone_03 := mtime.timezone(60,rule_oct,rule_mar);#302 tzone_03:timezone := MTIMEtzone_create_dst(_204:int, rule_oct:zrule, rule_mar:zrule) 
#var tzone_03 := mtime.timezone(60, rule_oct, rule_mar); 
    tzone_04 := mtime.timezone(0,rule_jan,rule_aug);#304 tzone_04:timezone := MTIMEtzone_create_dst(_207:int, rule_jan:zrule, rule_aug:zrule) 
#var tzone_04 := mtime.timezone(0, rule_jan, rule_aug); 
    tzone_05 := mtime.timezone(-97,rule_oct,rule_apr);#306 tzone_05:timezone := MTIMEtzone_create_dst(_210:int, rule_oct:zrule, rule_apr:zrule) 
#var tzone_05 := mtime.timezone(-97, rule_oct, rule_apr); 
    tzone_06 := mtime.timezone(-97,rule_may,rule_sep);#308 tzone_06:timezone := MTIMEtzone_create_dst(_210:int, rule_may:zrule, rule_sep:zrule) 
#var tzone_06 := mtime.timezone(-97, rule_may, rule_sep); 
    mc_a := calc.*(23,60);              #310 mc_a:int := CALCbinaryMULintint(_215:int, _204:int) 
    tzone_07 := mtime.timezone(mc_a,rule_apr,rule_nov);#311 tzone_07:timezone := MTIMEtzone_create_dst(mc_a:int, rule_apr:zrule, rule_nov:zrule) 
#var tzone_07 := mtime.timezone(23*60, rule_apr, rule_nov); 
    nc_a := calc.*(-23,59);             #313 nc_a:int := CALCbinaryMULintint(_219:int, _220:int) 
    oc_a := calc.-(nc_a,59);            #314 oc_a:int := CALCbinarySUBintint(nc_a:int, _220:int) 
    tzone_08 := mtime.timezone(oc_a);   #315 tzone_08:timezone := MTIMEtzone_create(oc_a:int) 
#var tzone_08 := mtime.timezone((-23*59) - 59); 
    tzone_09 := mtime.timezone(0);      #317 tzone_09:timezone := MTIMEtzone_create(_207:int) 
#var tzone_09 := mtime.timezone(0); 
    tzone_10 := mtime.timezone(-60);    #319 tzone_10:timezone := MTIMEtzone_create(_227:int) 
#var tzone_10 := mtime.timezone(-60); 
    pc_a := calc.*(23,60);              #321 pc_a:int := CALCbinaryMULintint(_215:int, _204:int) 
    qc_a := calc.+(pc_a,59);            #322 qc_a:int := CALCbinaryADDintint(pc_a:int, _220:int) 
    tzone_11 := mtime.timezone(qc_a);   #323 tzone_11:timezone := MTIMEtzone_create(qc_a:int) 
#var tzone_11 := mtime.timezone((23*60)+59); 
    tzone_12 := mtime.timezone(60);     #325 tzone_12:timezone := MTIMEtzone_create(_204:int) 
#var tzone_12 := mtime.timezone(60); 
## nil tzones 
    tzone_13 := mtime.timezone(60,rule_feb,rule_dec);#328 tzone_13:timezone := MTIMEtzone_create_dst(_237:int, rule_feb:zrule, rule_dec:zrule) 
#var tzone_13 := mtime.timezone(60, rule_feb, rule_dec); 
    rc_a := calc.*(24,60);              #330 rc_a:int := CALCbinaryMULintint(_240:int, _237:int) 
    tzone_14 := mtime.timezone(rc_a,rule_apr,rule_nov);#331 tzone_14:timezone := MTIMEtzone_create_dst(rc_a:int, rule_apr:zrule, rule_nov:zrule) 
# to complete it 
    tzone_15 := mtime.timezone(rc_a,rule_apr,rule_nov);#333 tzone_15:timezone := MTIMEtzone_create_dst(rc_a:int, rule_apr:zrule, rule_nov:zrule) 
#var tzone_15 := mtime.timezone(24*60, rule_apr, rule_nov); 
    tzone_bat := bat.new(:oid,:timezone);#335 tzone_bat:bat[:oid,:timezone] := CMDBATnew(_246:oid, _247:timezone) {G}
#var tzone_bat := bat.new(oid,tzone); 
    bat.insert(tzone_bat,0@0,tzone_00); #337 _249:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _250:oid, tzone_00:timezone) {G}
    bat.insert(tzone_bat,1@0,tzone_01); #338 _251:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _252:oid, tzone_01:timezone) {G}
    bat.insert(tzone_bat,2@0,tzone_02); #339 _253:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _254:oid, tzone_02:timezone) {G}
#tzone_bat.bat.insert(0@0, tzone_00).insert(1@0, tzone_01).insert(2@0, tzone_02); 
    bat.insert(tzone_bat,3@0,tzone_03); #341 _256:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _257:oid, tzone_03:timezone) {G}
    bat.insert(tzone_bat,4@0,tzone_04); #342 _258:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _259:oid, tzone_04:timezone) {G}
    bat.insert(tzone_bat,5@0,tzone_05); #343 _260:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _261:oid, tzone_05:timezone) {G}
#tzone_bat.bat.insert(3@0, tzone_03).insert(4@0, tzone_04).insert(5@0, tzone_05); 
    bat.insert(tzone_bat,6@0,tzone_06); #345 _263:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _264:oid, tzone_06:timezone) {G}
    bat.insert(tzone_bat,7@0,tzone_07); #346 _265:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _266:oid, tzone_07:timezone) {G}
    bat.insert(tzone_bat,8@0,tzone_08); #347 _267:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _268:oid, tzone_08:timezone) {G}
#tzone_bat.bat.insert(6@0, tzone_06).insert(7@0, tzone_07).insert(8@0, tzone_08); 
    bat.insert(tzone_bat,9@0,tzone_09); #349 _270:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _271:oid, tzone_09:timezone) {G}
    bat.insert(tzone_bat,10@0,tzone_10);#350 _272:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _273:oid, tzone_10:timezone) {G}
    bat.insert(tzone_bat,11@0,tzone_11);#351 _274:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _275:oid, tzone_11:timezone) {G}
#tzone_bat.bat.insert(9@0, tzone_09).insert(10@0, tzone_10).insert(11@0, tzone_11); 
    bat.insert(tzone_bat,12@0,tzone_12);#353 _277:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _278:oid, tzone_12:timezone) {G}
    bat.insert(tzone_bat,13@0,tzone_13);#354 _279:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _280:oid, tzone_13:timezone) {G}
    bat.insert(tzone_bat,14@0,tzone_15);#355 _281:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _282:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,15@0,tzone_15);#356 _283:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _284:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,16@0,tzone_15);#357 _285:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _286:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,17@0,tzone_15);#358 _287:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _288:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,18@0,tzone_15);#359 _289:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _290:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,19@0,tzone_15);#360 _291:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _292:oid, tzone_15:timezone) {G}
    bat.insert(tzone_bat,20@0,tzone_15);#361 _293:bat[:oid,:timezone] := BKCinsert_bun(tzone_bat:bat[:oid,:timezone], _294:oid, tzone_15:timezone) {G}
#tzone_bat.bat.insert(12@0, tzone_12).insert(13@0, tzone_13).insert(15@0, tzone_15); 
## test the operations on tzones 
    bat.setName(tzone_bat,"timezone");  #364 _297:void := BKCsetName(tzone_bat:bat[:oid,:timezone], _298:str) 
#io.print(tzone_bat); 
#io.print("start error"); 
#x:= getRefCount(tzone_bat); 
#io.print(x); 
#jd_a := io.print(tzone_bat); 
#io.print("end"); 
#io.print(x); 
#x:= getRefCount(tzone_bat); 
    io.print("tzone_bat");              #373 _307:void := IOprint_val(_308:str) 
    io.print(tzone_bat);                #374 _309:void := IOprint_val(tzone_bat:bat[:oid,:timezone]) 
#io.print(tzone_bat.bat.setColumn("tzone")); 
    _1155 := bat.new(nil:oid,nil:int);  #376 _1155:bat[:oid,:int] := CMDBATnew(_1156:oid, _1132:int) {G}
barrier (_1158,_1159,_1160):= bat.newIterator(tzone_bat);#377 (_1158:lng, _1159:oid, _1160:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J381}
    _1162 := mtime.minutes(_1160);      #378 _1162:int := MTIMEtzone_extract_minutes(_1160:timezone) 
    bat.insert(_1155,_1159,_1162);      #379 _1163:bat[:oid,:int] := BKCinsert_bun(_1155:bat[:oid,:int], _1159:oid, _1162:int) {G}
    redo (_1158,_1159,_1160):= bat.hasMoreElements(tzone_bat);#380 (_1158:lng, _1159:oid, _1160:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J378}
exit (_1158,_1159,_1160);               #381 (_1158:lng, _1159:oid, _1160:timezone) 
    kd_a:bat[:oid,:int]  := _1155;      #382 kd_a:bat[:oid,:int] := _1155:bat[:oid,:int] {G}
    bat.setColumn(kd_a,"minutes");      #383 _314:void := BKCsetColumn(kd_a:bat[:oid,:int], _313:str) 
#io.print([minutes](tzone_bat).bat.setColumn("minutes"), 
    _1167 := bat.new(nil:oid,nil:zrule);#385 _1167:bat[:oid,:zrule] := CMDBATnew(_1156:oid, _1168:zrule) {G}
barrier (_1170,_1171,_1172):= bat.newIterator(tzone_bat);#386 (_1170:lng, _1171:oid, _1172:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J390}
    _1174 := mtime.start_dst(_1172);    #387 _1174:zrule := MTIMEtzone_extract_start(_1172:timezone) 
    bat.insert(_1167,_1171,_1174);      #388 _1175:bat[:oid,:zrule] := BKCinsert_bun(_1167:bat[:oid,:zrule], _1171:oid, _1174:zrule) {G}
    redo (_1170,_1171,_1172):= bat.hasMoreElements(tzone_bat);#389 (_1170:lng, _1171:oid, _1172:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J387}
exit (_1170,_1171,_1172);               #390 (_1170:lng, _1171:oid, _1172:timezone) 
    md_a:bat[:oid,:zrule]  := _1167;    #391 md_a:bat[:oid,:zrule] := _1167:bat[:oid,:zrule] {G}
    bat.setColumn(md_a,"start_dst");    #392 _318:void := BKCsetColumn(md_a:bat[:oid,:zrule], _317:str) 
#      [start_dst](tzone_bat).bat.setColumn("start_dst"), 
    _1179 := bat.new(nil:oid,nil:zrule);#394 _1179:bat[:oid,:zrule] := CMDBATnew(_1156:oid, _1168:zrule) {G}
barrier (_1181,_1182,_1183):= bat.newIterator(tzone_bat);#395 (_1181:lng, _1182:oid, _1183:timezone) := CHPbunIterator(tzone_bat:bat[:oid,:timezone]) {J399}
    _1185 := mtime.end_dst(_1183);      #396 _1185:zrule := MTIMEtzone_extract_end(_1183:timezone) 
    bat.insert(_1179,_1182,_1185);      #397 _1186:bat[:oid,:zrule] := BKCinsert_bun(_1179:bat[:oid,:zrule], _1182:oid, _1185:zrule) {G}
    redo (_1181,_1182,_1183):= bat.hasMoreElements(tzone_bat);#398 (_1181:lng, _1182:oid, _1183:timezone) := CHPbunHasMoreElements(tzone_bat:bat[:oid,:timezone]) {J396}
exit (_1181,_1182,_1183);               #399 (_1181:lng, _1182:oid, _1183:timezone) 
    od_a:bat[:oid,:zrule]  := _1179;    #400 od_a:bat[:oid,:zrule] := _1179:bat[:oid,:zrule] {G}
    bat.setColumn(od_a,"end_dst");      #401 _322:void := BKCsetColumn(od_a:bat[:oid,:zrule], _321:str) 
    io.print("print(kd_a,md_a,od_a)");  #402 _323:void := IOprint_val(_324:str) 
    qd_a := io.print(kd_a,md_a,od_a);   #403 qd_a:void := IOtable(kd_a:bat[:oid,:int], md_a:bat[:oid,:zrule], od_a:bat[:oid,:zrule]) 
#      [end_dst](tzone_bat).bat.setColumn("end_dst")); 
##line 614 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways to create dates 
    date_00 := mtime.date(2000,1,1);    #407 date_00:date := MTIMEdate_create(_330:int, _331:int, _331:int) 
#var date_00 := date(2000,01,01); 
    date_01 := mtime.date("5000-JAN-01");#409 date_01:date := MTIMEdate_fromstr(_334:str) 
#var date_01 := date("5000-JAN-01"); 
    date_02 := mtime.date("1968-FEBR-29");#411 date_02:date := MTIMEdate_fromstr(_337:str) 
#var date_02 := date("1968-FEBR-29"); 
    date_03 := mtime.date("1-MARCH-01");#413 date_03:date := MTIMEdate_fromstr(_340:str) 
#var date_03 := date("1-MARCH-01"); 
    date_04 := mtime.date("-5867411-JAN-1");#415 date_04:date := MTIMEdate_fromstr(_343:str) 
#var date_04 := date("-5867411-JAN-1"); 
    date_05 := mtime.date("-768/octobe/01");#417 date_05:date := MTIMEdate_fromstr(_346:str) 
#var date_05 := date("-768/octobe/01"); 
    date_06 := mtime.date("5000\\novembe\\01");#419 date_06:date := MTIMEdate_fromstr(_349:str) 
#var date_06 := date("5000\\novembe\\01"); 
    date_07 := mtime.date("-1999/jun/01");#421 date_07:date := MTIMEdate_fromstr(_352:str) 
#var date_07 := date("-1999/jun/01"); 
    date_08 := mtime.date("2000-jul-14");#423 date_08:date := MTIMEdate_fromstr(_355:str) 
#var date_08 := date("2000-jul-14"); 
    date_09 := mtime.date("1999-sept-01");#425 date_09:date := MTIMEdate_fromstr(_358:str) 
#var date_09 := date("1999-sept-01"); 
    date_10 := mtime.date("1998-decemBeR-01");#427 date_10:date := MTIMEdate_fromstr(_361:str) 
#var date_10 := date("1998-decemBeR-01"); 
    date_11 := mtime.date("1953 may                01");#429 date_11:date := MTIMEdate_fromstr(_364:str) 
#var date_11 := date("1953 may                01"); 
    date_12 := mtime.date("5867411-DEC-31");#431 date_12:date := MTIMEdate_fromstr(_367:str) 
#var date_12 := date("5867411-DEC-31"); 
## nil dates 
    date_13 := mtime.date(1996,13,1);   #434 date_13:date := MTIMEdate_create(_371:int, _372:int, _373:int) 
#var date_13 := date(1996,13,1); 
    date_14 := mtime.date("999999999999999999999-01-01");#436 date_14:date := MTIMEdate_fromstr(_376:str) 
#var date_14 := date("999999999999999999999-01-01"); 
    date_15 := mtime.date("1999-JANUARI-01");#438 date_15:date := MTIMEdate_fromstr(_379:str) 
#var date_15 := date("1999-JANUARI-01"); 
    date_16 := mtime.date("1999-FEBR-29");#440 date_16:date := MTIMEdate_fromstr(_382:str) 
#var date_16 := date("1999-FEBR-29"); 
    date_17 := mtime.date("-1-DECEMBER-0");#442 date_17:date := MTIMEdate_fromstr(_385:str) 
#var date_17 := date("-1-DECEMBER-0"); 
    date_18 := mtime.date("5000\novembe31");#444 date_18:date := MTIMEdate_fromstr(_388:str) 
#var date_18 := date("5000\novembe\31"); 
    date_19 := mtime.date("nil");       #446 date_19:date := MTIMEdate_fromstr(_391:str) 
#var date_19 := date("nil"); 
    date_20 := mtime.date("1999-sept-31");#448 date_20:date := MTIMEdate_fromstr(_394:str) 
#var date_20 := date("1999-sept-31"); 
    date_bat := bat.new(:oid,:date);    #450 date_bat:bat[:oid,:date] := CMDBATnew(_246:oid, _397:date) {G}
#var date_bat := bat.new(oid,date); 
    bat.insert(date_bat,0@0,date_00);   #452 _399:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _400:oid, date_00:date) {G}
    bat.insert(date_bat,1@0,date_01);   #453 _401:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _402:oid, date_01:date) {G}
    bat.insert(date_bat,2@0,date_02);   #454 _403:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _404:oid, date_02:date) {G}
#date_bat.bat.insert(0@0, date_00).insert(1@0, date_01).insert(2@0, date_02); 
    bat.insert(date_bat,3@0,date_03);   #456 _406:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _407:oid, date_03:date) {G}
    bat.insert(date_bat,4@0,date_04);   #457 _408:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _409:oid, date_04:date) {G}
    bat.insert(date_bat,5@0,date_05);   #458 _410:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _411:oid, date_05:date) {G}
#date_bat.bat.insert(3@0, date_03).insert(4@0, date_04).insert(5@0, date_05); 
    bat.insert(date_bat,6@0,date_06);   #460 _413:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _414:oid, date_06:date) {G}
    bat.insert(date_bat,7@0,date_07);   #461 _415:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _416:oid, date_07:date) {G}
    bat.insert(date_bat,8@0,date_08);   #462 _417:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _418:oid, date_08:date) {G}
#date_bat.bat.insert(6@0, date_06).insert(7@0, date_07).insert(8@0, date_08); 
    bat.insert(date_bat,9@0,date_09);   #464 _420:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _421:oid, date_09:date) {G}
    bat.insert(date_bat,10@0,date_10);  #465 _422:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _423:oid, date_10:date) {G}
    bat.insert(date_bat,11@0,date_11);  #466 _424:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _425:oid, date_11:date) {G}
#date_bat.bat.insert(9@0, date_09).insert(10@0, date_10).insert(11@0, date_11); 
    bat.insert(date_bat,12@0,date_12);  #468 _427:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _428:oid, date_12:date) {G}
    bat.insert(date_bat,13@0,date_13);  #469 _429:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _430:oid, date_13:date) {G}
    bat.insert(date_bat,14@0,date_14);  #470 _431:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _432:oid, date_14:date) {G}
#date_bat.bat.insert(12@0, date_12).insert(13@0, date_13).insert(14@0, date_14); 
    bat.insert(date_bat,15@0,date_15);  #472 _434:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _435:oid, date_15:date) {G}
    bat.insert(date_bat,16@0,date_16);  #473 _436:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _437:oid, date_16:date) {G}
    bat.insert(date_bat,17@0,date_17);  #474 _438:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _439:oid, date_17:date) {G}
#date_bat.bat.insert(15@0, date_15).insert(16@0, date_16).insert(17@0, date_17); 
    bat.insert(date_bat,18@0,date_18);  #476 _441:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _442:oid, date_18:date) {G}
    bat.insert(date_bat,19@0,date_19);  #477 _443:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _444:oid, date_19:date) {G}
    bat.insert(date_bat,20@0,date_20);  #478 _445:bat[:oid,:date] := BKCinsert_bun(date_bat:bat[:oid,:date], _446:oid, date_20:date) {G}
#date_bat.bat.insert(18@0, date_18).insert(19@0, date_19).insert(20@0, date_20); 
## test the operations on dates 
    ne_a := bat.setColumn(date_bat,"date");#481 ne_a:void := BKCsetColumn(date_bat:bat[:oid,:date], _450:str) 
#io.print(date_bat.bat.setColumn("date"), 
    _1190 := bat.new(nil:oid,nil:int);  #483 _1190:bat[:oid,:int] := CMDBATnew(_1191:oid, _1192:int) {G}
barrier (_1194,_1195,_1196):= bat.newIterator(date_bat);#484 (_1194:lng, _1195:oid, _1196:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J488}
    _1198 := mtime.year(_1196);         #485 _1198:int := MTIMEdate_extract_year(_1196:date) 
    bat.insert(_1190,_1195,_1198);      #486 _1199:bat[:oid,:int] := BKCinsert_bun(_1190:bat[:oid,:int], _1195:oid, _1198:int) {G}
    redo (_1194,_1195,_1196):= bat.hasMoreElements(date_bat);#487 (_1194:lng, _1195:oid, _1196:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J485}
exit (_1194,_1195,_1196);               #488 (_1194:lng, _1195:oid, _1196:date) 
    oe_a:bat[:oid,:int]  := _1190;      #489 oe_a:bat[:oid,:int] := _1190:bat[:oid,:int] {G}
    pe_a := bat.setColumn(oe_a,"year"); #490 pe_a:void := BKCsetColumn(oe_a:bat[:oid,:int], _454:str) 
#      [year](date_bat).bat.setColumn("year"), 
    _1203 := bat.new(nil:oid,nil:int);  #492 _1203:bat[:oid,:int] := CMDBATnew(_1191:oid, _1192:int) {G}
barrier (_1205,_1206,_1207):= bat.newIterator(date_bat);#493 (_1205:lng, _1206:oid, _1207:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J497}
    _1209 := mtime.day(_1207);          #494 _1209:int := MTIMEdate_extract_day(_1207:date) 
    bat.insert(_1203,_1206,_1209);      #495 _1210:bat[:oid,:int] := BKCinsert_bun(_1203:bat[:oid,:int], _1206:oid, _1209:int) {G}
    redo (_1205,_1206,_1207):= bat.hasMoreElements(date_bat);#496 (_1205:lng, _1206:oid, _1207:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J494}
exit (_1205,_1206,_1207);               #497 (_1205:lng, _1206:oid, _1207:date) 
    qe_a:bat[:oid,:int]  := _1203;      #498 qe_a:bat[:oid,:int] := _1203:bat[:oid,:int] {G}
    re_a := bat.setColumn(qe_a,"day");  #499 re_a:void := BKCsetColumn(qe_a:bat[:oid,:int], _458:str) 
#      [day](date_bat).bat.setColumn("day"), 
    _1214 := bat.new(nil:oid,nil:int);  #501 _1214:bat[:oid,:int] := CMDBATnew(_1191:oid, _1192:int) {G}
barrier (_1216,_1217,_1218):= bat.newIterator(date_bat);#502 (_1216:lng, _1217:oid, _1218:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J506}
    _1220 := mtime.month(_1218);        #503 _1220:int := MTIMEdate_extract_month(_1218:date) 
    bat.insert(_1214,_1217,_1220);      #504 _1221:bat[:oid,:int] := BKCinsert_bun(_1214:bat[:oid,:int], _1217:oid, _1220:int) {G}
    redo (_1216,_1217,_1218):= bat.hasMoreElements(date_bat);#505 (_1216:lng, _1217:oid, _1218:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J503}
exit (_1216,_1217,_1218);               #506 (_1216:lng, _1217:oid, _1218:date) 
    se_a:bat[:oid,:int]  := _1214;      #507 se_a:bat[:oid,:int] := _1214:bat[:oid,:int] {G}
    _1225 := bat.new(nil:oid,nil:str);  #508 _1225:bat[:oid,:str] := CMDBATnew(_1226:oid, _1227:str) {G}
barrier (_1229,_1230,_1231):= bat.newIterator(se_a);#509 (_1229:lng, _1230:oid, _1231:int) := CHPbunIterator(se_a:bat[:oid,:int]) {J513}
    _1233 := mtime.monthname(_1231);    #510 _1233:str := MTIMEmonth_to_str(_1231:int) {G}
    bat.insert(_1225,_1230,_1233);      #511 _1234:bat[:oid,:str] := BKCinsert_bun(_1225:bat[:oid,:str], _1230:oid, _1233:str) {G}
    redo (_1229,_1230,_1231):= bat.hasMoreElements(se_a);#512 (_1229:lng, _1230:oid, _1231:int) := CHPbunHasMoreElements(se_a:bat[:oid,:int]) {J510}
exit (_1229,_1230,_1231);               #513 (_1229:lng, _1230:oid, _1231:int) 
    te_a:bat[:oid,:str]  := _1225;      #514 te_a:bat[:oid,:str] := _1225:bat[:oid,:str] {G}
    ue_a := bat.setColumn(te_a,"monthname");#515 ue_a:void := BKCsetColumn(te_a:bat[:oid,:str], _464:str) 
#      [monthname]([month](date_bat)).bat.setColumn("monthname"), 
    _1238 := bat.new(nil:oid,nil:int);  #517 _1238:bat[:oid,:int] := CMDBATnew(_1226:oid, _1239:int) {G}
barrier (_1241,_1242,_1243):= bat.newIterator(date_bat);#518 (_1241:lng, _1242:oid, _1243:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J522}
    _1245 := mtime.month(_1243);        #519 _1245:int := MTIMEdate_extract_month(_1243:date) 
    bat.insert(_1238,_1242,_1245);      #520 _1246:bat[:oid,:int] := BKCinsert_bun(_1238:bat[:oid,:int], _1242:oid, _1245:int) {G}
    redo (_1241,_1242,_1243):= bat.hasMoreElements(date_bat);#521 (_1241:lng, _1242:oid, _1243:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J519}
exit (_1241,_1242,_1243);               #522 (_1241:lng, _1242:oid, _1243:date) 
    ve_a:bat[:oid,:int]  := _1238;      #523 ve_a:bat[:oid,:int] := _1238:bat[:oid,:int] {G}
    _1250 := bat.new(nil:oid,nil:str);  #524 _1250:bat[:oid,:str] := CMDBATnew(_1226:oid, _1227:str) {G}
barrier (_1252,_1253,_1254):= bat.newIterator(ve_a);#525 (_1252:lng, _1253:oid, _1254:int) := CHPbunIterator(ve_a:bat[:oid,:int]) {J529}
    _1256 := mtime.monthname(_1254);    #526 _1256:str := MTIMEmonth_to_str(_1254:int) {G}
    bat.insert(_1250,_1253,_1256);      #527 _1257:bat[:oid,:str] := BKCinsert_bun(_1250:bat[:oid,:str], _1253:oid, _1256:str) {G}
    redo (_1252,_1253,_1254):= bat.hasMoreElements(ve_a);#528 (_1252:lng, _1253:oid, _1254:int) := CHPbunHasMoreElements(ve_a:bat[:oid,:int]) {J526}
exit (_1252,_1253,_1254);               #529 (_1252:lng, _1253:oid, _1254:int) 
    we_a:bat[:oid,:str]  := _1250;      #530 we_a:bat[:oid,:str] := _1250:bat[:oid,:str] {G}
    _1261 := bat.new(nil:oid,nil:int);  #531 _1261:bat[:oid,:int] := CMDBATnew(_1262:oid, _1239:int) {G}
barrier (_1264,_1265,_1266):= bat.newIterator(we_a);#532 (_1264:lng, _1265:oid, _1266:str) := CHPbunIterator(we_a:bat[:oid,:str]) {GJ536}
    _1268 := mtime.monthnum(_1266);     #533 _1268:int := MTIMEmonth_from_str(_1266:str) 
    bat.insert(_1261,_1265,_1268);      #534 _1269:bat[:oid,:int] := BKCinsert_bun(_1261:bat[:oid,:int], _1265:oid, _1268:int) {G}
    redo (_1264,_1265,_1266):= bat.hasMoreElements(we_a);#535 (_1264:lng, _1265:oid, _1266:str) := CHPbunHasMoreElements(we_a:bat[:oid,:str]) {GJ533}
exit (_1264,_1265,_1266);               #536 (_1264:lng, _1265:oid, _1266:str) 
    xe_a:bat[:oid,:int]  := _1261;      #537 xe_a:bat[:oid,:int] := _1261:bat[:oid,:int] {G}
    ye_a := bat.setColumn(xe_a,"monthnum");#538 ye_a:void := BKCsetColumn(xe_a:bat[:oid,:int], _470:str) 
    io.print("print(date_bat,oe_a,qe_a,te_a,xe_a)");#539 _472:void := IOprint_val(_473:str) 
    af_a := io.print(date_bat,oe_a,qe_a,te_a,xe_a);#540 af_a:void := IOtable(date_bat:bat[:oid,:date], oe_a:bat[:oid,:int], qe_a:bat[:oid,:int], te_a:bat[:oid,:str], xe_a:bat[:oid,:int]) 
#      [monthnum]([monthname]([month](date_bat))).bat.setColumn("monthnum")); 
    _1273 := bat.new(nil:oid,nil:date); #542 _1273:bat[:oid,:date] := CMDBATnew(_1262:oid, _1274:date) {G}
barrier (_1276,_1277,_1278):= bat.newIterator(date_bat);#543 (_1276:lng, _1277:oid, _1278:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J547}
    _1280 := mtime.addyears(_1278,-100);#544 _1280:date := MTIMEdate_addyears(_1278:date, _478:int) 
    bat.insert(_1273,_1277,_1280);      #545 _1281:bat[:oid,:date] := BKCinsert_bun(_1273:bat[:oid,:date], _1277:oid, _1280:date) {G}
    redo (_1276,_1277,_1278):= bat.hasMoreElements(date_bat);#546 (_1276:lng, _1277:oid, _1278:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J544}
exit (_1276,_1277,_1278);               #547 (_1276:lng, _1277:oid, _1278:date) 
    date_addyears:bat[:oid,:date]  := _1273;#548 date_addyears:bat[:oid,:date] := _1273:bat[:oid,:date] {G}
#var date_addyears := [addyears](date_bat, -100); 
    _1285 := bat.new(nil:oid,nil:date); #550 _1285:bat[:oid,:date] := CMDBATnew(_1262:oid, _1274:date) {G}
barrier (_1287,_1288,_1289):= bat.newIterator(date_bat);#551 (_1287:lng, _1288:oid, _1289:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J555}
    _1291 := mtime.addmonths(_1289,1);  #552 _1291:date := MTIMEdate_addmonths(_1289:date, _482:int) 
    bat.insert(_1285,_1288,_1291);      #553 _1292:bat[:oid,:date] := BKCinsert_bun(_1285:bat[:oid,:date], _1288:oid, _1291:date) {G}
    redo (_1287,_1288,_1289):= bat.hasMoreElements(date_bat);#554 (_1287:lng, _1288:oid, _1289:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J552}
exit (_1287,_1288,_1289);               #555 (_1287:lng, _1288:oid, _1289:date) 
    date_addmonths:bat[:oid,:date]  := _1285;#556 date_addmonths:bat[:oid,:date] := _1285:bat[:oid,:date] {G}
#var date_addmonths := [addmonths](date_bat, 1); 
    bat.setColumn(date_bat,"date");     #558 _484:void := BKCsetColumn(date_bat:bat[:oid,:date], _485:str) 
#io.print(date_bat.bat.setColumn("date"), 
    bat.setColumn(date_addyears,"min100y");#560 _487:void := BKCsetColumn(date_addyears:bat[:oid,:date], _488:str) 
#      date_addyears.bat.setColumn("min100y"), 
    _1296 := bat.new(nil:oid,nil:int);  #562 _1296:bat[:oid,:int] := CMDBATnew(_1297:oid, _1298:int) {G}
barrier (_1300,_1301,_1302):= bat.newIterator(date_addyears);#563 (_1300:lng, _1301:oid, _1302:date) := CHPbunIterator(date_addyears:bat[:oid,:date]) {J568}
    _1304 := algebra.find(date_bat,_1301);#564 _1304:date := ALGfind(date_bat:bat[:oid,:date], _1301:oid) 
    _1306 := mtime.diff(_1302,_1304);   #565 _1306:int := MTIMEdate_diff(_1302:date, _1304:date) 
    bat.insert(_1296,_1301,_1306);      #566 _1307:bat[:oid,:int] := BKCinsert_bun(_1296:bat[:oid,:int], _1301:oid, _1306:int) {G}
    redo (_1300,_1301,_1302):= bat.hasMoreElements(date_addyears);#567 (_1300:lng, _1301:oid, _1302:date) := CHPbunHasMoreElements(date_addyears:bat[:oid,:date]) {J564}
exit (_1300,_1301,_1302);               #568 (_1300:lng, _1301:oid, _1302:date) 
    df_a:bat[:oid,:int]  := _1296;      #569 df_a:bat[:oid,:int] := _1296:bat[:oid,:int] {G}
    bat.setColumn(df_a,"diff");         #570 _493:void := BKCsetColumn(df_a:bat[:oid,:int], _492:str) 
    io.print("print(date_bat,date_addyears,df_a)");#571 _494:void := IOprint_val(_495:str) 
    ff_a := io.print(date_bat,date_addyears,df_a);#572 ff_a:void := IOtable(date_bat:bat[:oid,:date], date_addyears:bat[:oid,:date], df_a:bat[:oid,:int]) 
#      [diff](date_addyears, date_bat).bat.setColumn("diff")); 
    bat.setColumn(date_bat,"date");     #574 _498:void := BKCsetColumn(date_bat:bat[:oid,:date], _485:str) 
#io.print(date_bat.bat.setColumn("date"), 
    bat.setColumn(date_addmonths,"plus1m");#576 _500:void := BKCsetColumn(date_addmonths:bat[:oid,:date], _501:str) 
#      date_addmonths.bat.setColumn("plus1m"), 
    _1311 := bat.new(nil:oid,nil:int);  #578 _1311:bat[:oid,:int] := CMDBATnew(_1297:oid, _1298:int) {G}
barrier (_1313,_1314,_1315):= bat.newIterator(date_addmonths);#579 (_1313:lng, _1314:oid, _1315:date) := CHPbunIterator(date_addmonths:bat[:oid,:date]) {J584}
    _1317 := algebra.find(date_bat,_1314);#580 _1317:date := ALGfind(date_bat:bat[:oid,:date], _1314:oid) 
    _1319 := mtime.diff(_1315,_1317);   #581 _1319:int := MTIMEdate_diff(_1315:date, _1317:date) 
    bat.insert(_1311,_1314,_1319);      #582 _1320:bat[:oid,:int] := BKCinsert_bun(_1311:bat[:oid,:int], _1314:oid, _1319:int) {G}
    redo (_1313,_1314,_1315):= bat.hasMoreElements(date_addmonths);#583 (_1313:lng, _1314:oid, _1315:date) := CHPbunHasMoreElements(date_addmonths:bat[:oid,:date]) {J580}
exit (_1313,_1314,_1315);               #584 (_1313:lng, _1314:oid, _1315:date) 
    if_a:bat[:oid,:int]  := _1311;      #585 if_a:bat[:oid,:int] := _1311:bat[:oid,:int] {G}
    bat.setColumn(if_a,"diff");         #586 _504:void := BKCsetColumn(if_a:bat[:oid,:int], _492:str) 
    io.print(" print(date_bat,date_addmonths,if_a)");#587 _505:void := IOprint_val(_506:str) 
    kf_a := io.print(date_bat,date_addmonths,if_a);#588 kf_a:void := IOtable(date_bat:bat[:oid,:date], date_addmonths:bat[:oid,:date], if_a:bat[:oid,:int]) 
#      [diff](date_addmonths, date_bat).bat.setColumn("diff")); 
## test dayofweek and weeknumber using more than two years as consecutive days 
    date_seq := bat.new(:int,:date);    #591 date_seq:bat[:int,:date] := CMDBATnew(_511:int, _397:date) {G}
#var date_seq := bat.new(int, date); 
    i := -375;                          #593 i:int := _514:int 
#var i := -375; 
barrier lf_a := true;                   #595 lf_a:bit := _517:bit {J605}
    i := calc.+(i,1);                   #596 i:int := CALCbinaryADDintint(i:int, _518:int) 
    of_a := calc.<(i,375);              #597 of_a:bit := CALCcompLTintint(i:int, _520:int) 
barrier mf_a := of_a;                   #598 mf_a:bit := of_a:bit {J604}
#while ((i :+= 1) < 375) { 
    pf_a := mtime.adddays(date_00,i);   #600 pf_a:date := MTIMEdate_adddays(date_00:date, i:int) 
    bat.insert(date_seq,i,pf_a);        #601 _524:bat[:int,:date] := BKCinsert_bun(date_seq:bat[:int,:date], i:int, pf_a:date) {G}
#	date_seq.bat.insert(i,adddays(date_00,i)); 
    redo lf_a;                          #603 lf_a:bit {J596}
exit mf_a;                              #604 mf_a:bit 
exit lf_a;                              #605 lf_a:bit 
#} 
    rf_a := bat.setColumn(date_seq,"date");#607 rf_a:void := BKCsetColumn(date_seq:bat[:int,:date], _528:str) 
#io.print(date_seq.bat.setColumn("date"), 
    _1324 := bat.new(nil:int,nil:int);  #609 _1324:bat[:int,:int] := CMDBATnew(_1298:int, _1298:int) {G}
barrier (_1326,_1327,_1328):= bat.newIterator(date_seq);#610 (_1326:lng, _1327:int, _1328:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J614}
    _1330 := mtime.weekofyear(_1328);   #611 _1330:int := MTIMEdate_extract_weekofyear(_1328:date) 
    bat.insert(_1324,_1327,_1330);      #612 _1331:bat[:int,:int] := BKCinsert_bun(_1324:bat[:int,:int], _1327:int, _1330:int) {G}
    redo (_1326,_1327,_1328):= bat.hasMoreElements(date_seq);#613 (_1326:lng, _1327:int, _1328:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J611}
exit (_1326,_1327,_1328);               #614 (_1326:lng, _1327:int, _1328:date) 
    sf_a:bat[:int,:int]  := _1324;      #615 sf_a:bat[:int,:int] := _1324:bat[:int,:int] {G}
    tf_a := bat.setColumn(sf_a,"weekofyear");#616 tf_a:void := BKCsetColumn(sf_a:bat[:int,:int], _532:str) 
#      [weekofyear](date_seq).bat.setColumn("weekofyear"), 
    _1335 := bat.new(nil:int,nil:int);  #618 _1335:bat[:int,:int] := CMDBATnew(_1336:int, _1336:int) {G}
barrier (_1338,_1339,_1340):= bat.newIterator(date_seq);#619 (_1338:lng, _1339:int, _1340:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J623}
    _1342 := mtime.dayofweek(_1340);    #620 _1342:int := MTIMEdate_extract_dayofweek(_1340:date) 
    bat.insert(_1335,_1339,_1342);      #621 _1343:bat[:int,:int] := BKCinsert_bun(_1335:bat[:int,:int], _1339:int, _1342:int) {G}
    redo (_1338,_1339,_1340):= bat.hasMoreElements(date_seq);#622 (_1338:lng, _1339:int, _1340:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J620}
exit (_1338,_1339,_1340);               #623 (_1338:lng, _1339:int, _1340:date) 
    uf_a:bat[:int,:int]  := _1335;      #624 uf_a:bat[:int,:int] := _1335:bat[:int,:int] {G}
    _1347 := bat.new(nil:int,nil:str);  #625 _1347:bat[:int,:str] := CMDBATnew(_1336:int, _1348:str) {G}
barrier (_1350,_1351,_1352):= bat.newIterator(uf_a);#626 (_1350:lng, _1351:int, _1352:int) := CHPbunIterator(uf_a:bat[:int,:int]) {J630}
    _1354 := mtime.dayname(_1352);      #627 _1354:str := MTIMEday_to_str(_1352:int) {G}
    bat.insert(_1347,_1351,_1354);      #628 _1355:bat[:int,:str] := BKCinsert_bun(_1347:bat[:int,:str], _1351:int, _1354:str) {G}
    redo (_1350,_1351,_1352):= bat.hasMoreElements(uf_a);#629 (_1350:lng, _1351:int, _1352:int) := CHPbunHasMoreElements(uf_a:bat[:int,:int]) {J627}
exit (_1350,_1351,_1352);               #630 (_1350:lng, _1351:int, _1352:int) 
    vf_a:bat[:int,:str]  := _1347;      #631 vf_a:bat[:int,:str] := _1347:bat[:int,:str] {G}
    wf_a := bat.setColumn(vf_a,"dayofweek");#632 wf_a:void := BKCsetColumn(vf_a:bat[:int,:str], _536:str) 
#      [dayname]([dayofweek](date_seq)).bat.setColumn("dayofweek"), 
    _1359 := bat.new(nil:int,nil:int);  #634 _1359:bat[:int,:int] := CMDBATnew(_1336:int, _1336:int) {G}
barrier (_1361,_1362,_1363):= bat.newIterator(date_seq);#635 (_1361:lng, _1362:int, _1363:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J639}
    _1365 := mtime.dayofweek(_1363);    #636 _1365:int := MTIMEdate_extract_dayofweek(_1363:date) 
    bat.insert(_1359,_1362,_1365);      #637 _1366:bat[:int,:int] := BKCinsert_bun(_1359:bat[:int,:int], _1362:int, _1365:int) {G}
    redo (_1361,_1362,_1363):= bat.hasMoreElements(date_seq);#638 (_1361:lng, _1362:int, _1363:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J636}
exit (_1361,_1362,_1363);               #639 (_1361:lng, _1362:int, _1363:date) 
    xf_a:bat[:int,:int]  := _1359;      #640 xf_a:bat[:int,:int] := _1359:bat[:int,:int] {G}
    _1370 := bat.new(nil:int,nil:str);  #641 _1370:bat[:int,:str] := CMDBATnew(_1371:int, _1348:str) {G}
barrier (_1373,_1374,_1375):= bat.newIterator(xf_a);#642 (_1373:lng, _1374:int, _1375:int) := CHPbunIterator(xf_a:bat[:int,:int]) {J646}
    _1377 := mtime.dayname(_1375);      #643 _1377:str := MTIMEday_to_str(_1375:int) {G}
    bat.insert(_1370,_1374,_1377);      #644 _1378:bat[:int,:str] := BKCinsert_bun(_1370:bat[:int,:str], _1374:int, _1377:str) {G}
    redo (_1373,_1374,_1375):= bat.hasMoreElements(xf_a);#645 (_1373:lng, _1374:int, _1375:int) := CHPbunHasMoreElements(xf_a:bat[:int,:int]) {J643}
exit (_1373,_1374,_1375);               #646 (_1373:lng, _1374:int, _1375:int) 
    yf_a:bat[:int,:str]  := _1370;      #647 yf_a:bat[:int,:str] := _1370:bat[:int,:str] {G}
    _1382 := bat.new(nil:int,nil:int);  #648 _1382:bat[:int,:int] := CMDBATnew(_1371:int, _1371:int) {G}
barrier (_1384,_1385,_1386):= bat.newIterator(yf_a);#649 (_1384:lng, _1385:int, _1386:str) := CHPbunIterator(yf_a:bat[:int,:str]) {GJ653}
    _1388 := mtime.daynum(_1386);       #650 _1388:int := MTIMEday_from_str(_1386:str) 
    bat.insert(_1382,_1385,_1388);      #651 _1389:bat[:int,:int] := BKCinsert_bun(_1382:bat[:int,:int], _1385:int, _1388:int) {G}
    redo (_1384,_1385,_1386):= bat.hasMoreElements(yf_a);#652 (_1384:lng, _1385:int, _1386:str) := CHPbunHasMoreElements(yf_a:bat[:int,:str]) {GJ650}
exit (_1384,_1385,_1386);               #653 (_1384:lng, _1385:int, _1386:str) 
    ag_a:bat[:int,:int]  := _1382;      #654 ag_a:bat[:int,:int] := _1382:bat[:int,:int] {G}
    bg_a := bat.setColumn(ag_a,"num");  #655 bg_a:void := BKCsetColumn(ag_a:bat[:int,:int], _546:str) 
#      [daynum]([dayname]([dayofweek](date_seq))).bat.setColumn("num"), 
    _1393 := bat.new(nil:int,nil:int);  #657 _1393:bat[:int,:int] := CMDBATnew(_1371:int, _1371:int) {G}
barrier (_1395,_1396,_1397):= bat.newIterator(date_seq);#658 (_1395:lng, _1396:int, _1397:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J662}
    _1399 := mtime.dayofyear(_1397);    #659 _1399:int := MTIMEdate_extract_dayofyear(_1397:date) 
    bat.insert(_1393,_1396,_1399);      #660 _1400:bat[:int,:int] := BKCinsert_bun(_1393:bat[:int,:int], _1396:int, _1399:int) {G}
    redo (_1395,_1396,_1397):= bat.hasMoreElements(date_seq);#661 (_1395:lng, _1396:int, _1397:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J659}
exit (_1395,_1396,_1397);               #662 (_1395:lng, _1396:int, _1397:date) 
    cg_a:bat[:int,:int]  := _1393;      #663 cg_a:bat[:int,:int] := _1393:bat[:int,:int] {G}
    dg_a := bat.setColumn(cg_a,"dayofyear");#664 dg_a:void := BKCsetColumn(cg_a:bat[:int,:int], _549:str) 
    io.print("date_seq,sf_a,vf_a,ag_a,cg_a");#665 _551:void := IOprint_val(_552:str) 
    eg_a := io.print(date_seq,sf_a,vf_a,ag_a,cg_a);#666 eg_a:void := IOtable(date_seq:bat[:int,:date], sf_a:bat[:int,:int], vf_a:bat[:int,:str], ag_a:bat[:int,:int], cg_a:bat[:int,:int]) 
#      [dayofyear](date_seq).bat.setColumn("dayofyear")); 
##line 679 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## test the various ways top create daytimes 
    daytime_00 := mtime.daytime(23,59,59,999);#670 daytime_00:daytime := MTIMEdaytime_create(_558:int, _559:int, _559:int, _560:int) 
#var daytime_00 := mtime.daytime(23,59,59,999); 
    daytime_01 := mtime.daytime("23:59");#672 daytime_01:daytime := MTIMEdaytime_fromstr(_563:str) 
#var daytime_01 := mtime.daytime("23:59"); 
    daytime_02 := mtime.daytime("00:00");#674 daytime_02:daytime := MTIMEdaytime_fromstr(_566:str) 
#var daytime_02 := mtime.daytime("00:00"); 
    daytime_03 := mtime.daytime("23:59:59");#676 daytime_03:daytime := MTIMEdaytime_fromstr(_569:str) 
#var daytime_03 := mtime.daytime("23:59:59"); 
    daytime_04 := mtime.daytime("00:00:00.000");#678 daytime_04:daytime := MTIMEdaytime_fromstr(_572:str) 
#var daytime_04 := mtime.daytime("00:00:00.000"); 
    daytime_05 := mtime.daytime("00:00:00");#680 daytime_05:daytime := MTIMEdaytime_fromstr(_575:str) 
#var daytime_05 := mtime.daytime("00:00:00"); 
    daytime_06 := mtime.daytime("00:00:00:001");#682 daytime_06:daytime := MTIMEdaytime_fromstr(_578:str) 
#var daytime_06 := mtime.daytime("00:00:00:001"); 
    daytime_07 := mtime.daytime("03:49:02.999");#684 daytime_07:daytime := MTIMEdaytime_fromstr(_581:str) 
#var daytime_07 := mtime.daytime("03:49:02.999"); 
    daytime_08 := mtime.daytime("20:48:42:999");#686 daytime_08:daytime := MTIMEdaytime_fromstr(_584:str) 
#var daytime_08 := mtime.daytime("20:48:42:999"); 
    daytime_09 := mtime.daytime("17:53:38:999");#688 daytime_09:daytime := MTIMEdaytime_fromstr(_587:str) 
#var daytime_09 := mtime.daytime("17:53:38:999"); 
    daytime_10 := mtime.daytime("13:15:34:999");#690 daytime_10:daytime := MTIMEdaytime_fromstr(_590:str) 
#var daytime_10 := mtime.daytime("13:15:34:999"); 
    daytime_11 := mtime.daytime("07:34:27.999");#692 daytime_11:daytime := MTIMEdaytime_fromstr(_593:str) 
#var daytime_11 := mtime.daytime("07:34:27.999"); 
    daytime_12 := mtime.daytime("23:59:59:999");#694 daytime_12:daytime := MTIMEdaytime_fromstr(_596:str) 
#var daytime_12 := mtime.daytime("23:59:59:999"); 
    daytime_13 := mtime.daytime("01:00:03.999");#696 daytime_13:daytime := MTIMEdaytime_fromstr(_599:str) 
#var daytime_13 := mtime.daytime("01:00:03.999"); 
    daytime_14 := mtime.daytime("23:59:59.999");#698 daytime_14:daytime := MTIMEdaytime_fromstr(_602:str) 
#var daytime_14 := mtime.daytime("23:59:59.999"); 
## nil daytimes 
    daytime_15 := mtime.daytime(24,59,59,999);#701 daytime_15:daytime := MTIMEdaytime_create(_606:int, _607:int, _607:int, _608:int) 
#var daytime_15 := mtime.daytime(24,59,59,999); 
    daytime_16 := mtime.daytime(23,60,59,999);#703 daytime_16:daytime := MTIMEdaytime_create(_611:int, _612:int, _607:int, _608:int) 
#var daytime_16 := mtime.daytime(23,60,59,999); 
    daytime_17 := mtime.daytime(23,59,60,999);#705 daytime_17:daytime := MTIMEdaytime_create(_611:int, _607:int, _612:int, _608:int) 
#var daytime_17 := mtime.daytime(23,59,60,999); 
    daytime_18 := mtime.daytime(23,59,60,1000);#707 daytime_18:daytime := MTIMEdaytime_create(_611:int, _607:int, _612:int, _617:int) 
#var daytime_18 := mtime.daytime(23,59,60,1000); 
    daytime_19 := mtime.daytime("nil"); #709 daytime_19:daytime := MTIMEdaytime_fromstr(_620:str) 
#var daytime_19 := mtime.daytime("nil"); 
    daytime_20 := mtime.daytime("nil"); #711 daytime_20:daytime := MTIMEdaytime_fromstr(_620:str) 
    daytime_bat := bat.new(:oid,:daytime);#712 daytime_bat:bat[:oid,:daytime] := CMDBATnew(_246:oid, _624:daytime) {G}
#var daytime_bat := bat.new(oid,daytime); 
    bat.insert(daytime_bat,0@0,daytime_00);#714 _626:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _627:oid, daytime_00:daytime) {G}
    bat.insert(daytime_bat,1@0,daytime_01);#715 _628:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _629:oid, daytime_01:daytime) {G}
    bat.insert(daytime_bat,2@0,daytime_02);#716 _630:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _631:oid, daytime_02:daytime) {G}
#daytime_bat.bat.insert(0@0, daytime_00).insert(1@0, daytime_01).insert(2@0, daytime_02); 
    bat.insert(daytime_bat,3@0,daytime_03);#718 _633:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _634:oid, daytime_03:daytime) {G}
    bat.insert(daytime_bat,4@0,daytime_04);#719 _635:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _636:oid, daytime_04:daytime) {G}
    bat.insert(daytime_bat,5@0,daytime_05);#720 _637:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _638:oid, daytime_05:daytime) {G}
#daytime_bat.bat.insert(3@0, daytime_03).insert(4@0, daytime_04).insert(5@0, daytime_05); 
    bat.insert(daytime_bat,6@0,daytime_06);#722 _640:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _641:oid, daytime_06:daytime) {G}
    bat.insert(daytime_bat,7@0,daytime_07);#723 _642:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _643:oid, daytime_07:daytime) {G}
    bat.insert(daytime_bat,8@0,daytime_08);#724 _644:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _645:oid, daytime_08:daytime) {G}
#daytime_bat.bat.insert(6@0, daytime_06).insert(7@0, daytime_07).insert(8@0, daytime_08); 
    bat.insert(daytime_bat,9@0,daytime_09);#726 _647:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _648:oid, daytime_09:daytime) {G}
    bat.insert(daytime_bat,10@0,daytime_10);#727 _649:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _650:oid, daytime_10:daytime) {G}
    bat.insert(daytime_bat,11@0,daytime_11);#728 _651:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _652:oid, daytime_11:daytime) {G}
#daytime_bat.bat.insert(9@0, daytime_09).insert(10@0, daytime_10).insert(11@0, daytime_11); 
    bat.insert(daytime_bat,12@0,daytime_12);#730 _654:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _655:oid, daytime_12:daytime) {G}
    bat.insert(daytime_bat,13@0,daytime_13);#731 _656:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _657:oid, daytime_13:daytime) {G}
    bat.insert(daytime_bat,14@0,daytime_14);#732 _658:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _659:oid, daytime_14:daytime) {G}
#daytime_bat.bat.insert(12@0, daytime_12).insert(13@0, daytime_13).insert(14@0, daytime_14); 
    bat.insert(daytime_bat,15@0,daytime_15);#734 _661:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _662:oid, daytime_15:daytime) {G}
    bat.insert(daytime_bat,16@0,daytime_16);#735 _663:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _664:oid, daytime_16:daytime) {G}
    bat.insert(daytime_bat,17@0,daytime_17);#736 _665:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _666:oid, daytime_17:daytime) {G}
#daytime_bat.bat.insert(15@0, daytime_15).insert(16@0, daytime_16).insert(17@0, daytime_17); 
    bat.insert(daytime_bat,18@0,daytime_18);#738 _668:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _669:oid, daytime_18:daytime) {G}
    bat.insert(daytime_bat,19@0,daytime_19);#739 _670:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _671:oid, daytime_19:daytime) {G}
    bat.insert(daytime_bat,20@0,daytime_20);#740 _672:bat[:oid,:daytime] := BKCinsert_bun(daytime_bat:bat[:oid,:daytime], _673:oid, daytime_20:daytime) {G}
#daytime_bat.bat.insert(18@0, daytime_18).insert(19@0, daytime_19); 
    bat.setColumn(daytime_bat,"daytime");#742 _675:void := BKCsetColumn(daytime_bat:bat[:oid,:daytime], _676:str) 
#io.print(daytime_bat.bat.setColumn("daytime"), 
    _1404 := bat.new(nil:oid,nil:int);  #744 _1404:bat[:oid,:int] := CMDBATnew(_1405:oid, _1406:int) {G}
barrier (_1408,_1409,_1410):= bat.newIterator(daytime_bat);#745 (_1408:lng, _1409:oid, _1410:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J749}
    _1412 := mtime.hours(_1410);        #746 _1412:int := MTIMEdaytime_extract_hours(_1410:daytime) 
    bat.insert(_1404,_1409,_1412);      #747 _1413:bat[:oid,:int] := BKCinsert_bun(_1404:bat[:oid,:int], _1409:oid, _1412:int) {G}
    redo (_1408,_1409,_1410):= bat.hasMoreElements(daytime_bat);#748 (_1408:lng, _1409:oid, _1410:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J746}
exit (_1408,_1409,_1410);               #749 (_1408:lng, _1409:oid, _1410:daytime) 
    bh_a:bat[:oid,:int]  := _1404;      #750 bh_a:bat[:oid,:int] := _1404:bat[:oid,:int] {G}
    bat.setColumn(bh_a,"hours");        #751 _681:void := BKCsetColumn(bh_a:bat[:oid,:int], _680:str) 
#      [hours](daytime_bat).bat.setColumn("hours"), 
    _1417 := bat.new(nil:oid,nil:int);  #753 _1417:bat[:oid,:int] := CMDBATnew(_1405:oid, _1406:int) {G}
barrier (_1419,_1420,_1421):= bat.newIterator(daytime_bat);#754 (_1419:lng, _1420:oid, _1421:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J758}
    _1423 := mtime.minutes(_1421);      #755 _1423:int := MTIMEdaytime_extract_minutes(_1421:daytime) 
    bat.insert(_1417,_1420,_1423);      #756 _1424:bat[:oid,:int] := BKCinsert_bun(_1417:bat[:oid,:int], _1420:oid, _1423:int) {G}
    redo (_1419,_1420,_1421):= bat.hasMoreElements(daytime_bat);#757 (_1419:lng, _1420:oid, _1421:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J755}
exit (_1419,_1420,_1421);               #758 (_1419:lng, _1420:oid, _1421:daytime) 
    dh_a:bat[:oid,:int]  := _1417;      #759 dh_a:bat[:oid,:int] := _1417:bat[:oid,:int] {G}
    bat.setColumn(dh_a,"minutes");      #760 _685:void := BKCsetColumn(dh_a:bat[:oid,:int], _684:str) 
#      [minutes](daytime_bat).bat.setColumn("minutes"), 
    _1428 := bat.new(nil:oid,nil:int);  #762 _1428:bat[:oid,:int] := CMDBATnew(_1405:oid, _1406:int) {G}
barrier (_1430,_1431,_1432):= bat.newIterator(daytime_bat);#763 (_1430:lng, _1431:oid, _1432:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J767}
    _1434 := mtime.seconds(_1432);      #764 _1434:int := MTIMEdaytime_extract_seconds(_1432:daytime) 
    bat.insert(_1428,_1431,_1434);      #765 _1435:bat[:oid,:int] := BKCinsert_bun(_1428:bat[:oid,:int], _1431:oid, _1434:int) {G}
    redo (_1430,_1431,_1432):= bat.hasMoreElements(daytime_bat);#766 (_1430:lng, _1431:oid, _1432:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J764}
exit (_1430,_1431,_1432);               #767 (_1430:lng, _1431:oid, _1432:daytime) 
    fh_a:bat[:oid,:int]  := _1428;      #768 fh_a:bat[:oid,:int] := _1428:bat[:oid,:int] {G}
    bat.setColumn(fh_a,"seconds");      #769 _689:void := BKCsetColumn(fh_a:bat[:oid,:int], _688:str) 
#      [seconds](daytime_bat).bat.setColumn("seconds"), 
    _1439 := bat.new(nil:oid,nil:int);  #771 _1439:bat[:oid,:int] := CMDBATnew(_1440:oid, _1441:int) {G}
barrier (_1443,_1444,_1445):= bat.newIterator(daytime_bat);#772 (_1443:lng, _1444:oid, _1445:daytime) := CHPbunIterator(daytime_bat:bat[:oid,:daytime]) {J776}
    _1447 := mtime.milliseconds(_1445); #773 _1447:int := MTIMEdaytime_extract_milliseconds(_1445:daytime) 
    bat.insert(_1439,_1444,_1447);      #774 _1448:bat[:oid,:int] := BKCinsert_bun(_1439:bat[:oid,:int], _1444:oid, _1447:int) {G}
    redo (_1443,_1444,_1445):= bat.hasMoreElements(daytime_bat);#775 (_1443:lng, _1444:oid, _1445:daytime) := CHPbunHasMoreElements(daytime_bat:bat[:oid,:daytime]) {J773}
exit (_1443,_1444,_1445);               #776 (_1443:lng, _1444:oid, _1445:daytime) 
    hh_a:bat[:oid,:int]  := _1439;      #777 hh_a:bat[:oid,:int] := _1439:bat[:oid,:int] {G}
    bat.setColumn(hh_a,"milliseconds"); #778 _693:void := BKCsetColumn(hh_a:bat[:oid,:int], _692:str) 
    io.print("daytime_bat,bh_a,dh_a,fh_a,hh_a");#779 _694:void := IOprint_val(_695:str) 
    jh_a := io.print(daytime_bat,bh_a,dh_a,fh_a,hh_a);#780 jh_a:void := IOtable(daytime_bat:bat[:oid,:daytime], bh_a:bat[:oid,:int], dh_a:bat[:oid,:int], fh_a:bat[:oid,:int], hh_a:bat[:oid,:int]) 
#      [milliseconds](daytime_bat).bat.setColumn("milliseconds")); 
##line 719 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
## create timestamps in bulk from the above bats with dates, daytimes and tzones 
# Skipped due to coercion implication 
    _1452 := bat.new(nil:oid,nil:timestamp);#785 _1452:bat[:oid,:timestamp] := CMDBATnew(_1440:oid, _1453:timestamp) {G}
barrier (_1455,_1456,_1457):= bat.newIterator(date_bat);#786 (_1455:lng, _1456:oid, _1457:date) := CHPbunIterator(date_bat:bat[:oid,:date]) {J792}
    _1459 := algebra.find(daytime_bat,_1456);#787 _1459:daytime := ALGfind(daytime_bat:bat[:oid,:daytime], _1456:oid) 
    _1461 := algebra.find(tzone_bat,_1456);#788 _1461:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1456:oid) 
    _1463 := mtime.timestamp(_1457,_1459,_1461);#789 _1463:timestamp := MTIMEtimestamp_create(_1457:date, _1459:daytime, _1461:timezone) 
    bat.insert(_1452,_1456,_1463);      #790 _1464:bat[:oid,:timestamp] := BKCinsert_bun(_1452:bat[:oid,:timestamp], _1456:oid, _1463:timestamp) {G}
    redo (_1455,_1456,_1457):= bat.hasMoreElements(date_bat);#791 (_1455:lng, _1456:oid, _1457:date) := CHPbunHasMoreElements(date_bat:bat[:oid,:date]) {J787}
exit (_1455,_1456,_1457);               #792 (_1455:lng, _1456:oid, _1457:date) 
    kh_a:bat[:oid,:timestamp]  := _1452;#793 kh_a:bat[:oid,:timestamp] := _1452:bat[:oid,:timestamp] {G}
    timestamp_bat := kh_a;              #794 timestamp_bat:bat[:oid,:timestamp] := kh_a:bat[:oid,:timestamp] {G}
    bat.setWriteMode(kh_a);             #795 _704:bat[:oid,:timestamp] := BKCsetWriteMode(kh_a:bat[:oid,:timestamp]) {G}
#var timestamp_bat := [timestamp](date_bat,daytime_bat,tzone_bat).access(BAT_WRITE); 
## KILL 
## var timestamp_now := timestamp(epoch()); 
## timestamp_bat.bat.insert(14@0, timestamp_now); 
## test the timestamp operations 
    bat.setColumn(timestamp_bat,"timestamp");#801 _710:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _702:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    _1468 := bat.new(nil:oid,nil:date); #803 _1468:bat[:oid,:date] := CMDBATnew(_1440:oid, _1469:date) {G}
barrier (_1471,_1472,_1473):= bat.newIterator(timestamp_bat);#804 (_1471:lng, _1472:oid, _1473:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J809}
    _1475 := algebra.find(tzone_bat,_1472);#805 _1475:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1472:oid) 
    _1477 := mtime.date(_1473,_1475);   #806 _1477:date := MTIMEtimestamp_extract_date(_1473:timestamp, _1475:timezone) 
    bat.insert(_1468,_1472,_1477);      #807 _1478:bat[:oid,:date] := BKCinsert_bun(_1468:bat[:oid,:date], _1472:oid, _1477:date) {G}
    redo (_1471,_1472,_1473):= bat.hasMoreElements(timestamp_bat);#808 (_1471:lng, _1472:oid, _1473:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J805}
exit (_1471,_1472,_1473);               #809 (_1471:lng, _1472:oid, _1473:timestamp) 
    mh_a:bat[:oid,:date]  := _1468;     #810 mh_a:bat[:oid,:date] := _1468:bat[:oid,:date] {G}
    bat.setColumn(mh_a,"date");         #811 _715:void := BKCsetColumn(mh_a:bat[:oid,:date], _714:str) 
#      [date](timestamp_bat,tzone_bat).bat.setColumn("date"), 
    _1482 := bat.new(nil:oid,nil:daytime);#813 _1482:bat[:oid,:daytime] := CMDBATnew(_1483:oid, _1484:daytime) {G}
barrier (_1486,_1487,_1488):= bat.newIterator(timestamp_bat);#814 (_1486:lng, _1487:oid, _1488:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J819}
    _1490 := algebra.find(tzone_bat,_1487);#815 _1490:timezone := ALGfind(tzone_bat:bat[:oid,:timezone], _1487:oid) 
    _1492 := mtime.daytime(_1488,_1490);#816 _1492:daytime := MTIMEtimestamp_extract_daytime(_1488:timestamp, _1490:timezone) 
    bat.insert(_1482,_1487,_1492);      #817 _1493:bat[:oid,:daytime] := BKCinsert_bun(_1482:bat[:oid,:daytime], _1487:oid, _1492:daytime) {G}
    redo (_1486,_1487,_1488):= bat.hasMoreElements(timestamp_bat);#818 (_1486:lng, _1487:oid, _1488:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J815}
exit (_1486,_1487,_1488);               #819 (_1486:lng, _1487:oid, _1488:timestamp) 
    oh_a:bat[:oid,:daytime]  := _1482;  #820 oh_a:bat[:oid,:daytime] := _1482:bat[:oid,:daytime] {G}
    bat.setColumn(oh_a,"daytime");      #821 _719:void := BKCsetColumn(oh_a:bat[:oid,:daytime], _718:str) 
    io.print("print(timestamp_bat,mh_a,oh_a)");#822 _720:void := IOprint_val(_721:str) 
    io.print(timestamp_bat,mh_a,oh_a);  #823 _722:void := IOtable(timestamp_bat:bat[:oid,:timestamp], mh_a:bat[:oid,:date], oh_a:bat[:oid,:daytime]) 
#      [daytime](timestamp_bat,tzone_bat).bat.setColumn("daytime")); 
    rh_a := bat.setColumn(timestamp_bat,"timestamp");#825 rh_a:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _702:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    timezones:bat[:str,:timezone]  := bbp.bind("timezones");#827 timezones:bat[:str,:timezone] := CMDbbpbind(_727:str) {G}
    io.print("print(timezones)");       #828 _728:void := IOprint_val(_729:str) 
    io.print(timezones);                #829 _730:void := IOprint_val(timezones:bat[:str,:timezone]) 
    sh_a:timezone  := algebra.find(timezones,"Wake Island");#830 sh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _732:str) 
    _1497 := bat.new(nil:oid,nil:date); #831 _1497:bat[:oid,:date] := CMDBATnew(_1483:oid, _1469:date) {G}
barrier (_1499,_1500,_1501):= bat.newIterator(timestamp_bat);#832 (_1499:lng, _1500:oid, _1501:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J836}
    _1503 := mtime.date(_1501,sh_a);    #833 _1503:date := MTIMEtimestamp_extract_date(_1501:timestamp, sh_a:timezone) 
    bat.insert(_1497,_1500,_1503);      #834 _1504:bat[:oid,:date] := BKCinsert_bun(_1497:bat[:oid,:date], _1500:oid, _1503:date) {G}
    redo (_1499,_1500,_1501):= bat.hasMoreElements(timestamp_bat);#835 (_1499:lng, _1500:oid, _1501:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J833}
exit (_1499,_1500,_1501);               #836 (_1499:lng, _1500:oid, _1501:timestamp) 
    th_a:bat[:oid,:date]  := _1497;     #837 th_a:bat[:oid,:date] := _1497:bat[:oid,:date] {G}
    bat.setColumn(th_a,"Wake Island");  #838 _734:void := BKCsetColumn(th_a:bat[:oid,:date], _732:str) 
#      [date](timestamp_bat,algebra.find(timezones,"Wake Island")).bat.setColumn("Wake Island"), 
    vh_a:timezone  := algebra.find(timezones,"Wake Island");#840 vh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _732:str) 
    _1508 := bat.new(nil:oid,nil:daytime);#841 _1508:bat[:oid,:daytime] := CMDBATnew(_1483:oid, _1484:daytime) {G}
barrier (_1510,_1511,_1512):= bat.newIterator(timestamp_bat);#842 (_1510:lng, _1511:oid, _1512:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J846}
    _1514 := mtime.daytime(_1512,vh_a); #843 _1514:daytime := MTIMEtimestamp_extract_daytime(_1512:timestamp, vh_a:timezone) 
    bat.insert(_1508,_1511,_1514);      #844 _1515:bat[:oid,:daytime] := BKCinsert_bun(_1508:bat[:oid,:daytime], _1511:oid, _1514:daytime) {G}
    redo (_1510,_1511,_1512):= bat.hasMoreElements(timestamp_bat);#845 (_1510:lng, _1511:oid, _1512:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J843}
exit (_1510,_1511,_1512);               #846 (_1510:lng, _1511:oid, _1512:timestamp) 
    wh_a:bat[:oid,:daytime]  := _1508;  #847 wh_a:bat[:oid,:daytime] := _1508:bat[:oid,:daytime] {G}
#      [daytime](timestamp_bat,algebra.find(timezones,"Wake Island")), 
    xh_a:timezone  := algebra.find(timezones,"American Samoa");#849 xh_a:timezone := ALGfind(timezones:bat[:str,:timezone], _740:str) 
    _1519 := bat.new(nil:oid,nil:date); #850 _1519:bat[:oid,:date] := CMDBATnew(_1520:oid, _1521:date) {G}
barrier (_1523,_1524,_1525):= bat.newIterator(timestamp_bat);#851 (_1523:lng, _1524:oid, _1525:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J855}
    _1527 := mtime.date(_1525,xh_a);    #852 _1527:date := MTIMEtimestamp_extract_date(_1525:timestamp, xh_a:timezone) 
    bat.insert(_1519,_1524,_1527);      #853 _1528:bat[:oid,:date] := BKCinsert_bun(_1519:bat[:oid,:date], _1524:oid, _1527:date) {G}
    redo (_1523,_1524,_1525):= bat.hasMoreElements(timestamp_bat);#854 (_1523:lng, _1524:oid, _1525:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J852}
exit (_1523,_1524,_1525);               #855 (_1523:lng, _1524:oid, _1525:timestamp) 
    yh_a:bat[:oid,:date]  := _1519;     #856 yh_a:bat[:oid,:date] := _1519:bat[:oid,:date] {G}
    ai_a := bat.setColumn(yh_a,"American Samoa");#857 ai_a:void := BKCsetColumn(yh_a:bat[:oid,:date], _740:str) 
#      [date](timestamp_bat,algebra.find(timezones,"American Samoa")).bat.setColumn("American Samoa"), 
    bi_a:timezone  := algebra.find(timezones,"American Samoa");#859 bi_a:timezone := ALGfind(timezones:bat[:str,:timezone], _740:str) 
    _1532 := bat.new(nil:oid,nil:daytime);#860 _1532:bat[:oid,:daytime] := CMDBATnew(_1520:oid, _1533:daytime) {G}
barrier (_1535,_1536,_1537):= bat.newIterator(timestamp_bat);#861 (_1535:lng, _1536:oid, _1537:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J865}
    _1539 := mtime.daytime(_1537,bi_a); #862 _1539:daytime := MTIMEtimestamp_extract_daytime(_1537:timestamp, bi_a:timezone) 
    bat.insert(_1532,_1536,_1539);      #863 _1540:bat[:oid,:daytime] := BKCinsert_bun(_1532:bat[:oid,:daytime], _1536:oid, _1539:daytime) {G}
    redo (_1535,_1536,_1537):= bat.hasMoreElements(timestamp_bat);#864 (_1535:lng, _1536:oid, _1537:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J862}
exit (_1535,_1536,_1537);               #865 (_1535:lng, _1536:oid, _1537:timestamp) 
    ci_a:bat[:oid,:daytime]  := _1532;  #866 ci_a:bat[:oid,:daytime] := _1532:bat[:oid,:daytime] {G}
    io.print("print(timestamp_bat,th_a,wh_a,yh_a,ci_a)");#867 _747:void := IOprint_val(_748:str) 
    di_a := io.print(timestamp_bat,th_a,wh_a,yh_a,ci_a);#868 di_a:void := IOtable(timestamp_bat:bat[:oid,:timestamp], th_a:bat[:oid,:date], wh_a:bat[:oid,:daytime], yh_a:bat[:oid,:date], ci_a:bat[:oid,:daytime]) 
#      [daytime](timestamp_bat,algebra.find(timezones,"American Samoa"))); 
    ei_a := calc.*(60,1000);            #870 ei_a:int := CALCbinaryMULintint(_752:int, _753:int) 
    fi_a := calc.*(60,ei_a);            #871 fi_a:int := CALCbinaryMULintint(_752:int, ei_a:int) 
    gi_a := calc.*(23,fi_a);            #872 gi_a:int := CALCbinaryMULintint(_756:int, fi_a:int) 
    hi_a := calc.lng(gi_a);             #873 hi_a:lng := CALCint2lng(gi_a:int) 
    _1544 := bat.new(nil:oid,nil:timestamp);#874 _1544:bat[:oid,:timestamp] := CMDBATnew(_1520:oid, _1545:timestamp) {G}
barrier (_1547,_1548,_1549):= bat.newIterator(timestamp_bat);#875 (_1547:lng, _1548:oid, _1549:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J879}
    _1551 := mtime.add(_1549,hi_a);     #876 _1551:timestamp := MTIMEtimestamp_add(_1549:timestamp, hi_a:lng) 
    bat.insert(_1544,_1548,_1551);      #877 _1552:bat[:oid,:timestamp] := BKCinsert_bun(_1544:bat[:oid,:timestamp], _1548:oid, _1551:timestamp) {G}
    redo (_1547,_1548,_1549):= bat.hasMoreElements(timestamp_bat);#878 (_1547:lng, _1548:oid, _1549:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J876}
exit (_1547,_1548,_1549);               #879 (_1547:lng, _1548:oid, _1549:timestamp) 
    timestamp_plus:bat[:oid,:timestamp]  := _1544;#880 timestamp_plus:bat[:oid,:timestamp] := _1544:bat[:oid,:timestamp] {G}
#var timestamp_plus := [add](timestamp_bat, calc.lng(23*60*60*1000)); 
    ii_a := calc.*(-60,1000);           #882 ii_a:int := CALCbinaryMULintint(_762:int, _753:int) 
    ji_a := calc.lng(ii_a);             #883 ji_a:lng := CALCint2lng(ii_a:int) 
    _1556 := bat.new(nil:oid,nil:timestamp);#884 _1556:bat[:oid,:timestamp] := CMDBATnew(_1557:oid, _1545:timestamp) {G}
barrier (_1559,_1560,_1561):= bat.newIterator(timestamp_bat);#885 (_1559:lng, _1560:oid, _1561:timestamp) := CHPbunIterator(timestamp_bat:bat[:oid,:timestamp]) {J889}
    _1563 := mtime.add(_1561,ji_a);     #886 _1563:timestamp := MTIMEtimestamp_add(_1561:timestamp, ji_a:lng) 
    bat.insert(_1556,_1560,_1563);      #887 _1564:bat[:oid,:timestamp] := BKCinsert_bun(_1556:bat[:oid,:timestamp], _1560:oid, _1563:timestamp) {G}
    redo (_1559,_1560,_1561):= bat.hasMoreElements(timestamp_bat);#888 (_1559:lng, _1560:oid, _1561:timestamp) := CHPbunHasMoreElements(timestamp_bat:bat[:oid,:timestamp]) {J886}
exit (_1559,_1560,_1561);               #889 (_1559:lng, _1560:oid, _1561:timestamp) 
    timestamp_minus:bat[:oid,:timestamp]  := _1556;#890 timestamp_minus:bat[:oid,:timestamp] := _1556:bat[:oid,:timestamp] {G}
#var timestamp_minus := [add](timestamp_bat, calc.lng(-60*1000)); 
    ki_a := bat.setColumn(timestamp_bat,"timestamp");#892 ki_a:void := BKCsetColumn(timestamp_bat:bat[:oid,:timestamp], _767:str) 
#io.print(timestamp_bat.bat.setColumn("timestamp"), 
    li_a := bat.setColumn(timestamp_plus,"plus23");#894 li_a:void := BKCsetColumn(timestamp_plus:bat[:oid,:timestamp], _770:str) 
#	timestamp_plus.bat.setColumn("plus23"), 
    mi_a := bat.setColumn(timestamp_minus,"min1");#896 mi_a:void := BKCsetColumn(timestamp_minus:bat[:oid,:timestamp], _773:str) 
#	timestamp_minus.bat.setColumn("min1"), 
    _1568 := bat.new(nil:oid,nil:lng);  #898 _1568:bat[:oid,:lng] := CMDBATnew(_1557:oid, _1569:lng) {G}
barrier (_1571,_1572,_1573):= bat.newIterator(timestamp_plus);#899 (_1571:lng, _1572:oid, _1573:timestamp) := CHPbunIterator(timestamp_plus:bat[:oid,:timestamp]) {J904}
    _1575 := algebra.find(timestamp_minus,_1572);#900 _1575:timestamp := ALGfind(timestamp_minus:bat[:oid,:timestamp], _1572:oid) 
    _1577 := mtime.diff(_1573,_1575);   #901 _1577:lng := MTIMEtimestamp_diff(_1573:timestamp, _1575:timestamp) 
    bat.insert(_1568,_1572,_1577);      #902 _1578:bat[:oid,:lng] := BKCinsert_bun(_1568:bat[:oid,:lng], _1572:oid, _1577:lng) {G}
    redo (_1571,_1572,_1573):= bat.hasMoreElements(timestamp_plus);#903 (_1571:lng, _1572:oid, _1573:timestamp) := CHPbunHasMoreElements(timestamp_plus:bat[:oid,:timestamp]) {J900}
exit (_1571,_1572,_1573);               #904 (_1571:lng, _1572:oid, _1573:timestamp) 
    ni_a:bat[:oid,:lng]  := _1568;      #905 ni_a:bat[:oid,:lng] := _1568:bat[:oid,:lng] {G}
    oi_a := calc.*(60,1000);            #906 oi_a:int := CALCbinaryMULintint(_752:int, _753:int) 
    pi_a := calc.*(60,oi_a);            #907 pi_a:int := CALCbinaryMULintint(_752:int, oi_a:int) 
    qi_a := calc.lng(pi_a);             #908 qi_a:lng := CALCint2lng(pi_a:int) 
    ri_a := batcalc./(ni_a,qi_a);       #909 ri_a:bat[:oid,:lng] := CMDbatDIVcst_lng_lng_lng(ni_a:bat[:oid,:lng], qi_a:lng) {G}
    si_a := bat.setColumn(ri_a,"diff"); #910 si_a:void := BKCsetColumn(ri_a:bat[:oid,:lng], _776:str) 
    io.print("print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)");#911 _782:void := IOprint_val(_783:str) 
    ti_a := io.print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a);#912 ti_a:void := IOtable(timestamp_bat:bat[:oid,:timestamp], timestamp_plus:bat[:oid,:timestamp], timestamp_minus:bat[:oid,:timestamp], ri_a:bat[:oid,:lng]) 
#	[/]([diff](timestamp_plus, timestamp_minus),calc.lng(60*60*1000)).bat.setColumn("diff")); 
    ui_a:timezone  := algebra.find(timezones,"West/Europe");#914 ui_a:timezone := ALGfind(timezones:bat[:str,:timezone], _787:str) 
    _1582 := bat.new(nil:int,nil:timestamp);#915 _1582:bat[:int,:timestamp] := CMDBATnew(_1583:int, _1584:timestamp) {G}
barrier (_1586,_1587,_1588):= bat.newIterator(date_seq);#916 (_1586:lng, _1587:int, _1588:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J920}
    _1590 := mtime.timestamp(_1588,daytime_00,ui_a);#917 _1590:timestamp := MTIMEtimestamp_create(_1588:date, daytime_00:daytime, ui_a:timezone) 
    bat.insert(_1582,_1587,_1590);      #918 _1591:bat[:int,:timestamp] := BKCinsert_bun(_1582:bat[:int,:timestamp], _1587:int, _1590:timestamp) {G}
    redo (_1586,_1587,_1588):= bat.hasMoreElements(date_seq);#919 (_1586:lng, _1587:int, _1588:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J917}
exit (_1586,_1587,_1588);               #920 (_1586:lng, _1587:int, _1588:date) 
    timestamp_eur:bat[:int,:timestamp]  := _1582;#921 timestamp_eur:bat[:int,:timestamp] := _1582:bat[:int,:timestamp] {G}
#var timestamp_eur := [timestamp](date_seq, daytime_00, algebra.find(timezones,"West/Europe")); 
    vi_a:timezone  := algebra.find(timezones,"Andes/Brazil");#923 vi_a:timezone := ALGfind(timezones:bat[:str,:timezone], _792:str) 
    _1595 := bat.new(nil:int,nil:timestamp);#924 _1595:bat[:int,:timestamp] := CMDBATnew(_1583:int, _1584:timestamp) {G}
barrier (_1597,_1598,_1599):= bat.newIterator(date_seq);#925 (_1597:lng, _1598:int, _1599:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J929}
    _1601 := mtime.timestamp(_1599,daytime_00,vi_a);#926 _1601:timestamp := MTIMEtimestamp_create(_1599:date, daytime_00:daytime, vi_a:timezone) 
    bat.insert(_1595,_1598,_1601);      #927 _1602:bat[:int,:timestamp] := BKCinsert_bun(_1595:bat[:int,:timestamp], _1598:int, _1601:timestamp) {G}
    redo (_1597,_1598,_1599):= bat.hasMoreElements(date_seq);#928 (_1597:lng, _1598:int, _1599:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J926}
exit (_1597,_1598,_1599);               #929 (_1597:lng, _1598:int, _1599:date) 
    timestamp_bra:bat[:int,:timestamp]  := _1595;#930 timestamp_bra:bat[:int,:timestamp] := _1595:bat[:int,:timestamp] {G}
#var timestamp_bra := [timestamp](date_seq, daytime_00, algebra.find(timezones,"Andes/Brazil")); 
    wi_a := bat.setColumn(date_seq,"date");#932 wi_a:void := BKCsetColumn(date_seq:bat[:int,:date], _796:str) 
#io.print(date_seq.bat.setColumn("date"),  
    _1606 := bat.new(nil:int,nil:int);  #934 _1606:bat[:int,:int] := CMDBATnew(_1583:int, _1583:int) {G}
barrier (_1608,_1609,_1610):= bat.newIterator(date_seq);#935 (_1608:lng, _1609:int, _1610:date) := CHPbunIterator(date_seq:bat[:int,:date]) {J939}
    _1612 := mtime.dayofweek(_1610);    #936 _1612:int := MTIMEdate_extract_dayofweek(_1610:date) 
    bat.insert(_1606,_1609,_1612);      #937 _1613:bat[:int,:int] := BKCinsert_bun(_1606:bat[:int,:int], _1609:int, _1612:int) {G}
    redo (_1608,_1609,_1610):= bat.hasMoreElements(date_seq);#938 (_1608:lng, _1609:int, _1610:date) := CHPbunHasMoreElements(date_seq:bat[:int,:date]) {J936}
exit (_1608,_1609,_1610);               #939 (_1608:lng, _1609:int, _1610:date) 
    xi_a:bat[:int,:int]  := _1606;      #940 xi_a:bat[:int,:int] := _1606:bat[:int,:int] {G}
    _1617 := bat.new(nil:int,nil:str);  #941 _1617:bat[:int,:str] := CMDBATnew(_1618:int, _1619:str) {G}
barrier (_1621,_1622,_1623):= bat.newIterator(xi_a);#942 (_1621:lng, _1622:int, _1623:int) := CHPbunIterator(xi_a:bat[:int,:int]) {J946}
    _1625 := mtime.dayname(_1623);      #943 _1625:str := MTIMEday_to_str(_1623:int) {G}
    bat.insert(_1617,_1622,_1625);      #944 _1626:bat[:int,:str] := BKCinsert_bun(_1617:bat[:int,:str], _1622:int, _1625:str) {G}
    redo (_1621,_1622,_1623):= bat.hasMoreElements(xi_a);#945 (_1621:lng, _1622:int, _1623:int) := CHPbunHasMoreElements(xi_a:bat[:int,:int]) {J943}
exit (_1621,_1622,_1623);               #946 (_1621:lng, _1622:int, _1623:int) 
    yi_a:bat[:int,:str]  := _1617;      #947 yi_a:bat[:int,:str] := _1617:bat[:int,:str] {G}
    aj_a := bat.setColumn(yi_a,"day");  #948 aj_a:void := BKCsetColumn(yi_a:bat[:int,:str], _803:str) 
#	[dayname]([dayofweek](date_seq)).bat.setColumn("day"), 
    bj_a := bat.setColumn(timestamp_eur,"West/Europe");#950 bj_a:void := BKCsetColumn(timestamp_eur:bat[:int,:timestamp], _787:str) 
#	timestamp_eur.bat.setColumn("West/Europe"), 
    cj_a:timezone  := algebra.find(timezones,"West/Europe");#952 cj_a:timezone := ALGfind(timezones:bat[:str,:timezone], _787:str) 
    _1630 := bat.new(nil:int,nil:bit);  #953 _1630:bat[:int,:bit] := CMDBATnew(_1618:int, _1631:bit) {G}
barrier (_1633,_1634,_1635):= bat.newIterator(timestamp_eur);#954 (_1633:lng, _1634:int, _1635:timestamp) := CHPbunIterator(timestamp_eur:bat[:int,:timestamp]) {J958}
    _1637 := mtime.dst(_1635,cj_a);     #955 _1637:bit := MTIMEtimestamp_inside_dst(_1635:timestamp, cj_a:timezone) 
    bat.insert(_1630,_1634,_1637);      #956 _1638:bat[:int,:bit] := BKCinsert_bun(_1630:bat[:int,:bit], _1634:int, _1637:bit) {G}
    redo (_1633,_1634,_1635):= bat.hasMoreElements(timestamp_eur);#957 (_1633:lng, _1634:int, _1635:timestamp) := CHPbunHasMoreElements(timestamp_eur:bat[:int,:timestamp]) {J955}
exit (_1633,_1634,_1635);               #958 (_1633:lng, _1634:int, _1635:timestamp) 
    dj_a:bat[:int,:bit]  := _1630;      #959 dj_a:bat[:int,:bit] := _1630:bat[:int,:bit] {G}
    ej_a := bat.setColumn(dj_a,"dst");  #960 ej_a:void := BKCsetColumn(dj_a:bat[:int,:bit], _809:str) 
#	[dst](timestamp_eur,algebra.find(timezones,"West/Europe")).bat.setColumn("dst"), 
    fj_a := bat.setColumn(timestamp_bra,"Andes/Brazil");#962 fj_a:void := BKCsetColumn(timestamp_bra:bat[:int,:timestamp], _792:str) 
#	timestamp_bra.bat.setColumn("Andes/Brazil"), 
    gj_a:timezone  := algebra.find(timezones,"Andes/Brazil");#964 gj_a:timezone := ALGfind(timezones:bat[:str,:timezone], _792:str) 
    _1642 := bat.new(nil:int,nil:bit);  #965 _1642:bat[:int,:bit] := CMDBATnew(_1618:int, _1631:bit) {G}
barrier (_1644,_1645,_1646):= bat.newIterator(timestamp_bra);#966 (_1644:lng, _1645:int, _1646:timestamp) := CHPbunIterator(timestamp_bra:bat[:int,:timestamp]) {J970}
    _1648 := mtime.dst(_1646,gj_a);     #967 _1648:bit := MTIMEtimestamp_inside_dst(_1646:timestamp, gj_a:timezone) 
    bat.insert(_1642,_1645,_1648);      #968 _1649:bat[:int,:bit] := BKCinsert_bun(_1642:bat[:int,:bit], _1645:int, _1648:bit) {G}
    redo (_1644,_1645,_1646):= bat.hasMoreElements(timestamp_bra);#969 (_1644:lng, _1645:int, _1646:timestamp) := CHPbunHasMoreElements(timestamp_bra:bat[:int,:timestamp]) {J967}
exit (_1644,_1645,_1646);               #970 (_1644:lng, _1645:int, _1646:timestamp) 
    hj_a:bat[:int,:bit]  := _1642;      #971 hj_a:bat[:int,:bit] := _1642:bat[:int,:bit] {G}
    ij_a := bat.setColumn(hj_a,"dst");  #972 ij_a:void := BKCsetColumn(hj_a:bat[:int,:bit], _809:str) 
    io.print("print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)");#973 _817:void := IOprint_val(_818:str) 
    jj_a := io.print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a);#974 jj_a:void := IOtable(date_seq:bat[:int,:date], yi_a:bat[:int,:str], timestamp_eur:bat[:int,:timestamp], dj_a:bat[:int,:bit], timestamp_bra:bat[:int,:timestamp], hj_a:bat[:int,:bit]) 
#	[dst](timestamp_bra,algebra.find(timezones,"Andes/Brazil")).bat.setColumn("dst")); 
#quit; 
##line 756 "/ufs/mk/monet_5-0/src/modules/atoms/monettime.mx" 
end main;                               #978  
[ "rule_bat,na_a,pa_a,ra_a,ta_a" ]
#---------------------------------------------------------------------------------------------------------#
# h	rule						month	weekday		day	minutes		  # name
# str	rule						int	int		int	int		  # type
#---------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1,	  2,		  1,	  75		  ]
[ "feb",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  3,	  -4,		  10,	  75		  ]
[ "apr",  last thursday on or before april 1@01:15,	  4,	  -5,		  -1,	  75		  ]
[ "may",  may 26@01:15,					  5,	  0,		  26,	  75		  ]
[ "jun",  second tuesday from end of june@01:15,	  6,	  3,		  -2,	  75		  ]
[ "jul",  first sunday from start of july@01:15,	  7,	  1,		  1,	  75		  ]
[ "aug",  first sunday from end of august@01:15,	  8,	  1,		  -1,	  75		  ]
[ "sep",  10th tuesday from end of september@01:15,	  9,	  3,		  -10,	  75		  ]
[ "oct",  october 31@01:15,				  10,	  0,		  31,	  75		  ]
[ "nov",  last wednesday on or before november 10@01:15,  11,	  -4,		  -10,	  75		  ]
[ "dec",  nil,						  nil,	  nil,		  nil,	  nil		  ]
[ "rule_bat,xa_a,cb_a,eb_a,ib_a,kb_a,ob_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						2001		2001		1999		1999		1992		1992		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  2001-01-01,	  "monday",	  1999-01-04,	  "monday",	  1992-01-06,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  2001-03-14,	  "wednesday",	  1999-03-10,	  "wednesday",	  1992-03-11,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  2001-03-29,	  "thursday",	  1999-04-01,	  "thursday",	  1992-03-26,	  "thursday"	  ]
[ "may",  may 26@01:15,					  2001-05-26,	  "saturday",	  1999-05-26,	  "wednesday",	  1992-05-26,	  "tuesday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  2001-06-19,	  "tuesday",	  1999-06-22,	  "tuesday",	  1992-06-23,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  2001-07-01,	  "sunday",	  1999-07-04,	  "sunday",	  1992-07-05,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  2001-08-26,	  "sunday",	  1999-08-29,	  "sunday",	  1992-08-30,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  2001-07-24,	  "tuesday",	  1999-07-27,	  "tuesday",	  1992-07-28,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  2001-10-31,	  "wednesday",	  1999-10-31,	  "sunday",	  1992-10-31,	  "saturday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  2001-11-07,	  "wednesday",	  1999-11-10,	  "wednesday",	  1992-11-04,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "rule_bat,sb_a,wb_a,yb_a,dc_a,fc_a,jc_a" ]
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# h	rule						1572		1572		1		1		-2000		-2000		  # name
# str	rule						date		str		date		str		date		str		  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "jan",  first monday from start of january@01:15,	  1572-01-03,	  "monday",	  1-01-01,	  "monday",	  -2000-01-01,	  "monday"	  ]
[ "feb",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "mar",  first wednesday on or after march 10@01:15,	  1572-03-15,	  "wednesday",	  1-03-14,	  "wednesday",	  -2000-03-14,	  "wednesday"	  ]
[ "apr",  last thursday on or before april 1@01:15,	  1572-03-30,	  "thursday",	  1-03-29,	  "thursday",	  -2000-03-29,	  "thursday"	  ]
[ "may",  may 26@01:15,					  1572-05-26,	  "friday",	  1-05-26,	  "saturday",	  -2000-05-26,	  "saturday"	  ]
[ "jun",  second tuesday from end of june@01:15,	  1572-06-20,	  "tuesday",	  1-06-19,	  "tuesday",	  -2000-06-19,	  "tuesday"	  ]
[ "jul",  first sunday from start of july@01:15,	  1572-07-02,	  "sunday",	  1-07-01,	  "sunday",	  -2000-07-01,	  "sunday"	  ]
[ "aug",  first sunday from end of august@01:15,	  1572-08-27,	  "sunday",	  1-08-26,	  "sunday",	  -2000-08-26,	  "sunday"	  ]
[ "sep",  10th tuesday from end of september@01:15,	  1572-07-25,	  "tuesday",	  1-07-24,	  "tuesday",	  -2000-07-24,	  "tuesday"	  ]
[ "oct",  october 31@01:15,				  1572-10-31,	  "tuesday",	  1-10-31,	  "wednesday",	  -2000-10-31,	  "wednesday"	  ]
[ "nov",  last wednesday on or before november 10@01:15,  1572-11-08,	  "wednesday",	  1-11-07,	  "wednesday",	  -2000-11-07,	  "wednesday"	  ]
[ "dec",  nil,						  nil,		  nil,		  nil,		  nil,		  nil,		  nil		  ]
[ "tzone_bat" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	t													  # name
# oid	tzone													  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  GMT													  ]
[ 1@0,	  GMT+01:00												  ]
[ 2@0,	  GMT+01:00												  ]
[ 3@0,	  GMT+01:00-DST[october 31@01:15,first wednesday on or after march 26@01:15]				  ]
[ 4@0,	  GMT-DST[17th monday from start of january@01:15,31th sunday from start of august@01:15]		  ]
[ 5@0,	  GMT-01:37-DST[october 31@01:15,first thursday on or after april 31@01:15]				  ]
[ 6@0,	  GMT-01:37-DST[may 26@01:15,22th tuesday from start of september@01:15]				  ]
[ 7@0,	  GMT+23:00-DST[first thursday on or after april 31@01:15,first wednesday on or after november 22@01:15]  ]
[ 8@0,	  GMT-23:36												  ]
[ 9@0,	  GMT													  ]
[ 10@0,	  GMT-01:00												  ]
[ 11@0,	  GMT+23:59												  ]
[ 12@0,	  GMT+01:00												  ]
[ 13@0,	  nil													  ]
[ 14@0,	  nil													  ]
[ 15@0,	  nil													  ]
[ 16@0,	  nil													  ]
[ 17@0,	  nil													  ]
[ 18@0,	  nil													  ]
[ 19@0,	  nil													  ]
[ 20@0,	  nil													  ]
[ "print(kd_a,md_a,od_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	minutes		start_dst					end_dst						  # name
# oid	int		rule						rule						  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ 0@0,	  0,		  nil,						  nil						  ]
[ 1@0,	  60,		  nil,						  nil						  ]
[ 2@0,	  60,		  nil,						  nil						  ]
[ 3@0,	  60,		  october 31@01:15,				  first wednesday on or after march 26@01:15	  ]
[ 4@0,	  0,		  17th monday from start of january@01:15,	  31th sunday from start of august@01:15	  ]
[ 5@0,	  -97,		  october 31@01:15,				  first thursday on or after april 31@01:15	  ]
[ 6@0,	  -97,		  may 26@01:15,					  22th tuesday from start of september@01:15	  ]
[ 7@0,	  1380,		  first thursday on or after april 31@01:15,	  first wednesday on or after november 22@01:15	  ]
[ 8@0,	  -1416,	  nil,						  nil						  ]
[ 9@0,	  0,		  nil,						  nil						  ]
[ 10@0,	  -60,		  nil,						  nil						  ]
[ 11@0,	  1439,		  nil,						  nil						  ]
[ 12@0,	  60,		  nil,						  nil						  ]
[ 13@0,	  nil,		  nil,						  nil						  ]
[ 14@0,	  nil,		  nil,						  nil						  ]
[ 15@0,	  nil,		  nil,						  nil						  ]
[ 16@0,	  nil,		  nil,						  nil						  ]
[ 17@0,	  nil,		  nil,						  nil						  ]
[ 18@0,	  nil,		  nil,						  nil						  ]
[ 19@0,	  nil,		  nil,						  nil						  ]
[ 20@0,	  nil,		  nil,						  nil						  ]
[ "print(date_bat,oe_a,qe_a,te_a,xe_a)" ]
#---------------------------------------------------------------------------------#
# h	date		year		day	monthname	monthnum		  # name
# oid	date		int		int	str		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000,		  1,	  "january",	  1		  ]
[ 1@0,	  5000-01-01,	  5000,		  1,	  "january",	  1		  ]
[ 2@0,	  1968-02-29,	  1968,		  29,	  "february",	  2		  ]
[ 3@0,	  1-03-01,	  1,		  1,	  "march",	  3		  ]
[ 4@0,	  -5867411-01-01, -5867411,	  1,	  "january",	  1		  ]
[ 5@0,	  -768-10-01,	  -768,		  1,	  "october",	  10		  ]
[ 6@0,	  5000-11-01,	  5000,		  1,	  "november",	  11		  ]
[ 7@0,	  -1999-06-01,	  -1999,	  1,	  "june",	  6		  ]
[ 8@0,	  2000-07-14,	  2000,		  14,	  "july",	  7		  ]
[ 9@0,	  1999-09-01,	  1999,		  1,	  "september",	  9		  ]
[ 10@0,	  1998-12-01,	  1998,		  1,	  "december",	  12		  ]
[ 11@0,	  1953-05-01,	  1953,		  1,	  "may",	  5		  ]
[ 12@0,	  5867411-12-31,  5867411,	  31,	  "december",	  12		  ]
[ 13@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 14@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 15@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,		  nil,	  nil,		  nil		  ]
[ "print(date_bat,date_addyears,df_a)" ]
#-------------------------------------------------#
# h	date		min100y		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  1900-01-01,	  -36524  ]
[ 1@0,	  5000-01-01,	  4900-01-01,	  -36524  ]
[ 2@0,	  1968-02-29,	  1868-02-29,	  -36524  ]
[ 3@0,	  1-03-01,	  -100-03-01,	  -36525  ]
[ 4@0,	  -5867411-01-01, nil,		  nil	  ]
[ 5@0,	  -768-10-01,	  -868-10-01,	  -36525  ]
[ 6@0,	  5000-11-01,	  4900-11-01,	  -36524  ]
[ 7@0,	  -1999-06-01,	  -2099-06-01,	  -36525  ]
[ 8@0,	  2000-07-14,	  1900-07-14,	  -36525  ]
[ 9@0,	  1999-09-01,	  1899-09-01,	  -36524  ]
[ 10@0,	  1998-12-01,	  1898-12-01,	  -36524  ]
[ 11@0,	  1953-05-01,	  1853-05-01,	  -36524  ]
[ 12@0,	  5867411-12-31,  5867311-12-31,  -36524  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ " print(date_bat,date_addmonths,if_a)" ]
#-------------------------------------------------#
# h	date		plus1m		diff	  # name
# oid	date		date		int	  # type
#-------------------------------------------------#
[ 0@0,	  2000-01-01,	  2000-02-01,	  31	  ]
[ 1@0,	  5000-01-01,	  5000-02-01,	  31	  ]
[ 2@0,	  1968-02-29,	  1968-03-29,	  29	  ]
[ 3@0,	  1-03-01,	  1-04-01,	  31	  ]
[ 4@0,	  -5867411-01-01, -5867411-02-01, 31	  ]
[ 5@0,	  -768-10-01,	  -768-11-01,	  31	  ]
[ 6@0,	  5000-11-01,	  5000-12-01,	  30	  ]
[ 7@0,	  -1999-06-01,	  -1999-07-01,	  30	  ]
[ 8@0,	  2000-07-14,	  2000-08-14,	  31	  ]
[ 9@0,	  1999-09-01,	  1999-10-01,	  30	  ]
[ 10@0,	  1998-12-01,	  1999-01-01,	  31	  ]
[ 11@0,	  1953-05-01,	  1953-06-01,	  31	  ]
[ 12@0,	  5867411-12-31,  nil,		  nil	  ]
[ 13@0,	  nil,		  nil,		  nil	  ]
[ 14@0,	  nil,		  nil,		  nil	  ]
[ 15@0,	  nil,		  nil,		  nil	  ]
[ 16@0,	  nil,		  nil,		  nil	  ]
[ 17@0,	  nil,		  nil,		  nil	  ]
[ 18@0,	  nil,		  nil,		  nil	  ]
[ 19@0,	  nil,		  nil,		  nil	  ]
[ 20@0,	  nil,		  nil,		  nil	  ]
[ "date_seq,sf_a,vf_a,ag_a,cg_a" ]
#---------------------------------------------------------------------------------#
# h	date		weekofyear	dayofweek	num	dayofyear	  # name
# int	date		int		str		int	int		  # type
#---------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  51,		  "wednesday",	  4,	  357		  ]
[ -373,	  1998-12-24,	  51,		  "thursday",	  5,	  358		  ]
[ -372,	  1998-12-25,	  51,		  "friday",	  6,	  359		  ]
[ -371,	  1998-12-26,	  51,		  "saturday",	  7,	  360		  ]
[ -370,	  1998-12-27,	  52,		  "sunday",	  1,	  361		  ]
[ -369,	  1998-12-28,	  52,		  "monday",	  2,	  362		  ]
[ -368,	  1998-12-29,	  52,		  "tuesday",	  3,	  363		  ]
[ -367,	  1998-12-30,	  52,		  "wednesday",	  4,	  364		  ]
[ -366,	  1998-12-31,	  52,		  "thursday",	  5,	  365		  ]
[ -365,	  1999-01-01,	  52,		  "friday",	  6,	  1		  ]
[ -364,	  1999-01-02,	  52,		  "saturday",	  7,	  2		  ]
[ -363,	  1999-01-03,	  1,		  "sunday",	  1,	  3		  ]
[ -362,	  1999-01-04,	  1,		  "monday",	  2,	  4		  ]
[ -361,	  1999-01-05,	  1,		  "tuesday",	  3,	  5		  ]
[ -360,	  1999-01-06,	  1,		  "wednesday",	  4,	  6		  ]
[ -359,	  1999-01-07,	  1,		  "thursday",	  5,	  7		  ]
[ -358,	  1999-01-08,	  1,		  "friday",	  6,	  8		  ]
[ -357,	  1999-01-09,	  1,		  "saturday",	  7,	  9		  ]
[ -356,	  1999-01-10,	  2,		  "sunday",	  1,	  10		  ]
[ -355,	  1999-01-11,	  2,		  "monday",	  2,	  11		  ]
[ -354,	  1999-01-12,	  2,		  "tuesday",	  3,	  12		  ]
[ -353,	  1999-01-13,	  2,		  "wednesday",	  4,	  13		  ]
[ -352,	  1999-01-14,	  2,		  "thursday",	  5,	  14		  ]
[ -351,	  1999-01-15,	  2,		  "friday",	  6,	  15		  ]
[ -350,	  1999-01-16,	  2,		  "saturday",	  7,	  16		  ]
[ -349,	  1999-01-17,	  3,		  "sunday",	  1,	  17		  ]
[ -348,	  1999-01-18,	  3,		  "monday",	  2,	  18		  ]
[ -347,	  1999-01-19,	  3,		  "tuesday",	  3,	  19		  ]
[ -346,	  1999-01-20,	  3,		  "wednesday",	  4,	  20		  ]
[ -345,	  1999-01-21,	  3,		  "thursday",	  5,	  21		  ]
[ -344,	  1999-01-22,	  3,		  "friday",	  6,	  22		  ]
[ -343,	  1999-01-23,	  3,		  "saturday",	  7,	  23		  ]
[ -342,	  1999-01-24,	  4,		  "sunday",	  1,	  24		  ]
[ -341,	  1999-01-25,	  4,		  "monday",	  2,	  25		  ]
[ -340,	  1999-01-26,	  4,		  "tuesday",	  3,	  26		  ]
[ -339,	  1999-01-27,	  4,		  "wednesday",	  4,	  27		  ]
[ -338,	  1999-01-28,	  4,		  "thursday",	  5,	  28		  ]
[ -337,	  1999-01-29,	  4,		  "friday",	  6,	  29		  ]
[ -336,	  1999-01-30,	  4,		  "saturday",	  7,	  30		  ]
[ -335,	  1999-01-31,	  5,		  "sunday",	  1,	  31		  ]
[ -334,	  1999-02-01,	  5,		  "monday",	  2,	  32		  ]
[ -333,	  1999-02-02,	  5,		  "tuesday",	  3,	  33		  ]
[ -332,	  1999-02-03,	  5,		  "wednesday",	  4,	  34		  ]
[ -331,	  1999-02-04,	  5,		  "thursday",	  5,	  35		  ]
[ -330,	  1999-02-05,	  5,		  "friday",	  6,	  36		  ]
[ -329,	  1999-02-06,	  5,		  "saturday",	  7,	  37		  ]
[ -328,	  1999-02-07,	  6,		  "sunday",	  1,	  38		  ]
[ -327,	  1999-02-08,	  6,		  "monday",	  2,	  39		  ]
[ -326,	  1999-02-09,	  6,		  "tuesday",	  3,	  40		  ]
[ -325,	  1999-02-10,	  6,		  "wednesday",	  4,	  41		  ]
[ -324,	  1999-02-11,	  6,		  "thursday",	  5,	  42		  ]
[ -323,	  1999-02-12,	  6,		  "friday",	  6,	  43		  ]
[ -322,	  1999-02-13,	  6,		  "saturday",	  7,	  44		  ]
[ -321,	  1999-02-14,	  7,		  "sunday",	  1,	  45		  ]
[ -320,	  1999-02-15,	  7,		  "monday",	  2,	  46		  ]
[ -319,	  1999-02-16,	  7,		  "tuesday",	  3,	  47		  ]
[ -318,	  1999-02-17,	  7,		  "wednesday",	  4,	  48		  ]
[ -317,	  1999-02-18,	  7,		  "thursday",	  5,	  49		  ]
[ -316,	  1999-02-19,	  7,		  "friday",	  6,	  50		  ]
[ -315,	  1999-02-20,	  7,		  "saturday",	  7,	  51		  ]
[ -314,	  1999-02-21,	  8,		  "sunday",	  1,	  52		  ]
[ -313,	  1999-02-22,	  8,		  "monday",	  2,	  53		  ]
[ -312,	  1999-02-23,	  8,		  "tuesday",	  3,	  54		  ]
[ -311,	  1999-02-24,	  8,		  "wednesday",	  4,	  55		  ]
[ -310,	  1999-02-25,	  8,		  "thursday",	  5,	  56		  ]
[ -309,	  1999-02-26,	  8,		  "friday",	  6,	  57		  ]
[ -308,	  1999-02-27,	  8,		  "saturday",	  7,	  58		  ]
[ -307,	  1999-02-28,	  9,		  "sunday",	  1,	  59		  ]
[ -306,	  1999-03-01,	  9,		  "monday",	  2,	  60		  ]
[ -305,	  1999-03-02,	  9,		  "tuesday",	  3,	  61		  ]
[ -304,	  1999-03-03,	  9,		  "wednesday",	  4,	  62		  ]
[ -303,	  1999-03-04,	  9,		  "thursday",	  5,	  63		  ]
[ -302,	  1999-03-05,	  9,		  "friday",	  6,	  64		  ]
[ -301,	  1999-03-06,	  9,		  "saturday",	  7,	  65		  ]
[ -300,	  1999-03-07,	  10,		  "sunday",	  1,	  66		  ]
[ -299,	  1999-03-08,	  10,		  "monday",	  2,	  67		  ]
[ -298,	  1999-03-09,	  10,		  "tuesday",	  3,	  68		  ]
[ -297,	  1999-03-10,	  10,		  "wednesday",	  4,	  69		  ]
[ -296,	  1999-03-11,	  10,		  "thursday",	  5,	  70		  ]
[ -295,	  1999-03-12,	  10,		  "friday",	  6,	  71		  ]
[ -294,	  1999-03-13,	  10,		  "saturday",	  7,	  72		  ]
[ -293,	  1999-03-14,	  11,		  "sunday",	  1,	  73		  ]
[ -292,	  1999-03-15,	  11,		  "monday",	  2,	  74		  ]
[ -291,	  1999-03-16,	  11,		  "tuesday",	  3,	  75		  ]
[ -290,	  1999-03-17,	  11,		  "wednesday",	  4,	  76		  ]
[ -289,	  1999-03-18,	  11,		  "thursday",	  5,	  77		  ]
[ -288,	  1999-03-19,	  11,		  "friday",	  6,	  78		  ]
[ -287,	  1999-03-20,	  11,		  "saturday",	  7,	  79		  ]
[ -286,	  1999-03-21,	  12,		  "sunday",	  1,	  80		  ]
[ -285,	  1999-03-22,	  12,		  "monday",	  2,	  81		  ]
[ -284,	  1999-03-23,	  12,		  "tuesday",	  3,	  82		  ]
[ -283,	  1999-03-24,	  12,		  "wednesday",	  4,	  83		  ]
[ -282,	  1999-03-25,	  12,		  "thursday",	  5,	  84		  ]
[ -281,	  1999-03-26,	  12,		  "friday",	  6,	  85		  ]
[ -280,	  1999-03-27,	  12,		  "saturday",	  7,	  86		  ]
[ -279,	  1999-03-28,	  13,		  "sunday",	  1,	  87		  ]
[ -278,	  1999-03-29,	  13,		  "monday",	  2,	  88		  ]
[ -277,	  1999-03-30,	  13,		  "tuesday",	  3,	  89		  ]
[ -276,	  1999-03-31,	  13,		  "wednesday",	  4,	  90		  ]
[ -275,	  1999-04-01,	  13,		  "thursday",	  5,	  91		  ]
[ -274,	  1999-04-02,	  13,		  "friday",	  6,	  92		  ]
[ -273,	  1999-04-03,	  13,		  "saturday",	  7,	  93		  ]
[ -272,	  1999-04-04,	  14,		  "sunday",	  1,	  94		  ]
[ -271,	  1999-04-05,	  14,		  "monday",	  2,	  95		  ]
[ -270,	  1999-04-06,	  14,		  "tuesday",	  3,	  96		  ]
[ -269,	  1999-04-07,	  14,		  "wednesday",	  4,	  97		  ]
[ -268,	  1999-04-08,	  14,		  "thursday",	  5,	  98		  ]
[ -267,	  1999-04-09,	  14,		  "friday",	  6,	  99		  ]
[ -266,	  1999-04-10,	  14,		  "saturday",	  7,	  100		  ]
[ -265,	  1999-04-11,	  15,		  "sunday",	  1,	  101		  ]
[ -264,	  1999-04-12,	  15,		  "monday",	  2,	  102		  ]
[ -263,	  1999-04-13,	  15,		  "tuesday",	  3,	  103		  ]
[ -262,	  1999-04-14,	  15,		  "wednesday",	  4,	  104		  ]
[ -261,	  1999-04-15,	  15,		  "thursday",	  5,	  105		  ]
[ -260,	  1999-04-16,	  15,		  "friday",	  6,	  106		  ]
[ -259,	  1999-04-17,	  15,		  "saturday",	  7,	  107		  ]
[ -258,	  1999-04-18,	  16,		  "sunday",	  1,	  108		  ]
[ -257,	  1999-04-19,	  16,		  "monday",	  2,	  109		  ]
[ -256,	  1999-04-20,	  16,		  "tuesday",	  3,	  110		  ]
[ -255,	  1999-04-21,	  16,		  "wednesday",	  4,	  111		  ]
[ -254,	  1999-04-22,	  16,		  "thursday",	  5,	  112		  ]
[ -253,	  1999-04-23,	  16,		  "friday",	  6,	  113		  ]
[ -252,	  1999-04-24,	  16,		  "saturday",	  7,	  114		  ]
[ -251,	  1999-04-25,	  17,		  "sunday",	  1,	  115		  ]
[ -250,	  1999-04-26,	  17,		  "monday",	  2,	  116		  ]
[ -249,	  1999-04-27,	  17,		  "tuesday",	  3,	  117		  ]
[ -248,	  1999-04-28,	  17,		  "wednesday",	  4,	  118		  ]
[ -247,	  1999-04-29,	  17,		  "thursday",	  5,	  119		  ]
[ -246,	  1999-04-30,	  17,		  "friday",	  6,	  120		  ]
[ -245,	  1999-05-01,	  17,		  "saturday",	  7,	  121		  ]
[ -244,	  1999-05-02,	  18,		  "sunday",	  1,	  122		  ]
[ -243,	  1999-05-03,	  18,		  "monday",	  2,	  123		  ]
[ -242,	  1999-05-04,	  18,		  "tuesday",	  3,	  124		  ]
[ -241,	  1999-05-05,	  18,		  "wednesday",	  4,	  125		  ]
[ -240,	  1999-05-06,	  18,		  "thursday",	  5,	  126		  ]
[ -239,	  1999-05-07,	  18,		  "friday",	  6,	  127		  ]
[ -238,	  1999-05-08,	  18,		  "saturday",	  7,	  128		  ]
[ -237,	  1999-05-09,	  19,		  "sunday",	  1,	  129		  ]
[ -236,	  1999-05-10,	  19,		  "monday",	  2,	  130		  ]
[ -235,	  1999-05-11,	  19,		  "tuesday",	  3,	  131		  ]
[ -234,	  1999-05-12,	  19,		  "wednesday",	  4,	  132		  ]
[ -233,	  1999-05-13,	  19,		  "thursday",	  5,	  133		  ]
[ -232,	  1999-05-14,	  19,		  "friday",	  6,	  134		  ]
[ -231,	  1999-05-15,	  19,		  "saturday",	  7,	  135		  ]
[ -230,	  1999-05-16,	  20,		  "sunday",	  1,	  136		  ]
[ -229,	  1999-05-17,	  20,		  "monday",	  2,	  137		  ]
[ -228,	  1999-05-18,	  20,		  "tuesday",	  3,	  138		  ]
[ -227,	  1999-05-19,	  20,		  "wednesday",	  4,	  139		  ]
[ -226,	  1999-05-20,	  20,		  "thursday",	  5,	  140		  ]
[ -225,	  1999-05-21,	  20,		  "friday",	  6,	  141		  ]
[ -224,	  1999-05-22,	  20,		  "saturday",	  7,	  142		  ]
[ -223,	  1999-05-23,	  21,		  "sunday",	  1,	  143		  ]
[ -222,	  1999-05-24,	  21,		  "monday",	  2,	  144		  ]
[ -221,	  1999-05-25,	  21,		  "tuesday",	  3,	  145		  ]
[ -220,	  1999-05-26,	  21,		  "wednesday",	  4,	  146		  ]
[ -219,	  1999-05-27,	  21,		  "thursday",	  5,	  147		  ]
[ -218,	  1999-05-28,	  21,		  "friday",	  6,	  148		  ]
[ -217,	  1999-05-29,	  21,		  "saturday",	  7,	  149		  ]
[ -216,	  1999-05-30,	  22,		  "sunday",	  1,	  150		  ]
[ -215,	  1999-05-31,	  22,		  "monday",	  2,	  151		  ]
[ -214,	  1999-06-01,	  22,		  "tuesday",	  3,	  152		  ]
[ -213,	  1999-06-02,	  22,		  "wednesday",	  4,	  153		  ]
[ -212,	  1999-06-03,	  22,		  "thursday",	  5,	  154		  ]
[ -211,	  1999-06-04,	  22,		  "friday",	  6,	  155		  ]
[ -210,	  1999-06-05,	  22,		  "saturday",	  7,	  156		  ]
[ -209,	  1999-06-06,	  23,		  "sunday",	  1,	  157		  ]
[ -208,	  1999-06-07,	  23,		  "monday",	  2,	  158		  ]
[ -207,	  1999-06-08,	  23,		  "tuesday",	  3,	  159		  ]
[ -206,	  1999-06-09,	  23,		  "wednesday",	  4,	  160		  ]
[ -205,	  1999-06-10,	  23,		  "thursday",	  5,	  161		  ]
[ -204,	  1999-06-11,	  23,		  "friday",	  6,	  162		  ]
[ -203,	  1999-06-12,	  23,		  "saturday",	  7,	  163		  ]
[ -202,	  1999-06-13,	  24,		  "sunday",	  1,	  164		  ]
[ -201,	  1999-06-14,	  24,		  "monday",	  2,	  165		  ]
[ -200,	  1999-06-15,	  24,		  "tuesday",	  3,	  166		  ]
[ -199,	  1999-06-16,	  24,		  "wednesday",	  4,	  167		  ]
[ -198,	  1999-06-17,	  24,		  "thursday",	  5,	  168		  ]
[ -197,	  1999-06-18,	  24,		  "friday",	  6,	  169		  ]
[ -196,	  1999-06-19,	  24,		  "saturday",	  7,	  170		  ]
[ -195,	  1999-06-20,	  25,		  "sunday",	  1,	  171		  ]
[ -194,	  1999-06-21,	  25,		  "monday",	  2,	  172		  ]
[ -193,	  1999-06-22,	  25,		  "tuesday",	  3,	  173		  ]
[ -192,	  1999-06-23,	  25,		  "wednesday",	  4,	  174		  ]
[ -191,	  1999-06-24,	  25,		  "thursday",	  5,	  175		  ]
[ -190,	  1999-06-25,	  25,		  "friday",	  6,	  176		  ]
[ -189,	  1999-06-26,	  25,		  "saturday",	  7,	  177		  ]
[ -188,	  1999-06-27,	  26,		  "sunday",	  1,	  178		  ]
[ -187,	  1999-06-28,	  26,		  "monday",	  2,	  179		  ]
[ -186,	  1999-06-29,	  26,		  "tuesday",	  3,	  180		  ]
[ -185,	  1999-06-30,	  26,		  "wednesday",	  4,	  181		  ]
[ -184,	  1999-07-01,	  26,		  "thursday",	  5,	  182		  ]
[ -183,	  1999-07-02,	  26,		  "friday",	  6,	  183		  ]
[ -182,	  1999-07-03,	  26,		  "saturday",	  7,	  184		  ]
[ -181,	  1999-07-04,	  27,		  "sunday",	  1,	  185		  ]
[ -180,	  1999-07-05,	  27,		  "monday",	  2,	  186		  ]
[ -179,	  1999-07-06,	  27,		  "tuesday",	  3,	  187		  ]
[ -178,	  1999-07-07,	  27,		  "wednesday",	  4,	  188		  ]
[ -177,	  1999-07-08,	  27,		  "thursday",	  5,	  189		  ]
[ -176,	  1999-07-09,	  27,		  "friday",	  6,	  190		  ]
[ -175,	  1999-07-10,	  27,		  "saturday",	  7,	  191		  ]
[ -174,	  1999-07-11,	  28,		  "sunday",	  1,	  192		  ]
[ -173,	  1999-07-12,	  28,		  "monday",	  2,	  193		  ]
[ -172,	  1999-07-13,	  28,		  "tuesday",	  3,	  194		  ]
[ -171,	  1999-07-14,	  28,		  "wednesday",	  4,	  195		  ]
[ -170,	  1999-07-15,	  28,		  "thursday",	  5,	  196		  ]
[ -169,	  1999-07-16,	  28,		  "friday",	  6,	  197		  ]
[ -168,	  1999-07-17,	  28,		  "saturday",	  7,	  198		  ]
[ -167,	  1999-07-18,	  29,		  "sunday",	  1,	  199		  ]
[ -166,	  1999-07-19,	  29,		  "monday",	  2,	  200		  ]
[ -165,	  1999-07-20,	  29,		  "tuesday",	  3,	  201		  ]
[ -164,	  1999-07-21,	  29,		  "wednesday",	  4,	  202		  ]
[ -163,	  1999-07-22,	  29,		  "thursday",	  5,	  203		  ]
[ -162,	  1999-07-23,	  29,		  "friday",	  6,	  204		  ]
[ -161,	  1999-07-24,	  29,		  "saturday",	  7,	  205		  ]
[ -160,	  1999-07-25,	  30,		  "sunday",	  1,	  206		  ]
[ -159,	  1999-07-26,	  30,		  "monday",	  2,	  207		  ]
[ -158,	  1999-07-27,	  30,		  "tuesday",	  3,	  208		  ]
[ -157,	  1999-07-28,	  30,		  "wednesday",	  4,	  209		  ]
[ -156,	  1999-07-29,	  30,		  "thursday",	  5,	  210		  ]
[ -155,	  1999-07-30,	  30,		  "friday",	  6,	  211		  ]
[ -154,	  1999-07-31,	  30,		  "saturday",	  7,	  212		  ]
[ -153,	  1999-08-01,	  31,		  "sunday",	  1,	  213		  ]
[ -152,	  1999-08-02,	  31,		  "monday",	  2,	  214		  ]
[ -151,	  1999-08-03,	  31,		  "tuesday",	  3,	  215		  ]
[ -150,	  1999-08-04,	  31,		  "wednesday",	  4,	  216		  ]
[ -149,	  1999-08-05,	  31,		  "thursday",	  5,	  217		  ]
[ -148,	  1999-08-06,	  31,		  "friday",	  6,	  218		  ]
[ -147,	  1999-08-07,	  31,		  "saturday",	  7,	  219		  ]
[ -146,	  1999-08-08,	  32,		  "sunday",	  1,	  220		  ]
[ -145,	  1999-08-09,	  32,		  "monday",	  2,	  221		  ]
[ -144,	  1999-08-10,	  32,		  "tuesday",	  3,	  222		  ]
[ -143,	  1999-08-11,	  32,		  "wednesday",	  4,	  223		  ]
[ -142,	  1999-08-12,	  32,		  "thursday",	  5,	  224		  ]
[ -141,	  1999-08-13,	  32,		  "friday",	  6,	  225		  ]
[ -140,	  1999-08-14,	  32,		  "saturday",	  7,	  226		  ]
[ -139,	  1999-08-15,	  33,		  "sunday",	  1,	  227		  ]
[ -138,	  1999-08-16,	  33,		  "monday",	  2,	  228		  ]
[ -137,	  1999-08-17,	  33,		  "tuesday",	  3,	  229		  ]
[ -136,	  1999-08-18,	  33,		  "wednesday",	  4,	  230		  ]
[ -135,	  1999-08-19,	  33,		  "thursday",	  5,	  231		  ]
[ -134,	  1999-08-20,	  33,		  "friday",	  6,	  232		  ]
[ -133,	  1999-08-21,	  33,		  "saturday",	  7,	  233		  ]
[ -132,	  1999-08-22,	  34,		  "sunday",	  1,	  234		  ]
[ -131,	  1999-08-23,	  34,		  "monday",	  2,	  235		  ]
[ -130,	  1999-08-24,	  34,		  "tuesday",	  3,	  236		  ]
[ -129,	  1999-08-25,	  34,		  "wednesday",	  4,	  237		  ]
[ -128,	  1999-08-26,	  34,		  "thursday",	  5,	  238		  ]
[ -127,	  1999-08-27,	  34,		  "friday",	  6,	  239		  ]
[ -126,	  1999-08-28,	  34,		  "saturday",	  7,	  240		  ]
[ -125,	  1999-08-29,	  35,		  "sunday",	  1,	  241		  ]
[ -124,	  1999-08-30,	  35,		  "monday",	  2,	  242		  ]
[ -123,	  1999-08-31,	  35,		  "tuesday",	  3,	  243		  ]
[ -122,	  1999-09-01,	  35,		  "wednesday",	  4,	  244		  ]
[ -121,	  1999-09-02,	  35,		  "thursday",	  5,	  245		  ]
[ -120,	  1999-09-03,	  35,		  "friday",	  6,	  246		  ]
[ -119,	  1999-09-04,	  35,		  "saturday",	  7,	  247		  ]
[ -118,	  1999-09-05,	  36,		  "sunday",	  1,	  248		  ]
[ -117,	  1999-09-06,	  36,		  "monday",	  2,	  249		  ]
[ -116,	  1999-09-07,	  36,		  "tuesday",	  3,	  250		  ]
[ -115,	  1999-09-08,	  36,		  "wednesday",	  4,	  251		  ]
[ -114,	  1999-09-09,	  36,		  "thursday",	  5,	  252		  ]
[ -113,	  1999-09-10,	  36,		  "friday",	  6,	  253		  ]
[ -112,	  1999-09-11,	  36,		  "saturday",	  7,	  254		  ]
[ -111,	  1999-09-12,	  37,		  "sunday",	  1,	  255		  ]
[ -110,	  1999-09-13,	  37,		  "monday",	  2,	  256		  ]
[ -109,	  1999-09-14,	  37,		  "tuesday",	  3,	  257		  ]
[ -108,	  1999-09-15,	  37,		  "wednesday",	  4,	  258		  ]
[ -107,	  1999-09-16,	  37,		  "thursday",	  5,	  259		  ]
[ -106,	  1999-09-17,	  37,		  "friday",	  6,	  260		  ]
[ -105,	  1999-09-18,	  37,		  "saturday",	  7,	  261		  ]
[ -104,	  1999-09-19,	  38,		  "sunday",	  1,	  262		  ]
[ -103,	  1999-09-20,	  38,		  "monday",	  2,	  263		  ]
[ -102,	  1999-09-21,	  38,		  "tuesday",	  3,	  264		  ]
[ -101,	  1999-09-22,	  38,		  "wednesday",	  4,	  265		  ]
[ -100,	  1999-09-23,	  38,		  "thursday",	  5,	  266		  ]
[ -99,	  1999-09-24,	  38,		  "friday",	  6,	  267		  ]
[ -98,	  1999-09-25,	  38,		  "saturday",	  7,	  268		  ]
[ -97,	  1999-09-26,	  39,		  "sunday",	  1,	  269		  ]
[ -96,	  1999-09-27,	  39,		  "monday",	  2,	  270		  ]
[ -95,	  1999-09-28,	  39,		  "tuesday",	  3,	  271		  ]
[ -94,	  1999-09-29,	  39,		  "wednesday",	  4,	  272		  ]
[ -93,	  1999-09-30,	  39,		  "thursday",	  5,	  273		  ]
[ -92,	  1999-10-01,	  39,		  "friday",	  6,	  274		  ]
[ -91,	  1999-10-02,	  39,		  "saturday",	  7,	  275		  ]
[ -90,	  1999-10-03,	  40,		  "sunday",	  1,	  276		  ]
[ -89,	  1999-10-04,	  40,		  "monday",	  2,	  277		  ]
[ -88,	  1999-10-05,	  40,		  "tuesday",	  3,	  278		  ]
[ -87,	  1999-10-06,	  40,		  "wednesday",	  4,	  279		  ]
[ -86,	  1999-10-07,	  40,		  "thursday",	  5,	  280		  ]
[ -85,	  1999-10-08,	  40,		  "friday",	  6,	  281		  ]
[ -84,	  1999-10-09,	  40,		  "saturday",	  7,	  282		  ]
[ -83,	  1999-10-10,	  41,		  "sunday",	  1,	  283		  ]
[ -82,	  1999-10-11,	  41,		  "monday",	  2,	  284		  ]
[ -81,	  1999-10-12,	  41,		  "tuesday",	  3,	  285		  ]
[ -80,	  1999-10-13,	  41,		  "wednesday",	  4,	  286		  ]
[ -79,	  1999-10-14,	  41,		  "thursday",	  5,	  287		  ]
[ -78,	  1999-10-15,	  41,		  "friday",	  6,	  288		  ]
[ -77,	  1999-10-16,	  41,		  "saturday",	  7,	  289		  ]
[ -76,	  1999-10-17,	  42,		  "sunday",	  1,	  290		  ]
[ -75,	  1999-10-18,	  42,		  "monday",	  2,	  291		  ]
[ -74,	  1999-10-19,	  42,		  "tuesday",	  3,	  292		  ]
[ -73,	  1999-10-20,	  42,		  "wednesday",	  4,	  293		  ]
[ -72,	  1999-10-21,	  42,		  "thursday",	  5,	  294		  ]
[ -71,	  1999-10-22,	  42,		  "friday",	  6,	  295		  ]
[ -70,	  1999-10-23,	  42,		  "saturday",	  7,	  296		  ]
[ -69,	  1999-10-24,	  43,		  "sunday",	  1,	  297		  ]
[ -68,	  1999-10-25,	  43,		  "monday",	  2,	  298		  ]
[ -67,	  1999-10-26,	  43,		  "tuesday",	  3,	  299		  ]
[ -66,	  1999-10-27,	  43,		  "wednesday",	  4,	  300		  ]
[ -65,	  1999-10-28,	  43,		  "thursday",	  5,	  301		  ]
[ -64,	  1999-10-29,	  43,		  "friday",	  6,	  302		  ]
[ -63,	  1999-10-30,	  43,		  "saturday",	  7,	  303		  ]
[ -62,	  1999-10-31,	  44,		  "sunday",	  1,	  304		  ]
[ -61,	  1999-11-01,	  44,		  "monday",	  2,	  305		  ]
[ -60,	  1999-11-02,	  44,		  "tuesday",	  3,	  306		  ]
[ -59,	  1999-11-03,	  44,		  "wednesday",	  4,	  307		  ]
[ -58,	  1999-11-04,	  44,		  "thursday",	  5,	  308		  ]
[ -57,	  1999-11-05,	  44,		  "friday",	  6,	  309		  ]
[ -56,	  1999-11-06,	  44,		  "saturday",	  7,	  310		  ]
[ -55,	  1999-11-07,	  45,		  "sunday",	  1,	  311		  ]
[ -54,	  1999-11-08,	  45,		  "monday",	  2,	  312		  ]
[ -53,	  1999-11-09,	  45,		  "tuesday",	  3,	  313		  ]
[ -52,	  1999-11-10,	  45,		  "wednesday",	  4,	  314		  ]
[ -51,	  1999-11-11,	  45,		  "thursday",	  5,	  315		  ]
[ -50,	  1999-11-12,	  45,		  "friday",	  6,	  316		  ]
[ -49,	  1999-11-13,	  45,		  "saturday",	  7,	  317		  ]
[ -48,	  1999-11-14,	  46,		  "sunday",	  1,	  318		  ]
[ -47,	  1999-11-15,	  46,		  "monday",	  2,	  319		  ]
[ -46,	  1999-11-16,	  46,		  "tuesday",	  3,	  320		  ]
[ -45,	  1999-11-17,	  46,		  "wednesday",	  4,	  321		  ]
[ -44,	  1999-11-18,	  46,		  "thursday",	  5,	  322		  ]
[ -43,	  1999-11-19,	  46,		  "friday",	  6,	  323		  ]
[ -42,	  1999-11-20,	  46,		  "saturday",	  7,	  324		  ]
[ -41,	  1999-11-21,	  47,		  "sunday",	  1,	  325		  ]
[ -40,	  1999-11-22,	  47,		  "monday",	  2,	  326		  ]
[ -39,	  1999-11-23,	  47,		  "tuesday",	  3,	  327		  ]
[ -38,	  1999-11-24,	  47,		  "wednesday",	  4,	  328		  ]
[ -37,	  1999-11-25,	  47,		  "thursday",	  5,	  329		  ]
[ -36,	  1999-11-26,	  47,		  "friday",	  6,	  330		  ]
[ -35,	  1999-11-27,	  47,		  "saturday",	  7,	  331		  ]
[ -34,	  1999-11-28,	  48,		  "sunday",	  1,	  332		  ]
[ -33,	  1999-11-29,	  48,		  "monday",	  2,	  333		  ]
[ -32,	  1999-11-30,	  48,		  "tuesday",	  3,	  334		  ]
[ -31,	  1999-12-01,	  48,		  "wednesday",	  4,	  335		  ]
[ -30,	  1999-12-02,	  48,		  "thursday",	  5,	  336		  ]
[ -29,	  1999-12-03,	  48,		  "friday",	  6,	  337		  ]
[ -28,	  1999-12-04,	  48,		  "saturday",	  7,	  338		  ]
[ -27,	  1999-12-05,	  49,		  "sunday",	  1,	  339		  ]
[ -26,	  1999-12-06,	  49,		  "monday",	  2,	  340		  ]
[ -25,	  1999-12-07,	  49,		  "tuesday",	  3,	  341		  ]
[ -24,	  1999-12-08,	  49,		  "wednesday",	  4,	  342		  ]
[ -23,	  1999-12-09,	  49,		  "thursday",	  5,	  343		  ]
[ -22,	  1999-12-10,	  49,		  "friday",	  6,	  344		  ]
[ -21,	  1999-12-11,	  49,		  "saturday",	  7,	  345		  ]
[ -20,	  1999-12-12,	  50,		  "sunday",	  1,	  346		  ]
[ -19,	  1999-12-13,	  50,		  "monday",	  2,	  347		  ]
[ -18,	  1999-12-14,	  50,		  "tuesday",	  3,	  348		  ]
[ -17,	  1999-12-15,	  50,		  "wednesday",	  4,	  349		  ]
[ -16,	  1999-12-16,	  50,		  "thursday",	  5,	  350		  ]
[ -15,	  1999-12-17,	  50,		  "friday",	  6,	  351		  ]
[ -14,	  1999-12-18,	  50,		  "saturday",	  7,	  352		  ]
[ -13,	  1999-12-19,	  51,		  "sunday",	  1,	  353		  ]
[ -12,	  1999-12-20,	  51,		  "monday",	  2,	  354		  ]
[ -11,	  1999-12-21,	  51,		  "tuesday",	  3,	  355		  ]
[ -10,	  1999-12-22,	  51,		  "wednesday",	  4,	  356		  ]
[ -9,	  1999-12-23,	  51,		  "thursday",	  5,	  357		  ]
[ -8,	  1999-12-24,	  51,		  "friday",	  6,	  358		  ]
[ -7,	  1999-12-25,	  51,		  "saturday",	  7,	  359		  ]
[ -6,	  1999-12-26,	  52,		  "sunday",	  1,	  360		  ]
[ -5,	  1999-12-27,	  52,		  "monday",	  2,	  361		  ]
[ -4,	  1999-12-28,	  52,		  "tuesday",	  3,	  362		  ]
[ -3,	  1999-12-29,	  52,		  "wednesday",	  4,	  363		  ]
[ -2,	  1999-12-30,	  52,		  "thursday",	  5,	  364		  ]
[ -1,	  1999-12-31,	  52,		  "friday",	  6,	  365		  ]
[ 0,	  2000-01-01,	  52,		  "saturday",	  7,	  1		  ]
[ 1,	  2000-01-02,	  1,		  "sunday",	  1,	  2		  ]
[ 2,	  2000-01-03,	  1,		  "monday",	  2,	  3		  ]
[ 3,	  2000-01-04,	  1,		  "tuesday",	  3,	  4		  ]
[ 4,	  2000-01-05,	  1,		  "wednesday",	  4,	  5		  ]
[ 5,	  2000-01-06,	  1,		  "thursday",	  5,	  6		  ]
[ 6,	  2000-01-07,	  1,		  "friday",	  6,	  7		  ]
[ 7,	  2000-01-08,	  1,		  "saturday",	  7,	  8		  ]
[ 8,	  2000-01-09,	  2,		  "sunday",	  1,	  9		  ]
[ 9,	  2000-01-10,	  2,		  "monday",	  2,	  10		  ]
[ 10,	  2000-01-11,	  2,		  "tuesday",	  3,	  11		  ]
[ 11,	  2000-01-12,	  2,		  "wednesday",	  4,	  12		  ]
[ 12,	  2000-01-13,	  2,		  "thursday",	  5,	  13		  ]
[ 13,	  2000-01-14,	  2,		  "friday",	  6,	  14		  ]
[ 14,	  2000-01-15,	  2,		  "saturday",	  7,	  15		  ]
[ 15,	  2000-01-16,	  3,		  "sunday",	  1,	  16		  ]
[ 16,	  2000-01-17,	  3,		  "monday",	  2,	  17		  ]
[ 17,	  2000-01-18,	  3,		  "tuesday",	  3,	  18		  ]
[ 18,	  2000-01-19,	  3,		  "wednesday",	  4,	  19		  ]
[ 19,	  2000-01-20,	  3,		  "thursday",	  5,	  20		  ]
[ 20,	  2000-01-21,	  3,		  "friday",	  6,	  21		  ]
[ 21,	  2000-01-22,	  3,		  "saturday",	  7,	  22		  ]
[ 22,	  2000-01-23,	  4,		  "sunday",	  1,	  23		  ]
[ 23,	  2000-01-24,	  4,		  "monday",	  2,	  24		  ]
[ 24,	  2000-01-25,	  4,		  "tuesday",	  3,	  25		  ]
[ 25,	  2000-01-26,	  4,		  "wednesday",	  4,	  26		  ]
[ 26,	  2000-01-27,	  4,		  "thursday",	  5,	  27		  ]
[ 27,	  2000-01-28,	  4,		  "friday",	  6,	  28		  ]
[ 28,	  2000-01-29,	  4,		  "saturday",	  7,	  29		  ]
[ 29,	  2000-01-30,	  5,		  "sunday",	  1,	  30		  ]
[ 30,	  2000-01-31,	  5,		  "monday",	  2,	  31		  ]
[ 31,	  2000-02-01,	  5,		  "tuesday",	  3,	  32		  ]
[ 32,	  2000-02-02,	  5,		  "wednesday",	  4,	  33		  ]
[ 33,	  2000-02-03,	  5,		  "thursday",	  5,	  34		  ]
[ 34,	  2000-02-04,	  5,		  "friday",	  6,	  35		  ]
[ 35,	  2000-02-05,	  5,		  "saturday",	  7,	  36		  ]
[ 36,	  2000-02-06,	  6,		  "sunday",	  1,	  37		  ]
[ 37,	  2000-02-07,	  6,		  "monday",	  2,	  38		  ]
[ 38,	  2000-02-08,	  6,		  "tuesday",	  3,	  39		  ]
[ 39,	  2000-02-09,	  6,		  "wednesday",	  4,	  40		  ]
[ 40,	  2000-02-10,	  6,		  "thursday",	  5,	  41		  ]
[ 41,	  2000-02-11,	  6,		  "friday",	  6,	  42		  ]
[ 42,	  2000-02-12,	  6,		  "saturday",	  7,	  43		  ]
[ 43,	  2000-02-13,	  7,		  "sunday",	  1,	  44		  ]
[ 44,	  2000-02-14,	  7,		  "monday",	  2,	  45		  ]
[ 45,	  2000-02-15,	  7,		  "tuesday",	  3,	  46		  ]
[ 46,	  2000-02-16,	  7,		  "wednesday",	  4,	  47		  ]
[ 47,	  2000-02-17,	  7,		  "thursday",	  5,	  48		  ]
[ 48,	  2000-02-18,	  7,		  "friday",	  6,	  49		  ]
[ 49,	  2000-02-19,	  7,		  "saturday",	  7,	  50		  ]
[ 50,	  2000-02-20,	  8,		  "sunday",	  1,	  51		  ]
[ 51,	  2000-02-21,	  8,		  "monday",	  2,	  52		  ]
[ 52,	  2000-02-22,	  8,		  "tuesday",	  3,	  53		  ]
[ 53,	  2000-02-23,	  8,		  "wednesday",	  4,	  54		  ]
[ 54,	  2000-02-24,	  8,		  "thursday",	  5,	  55		  ]
[ 55,	  2000-02-25,	  8,		  "friday",	  6,	  56		  ]
[ 56,	  2000-02-26,	  8,		  "saturday",	  7,	  57		  ]
[ 57,	  2000-02-27,	  9,		  "sunday",	  1,	  58		  ]
[ 58,	  2000-02-28,	  9,		  "monday",	  2,	  59		  ]
[ 59,	  2000-02-29,	  9,		  "tuesday",	  3,	  60		  ]
[ 60,	  2000-03-01,	  9,		  "wednesday",	  4,	  61		  ]
[ 61,	  2000-03-02,	  9,		  "thursday",	  5,	  62		  ]
[ 62,	  2000-03-03,	  9,		  "friday",	  6,	  63		  ]
[ 63,	  2000-03-04,	  9,		  "saturday",	  7,	  64		  ]
[ 64,	  2000-03-05,	  10,		  "sunday",	  1,	  65		  ]
[ 65,	  2000-03-06,	  10,		  "monday",	  2,	  66		  ]
[ 66,	  2000-03-07,	  10,		  "tuesday",	  3,	  67		  ]
[ 67,	  2000-03-08,	  10,		  "wednesday",	  4,	  68		  ]
[ 68,	  2000-03-09,	  10,		  "thursday",	  5,	  69		  ]
[ 69,	  2000-03-10,	  10,		  "friday",	  6,	  70		  ]
[ 70,	  2000-03-11,	  10,		  "saturday",	  7,	  71		  ]
[ 71,	  2000-03-12,	  11,		  "sunday",	  1,	  72		  ]
[ 72,	  2000-03-13,	  11,		  "monday",	  2,	  73		  ]
[ 73,	  2000-03-14,	  11,		  "tuesday",	  3,	  74		  ]
[ 74,	  2000-03-15,	  11,		  "wednesday",	  4,	  75		  ]
[ 75,	  2000-03-16,	  11,		  "thursday",	  5,	  76		  ]
[ 76,	  2000-03-17,	  11,		  "friday",	  6,	  77		  ]
[ 77,	  2000-03-18,	  11,		  "saturday",	  7,	  78		  ]
[ 78,	  2000-03-19,	  12,		  "sunday",	  1,	  79		  ]
[ 79,	  2000-03-20,	  12,		  "monday",	  2,	  80		  ]
[ 80,	  2000-03-21,	  12,		  "tuesday",	  3,	  81		  ]
[ 81,	  2000-03-22,	  12,		  "wednesday",	  4,	  82		  ]
[ 82,	  2000-03-23,	  12,		  "thursday",	  5,	  83		  ]
[ 83,	  2000-03-24,	  12,		  "friday",	  6,	  84		  ]
[ 84,	  2000-03-25,	  12,		  "saturday",	  7,	  85		  ]
[ 85,	  2000-03-26,	  13,		  "sunday",	  1,	  86		  ]
[ 86,	  2000-03-27,	  13,		  "monday",	  2,	  87		  ]
[ 87,	  2000-03-28,	  13,		  "tuesday",	  3,	  88		  ]
[ 88,	  2000-03-29,	  13,		  "wednesday",	  4,	  89		  ]
[ 89,	  2000-03-30,	  13,		  "thursday",	  5,	  90		  ]
[ 90,	  2000-03-31,	  13,		  "friday",	  6,	  91		  ]
[ 91,	  2000-04-01,	  13,		  "saturday",	  7,	  92		  ]
[ 92,	  2000-04-02,	  14,		  "sunday",	  1,	  93		  ]
[ 93,	  2000-04-03,	  14,		  "monday",	  2,	  94		  ]
[ 94,	  2000-04-04,	  14,		  "tuesday",	  3,	  95		  ]
[ 95,	  2000-04-05,	  14,		  "wednesday",	  4,	  96		  ]
[ 96,	  2000-04-06,	  14,		  "thursday",	  5,	  97		  ]
[ 97,	  2000-04-07,	  14,		  "friday",	  6,	  98		  ]
[ 98,	  2000-04-08,	  14,		  "saturday",	  7,	  99		  ]
[ 99,	  2000-04-09,	  15,		  "sunday",	  1,	  100		  ]
[ 100,	  2000-04-10,	  15,		  "monday",	  2,	  101		  ]
[ 101,	  2000-04-11,	  15,		  "tuesday",	  3,	  102		  ]
[ 102,	  2000-04-12,	  15,		  "wednesday",	  4,	  103		  ]
[ 103,	  2000-04-13,	  15,		  "thursday",	  5,	  104		  ]
[ 104,	  2000-04-14,	  15,		  "friday",	  6,	  105		  ]
[ 105,	  2000-04-15,	  15,		  "saturday",	  7,	  106		  ]
[ 106,	  2000-04-16,	  16,		  "sunday",	  1,	  107		  ]
[ 107,	  2000-04-17,	  16,		  "monday",	  2,	  108		  ]
[ 108,	  2000-04-18,	  16,		  "tuesday",	  3,	  109		  ]
[ 109,	  2000-04-19,	  16,		  "wednesday",	  4,	  110		  ]
[ 110,	  2000-04-20,	  16,		  "thursday",	  5,	  111		  ]
[ 111,	  2000-04-21,	  16,		  "friday",	  6,	  112		  ]
[ 112,	  2000-04-22,	  16,		  "saturday",	  7,	  113		  ]
[ 113,	  2000-04-23,	  17,		  "sunday",	  1,	  114		  ]
[ 114,	  2000-04-24,	  17,		  "monday",	  2,	  115		  ]
[ 115,	  2000-04-25,	  17,		  "tuesday",	  3,	  116		  ]
[ 116,	  2000-04-26,	  17,		  "wednesday",	  4,	  117		  ]
[ 117,	  2000-04-27,	  17,		  "thursday",	  5,	  118		  ]
[ 118,	  2000-04-28,	  17,		  "friday",	  6,	  119		  ]
[ 119,	  2000-04-29,	  17,		  "saturday",	  7,	  120		  ]
[ 120,	  2000-04-30,	  18,		  "sunday",	  1,	  121		  ]
[ 121,	  2000-05-01,	  18,		  "monday",	  2,	  122		  ]
[ 122,	  2000-05-02,	  18,		  "tuesday",	  3,	  123		  ]
[ 123,	  2000-05-03,	  18,		  "wednesday",	  4,	  124		  ]
[ 124,	  2000-05-04,	  18,		  "thursday",	  5,	  125		  ]
[ 125,	  2000-05-05,	  18,		  "friday",	  6,	  126		  ]
[ 126,	  2000-05-06,	  18,		  "saturday",	  7,	  127		  ]
[ 127,	  2000-05-07,	  19,		  "sunday",	  1,	  128		  ]
[ 128,	  2000-05-08,	  19,		  "monday",	  2,	  129		  ]
[ 129,	  2000-05-09,	  19,		  "tuesday",	  3,	  130		  ]
[ 130,	  2000-05-10,	  19,		  "wednesday",	  4,	  131		  ]
[ 131,	  2000-05-11,	  19,		  "thursday",	  5,	  132		  ]
[ 132,	  2000-05-12,	  19,		  "friday",	  6,	  133		  ]
[ 133,	  2000-05-13,	  19,		  "saturday",	  7,	  134		  ]
[ 134,	  2000-05-14,	  20,		  "sunday",	  1,	  135		  ]
[ 135,	  2000-05-15,	  20,		  "monday",	  2,	  136		  ]
[ 136,	  2000-05-16,	  20,		  "tuesday",	  3,	  137		  ]
[ 137,	  2000-05-17,	  20,		  "wednesday",	  4,	  138		  ]
[ 138,	  2000-05-18,	  20,		  "thursday",	  5,	  139		  ]
[ 139,	  2000-05-19,	  20,		  "friday",	  6,	  140		  ]
[ 140,	  2000-05-20,	  20,		  "saturday",	  7,	  141		  ]
[ 141,	  2000-05-21,	  21,		  "sunday",	  1,	  142		  ]
[ 142,	  2000-05-22,	  21,		  "monday",	  2,	  143		  ]
[ 143,	  2000-05-23,	  21,		  "tuesday",	  3,	  144		  ]
[ 144,	  2000-05-24,	  21,		  "wednesday",	  4,	  145		  ]
[ 145,	  2000-05-25,	  21,		  "thursday",	  5,	  146		  ]
[ 146,	  2000-05-26,	  21,		  "friday",	  6,	  147		  ]
[ 147,	  2000-05-27,	  21,		  "saturday",	  7,	  148		  ]
[ 148,	  2000-05-28,	  22,		  "sunday",	  1,	  149		  ]
[ 149,	  2000-05-29,	  22,		  "monday",	  2,	  150		  ]
[ 150,	  2000-05-30,	  22,		  "tuesday",	  3,	  151		  ]
[ 151,	  2000-05-31,	  22,		  "wednesday",	  4,	  152		  ]
[ 152,	  2000-06-01,	  22,		  "thursday",	  5,	  153		  ]
[ 153,	  2000-06-02,	  22,		  "friday",	  6,	  154		  ]
[ 154,	  2000-06-03,	  22,		  "saturday",	  7,	  155		  ]
[ 155,	  2000-06-04,	  23,		  "sunday",	  1,	  156		  ]
[ 156,	  2000-06-05,	  23,		  "monday",	  2,	  157		  ]
[ 157,	  2000-06-06,	  23,		  "tuesday",	  3,	  158		  ]
[ 158,	  2000-06-07,	  23,		  "wednesday",	  4,	  159		  ]
[ 159,	  2000-06-08,	  23,		  "thursday",	  5,	  160		  ]
[ 160,	  2000-06-09,	  23,		  "friday",	  6,	  161		  ]
[ 161,	  2000-06-10,	  23,		  "saturday",	  7,	  162		  ]
[ 162,	  2000-06-11,	  24,		  "sunday",	  1,	  163		  ]
[ 163,	  2000-06-12,	  24,		  "monday",	  2,	  164		  ]
[ 164,	  2000-06-13,	  24,		  "tuesday",	  3,	  165		  ]
[ 165,	  2000-06-14,	  24,		  "wednesday",	  4,	  166		  ]
[ 166,	  2000-06-15,	  24,		  "thursday",	  5,	  167		  ]
[ 167,	  2000-06-16,	  24,		  "friday",	  6,	  168		  ]
[ 168,	  2000-06-17,	  24,		  "saturday",	  7,	  169		  ]
[ 169,	  2000-06-18,	  25,		  "sunday",	  1,	  170		  ]
[ 170,	  2000-06-19,	  25,		  "monday",	  2,	  171		  ]
[ 171,	  2000-06-20,	  25,		  "tuesday",	  3,	  172		  ]
[ 172,	  2000-06-21,	  25,		  "wednesday",	  4,	  173		  ]
[ 173,	  2000-06-22,	  25,		  "thursday",	  5,	  174		  ]
[ 174,	  2000-06-23,	  25,		  "friday",	  6,	  175		  ]
[ 175,	  2000-06-24,	  25,		  "saturday",	  7,	  176		  ]
[ 176,	  2000-06-25,	  26,		  "sunday",	  1,	  177		  ]
[ 177,	  2000-06-26,	  26,		  "monday",	  2,	  178		  ]
[ 178,	  2000-06-27,	  26,		  "tuesday",	  3,	  179		  ]
[ 179,	  2000-06-28,	  26,		  "wednesday",	  4,	  180		  ]
[ 180,	  2000-06-29,	  26,		  "thursday",	  5,	  181		  ]
[ 181,	  2000-06-30,	  26,		  "friday",	  6,	  182		  ]
[ 182,	  2000-07-01,	  26,		  "saturday",	  7,	  183		  ]
[ 183,	  2000-07-02,	  27,		  "sunday",	  1,	  184		  ]
[ 184,	  2000-07-03,	  27,		  "monday",	  2,	  185		  ]
[ 185,	  2000-07-04,	  27,		  "tuesday",	  3,	  186		  ]
[ 186,	  2000-07-05,	  27,		  "wednesday",	  4,	  187		  ]
[ 187,	  2000-07-06,	  27,		  "thursday",	  5,	  188		  ]
[ 188,	  2000-07-07,	  27,		  "friday",	  6,	  189		  ]
[ 189,	  2000-07-08,	  27,		  "saturday",	  7,	  190		  ]
[ 190,	  2000-07-09,	  28,		  "sunday",	  1,	  191		  ]
[ 191,	  2000-07-10,	  28,		  "monday",	  2,	  192		  ]
[ 192,	  2000-07-11,	  28,		  "tuesday",	  3,	  193		  ]
[ 193,	  2000-07-12,	  28,		  "wednesday",	  4,	  194		  ]
[ 194,	  2000-07-13,	  28,		  "thursday",	  5,	  195		  ]
[ 195,	  2000-07-14,	  28,		  "friday",	  6,	  196		  ]
[ 196,	  2000-07-15,	  28,		  "saturday",	  7,	  197		  ]
[ 197,	  2000-07-16,	  29,		  "sunday",	  1,	  198		  ]
[ 198,	  2000-07-17,	  29,		  "monday",	  2,	  199		  ]
[ 199,	  2000-07-18,	  29,		  "tuesday",	  3,	  200		  ]
[ 200,	  2000-07-19,	  29,		  "wednesday",	  4,	  201		  ]
[ 201,	  2000-07-20,	  29,		  "thursday",	  5,	  202		  ]
[ 202,	  2000-07-21,	  29,		  "friday",	  6,	  203		  ]
[ 203,	  2000-07-22,	  29,		  "saturday",	  7,	  204		  ]
[ 204,	  2000-07-23,	  30,		  "sunday",	  1,	  205		  ]
[ 205,	  2000-07-24,	  30,		  "monday",	  2,	  206		  ]
[ 206,	  2000-07-25,	  30,		  "tuesday",	  3,	  207		  ]
[ 207,	  2000-07-26,	  30,		  "wednesday",	  4,	  208		  ]
[ 208,	  2000-07-27,	  30,		  "thursday",	  5,	  209		  ]
[ 209,	  2000-07-28,	  30,		  "friday",	  6,	  210		  ]
[ 210,	  2000-07-29,	  30,		  "saturday",	  7,	  211		  ]
[ 211,	  2000-07-30,	  31,		  "sunday",	  1,	  212		  ]
[ 212,	  2000-07-31,	  31,		  "monday",	  2,	  213		  ]
[ 213,	  2000-08-01,	  31,		  "tuesday",	  3,	  214		  ]
[ 214,	  2000-08-02,	  31,		  "wednesday",	  4,	  215		  ]
[ 215,	  2000-08-03,	  31,		  "thursday",	  5,	  216		  ]
[ 216,	  2000-08-04,	  31,		  "friday",	  6,	  217		  ]
[ 217,	  2000-08-05,	  31,		  "saturday",	  7,	  218		  ]
[ 218,	  2000-08-06,	  32,		  "sunday",	  1,	  219		  ]
[ 219,	  2000-08-07,	  32,		  "monday",	  2,	  220		  ]
[ 220,	  2000-08-08,	  32,		  "tuesday",	  3,	  221		  ]
[ 221,	  2000-08-09,	  32,		  "wednesday",	  4,	  222		  ]
[ 222,	  2000-08-10,	  32,		  "thursday",	  5,	  223		  ]
[ 223,	  2000-08-11,	  32,		  "friday",	  6,	  224		  ]
[ 224,	  2000-08-12,	  32,		  "saturday",	  7,	  225		  ]
[ 225,	  2000-08-13,	  33,		  "sunday",	  1,	  226		  ]
[ 226,	  2000-08-14,	  33,		  "monday",	  2,	  227		  ]
[ 227,	  2000-08-15,	  33,		  "tuesday",	  3,	  228		  ]
[ 228,	  2000-08-16,	  33,		  "wednesday",	  4,	  229		  ]
[ 229,	  2000-08-17,	  33,		  "thursday",	  5,	  230		  ]
[ 230,	  2000-08-18,	  33,		  "friday",	  6,	  231		  ]
[ 231,	  2000-08-19,	  33,		  "saturday",	  7,	  232		  ]
[ 232,	  2000-08-20,	  34,		  "sunday",	  1,	  233		  ]
[ 233,	  2000-08-21,	  34,		  "monday",	  2,	  234		  ]
[ 234,	  2000-08-22,	  34,		  "tuesday",	  3,	  235		  ]
[ 235,	  2000-08-23,	  34,		  "wednesday",	  4,	  236		  ]
[ 236,	  2000-08-24,	  34,		  "thursday",	  5,	  237		  ]
[ 237,	  2000-08-25,	  34,		  "friday",	  6,	  238		  ]
[ 238,	  2000-08-26,	  34,		  "saturday",	  7,	  239		  ]
[ 239,	  2000-08-27,	  35,		  "sunday",	  1,	  240		  ]
[ 240,	  2000-08-28,	  35,		  "monday",	  2,	  241		  ]
[ 241,	  2000-08-29,	  35,		  "tuesday",	  3,	  242		  ]
[ 242,	  2000-08-30,	  35,		  "wednesday",	  4,	  243		  ]
[ 243,	  2000-08-31,	  35,		  "thursday",	  5,	  244		  ]
[ 244,	  2000-09-01,	  35,		  "friday",	  6,	  245		  ]
[ 245,	  2000-09-02,	  35,		  "saturday",	  7,	  246		  ]
[ 246,	  2000-09-03,	  36,		  "sunday",	  1,	  247		  ]
[ 247,	  2000-09-04,	  36,		  "monday",	  2,	  248		  ]
[ 248,	  2000-09-05,	  36,		  "tuesday",	  3,	  249		  ]
[ 249,	  2000-09-06,	  36,		  "wednesday",	  4,	  250		  ]
[ 250,	  2000-09-07,	  36,		  "thursday",	  5,	  251		  ]
[ 251,	  2000-09-08,	  36,		  "friday",	  6,	  252		  ]
[ 252,	  2000-09-09,	  36,		  "saturday",	  7,	  253		  ]
[ 253,	  2000-09-10,	  37,		  "sunday",	  1,	  254		  ]
[ 254,	  2000-09-11,	  37,		  "monday",	  2,	  255		  ]
[ 255,	  2000-09-12,	  37,		  "tuesday",	  3,	  256		  ]
[ 256,	  2000-09-13,	  37,		  "wednesday",	  4,	  257		  ]
[ 257,	  2000-09-14,	  37,		  "thursday",	  5,	  258		  ]
[ 258,	  2000-09-15,	  37,		  "friday",	  6,	  259		  ]
[ 259,	  2000-09-16,	  37,		  "saturday",	  7,	  260		  ]
[ 260,	  2000-09-17,	  38,		  "sunday",	  1,	  261		  ]
[ 261,	  2000-09-18,	  38,		  "monday",	  2,	  262		  ]
[ 262,	  2000-09-19,	  38,		  "tuesday",	  3,	  263		  ]
[ 263,	  2000-09-20,	  38,		  "wednesday",	  4,	  264		  ]
[ 264,	  2000-09-21,	  38,		  "thursday",	  5,	  265		  ]
[ 265,	  2000-09-22,	  38,		  "friday",	  6,	  266		  ]
[ 266,	  2000-09-23,	  38,		  "saturday",	  7,	  267		  ]
[ 267,	  2000-09-24,	  39,		  "sunday",	  1,	  268		  ]
[ 268,	  2000-09-25,	  39,		  "monday",	  2,	  269		  ]
[ 269,	  2000-09-26,	  39,		  "tuesday",	  3,	  270		  ]
[ 270,	  2000-09-27,	  39,		  "wednesday",	  4,	  271		  ]
[ 271,	  2000-09-28,	  39,		  "thursday",	  5,	  272		  ]
[ 272,	  2000-09-29,	  39,		  "friday",	  6,	  273		  ]
[ 273,	  2000-09-30,	  39,		  "saturday",	  7,	  274		  ]
[ 274,	  2000-10-01,	  40,		  "sunday",	  1,	  275		  ]
[ 275,	  2000-10-02,	  40,		  "monday",	  2,	  276		  ]
[ 276,	  2000-10-03,	  40,		  "tuesday",	  3,	  277		  ]
[ 277,	  2000-10-04,	  40,		  "wednesday",	  4,	  278		  ]
[ 278,	  2000-10-05,	  40,		  "thursday",	  5,	  279		  ]
[ 279,	  2000-10-06,	  40,		  "friday",	  6,	  280		  ]
[ 280,	  2000-10-07,	  40,		  "saturday",	  7,	  281		  ]
[ 281,	  2000-10-08,	  41,		  "sunday",	  1,	  282		  ]
[ 282,	  2000-10-09,	  41,		  "monday",	  2,	  283		  ]
[ 283,	  2000-10-10,	  41,		  "tuesday",	  3,	  284		  ]
[ 284,	  2000-10-11,	  41,		  "wednesday",	  4,	  285		  ]
[ 285,	  2000-10-12,	  41,		  "thursday",	  5,	  286		  ]
[ 286,	  2000-10-13,	  41,		  "friday",	  6,	  287		  ]
[ 287,	  2000-10-14,	  41,		  "saturday",	  7,	  288		  ]
[ 288,	  2000-10-15,	  42,		  "sunday",	  1,	  289		  ]
[ 289,	  2000-10-16,	  42,		  "monday",	  2,	  290		  ]
[ 290,	  2000-10-17,	  42,		  "tuesday",	  3,	  291		  ]
[ 291,	  2000-10-18,	  42,		  "wednesday",	  4,	  292		  ]
[ 292,	  2000-10-19,	  42,		  "thursday",	  5,	  293		  ]
[ 293,	  2000-10-20,	  42,		  "friday",	  6,	  294		  ]
[ 294,	  2000-10-21,	  42,		  "saturday",	  7,	  295		  ]
[ 295,	  2000-10-22,	  43,		  "sunday",	  1,	  296		  ]
[ 296,	  2000-10-23,	  43,		  "monday",	  2,	  297		  ]
[ 297,	  2000-10-24,	  43,		  "tuesday",	  3,	  298		  ]
[ 298,	  2000-10-25,	  43,		  "wednesday",	  4,	  299		  ]
[ 299,	  2000-10-26,	  43,		  "thursday",	  5,	  300		  ]
[ 300,	  2000-10-27,	  43,		  "friday",	  6,	  301		  ]
[ 301,	  2000-10-28,	  43,		  "saturday",	  7,	  302		  ]
[ 302,	  2000-10-29,	  44,		  "sunday",	  1,	  303		  ]
[ 303,	  2000-10-30,	  44,		  "monday",	  2,	  304		  ]
[ 304,	  2000-10-31,	  44,		  "tuesday",	  3,	  305		  ]
[ 305,	  2000-11-01,	  44,		  "wednesday",	  4,	  306		  ]
[ 306,	  2000-11-02,	  44,		  "thursday",	  5,	  307		  ]
[ 307,	  2000-11-03,	  44,		  "friday",	  6,	  308		  ]
[ 308,	  2000-11-04,	  44,		  "saturday",	  7,	  309		  ]
[ 309,	  2000-11-05,	  45,		  "sunday",	  1,	  310		  ]
[ 310,	  2000-11-06,	  45,		  "monday",	  2,	  311		  ]
[ 311,	  2000-11-07,	  45,		  "tuesday",	  3,	  312		  ]
[ 312,	  2000-11-08,	  45,		  "wednesday",	  4,	  313		  ]
[ 313,	  2000-11-09,	  45,		  "thursday",	  5,	  314		  ]
[ 314,	  2000-11-10,	  45,		  "friday",	  6,	  315		  ]
[ 315,	  2000-11-11,	  45,		  "saturday",	  7,	  316		  ]
[ 316,	  2000-11-12,	  46,		  "sunday",	  1,	  317		  ]
[ 317,	  2000-11-13,	  46,		  "monday",	  2,	  318		  ]
[ 318,	  2000-11-14,	  46,		  "tuesday",	  3,	  319		  ]
[ 319,	  2000-11-15,	  46,		  "wednesday",	  4,	  320		  ]
[ 320,	  2000-11-16,	  46,		  "thursday",	  5,	  321		  ]
[ 321,	  2000-11-17,	  46,		  "friday",	  6,	  322		  ]
[ 322,	  2000-11-18,	  46,		  "saturday",	  7,	  323		  ]
[ 323,	  2000-11-19,	  47,		  "sunday",	  1,	  324		  ]
[ 324,	  2000-11-20,	  47,		  "monday",	  2,	  325		  ]
[ 325,	  2000-11-21,	  47,		  "tuesday",	  3,	  326		  ]
[ 326,	  2000-11-22,	  47,		  "wednesday",	  4,	  327		  ]
[ 327,	  2000-11-23,	  47,		  "thursday",	  5,	  328		  ]
[ 328,	  2000-11-24,	  47,		  "friday",	  6,	  329		  ]
[ 329,	  2000-11-25,	  47,		  "saturday",	  7,	  330		  ]
[ 330,	  2000-11-26,	  48,		  "sunday",	  1,	  331		  ]
[ 331,	  2000-11-27,	  48,		  "monday",	  2,	  332		  ]
[ 332,	  2000-11-28,	  48,		  "tuesday",	  3,	  333		  ]
[ 333,	  2000-11-29,	  48,		  "wednesday",	  4,	  334		  ]
[ 334,	  2000-11-30,	  48,		  "thursday",	  5,	  335		  ]
[ 335,	  2000-12-01,	  48,		  "friday",	  6,	  336		  ]
[ 336,	  2000-12-02,	  48,		  "saturday",	  7,	  337		  ]
[ 337,	  2000-12-03,	  49,		  "sunday",	  1,	  338		  ]
[ 338,	  2000-12-04,	  49,		  "monday",	  2,	  339		  ]
[ 339,	  2000-12-05,	  49,		  "tuesday",	  3,	  340		  ]
[ 340,	  2000-12-06,	  49,		  "wednesday",	  4,	  341		  ]
[ 341,	  2000-12-07,	  49,		  "thursday",	  5,	  342		  ]
[ 342,	  2000-12-08,	  49,		  "friday",	  6,	  343		  ]
[ 343,	  2000-12-09,	  49,		  "saturday",	  7,	  344		  ]
[ 344,	  2000-12-10,	  50,		  "sunday",	  1,	  345		  ]
[ 345,	  2000-12-11,	  50,		  "monday",	  2,	  346		  ]
[ 346,	  2000-12-12,	  50,		  "tuesday",	  3,	  347		  ]
[ 347,	  2000-12-13,	  50,		  "wednesday",	  4,	  348		  ]
[ 348,	  2000-12-14,	  50,		  "thursday",	  5,	  349		  ]
[ 349,	  2000-12-15,	  50,		  "friday",	  6,	  350		  ]
[ 350,	  2000-12-16,	  50,		  "saturday",	  7,	  351		  ]
[ 351,	  2000-12-17,	  51,		  "sunday",	  1,	  352		  ]
[ 352,	  2000-12-18,	  51,		  "monday",	  2,	  353		  ]
[ 353,	  2000-12-19,	  51,		  "tuesday",	  3,	  354		  ]
[ 354,	  2000-12-20,	  51,		  "wednesday",	  4,	  355		  ]
[ 355,	  2000-12-21,	  51,		  "thursday",	  5,	  356		  ]
[ 356,	  2000-12-22,	  51,		  "friday",	  6,	  357		  ]
[ 357,	  2000-12-23,	  51,		  "saturday",	  7,	  358		  ]
[ 358,	  2000-12-24,	  52,		  "sunday",	  1,	  359		  ]
[ 359,	  2000-12-25,	  52,		  "monday",	  2,	  360		  ]
[ 360,	  2000-12-26,	  52,		  "tuesday",	  3,	  361		  ]
[ 361,	  2000-12-27,	  52,		  "wednesday",	  4,	  362		  ]
[ 362,	  2000-12-28,	  52,		  "thursday",	  5,	  363		  ]
[ 363,	  2000-12-29,	  52,		  "friday",	  6,	  364		  ]
[ 364,	  2000-12-30,	  52,		  "saturday",	  7,	  365		  ]
[ 365,	  2000-12-31,	  53,		  "sunday",	  1,	  366		  ]
[ 366,	  2001-01-01,	  1,		  "monday",	  2,	  1		  ]
[ 367,	  2001-01-02,	  1,		  "tuesday",	  3,	  2		  ]
[ 368,	  2001-01-03,	  1,		  "wednesday",	  4,	  3		  ]
[ 369,	  2001-01-04,	  1,		  "thursday",	  5,	  4		  ]
[ 370,	  2001-01-05,	  1,		  "friday",	  6,	  5		  ]
[ 371,	  2001-01-06,	  1,		  "saturday",	  7,	  6		  ]
[ 372,	  2001-01-07,	  2,		  "sunday",	  1,	  7		  ]
[ 373,	  2001-01-08,	  2,		  "monday",	  2,	  8		  ]
[ 374,	  2001-01-09,	  2,		  "tuesday",	  3,	  9		  ]
[ "daytime_bat,bh_a,dh_a,fh_a,hh_a" ]
#---------------------------------------------------------------------------------#
# h	daytime		hours	minutes		seconds		milliseconds	  # name
# oid	daytime	int	int		int		int		  # type
#---------------------------------------------------------------------------------#
[ 0@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 1@0,	  23:59:00.000,	  23,	  59,		  0,		  0		  ]
[ 2@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 3@0,	  23:59:59.000,	  23,	  59,		  59,		  0		  ]
[ 4@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 5@0,	  00:00:00.000,	  0,	  0,		  0,		  0		  ]
[ 6@0,	  00:00:00.001,	  0,	  0,		  0,		  1		  ]
[ 7@0,	  03:49:02.999,	  3,	  49,		  2,		  999		  ]
[ 8@0,	  20:48:42.999,	  20,	  48,		  42,		  999		  ]
[ 9@0,	  17:53:38.999,	  17,	  53,		  38,		  999		  ]
[ 10@0,	  13:15:34.999,	  13,	  15,		  34,		  999		  ]
[ 11@0,	  07:34:27.999,	  7,	  34,		  27,		  999		  ]
[ 12@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 13@0,	  01:00:03.999,	  1,	  0,		  3,		  999		  ]
[ 14@0,	  23:59:59.999,	  23,	  59,		  59,		  999		  ]
[ 15@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ 20@0,	  nil,		  nil,	  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,mh_a,oh_a)" ]
#-------------------------------------------------------------------------#
# h	timestamp			date		daytime		  # name
# oid	timestamp			date		daytime	  # type
#-------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-01,	  23:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-01,	  23:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  00:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-01,	  23:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 00:00:00.000	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  00:00:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  00:00:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-06-01,	  03:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-14,	  20:48:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-01,	  17:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-01,	  13:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-05-01,	  07:34:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  5867411-12-31,  23:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil		  ]
[ 14@0,	  nil,				  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil		  ]
[ 16@0,	  nil,				  nil,		  nil		  ]
[ 17@0,	  nil,				  nil,		  nil		  ]
[ 18@0,	  nil,				  nil,		  nil		  ]
[ 19@0,	  nil,				  nil,		  nil		  ]
[ 20@0,	  nil,				  nil,		  nil		  ]
[ "print(timezones)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h			t												  # name
# str			tzone												  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ "Wake Island",	  GMT+12:00											  ]
[ "Melbourne/Australia",  GMT+11:00											  ]
[ "Brisbane/Australia",	  GMT+10:00											  ]
[ "Japan",		  GMT+09:00											  ]
[ "Singapore",		  GMT+08:00											  ]
[ "Thailand",		  GMT+07:00											  ]
[ "Pakistan",		  GMT+05:00											  ]
[ "United Arab Emirates", GMT+04:00											  ]
[ "GMT",		  GMT												  ]
[ "Azore Islands",	  GMT-01:00											  ]
[ "Hawaii/USA",		  GMT-10:00											  ]
[ "American Samoa",	  GMT-11:00											  ]
[ "Kazakhstan",		  GMT+06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Moscow/Russia",	  GMT+03:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "East/Europe",	  GMT+02:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "West/Europe",	  GMT+01:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "UK",			  GMT-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]		  ]
[ "Eastern/Brazil",	  GMT-02:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Western/Brazil",	  GMT-03:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "Andes/Brazil",	  GMT-04:00-DST[first sunday from end of october@02:01,first sunday from end of march@02:01]	  ]
[ "East/USA",		  GMT-05:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Central/USA",	  GMT-06:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Mountain/USA",	  GMT-07:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "Alaska/USA",		  GMT-09:00-DST[first sunday from end of march@02:01,first sunday from end of october@02:01]	  ]
[ "print(timestamp_bat,th_a,wh_a,yh_a,ci_a)" ]
#---------------------------------------------------------------------------------------------------------#
# h	timestamp			Wake Island	t		American Samoa	t		  # name
# oid	timestamp			date		daytime	date		daytime	  # type
#---------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  2000-01-02,	  11:59:59.999,	  2000-01-01,	  12:59:59.999	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  5000-01-02,	  10:59:00.000,	  5000-01-01,	  11:59:00.000	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-29,	  11:00:00.000,	  1968-02-28,	  12:00:00.000	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-03-02,	  09:59:59.000,	  1-03-01,	  10:59:59.000	  ]
[ 4@0,	  nil,				  -5867411-01-01, 12:00:00.000,	  nil,		  nil		  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-10-01,	  13:37:00.000,	  -768-09-30,	  14:37:00.000	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-11-01,	  12:37:00.001,	  5000-10-31,	  13:37:00.001	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-31,	  15:49:02.999,	  -1999-05-30,	  16:49:02.999	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-16,	  08:24:42.999,	  2000-07-15,	  09:24:42.999	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-09-02,	  05:53:38.999,	  1999-09-01,	  06:53:38.999	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-12-02,	  02:15:34.999,	  1998-12-01,	  03:15:34.999	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-30,	  19:35:27.999,	  1953-04-29,	  20:35:27.999	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,		  nil,		  5867411-12-31,  11:59:59.999	  ]
[ 13@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 14@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 15@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 16@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 17@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 18@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 19@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ 20@0,	  nil,				  nil,		  nil,		  nil,		  nil		  ]
[ "print(timestamp_bat,timestamp_plus,timestamp_minus,ri_a)" ]
#-----------------------------------------------------------------------------------------------------------------#
# h	timestamp			plus23				min1				diff	  # name
# oid	timestamp			timestamp			timestamp			lng	  # type
#-----------------------------------------------------------------------------------------------------------------#
[ 0@0,	  1999-12-30 03:43:59.999,	  1999-12-31 02:43:59.999,	  1999-12-30 03:42:59.999,	  23	  ]
[ 1@0,	  4999-12-30 02:43:00.000,	  4999-12-31 01:43:00.000,	  4999-12-30 02:42:00.000,	  23	  ]
[ 2@0,	  1968-02-26 02:44:00.000,	  1968-02-27 01:44:00.000,	  1968-02-26 02:43:00.000,	  23	  ]
[ 3@0,	  1-02-27 01:43:59.000,		  1-02-28 00:43:59.000,		  1-02-27 01:42:59.000,		  23	  ]
[ 4@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 5@0,	  -768-09-28 05:21:00.000,	  -768-09-29 04:21:00.000,	  -768-09-28 05:20:00.000,	  23	  ]
[ 6@0,	  5000-10-29 04:21:00.001,	  5000-10-30 03:21:00.001,	  5000-10-29 04:20:00.001,	  23	  ]
[ 7@0,	  -1999-05-28 07:33:02.999,	  -1999-05-29 06:33:02.999,	  -1999-05-28 07:32:02.999,	  23	  ]
[ 8@0,	  2000-07-13 00:08:42.999,	  2000-07-13 23:08:42.999,	  2000-07-13 00:07:42.999,	  23	  ]
[ 9@0,	  1999-08-29 21:37:38.999,	  1999-08-30 20:37:38.999,	  1999-08-29 21:36:38.999,	  23	  ]
[ 10@0,	  1998-11-28 17:59:34.999,	  1998-11-29 16:59:34.999,	  1998-11-28 17:58:34.999,	  23	  ]
[ 11@0,	  1953-04-27 11:19:27.999,	  1953-04-28 10:19:27.999,	  1953-04-27 11:18:27.999,	  23	  ]
[ 12@0,	  5867411-12-29 02:43:59.999,	  nil,				  5867411-12-29 02:42:59.999,	  nil	  ]
[ 13@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 14@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 15@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 16@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 17@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 18@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 19@0,	  nil,				  nil,				  nil,				  nil	  ]
[ 20@0,	  nil,				  nil,				  nil,				  nil	  ]
[ "print(date_seq,yi_a,timestamp_eur,dj_a,timestamp_bra,hj_a)" ]
#-------------------------------------------------------------------------------------------------------------------------#
# h	date		day		West/Europe			dst	Andes/Brazil			dst	  # name
# int	date		str		timestamp			bit	timestamp			bit	  # type
#-------------------------------------------------------------------------------------------------------------------------#
[ -374,	  1998-12-23,	  "wednesday",	  1998-12-21 02:43:59.999,	  false,  1998-12-21 06:43:59.999,	  true	  ]
[ -373,	  1998-12-24,	  "thursday",	  1998-12-22 02:43:59.999,	  false,  1998-12-22 06:43:59.999,	  true	  ]
[ -372,	  1998-12-25,	  "friday",	  1998-12-23 02:43:59.999,	  false,  1998-12-23 06:43:59.999,	  true	  ]
[ -371,	  1998-12-26,	  "saturday",	  1998-12-24 02:43:59.999,	  false,  1998-12-24 06:43:59.999,	  true	  ]
[ -370,	  1998-12-27,	  "sunday",	  1998-12-25 02:43:59.999,	  false,  1998-12-25 06:43:59.999,	  true	  ]
[ -369,	  1998-12-28,	  "monday",	  1998-12-26 02:43:59.999,	  false,  1998-12-26 06:43:59.999,	  true	  ]
[ -368,	  1998-12-29,	  "tuesday",	  1998-12-27 02:43:59.999,	  false,  1998-12-27 06:43:59.999,	  true	  ]
[ -367,	  1998-12-30,	  "wednesday",	  1998-12-28 02:43:59.999,	  false,  1998-12-28 06:43:59.999,	  true	  ]
[ -366,	  1998-12-31,	  "thursday",	  1998-12-29 02:43:59.999,	  false,  1998-12-29 06:43:59.999,	  true	  ]
[ -365,	  1999-01-01,	  "friday",	  1998-12-30 02:43:59.999,	  false,  1998-12-30 06:43:59.999,	  true	  ]
[ -364,	  1999-01-02,	  "saturday",	  1998-12-31 02:43:59.999,	  false,  1998-12-31 06:43:59.999,	  true	  ]
[ -363,	  1999-01-03,	  "sunday",	  1999-01-01 02:43:59.999,	  false,  1999-01-01 06:43:59.999,	  true	  ]
[ -362,	  1999-01-04,	  "monday",	  1999-01-02 02:43:59.999,	  false,  1999-01-02 06:43:59.999,	  true	  ]
[ -361,	  1999-01-05,	  "tuesday",	  1999-01-03 02:43:59.999,	  false,  1999-01-03 06:43:59.999,	  true	  ]
[ -360,	  1999-01-06,	  "wednesday",	  1999-01-04 02:43:59.999,	  false,  1999-01-04 06:43:59.999,	  true	  ]
[ -359,	  1999-01-07,	  "thursday",	  1999-01-05 02:43:59.999,	  false,  1999-01-05 06:43:59.999,	  true	  ]
[ -358,	  1999-01-08,	  "friday",	  1999-01-06 02:43:59.999,	  false,  1999-01-06 06:43:59.999,	  true	  ]
[ -357,	  1999-01-09,	  "saturday",	  1999-01-07 02:43:59.999,	  false,  1999-01-07 06:43:59.999,	  true	  ]
[ -356,	  1999-01-10,	  "sunday",	  1999-01-08 02:43:59.999,	  false,  1999-01-08 06:43:59.999,	  true	  ]
[ -355,	  1999-01-11,	  "monday",	  1999-01-09 02:43:59.999,	  false,  1999-01-09 06:43:59.999,	  true	  ]
[ -354,	  1999-01-12,	  "tuesday",	  1999-01-10 02:43:59.999,	  false,  1999-01-10 06:43:59.999,	  true	  ]
[ -353,	  1999-01-13,	  "wednesday",	  1999-01-11 02:43:59.999,	  false,  1999-01-11 06:43:59.999,	  true	  ]
[ -352,	  1999-01-14,	  "thursday",	  1999-01-12 02:43:59.999,	  false,  1999-01-12 06:43:59.999,	  true	  ]
[ -351,	  1999-01-15,	  "friday",	  1999-01-13 02:43:59.999,	  false,  1999-01-13 06:43:59.999,	  true	  ]
[ -350,	  1999-01-16,	  "saturday",	  1999-01-14 02:43:59.999,	  false,  1999-01-14 06:43:59.999,	  true	  ]
[ -349,	  1999-01-17,	  "sunday",	  1999-01-15 02:43:59.999,	  false,  1999-01-15 06:43:59.999,	  true	  ]
[ -348,	  1999-01-18,	  "monday",	  1999-01-16 02:43:59.999,	  false,  1999-01-16 06:43:59.999,	  true	  ]
[ -347,	  1999-01-19,	  "tuesday",	  1999-01-17 02:43:59.999,	  false,  1999-01-17 06:43:59.999,	  true	  ]
[ -346,	  1999-01-20,	  "wednesday",	  1999-01-18 02:43:59.999,	  false,  1999-01-18 06:43:59.999,	  true	  ]
[ -345,	  1999-01-21,	  "thursday",	  1999-01-19 02:43:59.999,	  false,  1999-01-19 06:43:59.999,	  true	  ]
[ -344,	  1999-01-22,	  "friday",	  1999-01-20 02:43:59.999,	  false,  1999-01-20 06:43:59.999,	  true	  ]
[ -343,	  1999-01-23,	  "saturday",	  1999-01-21 02:43:59.999,	  false,  1999-01-21 06:43:59.999,	  true	  ]
[ -342,	  1999-01-24,	  "sunday",	  1999-01-22 02:43:59.999,	  false,  1999-01-22 06:43:59.999,	  true	  ]
[ -341,	  1999-01-25,	  "monday",	  1999-01-23 02:43:59.999,	  false,  1999-01-23 06:43:59.999,	  true	  ]
[ -340,	  1999-01-26,	  "tuesday",	  1999-01-24 02:43:59.999,	  false,  1999-01-24 06:43:59.999,	  true	  ]
[ -339,	  1999-01-27,	  "wednesday",	  1999-01-25 02:43:59.999,	  false,  1999-01-25 06:43:59.999,	  true	  ]
[ -338,	  1999-01-28,	  "thursday",	  1999-01-26 02:43:59.999,	  false,  1999-01-26 06:43:59.999,	  true	  ]
[ -337,	  1999-01-29,	  "friday",	  1999-01-27 02:43:59.999,	  false,  1999-01-27 06:43:59.999,	  true	  ]
[ -336,	  1999-01-30,	  "saturday",	  1999-01-28 02:43:59.999,	  false,  1999-01-28 06:43:59.999,	  true	  ]
[ -335,	  1999-01-31,	  "sunday",	  1999-01-29 02:43:59.999,	  false,  1999-01-29 06:43:59.999,	  true	  ]
[ -334,	  1999-02-01,	  "monday",	  1999-01-30 02:43:59.999,	  false,  1999-01-30 06:43:59.999,	  true	  ]
[ -333,	  1999-02-02,	  "tuesday",	  1999-01-31 02:43:59.999,	  false,  1999-01-31 06:43:59.999,	  true	  ]
[ -332,	  1999-02-03,	  "wednesday",	  1999-02-01 02:43:59.999,	  false,  1999-02-01 06:43:59.999,	  true	  ]
[ -331,	  1999-02-04,	  "thursday",	  1999-02-02 02:43:59.999,	  false,  1999-02-02 06:43:59.999,	  true	  ]
[ -330,	  1999-02-05,	  "friday",	  1999-02-03 02:43:59.999,	  false,  1999-02-03 06:43:59.999,	  true	  ]
[ -329,	  1999-02-06,	  "saturday",	  1999-02-04 02:43:59.999,	  false,  1999-02-04 06:43:59.999,	  true	  ]
[ -328,	  1999-02-07,	  "sunday",	  1999-02-05 02:43:59.999,	  false,  1999-02-05 06:43:59.999,	  true	  ]
[ -327,	  1999-02-08,	  "monday",	  1999-02-06 02:43:59.999,	  false,  1999-02-06 06:43:59.999,	  true	  ]
[ -326,	  1999-02-09,	  "tuesday",	  1999-02-07 02:43:59.999,	  false,  1999-02-07 06:43:59.999,	  true	  ]
[ -325,	  1999-02-10,	  "wednesday",	  1999-02-08 02:43:59.999,	  false,  1999-02-08 06:43:59.999,	  true	  ]
[ -324,	  1999-02-11,	  "thursday",	  1999-02-09 02:43:59.999,	  false,  1999-02-09 06:43:59.999,	  true	  ]
[ -323,	  1999-02-12,	  "friday",	  1999-02-10 02:43:59.999,	  false,  1999-02-10 06:43:59.999,	  true	  ]
[ -322,	  1999-02-13,	  "saturday",	  1999-02-11 02:43:59.999,	  false,  1999-02-11 06:43:59.999,	  true	  ]
[ -321,	  1999-02-14,	  "sunday",	  1999-02-12 02:43:59.999,	  false,  1999-02-12 06:43:59.999,	  true	  ]
[ -320,	  1999-02-15,	  "monday",	  1999-02-13 02:43:59.999,	  false,  1999-02-13 06:43:59.999,	  true	  ]
[ -319,	  1999-02-16,	  "tuesday",	  1999-02-14 02:43:59.999,	  false,  1999-02-14 06:43:59.999,	  true	  ]
[ -318,	  1999-02-17,	  "wednesday",	  1999-02-15 02:43:59.999,	  false,  1999-02-15 06:43:59.999,	  true	  ]
[ -317,	  1999-02-18,	  "thursday",	  1999-02-16 02:43:59.999,	  false,  1999-02-16 06:43:59.999,	  true	  ]
[ -316,	  1999-02-19,	  "friday",	  1999-02-17 02:43:59.999,	  false,  1999-02-17 06:43:59.999,	  true	  ]
[ -315,	  1999-02-20,	  "saturday",	  1999-02-18 02:43:59.999,	  false,  1999-02-18 06:43:59.999,	  true	  ]
[ -314,	  1999-02-21,	  "sunday",	  1999-02-19 02:43:59.999,	  false,  1999-02-19 06:43:59.999,	  true	  ]
[ -313,	  1999-02-22,	  "monday",	  1999-02-20 02:43:59.999,	  false,  1999-02-20 06:43:59.999,	  true	  ]
[ -312,	  1999-02-23,	  "tuesday",	  1999-02-21 02:43:59.999,	  false,  1999-02-21 06:43:59.999,	  true	  ]
[ -311,	  1999-02-24,	  "wednesday",	  1999-02-22 02:43:59.999,	  false,  1999-02-22 06:43:59.999,	  true	  ]
[ -310,	  1999-02-25,	  "thursday",	  1999-02-23 02:43:59.999,	  false,  1999-02-23 06:43:59.999,	  true	  ]
[ -309,	  1999-02-26,	  "friday",	  1999-02-24 02:43:59.999,	  false,  1999-02-24 06:43:59.999,	  true	  ]
[ -308,	  1999-02-27,	  "saturday",	  1999-02-25 02:43:59.999,	  false,  1999-02-25 06:43:59.999,	  true	  ]
[ -307,	  1999-02-28,	  "sunday",	  1999-02-26 02:43:59.999,	  false,  1999-02-26 06:43:59.999,	  true	  ]
[ -306,	  1999-03-01,	  "monday",	  1999-02-27 02:43:59.999,	  false,  1999-02-27 06:43:59.999,	  true	  ]
[ -305,	  1999-03-02,	  "tuesday",	  1999-02-28 02:43:59.999,	  false,  1999-02-28 06:43:59.999,	  true	  ]
[ -304,	  1999-03-03,	  "wednesday",	  1999-03-01 02:43:59.999,	  false,  1999-03-01 06:43:59.999,	  true	  ]
[ -303,	  1999-03-04,	  "thursday",	  1999-03-02 02:43:59.999,	  false,  1999-03-02 06:43:59.999,	  true	  ]
[ -302,	  1999-03-05,	  "friday",	  1999-03-03 02:43:59.999,	  false,  1999-03-03 06:43:59.999,	  true	  ]
[ -301,	  1999-03-06,	  "saturday",	  1999-03-04 02:43:59.999,	  false,  1999-03-04 06:43:59.999,	  true	  ]
[ -300,	  1999-03-07,	  "sunday",	  1999-03-05 02:43:59.999,	  false,  1999-03-05 06:43:59.999,	  true	  ]
[ -299,	  1999-03-08,	  "monday",	  1999-03-06 02:43:59.999,	  false,  1999-03-06 06:43:59.999,	  true	  ]
[ -298,	  1999-03-09,	  "tuesday",	  1999-03-07 02:43:59.999,	  false,  1999-03-07 06:43:59.999,	  true	  ]
[ -297,	  1999-03-10,	  "wednesday",	  1999-03-08 02:43:59.999,	  false,  1999-03-08 06:43:59.999,	  true	  ]
[ -296,	  1999-03-11,	  "thursday",	  1999-03-09 02:43:59.999,	  false,  1999-03-09 06:43:59.999,	  true	  ]
[ -295,	  1999-03-12,	  "friday",	  1999-03-10 02:43:59.999,	  false,  1999-03-10 06:43:59.999,	  true	  ]
[ -294,	  1999-03-13,	  "saturday",	  1999-03-11 02:43:59.999,	  false,  1999-03-11 06:43:59.999,	  true	  ]
[ -293,	  1999-03-14,	  "sunday",	  1999-03-12 02:43:59.999,	  false,  1999-03-12 06:43:59.999,	  true	  ]
[ -292,	  1999-03-15,	  "monday",	  1999-03-13 02:43:59.999,	  false,  1999-03-13 06:43:59.999,	  true	  ]
[ -291,	  1999-03-16,	  "tuesday",	  1999-03-14 02:43:59.999,	  false,  1999-03-14 06:43:59.999,	  true	  ]
[ -290,	  1999-03-17,	  "wednesday",	  1999-03-15 02:43:59.999,	  false,  1999-03-15 06:43:59.999,	  true	  ]
[ -289,	  1999-03-18,	  "thursday",	  1999-03-16 02:43:59.999,	  false,  1999-03-16 06:43:59.999,	  true	  ]
[ -288,	  1999-03-19,	  "friday",	  1999-03-17 02:43:59.999,	  false,  1999-03-17 06:43:59.999,	  true	  ]
[ -287,	  1999-03-20,	  "saturday",	  1999-03-18 02:43:59.999,	  false,  1999-03-18 06:43:59.999,	  true	  ]
[ -286,	  1999-03-21,	  "sunday",	  1999-03-19 02:43:59.999,	  false,  1999-03-19 06:43:59.999,	  true	  ]
[ -285,	  1999-03-22,	  "monday",	  1999-03-20 02:43:59.999,	  false,  1999-03-20 06:43:59.999,	  true	  ]
[ -284,	  1999-03-23,	  "tuesday",	  1999-03-21 02:43:59.999,	  false,  1999-03-21 06:43:59.999,	  true	  ]
[ -283,	  1999-03-24,	  "wednesday",	  1999-03-22 02:43:59.999,	  false,  1999-03-22 06:43:59.999,	  true	  ]
[ -282,	  1999-03-25,	  "thursday",	  1999-03-23 02:43:59.999,	  false,  1999-03-23 06:43:59.999,	  true	  ]
[ -281,	  1999-03-26,	  "friday",	  1999-03-24 02:43:59.999,	  false,  1999-03-24 06:43:59.999,	  true	  ]
[ -280,	  1999-03-27,	  "saturday",	  1999-03-25 02:43:59.999,	  false,  1999-03-25 06:43:59.999,	  true	  ]
[ -279,	  1999-03-28,	  "sunday",	  1999-03-26 01:43:59.999,	  true,	  1999-03-26 07:43:59.999,	  false	  ]
[ -278,	  1999-03-29,	  "monday",	  1999-03-27 01:43:59.999,	  true,	  1999-03-27 07:43:59.999,	  false	  ]
[ -277,	  1999-03-30,	  "tuesday",	  1999-03-28 01:43:59.999,	  true,	  1999-03-28 07:43:59.999,	  false	  ]
[ -276,	  1999-03-31,	  "wednesday",	  1999-03-29 01:43:59.999,	  true,	  1999-03-29 07:43:59.999,	  false	  ]
[ -275,	  1999-04-01,	  "thursday",	  1999-03-30 01:43:59.999,	  true,	  1999-03-30 07:43:59.999,	  false	  ]
[ -274,	  1999-04-02,	  "friday",	  1999-03-31 01:43:59.999,	  true,	  1999-03-31 07:43:59.999,	  false	  ]
[ -273,	  1999-04-03,	  "saturday",	  1999-04-01 01:43:59.999,	  true,	  1999-04-01 07:43:59.999,	  false	  ]
[ -272,	  1999-04-04,	  "sunday",	  1999-04-02 01:43:59.999,	  true,	  1999-04-02 07:43:59.999,	  false	  ]
[ -271,	  1999-04-05,	  "monday",	  1999-04-03 01:43:59.999,	  true,	  1999-04-03 07:43:59.999,	  false	  ]
[ -270,	  1999-04-06,	  "tuesday",	  1999-04-04 01:43:59.999,	  true,	  1999-04-04 07:43:59.999,	  false	  ]
[ -269,	  1999-04-07,	  "wednesday",	  1999-04-05 01:43:59.999,	  true,	  1999-04-05 07:43:59.999,	  false	  ]
[ -268,	  1999-04-08,	  "thursday",	  1999-04-06 01:43:59.999,	  true,	  1999-04-06 07:43:59.999,	  false	  ]
[ -267,	  1999-04-09,	  "friday",	  1999-04-07 01:43:59.999,	  true,	  1999-04-07 07:43:59.999,	  false	  ]
[ -266,	  1999-04-10,	  "saturday",	  1999-04-08 01:43:59.999,	  true,	  1999-04-08 07:43:59.999,	  false	  ]
[ -265,	  1999-04-11,	  "sunday",	  1999-04-09 01:43:59.999,	  true,	  1999-04-09 07:43:59.999,	  false	  ]
[ -264,	  1999-04-12,	  "monday",	  1999-04-10 01:43:59.999,	  true,	  1999-04-10 07:43:59.999,	  false	  ]
[ -263,	  1999-04-13,	  "tuesday",	  1999-04-11 01:43:59.999,	  true,	  1999-04-11 07:43:59.999,	  false	  ]
[ -262,	  1999-04-14,	  "wednesday",	  1999-04-12 01:43:59.999,	  true,	  1999-04-12 07:43:59.999,	  false	  ]
[ -261,	  1999-04-15,	  "thursday",	  1999-04-13 01:43:59.999,	  true,	  1999-04-13 07:43:59.999,	  false	  ]
[ -260,	  1999-04-16,	  "friday",	  1999-04-14 01:43:59.999,	  true,	  1999-04-14 07:43:59.999,	  false	  ]
[ -259,	  1999-04-17,	  "saturday",	  1999-04-15 01:43:59.999,	  true,	  1999-04-15 07:43:59.999,	  false	  ]
[ -258,	  1999-04-18,	  "sunday",	  1999-04-16 01:43:59.999,	  true,	  1999-04-16 07:43:59.999,	  false	  ]
[ -257,	  1999-04-19,	  "monday",	  1999-04-17 01:43:59.999,	  true,	  1999-04-17 07:43:59.999,	  false	  ]
[ -256,	  1999-04-20,	  "tuesday",	  1999-04-18 01:43:59.999,	  true,	  1999-04-18 07:43:59.999,	  false	  ]
[ -255,	  1999-04-21,	  "wednesday",	  1999-04-19 01:43:59.999,	  true,	  1999-04-19 07:43:59.999,	  false	  ]
[ -254,	  1999-04-22,	  "thursday",	  1999-04-20 01:43:59.999,	  true,	  1999-04-20 07:43:59.999,	  false	  ]
[ -253,	  1999-04-23,	  "friday",	  1999-04-21 01:43:59.999,	  true,	  1999-04-21 07:43:59.999,	  false	  ]
[ -252,	  1999-04-24,	  "saturday",	  1999-04-22 01:43:59.999,	  true,	  1999-04-22 07:43:59.999,	  false	  ]
[ -251,	  1999-04-25,	  "sunday",	  1999-04-23 01:43:59.999,	  true,	  1999-04-23 07:43:59.999,	  false	  ]
[ -250,	  1999-04-26,	  "monday",	  1999-04-24 01:43:59.999,	  true,	  1999-04-24 07:43:59.999,	  false	  ]
[ -249,	  1999-04-27,	  "tuesday",	  1999-04-25 01:43:59.999,	  true,	  1999-04-25 07:43:59.999,	  false	  ]
[ -248,	  1999-04-28,	  "wednesday",	  1999-04-26 01:43:59.999,	  true,	  1999-04-26 07:43:59.999,	  false	  ]
[ -247,	  1999-04-29,	  "thursday",	  1999-04-27 01:43:59.999,	  true,	  1999-04-27 07:43:59.999,	  false	  ]
[ -246,	  1999-04-30,	  "friday",	  1999-04-28 01:43:59.999,	  true,	  1999-04-28 07:43:59.999,	  false	  ]
[ -245,	  1999-05-01,	  "saturday",	  1999-04-29 01:43:59.999,	  true,	  1999-04-29 07:43:59.999,	  false	  ]
[ -244,	  1999-05-02,	  "sunday",	  1999-04-30 01:43:59.999,	  true,	  1999-04-30 07:43:59.999,	  false	  ]
[ -243,	  1999-05-03,	  "monday",	  1999-05-01 01:43:59.999,	  true,	  1999-05-01 07:43:59.999,	  false	  ]
[ -242,	  1999-05-04,	  "tuesday",	  1999-05-02 01:43:59.999,	  true,	  1999-05-02 07:43:59.999,	  false	  ]
[ -241,	  1999-05-05,	  "wednesday",	  1999-05-03 01:43:59.999,	  true,	  1999-05-03 07:43:59.999,	  false	  ]
[ -240,	  1999-05-06,	  "thursday",	  1999-05-04 01:43:59.999,	  true,	  1999-05-04 07:43:59.999,	  false	  ]
[ -239,	  1999-05-07,	  "friday",	  1999-05-05 01:43:59.999,	  true,	  1999-05-05 07:43:59.999,	  false	  ]
[ -238,	  1999-05-08,	  "saturday",	  1999-05-06 01:43:59.999,	  true,	  1999-05-06 07:43:59.999,	  false	  ]
[ -237,	  1999-05-09,	  "sunday",	  1999-05-07 01:43:59.999,	  true,	  1999-05-07 07:43:59.999,	  false	  ]
[ -236,	  1999-05-10,	  "monday",	  1999-05-08 01:43:59.999,	  true,	  1999-05-08 07:43:59.999,	  false	  ]
[ -235,	  1999-05-11,	  "tuesday",	  1999-05-09 01:43:59.999,	  true,	  1999-05-09 07:43:59.999,	  false	  ]
[ -234,	  1999-05-12,	  "wednesday",	  1999-05-10 01:43:59.999,	  true,	  1999-05-10 07:43:59.999,	  false	  ]
[ -233,	  1999-05-13,	  "thursday",	  1999-05-11 01:43:59.999,	  true,	  1999-05-11 07:43:59.999,	  false	  ]
[ -232,	  1999-05-14,	  "friday",	  1999-05-12 01:43:59.999,	  true,	  1999-05-12 07:43:59.999,	  false	  ]
[ -231,	  1999-05-15,	  "saturday",	  1999-05-13 01:43:59.999,	  true,	  1999-05-13 07:43:59.999,	  false	  ]
[ -230,	  1999-05-16,	  "sunday",	  1999-05-14 01:43:59.999,	  true,	  1999-05-14 07:43:59.999,	  false	  ]
[ -229,	  1999-05-17,	  "monday",	  1999-05-15 01:43:59.999,	  true,	  1999-05-15 07:43:59.999,	  false	  ]
[ -228,	  1999-05-18,	  "tuesday",	  1999-05-16 01:43:59.999,	  true,	  1999-05-16 07:43:59.999,	  false	  ]
[ -227,	  1999-05-19,	  "wednesday",	  1999-05-17 01:43:59.999,	  true,	  1999-05-17 07:43:59.999,	  false	  ]
[ -226,	  1999-05-20,	  "thursday",	  1999-05-18 01:43:59.999,	  true,	  1999-05-18 07:43:59.999,	  false	  ]
[ -225,	  1999-05-21,	  "friday",	  1999-05-19 01:43:59.999,	  true,	  1999-05-19 07:43:59.999,	  false	  ]
[ -224,	  1999-05-22,	  "saturday",	  1999-05-20 01:43:59.999,	  true,	  1999-05-20 07:43:59.999,	  false	  ]
[ -223,	  1999-05-23,	  "sunday",	  1999-05-21 01:43:59.999,	  true,	  1999-05-21 07:43:59.999,	  false	  ]
[ -222,	  1999-05-24,	  "monday",	  1999-05-22 01:43:59.999,	  true,	  1999-05-22 07:43:59.999,	  false	  ]
[ -221,	  1999-05-25,	  "tuesday",	  1999-05-23 01:43:59.999,	  true,	  1999-05-23 07:43:59.999,	  false	  ]
[ -220,	  1999-05-26,	  "wednesday",	  1999-05-24 01:43:59.999,	  true,	  1999-05-24 07:43:59.999,	  false	  ]
[ -219,	  1999-05-27,	  "thursday",	  1999-05-25 01:43:59.999,	  true,	  1999-05-25 07:43:59.999,	  false	  ]
[ -218,	  1999-05-28,	  "friday",	  1999-05-26 01:43:59.999,	  true,	  1999-05-26 07:43:59.999,	  false	  ]
[ -217,	  1999-05-29,	  "saturday",	  1999-05-27 01:43:59.999,	  true,	  1999-05-27 07:43:59.999,	  false	  ]
[ -216,	  1999-05-30,	  "sunday",	  1999-05-28 01:43:59.999,	  true,	  1999-05-28 07:43:59.999,	  false	  ]
[ -215,	  1999-05-31,	  "monday",	  1999-05-29 01:43:59.999,	  true,	  1999-05-29 07:43:59.999,	  false	  ]
[ -214,	  1999-06-01,	  "tuesday",	  1999-05-30 01:43:59.999,	  true,	  1999-05-30 07:43:59.999,	  false	  ]
[ -213,	  1999-06-02,	  "wednesday",	  1999-05-31 01:43:59.999,	  true,	  1999-05-31 07:43:59.999,	  false	  ]
[ -212,	  1999-06-03,	  "thursday",	  1999-06-01 01:43:59.999,	  true,	  1999-06-01 07:43:59.999,	  false	  ]
[ -211,	  1999-06-04,	  "friday",	  1999-06-02 01:43:59.999,	  true,	  1999-06-02 07:43:59.999,	  false	  ]
[ -210,	  1999-06-05,	  "saturday",	  1999-06-03 01:43:59.999,	  true,	  1999-06-03 07:43:59.999,	  false	  ]
[ -209,	  1999-06-06,	  "sunday",	  1999-06-04 01:43:59.999,	  true,	  1999-06-04 07:43:59.999,	  false	  ]
[ -208,	  1999-06-07,	  "monday",	  1999-06-05 01:43:59.999,	  true,	  1999-06-05 07:43:59.999,	  false	  ]
[ -207,	  1999-06-08,	  "tuesday",	  1999-06-06 01:43:59.999,	  true,	  1999-06-06 07:43:59.999,	  false	  ]
[ -206,	  1999-06-09,	  "wednesday",	  1999-06-07 01:43:59.999,	  true,	  1999-06-07 07:43:59.999,	  false	  ]
[ -205,	  1999-06-10,	  "thursday",	  1999-06-08 01:43:59.999,	  true,	  1999-06-08 07:43:59.999,	  false	  ]
[ -204,	  1999-06-11,	  "friday",	  1999-06-09 01:43:59.999,	  true,	  1999-06-09 07:43:59.999,	  false	  ]
[ -203,	  1999-06-12,	  "saturday",	  1999-06-10 01:43:59.999,	  true,	  1999-06-10 07:43:59.999,	  false	  ]
[ -202,	  1999-06-13,	  "sunday",	  1999-06-11 01:43:59.999,	  true,	  1999-06-11 07:43:59.999,	  false	  ]
[ -201,	  1999-06-14,	  "monday",	  1999-06-12 01:43:59.999,	  true,	  1999-06-12 07:43:59.999,	  false	  ]
[ -200,	  1999-06-15,	  "tuesday",	  1999-06-13 01:43:59.999,	  true,	  1999-06-13 07:43:59.999,	  false	  ]
[ -199,	  1999-06-16,	  "wednesday",	  1999-06-14 01:43:59.999,	  true,	  1999-06-14 07:43:59.999,	  false	  ]
[ -198,	  1999-06-17,	  "thursday",	  1999-06-15 01:43:59.999,	  true,	  1999-06-15 07:43:59.999,	  false	  ]
[ -197,	  1999-06-18,	  "friday",	  1999-06-16 01:43:59.999,	  true,	  1999-06-16 07:43:59.999,	  false	  ]
[ -196,	  1999-06-19,	  "saturday",	  1999-06-17 01:43:59.999,	  true,	  1999-06-17 07:43:59.999,	  false	  ]
[ -195,	  1999-06-20,	  "sunday",	  1999-06-18 01:43:59.999,	  true,	  1999-06-18 07:43:59.999,	  false	  ]
[ -194,	  1999-06-21,	  "monday",	  1999-06-19 01:43:59.999,	  true,	  1999-06-19 07:43:59.999,	  false	  ]
[ -193,	  1999-06-22,	  "tuesday",	  1999-06-20 01:43:59.999,	  true,	  1999-06-20 07:43:59.999,	  false	  ]
[ -192,	  1999-06-23,	  "wednesday",	  1999-06-21 01:43:59.999,	  true,	  1999-06-21 07:43:59.999,	  false	  ]
[ -191,	  1999-06-24,	  "thursday",	  1999-06-22 01:43:59.999,	  true,	  1999-06-22 07:43:59.999,	  false	  ]
[ -190,	  1999-06-25,	  "friday",	  1999-06-23 01:43:59.999,	  true,	  1999-06-23 07:43:59.999,	  false	  ]
[ -189,	  1999-06-26,	  "saturday",	  1999-06-24 01:43:59.999,	  true,	  1999-06-24 07:43:59.999,	  false	  ]
[ -188,	  1999-06-27,	  "sunday",	  1999-06-25 01:43:59.999,	  true,	  1999-06-25 07:43:59.999,	  false	  ]
[ -187,	  1999-06-28,	  "monday",	  1999-06-26 01:43:59.999,	  true,	  1999-06-26 07:43:59.999,	  false	  ]
[ -186,	  1999-06-29,	  "tuesday",	  1999-06-27 01:43:59.999,	  true,	  1999-06-27 07:43:59.999,	  false	  ]
[ -185,	  1999-06-30,	  "wednesday",	  1999-06-28 01:43:59.999,	  true,	  1999-06-28 07:43:59.999,	  false	  ]
[ -184,	  1999-07-01,	  "thursday",	  1999-06-29 01:43:59.999,	  true,	  1999-06-29 07:43:59.999,	  false	  ]
[ -183,	  1999-07-02,	  "friday",	  1999-06-30 01:43:59.999,	  true,	  1999-06-30 07:43:59.999,	  false	  ]
[ -182,	  1999-07-03,	  "saturday",	  1999-07-01 01:43:59.999,	  true,	  1999-07-01 07:43:59.999,	  false	  ]
[ -181,	  1999-07-04,	  "sunday",	  1999-07-02 01:43:59.999,	  true,	  1999-07-02 07:43:59.999,	  false	  ]
[ -180,	  1999-07-05,	  "monday",	  1999-07-03 01:43:59.999,	  true,	  1999-07-03 07:43:59.999,	  false	  ]
[ -179,	  1999-07-06,	  "tuesday",	  1999-07-04 01:43:59.999,	  true,	  1999-07-04 07:43:59.999,	  false	  ]
[ -178,	  1999-07-07,	  "wednesday",	  1999-07-05 01:43:59.999,	  true,	  1999-07-05 07:43:59.999,	  false	  ]
[ -177,	  1999-07-08,	  "thursday",	  1999-07-06 01:43:59.999,	  true,	  1999-07-06 07:43:59.999,	  false	  ]
[ -176,	  1999-07-09,	  "friday",	  1999-07-07 01:43:59.999,	  true,	  1999-07-07 07:43:59.999,	  false	  ]
[ -175,	  1999-07-10,	  "saturday",	  1999-07-08 01:43:59.999,	  true,	  1999-07-08 07:43:59.999,	  false	  ]
[ -174,	  1999-07-11,	  "sunday",	  1999-07-09 01:43:59.999,	  true,	  1999-07-09 07:43:59.999,	  false	  ]
[ -173,	  1999-07-12,	  "monday",	  1999-07-10 01:43:59.999,	  true,	  1999-07-10 07:43:59.999,	  false	  ]
[ -172,	  1999-07-13,	  "tuesday",	  1999-07-11 01:43:59.999,	  true,	  1999-07-11 07:43:59.999,	  false	  ]
[ -171,	  1999-07-14,	  "wednesday",	  1999-07-12 01:43:59.999,	  true,	  1999-07-12 07:43:59.999,	  false	  ]
[ -170,	  1999-07-15,	  "thursday",	  1999-07-13 01:43:59.999,	  true,	  1999-07-13 07:43:59.999,	  false	  ]
[ -169,	  1999-07-16,	  "friday",	  1999-07-14 01:43:59.999,	  true,	  1999-07-14 07:43:59.999,	  false	  ]
[ -168,	  1999-07-17,	  "saturday",	  1999-07-15 01:43:59.999,	  true,	  1999-07-15 07:43:59.999,	  false	  ]
[ -167,	  1999-07-18,	  "sunday",	  1999-07-16 01:43:59.999,	  true,	  1999-07-16 07:43:59.999,	  false	  ]
[ -166,	  1999-07-19,	  "monday",	  1999-07-17 01:43:59.999,	  true,	  1999-07-17 07:43:59.999,	  false	  ]
[ -165,	  1999-07-20,	  "tuesday",	  1999-07-18 01:43:59.999,	  true,	  1999-07-18 07:43:59.999,	  false	  ]
[ -164,	  1999-07-21,	  "wednesday",	  1999-07-19 01:43:59.999,	  true,	  1999-07-19 07:43:59.999,	  false	  ]
[ -163,	  1999-07-22,	  "thursday",	  1999-07-20 01:43:59.999,	  true,	  1999-07-20 07:43:59.999,	  false	  ]
[ -162,	  1999-07-23,	  "friday",	  1999-07-21 01:43:59.999,	  true,	  1999-07-21 07:43:59.999,	  false	  ]
[ -161,	  1999-07-24,	  "saturday",	  1999-07-22 01:43:59.999,	  true,	  1999-07-22 07:43:59.999,	  false	  ]
[ -160,	  1999-07-25,	  "sunday",	  1999-07-23 01:43:59.999,	  true,	  1999-07-23 07:43:59.999,	  false	  ]
[ -159,	  1999-07-26,	  "monday",	  1999-07-24 01:43:59.999,	  true,	  1999-07-24 07:43:59.999,	  false	  ]
[ -158,	  1999-07-27,	  "tuesday",	  1999-07-25 01:43:59.999,	  true,	  1999-07-25 07:43:59.999,	  false	  ]
[ -157,	  1999-07-28,	  "wednesday",	  1999-07-26 01:43:59.999,	  true,	  1999-07-26 07:43:59.999,	  false	  ]
[ -156,	  1999-07-29,	  "thursday",	  1999-07-27 01:43:59.999,	  true,	  1999-07-27 07:43:59.999,	  false	  ]
[ -155,	  1999-07-30,	  "friday",	  1999-07-28 01:43:59.999,	  true,	  1999-07-28 07:43:59.999,	  false	  ]
[ -154,	  1999-07-31,	  "saturday",	  1999-07-29 01:43:59.999,	  true,	  1999-07-29 07:43:59.999,	  false	  ]
[ -153,	  1999-08-01,	  "sunday",	  1999-07-30 01:43:59.999,	  true,	  1999-07-30 07:43:59.999,	  false	  ]
[ -152,	  1999-08-02,	  "monday",	  1999-07-31 01:43:59.999,	  true,	  1999-07-31 07:43:59.999,	  false	  ]
[ -151,	  1999-08-03,	  "tuesday",	  1999-08-01 01:43:59.999,	  true,	  1999-08-01 07:43:59.999,	  false	  ]
[ -150,	  1999-08-04,	  "wednesday",	  1999-08-02 01:43:59.999,	  true,	  1999-08-02 07:43:59.999,	  false	  ]
[ -149,	  1999-08-05,	  "thursday",	  1999-08-03 01:43:59.999,	  true,	  1999-08-03 07:43:59.999,	  false	  ]
[ -148,	  1999-08-06,	  "friday",	  1999-08-04 01:43:59.999,	  true,	  1999-08-04 07:43:59.999,	  false	  ]
[ -147,	  1999-08-07,	  "saturday",	  1999-08-05 01:43:59.999,	  true,	  1999-08-05 07:43:59.999,	  false	  ]
[ -146,	  1999-08-08,	  "sunday",	  1999-08-06 01:43:59.999,	  true,	  1999-08-06 07:43:59.999,	  false	  ]
[ -145,	  1999-08-09,	  "monday",	  1999-08-07 01:43:59.999,	  true,	  1999-08-07 07:43:59.999,	  false	  ]
[ -144,	  1999-08-10,	  "tuesday",	  1999-08-08 01:43:59.999,	  true,	  1999-08-08 07:43:59.999,	  false	  ]
[ -143,	  1999-08-11,	  "wednesday",	  1999-08-09 01:43:59.999,	  true,	  1999-08-09 07:43:59.999,	  false	  ]
[ -142,	  1999-08-12,	  "thursday",	  1999-08-10 01:43:59.999,	  true,	  1999-08-10 07:43:59.999,	  false	  ]
[ -141,	  1999-08-13,	  "friday",	  1999-08-11 01:43:59.999,	  true,	  1999-08-11 07:43:59.999,	  false	  ]
[ -140,	  1999-08-14,	  "saturday",	  1999-08-12 01:43:59.999,	  true,	  1999-08-12 07:43:59.999,	  false	  ]
[ -139,	  1999-08-15,	  "sunday",	  1999-08-13 01:43:59.999,	  true,	  1999-08-13 07:43:59.999,	  false	  ]
[ -138,	  1999-08-16,	  "monday",	  1999-08-14 01:43:59.999,	  true,	  1999-08-14 07:43:59.999,	  false	  ]
[ -137,	  1999-08-17,	  "tuesday",	  1999-08-15 01:43:59.999,	  true,	  1999-08-15 07:43:59.999,	  false	  ]
[ -136,	  1999-08-18,	  "wednesday",	  1999-08-16 01:43:59.999,	  true,	  1999-08-16 07:43:59.999,	  false	  ]
[ -135,	  1999-08-19,	  "thursday",	  1999-08-17 01:43:59.999,	  true,	  1999-08-17 07:43:59.999,	  false	  ]
[ -134,	  1999-08-20,	  "friday",	  1999-08-18 01:43:59.999,	  true,	  1999-08-18 07:43:59.999,	  false	  ]
[ -133,	  1999-08-21,	  "saturday",	  1999-08-19 01:43:59.999,	  true,	  1999-08-19 07:43:59.999,	  false	  ]
[ -132,	  1999-08-22,	  "sunday",	  1999-08-20 01:43:59.999,	  true,	  1999-08-20 07:43:59.999,	  false	  ]
[ -131,	  1999-08-23,	  "monday",	  1999-08-21 01:43:59.999,	  true,	  1999-08-21 07:43:59.999,	  false	  ]
[ -130,	  1999-08-24,	  "tuesday",	  1999-08-22 01:43:59.999,	  true,	  1999-08-22 07:43:59.999,	  false	  ]
[ -129,	  1999-08-25,	  "wednesday",	  1999-08-23 01:43:59.999,	  true,	  1999-08-23 07:43:59.999,	  false	  ]
[ -128,	  1999-08-26,	  "thursday",	  1999-08-24 01:43:59.999,	  true,	  1999-08-24 07:43:59.999,	  false	  ]
[ -127,	  1999-08-27,	  "friday",	  1999-08-25 01:43:59.999,	  true,	  1999-08-25 07:43:59.999,	  false	  ]
[ -126,	  1999-08-28,	  "saturday",	  1999-08-26 01:43:59.999,	  true,	  1999-08-26 07:43:59.999,	  false	  ]
[ -125,	  1999-08-29,	  "sunday",	  1999-08-27 01:43:59.999,	  true,	  1999-08-27 07:43:59.999,	  false	  ]
[ -124,	  1999-08-30,	  "monday",	  1999-08-28 01:43:59.999,	  true,	  1999-08-28 07:43:59.999,	  false	  ]
[ -123,	  1999-08-31,	  "tuesday",	  1999-08-29 01:43:59.999,	  true,	  1999-08-29 07:43:59.999,	  false	  ]
[ -122,	  1999-09-01,	  "wednesday",	  1999-08-30 01:43:59.999,	  true,	  1999-08-30 07:43:59.999,	  false	  ]
[ -121,	  1999-09-02,	  "thursday",	  1999-08-31 01:43:59.999,	  true,	  1999-08-31 07:43:59.999,	  false	  ]
[ -120,	  1999-09-03,	  "friday",	  1999-09-01 01:43:59.999,	  true,	  1999-09-01 07:43:59.999,	  false	  ]
[ -119,	  1999-09-04,	  "saturday",	  1999-09-02 01:43:59.999,	  true,	  1999-09-02 07:43:59.999,	  false	  ]
[ -118,	  1999-09-05,	  "sunday",	  1999-09-03 01:43:59.999,	  true,	  1999-09-03 07:43:59.999,	  false	  ]
[ -117,	  1999-09-06,	  "monday",	  1999-09-04 01:43:59.999,	  true,	  1999-09-04 07:43:59.999,	  false	  ]
[ -116,	  1999-09-07,	  "tuesday",	  1999-09-05 01:43:59.999,	  true,	  1999-09-05 07:43:59.999,	  false	  ]
[ -115,	  1999-09-08,	  "wednesday",	  1999-09-06 01:43:59.999,	  true,	  1999-09-06 07:43:59.999,	  false	  ]
[ -114,	  1999-09-09,	  "thursday",	  1999-09-07 01:43:59.999,	  true,	  1999-09-07 07:43:59.999,	  false	  ]
[ -113,	  1999-09-10,	  "friday",	  1999-09-08 01:43:59.999,	  true,	  1999-09-08 07:43:59.999,	  false	  ]
[ -112,	  1999-09-11,	  "saturday",	  1999-09-09 01:43:59.999,	  true,	  1999-09-09 07:43:59.999,	  false	  ]
[ -111,	  1999-09-12,	  "sunday",	  1999-09-10 01:43:59.999,	  true,	  1999-09-10 07:43:59.999,	  false	  ]
[ -110,	  1999-09-13,	  "monday",	  1999-09-11 01:43:59.999,	  true,	  1999-09-11 07:43:59.999,	  false	  ]
[ -109,	  1999-09-14,	  "tuesday",	  1999-09-12 01:43:59.999,	  true,	  1999-09-12 07:43:59.999,	  false	  ]
[ -108,	  1999-09-15,	  "wednesday",	  1999-09-13 01:43:59.999,	  true,	  1999-09-13 07:43:59.999,	  false	  ]
[ -107,	  1999-09-16,	  "thursday",	  1999-09-14 01:43:59.999,	  true,	  1999-09-14 07:43:59.999,	  false	  ]
[ -106,	  1999-09-17,	  "friday",	  1999-09-15 01:43:59.999,	  true,	  1999-09-15 07:43:59.999,	  false	  ]
[ -105,	  1999-09-18,	  "saturday",	  1999-09-16 01:43:59.999,	  true,	  1999-09-16 07:43:59.999,	  false	  ]
[ -104,	  1999-09-19,	  "sunday",	  1999-09-17 01:43:59.999,	  true,	  1999-09-17 07:43:59.999,	  false	  ]
[ -103,	  1999-09-20,	  "monday",	  1999-09-18 01:43:59.999,	  true,	  1999-09-18 07:43:59.999,	  false	  ]
[ -102,	  1999-09-21,	  "tuesday",	  1999-09-19 01:43:59.999,	  true,	  1999-09-19 07:43:59.999,	  false	  ]
[ -101,	  1999-09-22,	  "wednesday",	  1999-09-20 01:43:59.999,	  true,	  1999-09-20 07:43:59.999,	  false	  ]
[ -100,	  1999-09-23,	  "thursday",	  1999-09-21 01:43:59.999,	  true,	  1999-09-21 07:43:59.999,	  false	  ]
[ -99,	  1999-09-24,	  "friday",	  1999-09-22 01:43:59.999,	  true,	  1999-09-22 07:43:59.999,	  false	  ]
[ -98,	  1999-09-25,	  "saturday",	  1999-09-23 01:43:59.999,	  true,	  1999-09-23 07:43:59.999,	  false	  ]
[ -97,	  1999-09-26,	  "sunday",	  1999-09-24 01:43:59.999,	  true,	  1999-09-24 07:43:59.999,	  false	  ]
[ -96,	  1999-09-27,	  "monday",	  1999-09-25 01:43:59.999,	  true,	  1999-09-25 07:43:59.999,	  false	  ]
[ -95,	  1999-09-28,	  "tuesday",	  1999-09-26 01:43:59.999,	  true,	  1999-09-26 07:43:59.999,	  false	  ]
[ -94,	  1999-09-29,	  "wednesday",	  1999-09-27 01:43:59.999,	  true,	  1999-09-27 07:43:59.999,	  false	  ]
[ -93,	  1999-09-30,	  "thursday",	  1999-09-28 01:43:59.999,	  true,	  1999-09-28 07:43:59.999,	  false	  ]
[ -92,	  1999-10-01,	  "friday",	  1999-09-29 01:43:59.999,	  true,	  1999-09-29 07:43:59.999,	  false	  ]
[ -91,	  1999-10-02,	  "saturday",	  1999-09-30 01:43:59.999,	  true,	  1999-09-30 07:43:59.999,	  false	  ]
[ -90,	  1999-10-03,	  "sunday",	  1999-10-01 01:43:59.999,	  true,	  1999-10-01 07:43:59.999,	  false	  ]
[ -89,	  1999-10-04,	  "monday",	  1999-10-02 01:43:59.999,	  true,	  1999-10-02 07:43:59.999,	  false	  ]
[ -88,	  1999-10-05,	  "tuesday",	  1999-10-03 01:43:59.999,	  true,	  1999-10-03 07:43:59.999,	  false	  ]
[ -87,	  1999-10-06,	  "wednesday",	  1999-10-04 01:43:59.999,	  true,	  1999-10-04 07:43:59.999,	  false	  ]
[ -86,	  1999-10-07,	  "thursday",	  1999-10-05 01:43:59.999,	  true,	  1999-10-05 07:43:59.999,	  false	  ]
[ -85,	  1999-10-08,	  "friday",	  1999-10-06 01:43:59.999,	  true,	  1999-10-06 07:43:59.999,	  false	  ]
[ -84,	  1999-10-09,	  "saturday",	  1999-10-07 01:43:59.999,	  true,	  1999-10-07 07:43:59.999,	  false	  ]
[ -83,	  1999-10-10,	  "sunday",	  1999-10-08 01:43:59.999,	  true,	  1999-10-08 07:43:59.999,	  false	  ]
[ -82,	  1999-10-11,	  "monday",	  1999-10-09 01:43:59.999,	  true,	  1999-10-09 07:43:59.999,	  false	  ]
[ -81,	  1999-10-12,	  "tuesday",	  1999-10-10 01:43:59.999,	  true,	  1999-10-10 07:43:59.999,	  false	  ]
[ -80,	  1999-10-13,	  "wednesday",	  1999-10-11 01:43:59.999,	  true,	  1999-10-11 07:43:59.999,	  false	  ]
[ -79,	  1999-10-14,	  "thursday",	  1999-10-12 01:43:59.999,	  true,	  1999-10-12 07:43:59.999,	  false	  ]
[ -78,	  1999-10-15,	  "friday",	  1999-10-13 01:43:59.999,	  true,	  1999-10-13 07:43:59.999,	  false	  ]
[ -77,	  1999-10-16,	  "saturday",	  1999-10-14 01:43:59.999,	  true,	  1999-10-14 07:43:59.999,	  false	  ]
[ -76,	  1999-10-17,	  "sunday",	  1999-10-15 01:43:59.999,	  true,	  1999-10-15 07:43:59.999,	  false	  ]
[ -75,	  1999-10-18,	  "monday",	  1999-10-16 01:43:59.999,	  true,	  1999-10-16 07:43:59.999,	  false	  ]
[ -74,	  1999-10-19,	  "tuesday",	  1999-10-17 01:43:59.999,	  true,	  1999-10-17 07:43:59.999,	  false	  ]
[ -73,	  1999-10-20,	  "wednesday",	  1999-10-18 01:43:59.999,	  true,	  1999-10-18 07:43:59.999,	  false	  ]
[ -72,	  1999-10-21,	  "thursday",	  1999-10-19 01:43:59.999,	  true,	  1999-10-19 07:43:59.999,	  false	  ]
[ -71,	  1999-10-22,	  "friday",	  1999-10-20 01:43:59.999,	  true,	  1999-10-20 07:43:59.999,	  false	  ]
[ -70,	  1999-10-23,	  "saturday",	  1999-10-21 01:43:59.999,	  true,	  1999-10-21 07:43:59.999,	  false	  ]
[ -69,	  1999-10-24,	  "sunday",	  1999-10-22 01:43:59.999,	  true,	  1999-10-22 07:43:59.999,	  false	  ]
[ -68,	  1999-10-25,	  "monday",	  1999-10-23 01:43:59.999,	  true,	  1999-10-23 07:43:59.999,	  false	  ]
[ -67,	  1999-10-26,	  "tuesday",	  1999-10-24 01:43:59.999,	  true,	  1999-10-24 07:43:59.999,	  false	  ]
[ -66,	  1999-10-27,	  "wednesday",	  1999-10-25 01:43:59.999,	  true,	  1999-10-25 07:43:59.999,	  false	  ]
[ -65,	  1999-10-28,	  "thursday",	  1999-10-26 01:43:59.999,	  true,	  1999-10-26 07:43:59.999,	  false	  ]
[ -64,	  1999-10-29,	  "friday",	  1999-10-27 01:43:59.999,	  true,	  1999-10-27 07:43:59.999,	  false	  ]
[ -63,	  1999-10-30,	  "saturday",	  1999-10-28 01:43:59.999,	  true,	  1999-10-28 07:43:59.999,	  false	  ]
[ -62,	  1999-10-31,	  "sunday",	  1999-10-29 02:43:59.999,	  false,  1999-10-29 06:43:59.999,	  true	  ]
[ -61,	  1999-11-01,	  "monday",	  1999-10-30 02:43:59.999,	  false,  1999-10-30 06:43:59.999,	  true	  ]
[ -60,	  1999-11-02,	  "tuesday",	  1999-10-31 02:43:59.999,	  false,  1999-10-31 06:43:59.999,	  true	  ]
[ -59,	  1999-11-03,	  "wednesday",	  1999-11-01 02:43:59.999,	  false,  1999-11-01 06:43:59.999,	  true	  ]
[ -58,	  1999-11-04,	  "thursday",	  1999-11-02 02:43:59.999,	  false,  1999-11-02 06:43:59.999,	  true	  ]
[ -57,	  1999-11-05,	  "friday",	  1999-11-03 02:43:59.999,	  false,  1999-11-03 06:43:59.999,	  true	  ]
[ -56,	  1999-11-06,	  "saturday",	  1999-11-04 02:43:59.999,	  false,  1999-11-04 06:43:59.999,	  true	  ]
[ -55,	  1999-11-07,	  "sunday",	  1999-11-05 02:43:59.999,	  false,  1999-11-05 06:43:59.999,	  true	  ]
[ -54,	  1999-11-08,	  "monday",	  1999-11-06 02:43:59.999,	  false,  1999-11-06 06:43:59.999,	  true	  ]
[ -53,	  1999-11-09,	  "tuesday",	  1999-11-07 02:43:59.999,	  false,  1999-11-07 06:43:59.999,	  true	  ]
[ -52,	  1999-11-10,	  "wednesday",	  1999-11-08 02:43:59.999,	  false,  1999-11-08 06:43:59.999,	  true	  ]
[ -51,	  1999-11-11,	  "thursday",	  1999-11-09 02:43:59.999,	  false,  1999-11-09 06:43:59.999,	  true	  ]
[ -50,	  1999-11-12,	  "friday",	  1999-11-10 02:43:59.999,	  false,  1999-11-10 06:43:59.999,	  true	  ]
[ -49,	  1999-11-13,	  "saturday",	  1999-11-11 02:43:59.999,	  false,  1999-11-11 06:43:59.999,	  true	  ]
[ -48,	  1999-11-14,	  "sunday",	  1999-11-12 02:43:59.999,	  false,  1999-11-12 06:43:59.999,	  true	  ]
[ -47,	  1999-11-15,	  "monday",	  1999-11-13 02:43:59.999,	  false,  1999-11-13 06:43:59.999,	  true	  ]
[ -46,	  1999-11-16,	  "tuesday",	  1999-11-14 02:43:59.999,	  false,  1999-11-14 06:43:59.999,	  true	  ]
[ -45,	  1999-11-17,	  "wednesday",	  1999-11-15 02:43:59.999,	  false,  1999-11-15 06:43:59.999,	  true	  ]
[ -44,	  1999-11-18,	  "thursday",	  1999-11-16 02:43:59.999,	  false,  1999-11-16 06:43:59.999,	  true	  ]
[ -43,	  1999-11-19,	  "friday",	  1999-11-17 02:43:59.999,	  false,  1999-11-17 06:43:59.999,	  true	  ]
[ -42,	  1999-11-20,	  "saturday",	  1999-11-18 02:43:59.999,	  false,  1999-11-18 06:43:59.999,	  true	  ]
[ -41,	  1999-11-21,	  "sunday",	  1999-11-19 02:43:59.999,	  false,  1999-11-19 06:43:59.999,	  true	  ]
[ -40,	  1999-11-22,	  "monday",	  1999-11-20 02:43:59.999,	  false,  1999-11-20 06:43:59.999,	  true	  ]
[ -39,	  1999-11-23,	  "tuesday",	  1999-11-21 02:43:59.999,	  false,  1999-11-21 06:43:59.999,	  true	  ]
[ -38,	  1999-11-24,	  "wednesday",	  1999-11-22 02:43:59.999,	  false,  1999-11-22 06:43:59.999,	  true	  ]
[ -37,	  1999-11-25,	  "thursday",	  1999-11-23 02:43:59.999,	  false,  1999-11-23 06:43:59.999,	  true	  ]
[ -36,	  1999-11-26,	  "friday",	  1999-11-24 02:43:59.999,	  false,  1999-11-24 06:43:59.999,	  true	  ]
[ -35,	  1999-11-27,	  "saturday",	  1999-11-25 02:43:59.999,	  false,  1999-11-25 06:43:59.999,	  true	  ]
[ -34,	  1999-11-28,	  "sunday",	  1999-11-26 02:43:59.999,	  false,  1999-11-26 06:43:59.999,	  true	  ]
[ -33,	  1999-11-29,	  "monday",	  1999-11-27 02:43:59.999,	  false,  1999-11-27 06:43:59.999,	  true	  ]
[ -32,	  1999-11-30,	  "tuesday",	  1999-11-28 02:43:59.999,	  false,  1999-11-28 06:43:59.999,	  true	  ]
[ -31,	  1999-12-01,	  "wednesday",	  1999-11-29 02:43:59.999,	  false,  1999-11-29 06:43:59.999,	  true	  ]
[ -30,	  1999-12-02,	  "thursday",	  1999-11-30 02:43:59.999,	  false,  1999-11-30 06:43:59.999,	  true	  ]
[ -29,	  1999-12-03,	  "friday",	  1999-12-01 02:43:59.999,	  false,  1999-12-01 06:43:59.999,	  true	  ]
[ -28,	  1999-12-04,	  "saturday",	  1999-12-02 02:43:59.999,	  false,  1999-12-02 06:43:59.999,	  true	  ]
[ -27,	  1999-12-05,	  "sunday",	  1999-12-03 02:43:59.999,	  false,  1999-12-03 06:43:59.999,	  true	  ]
[ -26,	  1999-12-06,	  "monday",	  1999-12-04 02:43:59.999,	  false,  1999-12-04 06:43:59.999,	  true	  ]
[ -25,	  1999-12-07,	  "tuesday",	  1999-12-05 02:43:59.999,	  false,  1999-12-05 06:43:59.999,	  true	  ]
[ -24,	  1999-12-08,	  "wednesday",	  1999-12-06 02:43:59.999,	  false,  1999-12-06 06:43:59.999,	  true	  ]
[ -23,	  1999-12-09,	  "thursday",	  1999-12-07 02:43:59.999,	  false,  1999-12-07 06:43:59.999,	  true	  ]
[ -22,	  1999-12-10,	  "friday",	  1999-12-08 02:43:59.999,	  false,  1999-12-08 06:43:59.999,	  true	  ]
[ -21,	  1999-12-11,	  "saturday",	  1999-12-09 02:43:59.999,	  false,  1999-12-09 06:43:59.999,	  true	  ]
[ -20,	  1999-12-12,	  "sunday",	  1999-12-10 02:43:59.999,	  false,  1999-12-10 06:43:59.999,	  true	  ]
[ -19,	  1999-12-13,	  "monday",	  1999-12-11 02:43:59.999,	  false,  1999-12-11 06:43:59.999,	  true	  ]
[ -18,	  1999-12-14,	  "tuesday",	  1999-12-12 02:43:59.999,	  false,  1999-12-12 06:43:59.999,	  true	  ]
[ -17,	  1999-12-15,	  "wednesday",	  1999-12-13 02:43:59.999,	  false,  1999-12-13 06:43:59.999,	  true	  ]
[ -16,	  1999-12-16,	  "thursday",	  1999-12-14 02:43:59.999,	  false,  1999-12-14 06:43:59.999,	  true	  ]
[ -15,	  1999-12-17,	  "friday",	  1999-12-15 02:43:59.999,	  false,  1999-12-15 06:43:59.999,	  true	  ]
[ -14,	  1999-12-18,	  "saturday",	  1999-12-16 02:43:59.999,	  false,  1999-12-16 06:43:59.999,	  true	  ]
[ -13,	  1999-12-19,	  "sunday",	  1999-12-17 02:43:59.999,	  false,  1999-12-17 06:43:59.999,	  true	  ]
[ -12,	  1999-12-20,	  "monday",	  1999-12-18 02:43:59.999,	  false,  1999-12-18 06:43:59.999,	  true	  ]
[ -11,	  1999-12-21,	  "tuesday",	  1999-12-19 02:43:59.999,	  false,  1999-12-19 06:43:59.999,	  true	  ]
[ -10,	  1999-12-22,	  "wednesday",	  1999-12-20 02:43:59.999,	  false,  1999-12-20 06:43:59.999,	  true	  ]
[ -9,	  1999-12-23,	  "thursday",	  1999-12-21 02:43:59.999,	  false,  1999-12-21 06:43:59.999,	  true	  ]
[ -8,	  1999-12-24,	  "friday",	  1999-12-22 02:43:59.999,	  false,  1999-12-22 06:43:59.999,	  true	  ]
[ -7,	  1999-12-25,	  "saturday",	  1999-12-23 02:43:59.999,	  false,  1999-12-23 06:43:59.999,	  true	  ]
[ -6,	  1999-12-26,	  "sunday",	  1999-12-24 02:43:59.999,	  false,  1999-12-24 06:43:59.999,	  true	  ]
[ -5,	  1999-12-27,	  "monday",	  1999-12-25 02:43:59.999,	  false,  1999-12-25 06:43:59.999,	  true	  ]
[ -4,	  1999-12-28,	  "tuesday",	  1999-12-26 02:43:59.999,	  false,  1999-12-26 06:43:59.999,	  true	  ]
[ -3,	  1999-12-29,	  "wednesday",	  1999-12-27 02:43:59.999,	  false,  1999-12-27 06:43:59.999,	  true	  ]
[ -2,	  1999-12-30,	  "thursday",	  1999-12-28 02:43:59.999,	  false,  1999-12-28 06:43:59.999,	  true	  ]
[ -1,	  1999-12-31,	  "friday",	  1999-12-29 02:43:59.999,	  false,  1999-12-29 06:43:59.999,	  true	  ]
[ 0,	  2000-01-01,	  "saturday",	  1999-12-30 02:43:59.999,	  false,  1999-12-30 06:43:59.999,	  true	  ]
[ 1,	  2000-01-02,	  "sunday",	  1999-12-31 02:43:59.999,	  false,  1999-12-31 06:43:59.999,	  true	  ]
[ 2,	  2000-01-03,	  "monday",	  2000-01-01 02:43:59.999,	  false,  2000-01-01 06:43:59.999,	  true	  ]
[ 3,	  2000-01-04,	  "tuesday",	  2000-01-02 02:43:59.999,	  false,  2000-01-02 06:43:59.999,	  true	  ]
[ 4,	  2000-01-05,	  "wednesday",	  2000-01-03 02:43:59.999,	  false,  2000-01-03 06:43:59.999,	  true	  ]
[ 5,	  2000-01-06,	  "thursday",	  2000-01-04 02:43:59.999,	  false,  2000-01-04 06:43:59.999,	  true	  ]
[ 6,	  2000-01-07,	  "friday",	  2000-01-05 02:43:59.999,	  false,  2000-01-05 06:43:59.999,	  true	  ]
[ 7,	  2000-01-08,	  "saturday",	  2000-01-06 02:43:59.999,	  false,  2000-01-06 06:43:59.999,	  true	  ]
[ 8,	  2000-01-09,	  "sunday",	  2000-01-07 02:43:59.999,	  false,  2000-01-07 06:43:59.999,	  true	  ]
[ 9,	  2000-01-10,	  "monday",	  2000-01-08 02:43:59.999,	  false,  2000-01-08 06:43:59.999,	  true	  ]
[ 10,	  2000-01-11,	  "tuesday",	  2000-01-09 02:43:59.999,	  false,  2000-01-09 06:43:59.999,	  true	  ]
[ 11,	  2000-01-12,	  "wednesday",	  2000-01-10 02:43:59.999,	  false,  2000-01-10 06:43:59.999,	  true	  ]
[ 12,	  2000-01-13,	  "thursday",	  2000-01-11 02:43:59.999,	  false,  2000-01-11 06:43:59.999,	  true	  ]
[ 13,	  2000-01-14,	  "friday",	  2000-01-12 02:43:59.999,	  false,  2000-01-12 06:43:59.999,	  true	  ]
[ 14,	  2000-01-15,	  "saturday",	  2000-01-13 02:43:59.999,	  false,  2000-01-13 06:43:59.999,	  true	  ]
[ 15,	  2000-01-16,	  "sunday",	  2000-01-14 02:43:59.999,	  false,  2000-01-14 06:43:59.999,	  true	  ]
[ 16,	  2000-01-17,	  "monday",	  2000-01-15 02:43:59.999,	  false,  2000-01-15 06:43:59.999,	  true	  ]
[ 17,	  2000-01-18,	  "tuesday",	  2000-01-16 02:43:59.999,	  false,  2000-01-16 06:43:59.999,	  true	  ]
[ 18,	  2000-01-19,	  "wednesday",	  2000-01-17 02:43:59.999,	  false,  2000-01-17 06:43:59.999,	  true	  ]
[ 19,	  2000-01-20,	  "thursday",	  2000-01-18 02:43:59.999,	  false,  2000-01-18 06:43:59.999,	  true	  ]
[ 20,	  2000-01-21,	  "friday",	  2000-01-19 02:43:59.999,	  false,  2000-01-19 06:43:59.999,	  true	  ]
[ 21,	  2000-01-22,	  "saturday",	  2000-01-20 02:43:59.999,	  false,  2000-01-20 06:43:59.999,	  true	  ]
[ 22,	  2000-01-23,	  "sunday",	  2000-01-21 02:43:59.999,	  false,  2000-01-21 06:43:59.999,	  true	  ]
[ 23,	  2000-01-24,	  "monday",	  2000-01-22 02:43:59.999,	  false,  2000-01-22 06:43:59.999,	  true	  ]
[ 24,	  2000-01-25,	  "tuesday",	  2000-01-23 02:43:59.999,	  false,  2000-01-23 06:43:59.999,	  true	  ]
[ 25,	  2000-01-26,	  "wednesday",	  2000-01-24 02:43:59.999,	  false,  2000-01-24 06:43:59.999,	  true	  ]
[ 26,	  2000-01-27,	  "thursday",	  2000-01-25 02:43:59.999,	  false,  2000-01-25 06:43:59.999,	  true	  ]
[ 27,	  2000-01-28,	  "friday",	  2000-01-26 02:43:59.999,	  false,  2000-01-26 06:43:59.999,	  true	  ]
[ 28,	  2000-01-29,	  "saturday",	  2000-01-27 02:43:59.999,	  false,  2000-01-27 06:43:59.999,	  true	  ]
[ 29,	  2000-01-30,	  "sunday",	  2000-01-28 02:43:59.999,	  false,  2000-01-28 06:43:59.999,	  true	  ]
[ 30,	  2000-01-31,	  "monday",	  2000-01-29 02:43:59.999,	  false,  2000-01-29 06:43:59.999,	  true	  ]
[ 31,	  2000-02-01,	  "tuesday",	  2000-01-30 02:43:59.999,	  false,  2000-01-30 06:43:59.999,	  true	  ]
[ 32,	  2000-02-02,	  "wednesday",	  2000-01-31 02:43:59.999,	  false,  2000-01-31 06:43:59.999,	  true	  ]
[ 33,	  2000-02-03,	  "thursday",	  2000-02-01 02:43:59.999,	  false,  2000-02-01 06:43:59.999,	  true	  ]
[ 34,	  2000-02-04,	  "friday",	  2000-02-02 02:43:59.999,	  false,  2000-02-02 06:43:59.999,	  true	  ]
[ 35,	  2000-02-05,	  "saturday",	  2000-02-03 02:43:59.999,	  false,  2000-02-03 06:43:59.999,	  true	  ]
[ 36,	  2000-02-06,	  "sunday",	  2000-02-04 02:43:59.999,	  false,  2000-02-04 06:43:59.999,	  true	  ]
[ 37,	  2000-02-07,	  "monday",	  2000-02-05 02:43:59.999,	  false,  2000-02-05 06:43:59.999,	  true	  ]
[ 38,	  2000-02-08,	  "tuesday",	  2000-02-06 02:43:59.999,	  false,  2000-02-06 06:43:59.999,	  true	  ]
[ 39,	  2000-02-09,	  "wednesday",	  2000-02-07 02:43:59.999,	  false,  2000-02-07 06:43:59.999,	  true	  ]
[ 40,	  2000-02-10,	  "thursday",	  2000-02-08 02:43:59.999,	  false,  2000-02-08 06:43:59.999,	  true	  ]
[ 41,	  2000-02-11,	  "friday",	  2000-02-09 02:43:59.999,	  false,  2000-02-09 06:43:59.999,	  true	  ]
[ 42,	  2000-02-12,	  "saturday",	  2000-02-10 02:43:59.999,	  false,  2000-02-10 06:43:59.999,	  true	  ]
[ 43,	  2000-02-13,	  "sunday",	  2000-02-11 02:43:59.999,	  false,  2000-02-11 06:43:59.999,	  true	  ]
[ 44,	  2000-02-14,	  "monday",	  2000-02-12 02:43:59.999,	  false,  2000-02-12 06:43:59.999,	  true	  ]
[ 45,	  2000-02-15,	  "tuesday",	  2000-02-13 02:43:59.999,	  false,  2000-02-13 06:43:59.999,	  true	  ]
[ 46,	  2000-02-16,	  "wednesday",	  2000-02-14 02:43:59.999,	  false,  2000-02-14 06:43:59.999,	  true	  ]
[ 47,	  2000-02-17,	  "thursday",	  2000-02-15 02:43:59.999,	  false,  2000-02-15 06:43:59.999,	  true	  ]
[ 48,	  2000-02-18,	  "friday",	  2000-02-16 02:43:59.999,	  false,  2000-02-16 06:43:59.999,	  true	  ]
[ 49,	  2000-02-19,	  "saturday",	  2000-02-17 02:43:59.999,	  false,  2000-02-17 06:43:59.999,	  true	  ]
[ 50,	  2000-02-20,	  "sunday",	  2000-02-18 02:43:59.999,	  false,  2000-02-18 06:43:59.999,	  true	  ]
[ 51,	  2000-02-21,	  "monday",	  2000-02-19 02:43:59.999,	  false,  2000-02-19 06:43:59.999,	  true	  ]
[ 52,	  2000-02-22,	  "tuesday",	  2000-02-20 02:43:59.999,	  false,  2000-02-20 06:43:59.999,	  true	  ]
[ 53,	  2000-02-23,	  "wednesday",	  2000-02-21 02:43:59.999,	  false,  2000-02-21 06:43:59.999,	  true	  ]
[ 54,	  2000-02-24,	  "thursday",	  2000-02-22 02:43:59.999,	  false,  2000-02-22 06:43:59.999,	  true	  ]
[ 55,	  2000-02-25,	  "friday",	  2000-02-23 02:43:59.999,	  false,  2000-02-23 06:43:59.999,	  true	  ]
[ 56,	  2000-02-26,	  "saturday",	  2000-02-24 02:43:59.999,	  false,  2000-02-24 06:43:59.999,	  true	  ]
[ 57,	  2000-02-27,	  "sunday",	  2000-02-25 02:43:59.999,	  false,  2000-02-25 06:43:59.999,	  true	  ]
[ 58,	  2000-02-28,	  "monday",	  2000-02-26 02:43:59.999,	  false,  2000-02-26 06:43:59.999,	  true	  ]
[ 59,	  2000-02-29,	  "tuesday",	  2000-02-27 02:43:59.999,	  false,  2000-02-27 06:43:59.999,	  true	  ]
[ 60,	  2000-03-01,	  "wednesday",	  2000-02-28 02:43:59.999,	  false,  2000-02-28 06:43:59.999,	  true	  ]
[ 61,	  2000-03-02,	  "thursday",	  2000-02-29 02:43:59.999,	  false,  2000-02-29 06:43:59.999,	  true	  ]
[ 62,	  2000-03-03,	  "friday",	  2000-03-01 02:43:59.999,	  false,  2000-03-01 06:43:59.999,	  true	  ]
[ 63,	  2000-03-04,	  "saturday",	  2000-03-02 02:43:59.999,	  false,  2000-03-02 06:43:59.999,	  true	  ]
[ 64,	  2000-03-05,	  "sunday",	  2000-03-03 02:43:59.999,	  false,  2000-03-03 06:43:59.999,	  true	  ]
[ 65,	  2000-03-06,	  "monday",	  2000-03-04 02:43:59.999,	  false,  2000-03-04 06:43:59.999,	  true	  ]
[ 66,	  2000-03-07,	  "tuesday",	  2000-03-05 02:43:59.999,	  false,  2000-03-05 06:43:59.999,	  true	  ]
[ 67,	  2000-03-08,	  "wednesday",	  2000-03-06 02:43:59.999,	  false,  2000-03-06 06:43:59.999,	  true	  ]
[ 68,	  2000-03-09,	  "thursday",	  2000-03-07 02:43:59.999,	  false,  2000-03-07 06:43:59.999,	  true	  ]
[ 69,	  2000-03-10,	  "friday",	  2000-03-08 02:43:59.999,	  false,  2000-03-08 06:43:59.999,	  true	  ]
[ 70,	  2000-03-11,	  "saturday",	  2000-03-09 02:43:59.999,	  false,  2000-03-09 06:43:59.999,	  true	  ]
[ 71,	  2000-03-12,	  "sunday",	  2000-03-10 02:43:59.999,	  false,  2000-03-10 06:43:59.999,	  true	  ]
[ 72,	  2000-03-13,	  "monday",	  2000-03-11 02:43:59.999,	  false,  2000-03-11 06:43:59.999,	  true	  ]
[ 73,	  2000-03-14,	  "tuesday",	  2000-03-12 02:43:59.999,	  false,  2000-03-12 06:43:59.999,	  true	  ]
[ 74,	  2000-03-15,	  "wednesday",	  2000-03-13 02:43:59.999,	  false,  2000-03-13 06:43:59.999,	  true	  ]
[ 75,	  2000-03-16,	  "thursday",	  2000-03-14 02:43:59.999,	  false,  2000-03-14 06:43:59.999,	  true	  ]
[ 76,	  2000-03-17,	  "friday",	  2000-03-15 02:43:59.999,	  false,  2000-03-15 06:43:59.999,	  true	  ]
[ 77,	  2000-03-18,	  "saturday",	  2000-03-16 02:43:59.999,	  false,  2000-03-16 06:43:59.999,	  true	  ]
[ 78,	  2000-03-19,	  "sunday",	  2000-03-17 02:43:59.999,	  false,  2000-03-17 06:43:59.999,	  true	  ]
[ 79,	  2000-03-20,	  "monday",	  2000-03-18 02:43:59.999,	  false,  2000-03-18 06:43:59.999,	  true	  ]
[ 80,	  2000-03-21,	  "tuesday",	  2000-03-19 02:43:59.999,	  false,  2000-03-19 06:43:59.999,	  true	  ]
[ 81,	  2000-03-22,	  "wednesday",	  2000-03-20 02:43:59.999,	  false,  2000-03-20 06:43:59.999,	  true	  ]
[ 82,	  2000-03-23,	  "thursday",	  2000-03-21 02:43:59.999,	  false,  2000-03-21 06:43:59.999,	  true	  ]
[ 83,	  2000-03-24,	  "friday",	  2000-03-22 02:43:59.999,	  false,  2000-03-22 06:43:59.999,	  true	  ]
[ 84,	  2000-03-25,	  "saturday",	  2000-03-23 02:43:59.999,	  false,  2000-03-23 06:43:59.999,	  true	  ]
[ 85,	  2000-03-26,	  "sunday",	  2000-03-24 01:43:59.999,	  true,	  2000-03-24 07:43:59.999,	  false	  ]
[ 86,	  2000-03-27,	  "monday",	  2000-03-25 01:43:59.999,	  true,	  2000-03-25 07:43:59.999,	  false	  ]
[ 87,	  2000-03-28,	  "tuesday",	  2000-03-26 01:43:59.999,	  true,	  2000-03-26 07:43:59.999,	  false	  ]
[ 88,	  2000-03-29,	  "wednesday",	  2000-03-27 01:43:59.999,	  true,	  2000-03-27 07:43:59.999,	  false	  ]
[ 89,	  2000-03-30,	  "thursday",	  2000-03-28 01:43:59.999,	  true,	  2000-03-28 07:43:59.999,	  false	  ]
[ 90,	  2000-03-31,	  "friday",	  2000-03-29 01:43:59.999,	  true,	  2000-03-29 07:43:59.999,	  false	  ]
[ 91,	  2000-04-01,	  "saturday",	  2000-03-30 01:43:59.999,	  true,	  2000-03-30 07:43:59.999,	  false	  ]
[ 92,	  2000-04-02,	  "sunday",	  2000-03-31 01:43:59.999,	  true,	  2000-03-31 07:43:59.999,	  false	  ]
[ 93,	  2000-04-03,	  "monday",	  2000-04-01 01:43:59.999,	  true,	  2000-04-01 07:43:59.999,	  false	  ]
[ 94,	  2000-04-04,	  "tuesday",	  2000-04-02 01:43:59.999,	  true,	  2000-04-02 07:43:59.999,	  false	  ]
[ 95,	  2000-04-05,	  "wednesday",	  2000-04-03 01:43:59.999,	  true,	  2000-04-03 07:43:59.999,	  false	  ]
[ 96,	  2000-04-06,	  "thursday",	  2000-04-04 01:43:59.999,	  true,	  2000-04-04 07:43:59.999,	  false	  ]
[ 97,	  2000-04-07,	  "friday",	  2000-04-05 01:43:59.999,	  true,	  2000-04-05 07:43:59.999,	  false	  ]
[ 98,	  2000-04-08,	  "saturday",	  2000-04-06 01:43:59.999,	  true,	  2000-04-06 07:43:59.999,	  false	  ]
[ 99,	  2000-04-09,	  "sunday",	  2000-04-07 01:43:59.999,	  true,	  2000-04-07 07:43:59.999,	  false	  ]
[ 100,	  2000-04-10,	  "monday",	  2000-04-08 01:43:59.999,	  true,	  2000-04-08 07:43:59.999,	  false	  ]
[ 101,	  2000-04-11,	  "tuesday",	  2000-04-09 01:43:59.999,	  true,	  2000-04-09 07:43:59.999,	  false	  ]
[ 102,	  2000-04-12,	  "wednesday",	  2000-04-10 01:43:59.999,	  true,	  2000-04-10 07:43:59.999,	  false	  ]
[ 103,	  2000-04-13,	  "thursday",	  2000-04-11 01:43:59.999,	  true,	  2000-04-11 07:43:59.999,	  false	  ]
[ 104,	  2000-04-14,	  "friday",	  2000-04-12 01:43:59.999,	  true,	  2000-04-12 07:43:59.999,	  false	  ]
[ 105,	  2000-04-15,	  "saturday",	  2000-04-13 01:43:59.999,	  true,	  2000-04-13 07:43:59.999,	  false	  ]
[ 106,	  2000-04-16,	  "sunday",	  2000-04-14 01:43:59.999,	  true,	  2000-04-14 07:43:59.999,	  false	  ]
[ 107,	  2000-04-17,	  "monday",	  2000-04-15 01:43:59.999,	  true,	  2000-04-15 07:43:59.999,	  false	  ]
[ 108,	  2000-04-18,	  "tuesday",	  2000-04-16 01:43:59.999,	  true,	  2000-04-16 07:43:59.999,	  false	  ]
[ 109,	  2000-04-19,	  "wednesday",	  2000-04-17 01:43:59.999,	  true,	  2000-04-17 07:43:59.999,	  false	  ]
[ 110,	  2000-04-20,	  "thursday",	  2000-04-18 01:43:59.999,	  true,	  2000-04-18 07:43:59.999,	  false	  ]
[ 111,	  2000-04-21,	  "friday",	  2000-04-19 01:43:59.999,	  true,	  2000-04-19 07:43:59.999,	  false	  ]
[ 112,	  2000-04-22,	  "saturday",	  2000-04-20 01:43:59.999,	  true,	  2000-04-20 07:43:59.999,	  false	  ]
[ 113,	  2000-04-23,	  "sunday",	  2000-04-21 01:43:59.999,	  true,	  2000-04-21 07:43:59.999,	  false	  ]
[ 114,	  2000-04-24,	  "monday",	  2000-04-22 01:43:59.999,	  true,	  2000-04-22 07:43:59.999,	  false	  ]
[ 115,	  2000-04-25,	  "tuesday",	  2000-04-23 01:43:59.999,	  true,	  2000-04-23 07:43:59.999,	  false	  ]
[ 116,	  2000-04-26,	  "wednesday",	  2000-04-24 01:43:59.999,	  true,	  2000-04-24 07:43:59.999,	  false	  ]
[ 117,	  2000-04-27,	  "thursday",	  2000-04-25 01:43:59.999,	  true,	  2000-04-25 07:43:59.999,	  false	  ]
[ 118,	  2000-04-28,	  "friday",	  2000-04-26 01:43:59.999,	  true,	  2000-04-26 07:43:59.999,	  false	  ]
[ 119,	  2000-04-29,	  "saturday",	  2000-04-27 01:43:59.999,	  true,	  2000-04-27 07:43:59.999,	  false	  ]
[ 120,	  2000-04-30,	  "sunday",	  2000-04-28 01:43:59.999,	  true,	  2000-04-28 07:43:59.999,	  false	  ]
[ 121,	  2000-05-01,	  "monday",	  2000-04-29 01:43:59.999,	  true,	  2000-04-29 07:43:59.999,	  false	  ]
[ 122,	  2000-05-02,	  "tuesday",	  2000-04-30 01:43:59.999,	  true,	  2000-04-30 07:43:59.999,	  false	  ]
[ 123,	  2000-05-03,	  "wednesday",	  2000-05-01 01:43:59.999,	  true,	  2000-05-01 07:43:59.999,	  false	  ]
[ 124,	  2000-05-04,	  "thursday",	  2000-05-02 01:43:59.999,	  true,	  2000-05-02 07:43:59.999,	  false	  ]
[ 125,	  2000-05-05,	  "friday",	  2000-05-03 01:43:59.999,	  true,	  2000-05-03 07:43:59.999,	  false	  ]
[ 126,	  2000-05-06,	  "saturday",	  2000-05-04 01:43:59.999,	  true,	  2000-05-04 07:43:59.999,	  false	  ]
[ 127,	  2000-05-07,	  "sunday",	  2000-05-05 01:43:59.999,	  true,	  2000-05-05 07:43:59.999,	  false	  ]
[ 128,	  2000-05-08,	  "monday",	  2000-05-06 01:43:59.999,	  true,	  2000-05-06 07:43:59.999,	  false	  ]
[ 129,	  2000-05-09,	  "tuesday",	  2000-05-07 01:43:59.999,	  true,	  2000-05-07 07:43:59.999,	  false	  ]
[ 130,	  2000-05-10,	  "wednesday",	  2000-05-08 01:43:59.999,	  true,	  2000-05-08 07:43:59.999,	  false	  ]
[ 131,	  2000-05-11,	  "thursday",	  2000-05-09 01:43:59.999,	  true,	  2000-05-09 07:43:59.999,	  false	  ]
[ 132,	  2000-05-12,	  "friday",	  2000-05-10 01:43:59.999,	  true,	  2000-05-10 07:43:59.999,	  false	  ]
[ 133,	  2000-05-13,	  "saturday",	  2000-05-11 01:43:59.999,	  true,	  2000-05-11 07:43:59.999,	  false	  ]
[ 134,	  2000-05-14,	  "sunday",	  2000-05-12 01:43:59.999,	  true,	  2000-05-12 07:43:59.999,	  false	  ]
[ 135,	  2000-05-15,	  "monday",	  2000-05-13 01:43:59.999,	  true,	  2000-05-13 07:43:59.999,	  false	  ]
[ 136,	  2000-05-16,	  "tuesday",	  2000-05-14 01:43:59.999,	  true,	  2000-05-14 07:43:59.999,	  false	  ]
[ 137,	  2000-05-17,	  "wednesday",	  2000-05-15 01:43:59.999,	  true,	  2000-05-15 07:43:59.999,	  false	  ]
[ 138,	  2000-05-18,	  "thursday",	  2000-05-16 01:43:59.999,	  true,	  2000-05-16 07:43:59.999,	  false	  ]
[ 139,	  2000-05-19,	  "friday",	  2000-05-17 01:43:59.999,	  true,	  2000-05-17 07:43:59.999,	  false	  ]
[ 140,	  2000-05-20,	  "saturday",	  2000-05-18 01:43:59.999,	  true,	  2000-05-18 07:43:59.999,	  false	  ]
[ 141,	  2000-05-21,	  "sunday",	  2000-05-19 01:43:59.999,	  true,	  2000-05-19 07:43:59.999,	  false	  ]
[ 142,	  2000-05-22,	  "monday",	  2000-05-20 01:43:59.999,	  true,	  2000-05-20 07:43:59.999,	  false	  ]
[ 143,	  2000-05-23,	  "tuesday",	  2000-05-21 01:43:59.999,	  true,	  2000-05-21 07:43:59.999,	  false	  ]
[ 144,	  2000-05-24,	  "wednesday",	  2000-05-22 01:43:59.999,	  true,	  2000-05-22 07:43:59.999,	  false	  ]
[ 145,	  2000-05-25,	  "thursday",	  2000-05-23 01:43:59.999,	  true,	  2000-05-23 07:43:59.999,	  false	  ]
[ 146,	  2000-05-26,	  "friday",	  2000-05-24 01:43:59.999,	  true,	  2000-05-24 07:43:59.999,	  false	  ]
[ 147,	  2000-05-27,	  "saturday",	  2000-05-25 01:43:59.999,	  true,	  2000-05-25 07:43:59.999,	  false	  ]
[ 148,	  2000-05-28,	  "sunday",	  2000-05-26 01:43:59.999,	  true,	  2000-05-26 07:43:59.999,	  false	  ]
[ 149,	  2000-05-29,	  "monday",	  2000-05-27 01:43:59.999,	  true,	  2000-05-27 07:43:59.999,	  false	  ]
[ 150,	  2000-05-30,	  "tuesday",	  2000-05-28 01:43:59.999,	  true,	  2000-05-28 07:43:59.999,	  false	  ]
[ 151,	  2000-05-31,	  "wednesday",	  2000-05-29 01:43:59.999,	  true,	  2000-05-29 07:43:59.999,	  false	  ]
[ 152,	  2000-06-01,	  "thursday",	  2000-05-30 01:43:59.999,	  true,	  2000-05-30 07:43:59.999,	  false	  ]
[ 153,	  2000-06-02,	  "friday",	  2000-05-31 01:43:59.999,	  true,	  2000-05-31 07:43:59.999,	  false	  ]
[ 154,	  2000-06-03,	  "saturday",	  2000-06-01 01:43:59.999,	  true,	  2000-06-01 07:43:59.999,	  false	  ]
[ 155,	  2000-06-04,	  "sunday",	  2000-06-02 01:43:59.999,	  true,	  2000-06-02 07:43:59.999,	  false	  ]
[ 156,	  2000-06-05,	  "monday",	  2000-06-03 01:43:59.999,	  true,	  2000-06-03 07:43:59.999,	  false	  ]
[ 157,	  2000-06-06,	  "tuesday",	  2000-06-04 01:43:59.999,	  true,	  2000-06-04 07:43:59.999,	  false	  ]
[ 158,	  2000-06-07,	  "wednesday",	  2000-06-05 01:43:59.999,	  true,	  2000-06-05 07:43:59.999,	  false	  ]
[ 159,	  2000-06-08,	  "thursday",	  2000-06-06 01:43:59.999,	  true,	  2000-06-06 07:43:59.999,	  false	  ]
[ 160,	  2000-06-09,	  "friday",	  2000-06-07 01:43:59.999,	  true,	  2000-06-07 07:43:59.999,	  false	  ]
[ 161,	  2000-06-10,	  "saturday",	  2000-06-08 01:43:59.999,	  true,	  2000-06-08 07:43:59.999,	  false	  ]
[ 162,	  2000-06-11,	  "sunday",	  2000-06-09 01:43:59.999,	  true,	  2000-06-09 07:43:59.999,	  false	  ]
[ 163,	  2000-06-12,	  "monday",	  2000-06-10 01:43:59.999,	  true,	  2000-06-10 07:43:59.999,	  false	  ]
[ 164,	  2000-06-13,	  "tuesday",	  2000-06-11 01:43:59.999,	  true,	  2000-06-11 07:43:59.999,	  false	  ]
[ 165,	  2000-06-14,	  "wednesday",	  2000-06-12 01:43:59.999,	  true,	  2000-06-12 07:43:59.999,	  false	  ]
[ 166,	  2000-06-15,	  "thursday",	  2000-06-13 01:43:59.999,	  true,	  2000-06-13 07:43:59.999,	  false	  ]
[ 167,	  2000-06-16,	  "friday",	  2000-06-14 01:43:59.999,	  true,	  2000-06-14 07:43:59.999,	  false	  ]
[ 168,	  2000-06-17,	  "saturday",	  2000-06-15 01:43:59.999,	  true,	  2000-06-15 07:43:59.999,	  false	  ]
[ 169,	  2000-06-18,	  "sunday",	  2000-06-16 01:43:59.999,	  true,	  2000-06-16 07:43:59.999,	  false	  ]
[ 170,	  2000-06-19,	  "monday",	  2000-06-17 01:43:59.999,	  true,	  2000-06-17 07:43:59.999,	  false	  ]
[ 171,	  2000-06-20,	  "tuesday",	  2000-06-18 01:43:59.999,	  true,	  2000-06-18 07:43:59.999,	  false	  ]
[ 172,	  2000-06-21,	  "wednesday",	  2000-06-19 01:43:59.999,	  true,	  2000-06-19 07:43:59.999,	  false	  ]
[ 173,	  2000-06-22,	  "thursday",	  2000-06-20 01:43:59.999,	  true,	  2000-06-20 07:43:59.999,	  false	  ]
[ 174,	  2000-06-23,	  "friday",	  2000-06-21 01:43:59.999,	  true,	  2000-06-21 07:43:59.999,	  false	  ]
[ 175,	  2000-06-24,	  "saturday",	  2000-06-22 01:43:59.999,	  true,	  2000-06-22 07:43:59.999,	  false	  ]
[ 176,	  2000-06-25,	  "sunday",	  2000-06-23 01:43:59.999,	  true,	  2000-06-23 07:43:59.999,	  false	  ]
[ 177,	  2000-06-26,	  "monday",	  2000-06-24 01:43:59.999,	  true,	  2000-06-24 07:43:59.999,	  false	  ]
[ 178,	  2000-06-27,	  "tuesday",	  2000-06-25 01:43:59.999,	  true,	  2000-06-25 07:43:59.999,	  false	  ]
[ 179,	  2000-06-28,	  "wednesday",	  2000-06-26 01:43:59.999,	  true,	  2000-06-26 07:43:59.999,	  false	  ]
[ 180,	  2000-06-29,	  "thursday",	  2000-06-27 01:43:59.999,	  true,	  2000-06-27 07:43:59.999,	  false	  ]
[ 181,	  2000-06-30,	  "friday",	  2000-06-28 01:43:59.999,	  true,	  2000-06-28 07:43:59.999,	  false	  ]
[ 182,	  2000-07-01,	  "saturday",	  2000-06-29 01:43:59.999,	  true,	  2000-06-29 07:43:59.999,	  false	  ]
[ 183,	  2000-07-02,	  "sunday",	  2000-06-30 01:43:59.999,	  true,	  2000-06-30 07:43:59.999,	  false	  ]
[ 184,	  2000-07-03,	  "monday",	  2000-07-01 01:43:59.999,	  true,	  2000-07-01 07:43:59.999,	  false	  ]
[ 185,	  2000-07-04,	  "tuesday",	  2000-07-02 01:43:59.999,	  true,	  2000-07-02 07:43:59.999,	  false	  ]
[ 186,	  2000-07-05,	  "wednesday",	  2000-07-03 01:43:59.999,	  true,	  2000-07-03 07:43:59.999,	  false	  ]
[ 187,	  2000-07-06,	  "thursday",	  2000-07-04 01:43:59.999,	  true,	  2000-07-04 07:43:59.999,	  false	  ]
[ 188,	  2000-07-07,	  "friday",	  2000-07-05 01:43:59.999,	  true,	  2000-07-05 07:43:59.999,	  false	  ]
[ 189,	  2000-07-08,	  "saturday",	  2000-07-06 01:43:59.999,	  true,	  2000-07-06 07:43:59.999,	  false	  ]
[ 190,	  2000-07-09,	  "sunday",	  2000-07-07 01:43:59.999,	  true,	  2000-07-07 07:43:59.999,	  false	  ]
[ 191,	  2000-07-10,	  "monday",	  2000-07-08 01:43:59.999,	  true,	  2000-07-08 07:43:59.999,	  false	  ]
[ 192,	  2000-07-11,	  "tuesday",	  2000-07-09 01:43:59.999,	  true,	  2000-07-09 07:43:59.999,	  false	  ]
[ 193,	  2000-07-12,	  "wednesday",	  2000-07-10 01:43:59.999,	  true,	  2000-07-10 07:43:59.999,	  false	  ]
[ 194,	  2000-07-13,	  "thursday",	  2000-07-11 01:43:59.999,	  true,	  2000-07-11 07:43:59.999,	  false	  ]
[ 195,	  2000-07-14,	  "friday",	  2000-07-12 01:43:59.999,	  true,	  2000-07-12 07:43:59.999,	  false	  ]
[ 196,	  2000-07-15,	  "saturday",	  2000-07-13 01:43:59.999,	  true,	  2000-07-13 07:43:59.999,	  false	  ]
[ 197,	  2000-07-16,	  "sunday",	  2000-07-14 01:43:59.999,	  true,	  2000-07-14 07:43:59.999,	  false	  ]
[ 198,	  2000-07-17,	  "monday",	  2000-07-15 01:43:59.999,	  true,	  2000-07-15 07:43:59.999,	  false	  ]
[ 199,	  2000-07-18,	  "tuesday",	  2000-07-16 01:43:59.999,	  true,	  2000-07-16 07:43:59.999,	  false	  ]
[ 200,	  2000-07-19,	  "wednesday",	  2000-07-17 01:43:59.999,	  true,	  2000-07-17 07:43:59.999,	  false	  ]
[ 201,	  2000-07-20,	  "thursday",	  2000-07-18 01:43:59.999,	  true,	  2000-07-18 07:43:59.999,	  false	  ]
[ 202,	  2000-07-21,	  "friday",	  2000-07-19 01:43:59.999,	  true,	  2000-07-19 07:43:59.999,	  false	  ]
[ 203,	  2000-07-22,	  "saturday",	  2000-07-20 01:43:59.999,	  true,	  2000-07-20 07:43:59.999,	  false	  ]
[ 204,	  2000-07-23,	  "sunday",	  2000-07-21 01:43:59.999,	  true,	  2000-07-21 07:43:59.999,	  false	  ]
[ 205,	  2000-07-24,	  "monday",	  2000-07-22 01:43:59.999,	  true,	  2000-07-22 07:43:59.999,	  false	  ]
[ 206,	  2000-07-25,	  "tuesday",	  2000-07-23 01:43:59.999,	  true,	  2000-07-23 07:43:59.999,	  false	  ]
[ 207,	  2000-07-26,	  "wednesday",	  2000-07-24 01:43:59.999,	  true,	  2000-07-24 07:43:59.999,	  false	  ]
[ 208,	  2000-07-27,	  "thursday",	  2000-07-25 01:43:59.999,	  true,	  2000-07-25 07:43:59.999,	  false	  ]
[ 209,	  2000-07-28,	  "friday",	  2000-07-26 01:43:59.999,	  true,	  2000-07-26 07:43:59.999,	  false	  ]
[ 210,	  2000-07-29,	  "saturday",	  2000-07-27 01:43:59.999,	  true,	  2000-07-27 07:43:59.999,	  false	  ]
[ 211,	  2000-07-30,	  "sunday",	  2000-07-28 01:43:59.999,	  true,	  2000-07-28 07:43:59.999,	  false	  ]
[ 212,	  2000-07-31,	  "monday",	  2000-07-29 01:43:59.999,	  true,	  2000-07-29 07:43:59.999,	  false	  ]
[ 213,	  2000-08-01,	  "tuesday",	  2000-07-30 01:43:59.999,	  true,	  2000-07-30 07:43:59.999,	  false	  ]
[ 214,	  2000-08-02,	  "wednesday",	  2000-07-31 01:43:59.999,	  true,	  2000-07-31 07:43:59.999,	  false	  ]
[ 215,	  2000-08-03,	  "thursday",	  2000-08-01 01:43:59.999,	  true,	  2000-08-01 07:43:59.999,	  false	  ]
[ 216,	  2000-08-04,	  "friday",	  2000-08-02 01:43:59.999,	  true,	  2000-08-02 07:43:59.999,	  false	  ]
[ 217,	  2000-08-05,	  "saturday",	  2000-08-03 01:43:59.999,	  true,	  2000-08-03 07:43:59.999,	  false	  ]
[ 218,	  2000-08-06,	  "sunday",	  2000-08-04 01:43:59.999,	  true,	  2000-08-04 07:43:59.999,	  false	  ]
[ 219,	  2000-08-07,	  "monday",	  2000-08-05 01:43:59.999,	  true,	  2000-08-05 07:43:59.999,	  false	  ]
[ 220,	  2000-08-08,	  "tuesday",	  2000-08-06 01:43:59.999,	  true,	  2000-08-06 07:43:59.999,	  false	  ]
[ 221,	  2000-08-09,	  "wednesday",	  2000-08-07 01:43:59.999,	  true,	  2000-08-07 07:43:59.999,	  false	  ]
[ 222,	  2000-08-10,	  "thursday",	  2000-08-08 01:43:59.999,	  true,	  2000-08-08 07:43:59.999,	  false	  ]
[ 223,	  2000-08-11,	  "friday",	  2000-08-09 01:43:59.999,	  true,	  2000-08-09 07:43:59.999,	  false	  ]
[ 224,	  2000-08-12,	  "saturday",	  2000-08-10 01:43:59.999,	  true,	  2000-08-10 07:43:59.999,	  false	  ]
[ 225,	  2000-08-13,	  "sunday",	  2000-08-11 01:43:59.999,	  true,	  2000-08-11 07:43:59.999,	  false	  ]
[ 226,	  2000-08-14,	  "monday",	  2000-08-12 01:43:59.999,	  true,	  2000-08-12 07:43:59.999,	  false	  ]
[ 227,	  2000-08-15,	  "tuesday",	  2000-08-13 01:43:59.999,	  true,	  2000-08-13 07:43:59.999,	  false	  ]
[ 228,	  2000-08-16,	  "wednesday",	  2000-08-14 01:43:59.999,	  true,	  2000-08-14 07:43:59.999,	  false	  ]
[ 229,	  2000-08-17,	  "thursday",	  2000-08-15 01:43:59.999,	  true,	  2000-08-15 07:43:59.999,	  false	  ]
[ 230,	  2000-08-18,	  "friday",	  2000-08-16 01:43:59.999,	  true,	  2000-08-16 07:43:59.999,	  false	  ]
[ 231,	  2000-08-19,	  "saturday",	  2000-08-17 01:43:59.999,	  true,	  2000-08-17 07:43:59.999,	  false	  ]
[ 232,	  2000-08-20,	  "sunday",	  2000-08-18 01:43:59.999,	  true,	  2000-08-18 07:43:59.999,	  false	  ]
[ 233,	  2000-08-21,	  "monday",	  2000-08-19 01:43:59.999,	  true,	  2000-08-19 07:43:59.999,	  false	  ]
[ 234,	  2000-08-22,	  "tuesday",	  2000-08-20 01:43:59.999,	  true,	  2000-08-20 07:43:59.999,	  false	  ]
[ 235,	  2000-08-23,	  "wednesday",	  2000-08-21 01:43:59.999,	  true,	  2000-08-21 07:43:59.999,	  false	  ]
[ 236,	  2000-08-24,	  "thursday",	  2000-08-22 01:43:59.999,	  true,	  2000-08-22 07:43:59.999,	  false	  ]
[ 237,	  2000-08-25,	  "friday",	  2000-08-23 01:43:59.999,	  true,	  2000-08-23 07:43:59.999,	  false	  ]
[ 238,	  2000-08-26,	  "saturday",	  2000-08-24 01:43:59.999,	  true,	  2000-08-24 07:43:59.999,	  false	  ]
[ 239,	  2000-08-27,	  "sunday",	  2000-08-25 01:43:59.999,	  true,	  2000-08-25 07:43:59.999,	  false	  ]
[ 240,	  2000-08-28,	  "monday",	  2000-08-26 01:43:59.999,	  true,	  2000-08-26 07:43:59.999,	  false	  ]
[ 241,	  2000-08-29,	  "tuesday",	  2000-08-27 01:43:59.999,	  true,	  2000-08-27 07:43:59.999,	  false	  ]
[ 242,	  2000-08-30,	  "wednesday",	  2000-08-28 01:43:59.999,	  true,	  2000-08-28 07:43:59.999,	  false	  ]
[ 243,	  2000-08-31,	  "thursday",	  2000-08-29 01:43:59.999,	  true,	  2000-08-29 07:43:59.999,	  false	  ]
[ 244,	  2000-09-01,	  "friday",	  2000-08-30 01:43:59.999,	  true,	  2000-08-30 07:43:59.999,	  false	  ]
[ 245,	  2000-09-02,	  "saturday",	  2000-08-31 01:43:59.999,	  true,	  2000-08-31 07:43:59.999,	  false	  ]
[ 246,	  2000-09-03,	  "sunday",	  2000-09-01 01:43:59.999,	  true,	  2000-09-01 07:43:59.999,	  false	  ]
[ 247,	  2000-09-04,	  "monday",	  2000-09-02 01:43:59.999,	  true,	  2000-09-02 07:43:59.999,	  false	  ]
[ 248,	  2000-09-05,	  "tuesday",	  2000-09-03 01:43:59.999,	  true,	  2000-09-03 07:43:59.999,	  false	  ]
[ 249,	  2000-09-06,	  "wednesday",	  2000-09-04 01:43:59.999,	  true,	  2000-09-04 07:43:59.999,	  false	  ]
[ 250,	  2000-09-07,	  "thursday",	  2000-09-05 01:43:59.999,	  true,	  2000-09-05 07:43:59.999,	  false	  ]
[ 251,	  2000-09-08,	  "friday",	  2000-09-06 01:43:59.999,	  true,	  2000-09-06 07:43:59.999,	  false	  ]
[ 252,	  2000-09-09,	  "saturday",	  2000-09-07 01:43:59.999,	  true,	  2000-09-07 07:43:59.999,	  false	  ]
[ 253,	  2000-09-10,	  "sunday",	  2000-09-08 01:43:59.999,	  true,	  2000-09-08 07:43:59.999,	  false	  ]
[ 254,	  2000-09-11,	  "monday",	  2000-09-09 01:43:59.999,	  true,	  2000-09-09 07:43:59.999,	  false	  ]
[ 255,	  2000-09-12,	  "tuesday",	  2000-09-10 01:43:59.999,	  true,	  2000-09-10 07:43:59.999,	  false	  ]
[ 256,	  2000-09-13,	  "wednesday",	  2000-09-11 01:43:59.999,	  true,	  2000-09-11 07:43:59.999,	  false	  ]
[ 257,	  2000-09-14,	  "thursday",	  2000-09-12 01:43:59.999,	  true,	  2000-09-12 07:43:59.999,	  false	  ]
[ 258,	  2000-09-15,	  "friday",	  2000-09-13 01:43:59.999,	  true,	  2000-09-13 07:43:59.999,	  false	  ]
[ 259,	  2000-09-16,	  "saturday",	  2000-09-14 01:43:59.999,	  true,	  2000-09-14 07:43:59.999,	  false	  ]
[ 260,	  2000-09-17,	  "sunday",	  2000-09-15 01:43:59.999,	  true,	  2000-09-15 07:43:59.999,	  false	  ]
[ 261,	  2000-09-18,	  "monday",	  2000-09-16 01:43:59.999,	  true,	  2000-09-16 07:43:59.999,	  false	  ]
[ 262,	  2000-09-19,	  "tuesday",	  2000-09-17 01:43:59.999,	  true,	  2000-09-17 07:43:59.999,	  false	  ]
[ 263,	  2000-09-20,	  "wednesday",	  2000-09-18 01:43:59.999,	  true,	  2000-09-18 07:43:59.999,	  false	  ]
[ 264,	  2000-09-21,	  "thursday",	  2000-09-19 01:43:59.999,	  true,	  2000-09-19 07:43:59.999,	  false	  ]
[ 265,	  2000-09-22,	  "friday",	  2000-09-20 01:43:59.999,	  true,	  2000-09-20 07:43:59.999,	  false	  ]
[ 266,	  2000-09-23,	  "saturday",	  2000-09-21 01:43:59.999,	  true,	  2000-09-21 07:43:59.999,	  false	  ]
[ 267,	  2000-09-24,	  "sunday",	  2000-09-22 01:43:59.999,	  true,	  2000-09-22 07:43:59.999,	  false	  ]
[ 268,	  2000-09-25,	  "monday",	  2000-09-23 01:43:59.999,	  true,	  2000-09-23 07:43:59.999,	  false	  ]
[ 269,	  2000-09-26,	  "tuesday",	  2000-09-24 01:43:59.999,	  true,	  2000-09-24 07:43:59.999,	  false	  ]
[ 270,	  2000-09-27,	  "wednesday",	  2000-09-25 01:43:59.999,	  true,	  2000-09-25 07:43:59.999,	  false	  ]
[ 271,	  2000-09-28,	  "thursday",	  2000-09-26 01:43:59.999,	  true,	  2000-09-26 07:43:59.999,	  false	  ]
[ 272,	  2000-09-29,	  "friday",	  2000-09-27 01:43:59.999,	  true,	  2000-09-27 07:43:59.999,	  false	  ]
[ 273,	  2000-09-30,	  "saturday",	  2000-09-28 01:43:59.999,	  true,	  2000-09-28 07:43:59.999,	  false	  ]
[ 274,	  2000-10-01,	  "sunday",	  2000-09-29 01:43:59.999,	  true,	  2000-09-29 07:43:59.999,	  false	  ]
[ 275,	  2000-10-02,	  "monday",	  2000-09-30 01:43:59.999,	  true,	  2000-09-30 07:43:59.999,	  false	  ]
[ 276,	  2000-10-03,	  "tuesday",	  2000-10-01 01:43:59.999,	  true,	  2000-10-01 07:43:59.999,	  false	  ]
[ 277,	  2000-10-04,	  "wednesday",	  2000-10-02 01:43:59.999,	  true,	  2000-10-02 07:43:59.999,	  false	  ]
[ 278,	  2000-10-05,	  "thursday",	  2000-10-03 01:43:59.999,	  true,	  2000-10-03 07:43:59.999,	  false	  ]
[ 279,	  2000-10-06,	  "friday",	  2000-10-04 01:43:59.999,	  true,	  2000-10-04 07:43:59.999,	  false	  ]
[ 280,	  2000-10-07,	  "saturday",	  2000-10-05 01:43:59.999,	  true,	  2000-10-05 07:43:59.999,	  false	  ]
[ 281,	  2000-10-08,	  "sunday",	  2000-10-06 01:43:59.999,	  true,	  2000-10-06 07:43:59.999,	  false	  ]
[ 282,	  2000-10-09,	  "monday",	  2000-10-07 01:43:59.999,	  true,	  2000-10-07 07:43:59.999,	  false	  ]
[ 283,	  2000-10-10,	  "tuesday",	  2000-10-08 01:43:59.999,	  true,	  2000-10-08 07:43:59.999,	  false	  ]
[ 284,	  2000-10-11,	  "wednesday",	  2000-10-09 01:43:59.999,	  true,	  2000-10-09 07:43:59.999,	  false	  ]
[ 285,	  2000-10-12,	  "thursday",	  2000-10-10 01:43:59.999,	  true,	  2000-10-10 07:43:59.999,	  false	  ]
[ 286,	  2000-10-13,	  "friday",	  2000-10-11 01:43:59.999,	  true,	  2000-10-11 07:43:59.999,	  false	  ]
[ 287,	  2000-10-14,	  "saturday",	  2000-10-12 01:43:59.999,	  true,	  2000-10-12 07:43:59.999,	  false	  ]
[ 288,	  2000-10-15,	  "sunday",	  2000-10-13 01:43:59.999,	  true,	  2000-10-13 07:43:59.999,	  false	  ]
[ 289,	  2000-10-16,	  "monday",	  2000-10-14 01:43:59.999,	  true,	  2000-10-14 07:43:59.999,	  false	  ]
[ 290,	  2000-10-17,	  "tuesday",	  2000-10-15 01:43:59.999,	  true,	  2000-10-15 07:43:59.999,	  false	  ]
[ 291,	  2000-10-18,	  "wednesday",	  2000-10-16 01:43:59.999,	  true,	  2000-10-16 07:43:59.999,	  false	  ]
[ 292,	  2000-10-19,	  "thursday",	  2000-10-17 01:43:59.999,	  true,	  2000-10-17 07:43:59.999,	  false	  ]
[ 293,	  2000-10-20,	  "friday",	  2000-10-18 01:43:59.999,	  true,	  2000-10-18 07:43:59.999,	  false	  ]
[ 294,	  2000-10-21,	  "saturday",	  2000-10-19 01:43:59.999,	  true,	  2000-10-19 07:43:59.999,	  false	  ]
[ 295,	  2000-10-22,	  "sunday",	  2000-10-20 01:43:59.999,	  true,	  2000-10-20 07:43:59.999,	  false	  ]
[ 296,	  2000-10-23,	  "monday",	  2000-10-21 01:43:59.999,	  true,	  2000-10-21 07:43:59.999,	  false	  ]
[ 297,	  2000-10-24,	  "tuesday",	  2000-10-22 01:43:59.999,	  true,	  2000-10-22 07:43:59.999,	  false	  ]
[ 298,	  2000-10-25,	  "wednesday",	  2000-10-23 01:43:59.999,	  true,	  2000-10-23 07:43:59.999,	  false	  ]
[ 299,	  2000-10-26,	  "thursday",	  2000-10-24 01:43:59.999,	  true,	  2000-10-24 07:43:59.999,	  false	  ]
[ 300,	  2000-10-27,	  "friday",	  2000-10-25 01:43:59.999,	  true,	  2000-10-25 07:43:59.999,	  false	  ]
[ 301,	  2000-10-28,	  "saturday",	  2000-10-26 01:43:59.999,	  true,	  2000-10-26 07:43:59.999,	  false	  ]
[ 302,	  2000-10-29,	  "sunday",	  2000-10-27 02:43:59.999,	  false,  2000-10-27 06:43:59.999,	  true	  ]
[ 303,	  2000-10-30,	  "monday",	  2000-10-28 02:43:59.999,	  false,  2000-10-28 06:43:59.999,	  true	  ]
[ 304,	  2000-10-31,	  "tuesday",	  2000-10-29 02:43:59.999,	  false,  2000-10-29 06:43:59.999,	  true	  ]
[ 305,	  2000-11-01,	  "wednesday",	  2000-10-30 02:43:59.999,	  false,  2000-10-30 06:43:59.999,	  true	  ]
[ 306,	  2000-11-02,	  "thursday",	  2000-10-31 02:43:59.999,	  false,  2000-10-31 06:43:59.999,	  true	  ]
[ 307,	  2000-11-03,	  "friday",	  2000-11-01 02:43:59.999,	  false,  2000-11-01 06:43:59.999,	  true	  ]
[ 308,	  2000-11-04,	  "saturday",	  2000-11-02 02:43:59.999,	  false,  2000-11-02 06:43:59.999,	  true	  ]
[ 309,	  2000-11-05,	  "sunday",	  2000-11-03 02:43:59.999,	  false,  2000-11-03 06:43:59.999,	  true	  ]
[ 310,	  2000-11-06,	  "monday",	  2000-11-04 02:43:59.999,	  false,  2000-11-04 06:43:59.999,	  true	  ]
[ 311,	  2000-11-07,	  "tuesday",	  2000-11-05 02:43:59.999,	  false,  2000-11-05 06:43:59.999,	  true	  ]
[ 312,	  2000-11-08,	  "wednesday",	  2000-11-06 02:43:59.999,	  false,  2000-11-06 06:43:59.999,	  true	  ]
[ 313,	  2000-11-09,	  "thursday",	  2000-11-07 02:43:59.999,	  false,  2000-11-07 06:43:59.999,	  true	  ]
[ 314,	  2000-11-10,	  "friday",	  2000-11-08 02:43:59.999,	  false,  2000-11-08 06:43:59.999,	  true	  ]
[ 315,	  2000-11-11,	  "saturday",	  2000-11-09 02:43:59.999,	  false,  2000-11-09 06:43:59.999,	  true	  ]
[ 316,	  2000-11-12,	  "sunday",	  2000-11-10 02:43:59.999,	  false,  2000-11-10 06:43:59.999,	  true	  ]
[ 317,	  2000-11-13,	  "monday",	  2000-11-11 02:43:59.999,	  false,  2000-11-11 06:43:59.999,	  true	  ]
[ 318,	  2000-11-14,	  "tuesday",	  2000-11-12 02:43:59.999,	  false,  2000-11-12 06:43:59.999,	  true	  ]
[ 319,	  2000-11-15,	  "wednesday",	  2000-11-13 02:43:59.999,	  false,  2000-11-13 06:43:59.999,	  true	  ]
[ 320,	  2000-11-16,	  "thursday",	  2000-11-14 02:43:59.999,	  false,  2000-11-14 06:43:59.999,	  true	  ]
[ 321,	  2000-11-17,	  "friday",	  2000-11-15 02:43:59.999,	  false,  2000-11-15 06:43:59.999,	  true	  ]
[ 322,	  2000-11-18,	  "saturday",	  2000-11-16 02:43:59.999,	  false,  2000-11-16 06:43:59.999,	  true	  ]
[ 323,	  2000-11-19,	  "sunday",	  2000-11-17 02:43:59.999,	  false,  2000-11-17 06:43:59.999,	  true	  ]
[ 324,	  2000-11-20,	  "monday",	  2000-11-18 02:43:59.999,	  false,  2000-11-18 06:43:59.999,	  true	  ]
[ 325,	  2000-11-21,	  "tuesday",	  2000-11-19 02:43:59.999,	  false,  2000-11-19 06:43:59.999,	  true	  ]
[ 326,	  2000-11-22,	  "wednesday",	  2000-11-20 02:43:59.999,	  false,  2000-11-20 06:43:59.999,	  true	  ]
[ 327,	  2000-11-23,	  "thursday",	  2000-11-21 02:43:59.999,	  false,  2000-11-21 06:43:59.999,	  true	  ]
[ 328,	  2000-11-24,	  "friday",	  2000-11-22 02:43:59.999,	  false,  2000-11-22 06:43:59.999,	  true	  ]
[ 329,	  2000-11-25,	  "saturday",	  2000-11-23 02:43:59.999,	  false,  2000-11-23 06:43:59.999,	  true	  ]
[ 330,	  2000-11-26,	  "sunday",	  2000-11-24 02:43:59.999,	  false,  2000-11-24 06:43:59.999,	  true	  ]
[ 331,	  2000-11-27,	  "monday",	  2000-11-25 02:43:59.999,	  false,  2000-11-25 06:43:59.999,	  true	  ]
[ 332,	  2000-11-28,	  "tuesday",	  2000-11-26 02:43:59.999,	  false,  2000-11-26 06:43:59.999,	  true	  ]
[ 333,	  2000-11-29,	  "wednesday",	  2000-11-27 02:43:59.999,	  false,  2000-11-27 06:43:59.999,	  true	  ]
[ 334,	  2000-11-30,	  "thursday",	  2000-11-28 02:43:59.999,	  false,  2000-11-28 06:43:59.999,	  true	  ]
[ 335,	  2000-12-01,	  "friday",	  2000-11-29 02:43:59.999,	  false,  2000-11-29 06:43:59.999,	  true	  ]
[ 336,	  2000-12-02,	  "saturday",	  2000-11-30 02:43:59.999,	  false,  2000-11-30 06:43:59.999,	  true	  ]
[ 337,	  2000-12-03,	  "sunday",	  2000-12-01 02:43:59.999,	  false,  2000-12-01 06:43:59.999,	  true	  ]
[ 338,	  2000-12-04,	  "monday",	  2000-12-02 02:43:59.999,	  false,  2000-12-02 06:43:59.999,	  true	  ]
[ 339,	  2000-12-05,	  "tuesday",	  2000-12-03 02:43:59.999,	  false,  2000-12-03 06:43:59.999,	  true	  ]
[ 340,	  2000-12-06,	  "wednesday",	  2000-12-04 02:43:59.999,	  false,  2000-12-04 06:43:59.999,	  true	  ]
[ 341,	  2000-12-07,	  "thursday",	  2000-12-05 02:43:59.999,	  false,  2000-12-05 06:43:59.999,	  true	  ]
[ 342,	  2000-12-08,	  "friday",	  2000-12-06 02:43:59.999,	  false,  2000-12-06 06:43:59.999,	  true	  ]
[ 343,	  2000-12-09,	  "saturday",	  2000-12-07 02:43:59.999,	  false,  2000-12-07 06:43:59.999,	  true	  ]
[ 344,	  2000-12-10,	  "sunday",	  2000-12-08 02:43:59.999,	  false,  2000-12-08 06:43:59.999,	  true	  ]
[ 345,	  2000-12-11,	  "monday",	  2000-12-09 02:43:59.999,	  false,  2000-12-09 06:43:59.999,	  true	  ]
[ 346,	  2000-12-12,	  "tuesday",	  2000-12-10 02:43:59.999,	  false,  2000-12-10 06:43:59.999,	  true	  ]
[ 347,	  2000-12-13,	  "wednesday",	  2000-12-11 02:43:59.999,	  false,  2000-12-11 06:43:59.999,	  true	  ]
[ 348,	  2000-12-14,	  "thursday",	  2000-12-12 02:43:59.999,	  false,  2000-12-12 06:43:59.999,	  true	  ]
[ 349,	  2000-12-15,	  "friday",	  2000-12-13 02:43:59.999,	  false,  2000-12-13 06:43:59.999,	  true	  ]
[ 350,	  2000-12-16,	  "saturday",	  2000-12-14 02:43:59.999,	  false,  2000-12-14 06:43:59.999,	  true	  ]
[ 351,	  2000-12-17,	  "sunday",	  2000-12-15 02:43:59.999,	  false,  2000-12-15 06:43:59.999,	  true	  ]
[ 352,	  2000-12-18,	  "monday",	  2000-12-16 02:43:59.999,	  false,  2000-12-16 06:43:59.999,	  true	  ]
[ 353,	  2000-12-19,	  "tuesday",	  2000-12-17 02:43:59.999,	  false,  2000-12-17 06:43:59.999,	  true	  ]
[ 354,	  2000-12-20,	  "wednesday",	  2000-12-18 02:43:59.999,	  false,  2000-12-18 06:43:59.999,	  true	  ]
[ 355,	  2000-12-21,	  "thursday",	  2000-12-19 02:43:59.999,	  false,  2000-12-19 06:43:59.999,	  true	  ]
[ 356,	  2000-12-22,	  "friday",	  2000-12-20 02:43:59.999,	  false,  2000-12-20 06:43:59.999,	  true	  ]
[ 357,	  2000-12-23,	  "saturday",	  2000-12-21 02:43:59.999,	  false,  2000-12-21 06:43:59.999,	  true	  ]
[ 358,	  2000-12-24,	  "sunday",	  2000-12-22 02:43:59.999,	  false,  2000-12-22 06:43:59.999,	  true	  ]
[ 359,	  2000-12-25,	  "monday",	  2000-12-23 02:43:59.999,	  false,  2000-12-23 06:43:59.999,	  true	  ]
[ 360,	  2000-12-26,	  "tuesday",	  2000-12-24 02:43:59.999,	  false,  2000-12-24 06:43:59.999,	  true	  ]
[ 361,	  2000-12-27,	  "wednesday",	  2000-12-25 02:43:59.999,	  false,  2000-12-25 06:43:59.999,	  true	  ]
[ 362,	  2000-12-28,	  "thursday",	  2000-12-26 02:43:59.999,	  false,  2000-12-26 06:43:59.999,	  true	  ]
[ 363,	  2000-12-29,	  "friday",	  2000-12-27 02:43:59.999,	  false,  2000-12-27 06:43:59.999,	  true	  ]
[ 364,	  2000-12-30,	  "saturday",	  2000-12-28 02:43:59.999,	  false,  2000-12-28 06:43:59.999,	  true	  ]
[ 365,	  2000-12-31,	  "sunday",	  2000-12-29 02:43:59.999,	  false,  2000-12-29 06:43:59.999,	  true	  ]
[ 366,	  2001-01-01,	  "monday",	  2000-12-30 02:43:59.999,	  false,  2000-12-30 06:43:59.999,	  true	  ]
[ 367,	  2001-01-02,	  "tuesday",	  2000-12-31 02:43:59.999,	  false,  2000-12-31 06:43:59.999,	  true	  ]
[ 368,	  2001-01-03,	  "wednesday",	  2001-01-01 02:43:59.999,	  false,  2001-01-01 06:43:59.999,	  true	  ]
[ 369,	  2001-01-04,	  "thursday",	  2001-01-02 02:43:59.999,	  false,  2001-01-02 06:43:59.999,	  true	  ]
[ 370,	  2001-01-05,	  "friday",	  2001-01-03 02:43:59.999,	  false,  2001-01-03 06:43:59.999,	  true	  ]
[ 371,	  2001-01-06,	  "saturday",	  2001-01-04 02:43:59.999,	  false,  2001-01-04 06:43:59.999,	  true	  ]
[ 372,	  2001-01-07,	  "sunday",	  2001-01-05 02:43:59.999,	  false,  2001-01-05 06:43:59.999,	  true	  ]
[ 373,	  2001-01-08,	  "monday",	  2001-01-06 02:43:59.999,	  false,  2001-01-06 06:43:59.999,	  true	  ]
[ 374,	  2001-01-09,	  "tuesday",	  2001-01-07 02:43:59.999,	  false,  2001-01-07 06:43:59.999,	  true	  ]

# 12:04:51 >  
# 12:04:51 >  Done.
# 12:04:51 >  

