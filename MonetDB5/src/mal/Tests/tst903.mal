# the multiplex code blocks.

t0:= alarm.usec();
b:= bat.new(:void,:lng);
barrier (go,i):= language.newRange(0:lng);
	k:= mmath.rand();
	l:= calc.lng(k);
	bat.insert(b,nil,l);
	redo (go,i):= language.nextElement(1:lng,1000000:lng);
exit (go,i);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#loop %d\n",d0);
#setReadMode(b);
mx:= aggr.max(b); 
#io.printf("max %d",mx);
mi:= aggr.min(b); 
#io.printf(" min %d\n",mi);
t0:= alarm.usec();
c:= algebra.copy(b);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#copy %d",d0);
cnt:= aggr.count(c);
io.printf("#count %d\n",cnt);
t0:= alarm.usec();
z:= algebra.select(b,25:lng,25:lng);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select none %d",d0);
cnt:= aggr.count(z);
io.printf(" count %d\n",cnt);
t0:= alarm.usec();
z2:= algebra.select(b,mi,mx);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select all %d",d0);
cnt:= aggr.count(z2);
io.printf(" count %d\n",cnt);
rng:= mx-mi;
r2:= rng/20;
r3:= mi+r2;
t0:= alarm.usec();
z3:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.05 %d",d0);
cnt:= aggr.count(z3);
io.printf(" count %d\n",cnt);
r2:= rng/10;
r3:= mi+r2;
t0:= alarm.usec();
z4:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.1 %d",d0);
cnt:= aggr.count(z4);
io.printf(" count %d\n",cnt);
r2:= rng/5;
r3:= mi+r2;
t0:= alarm.usec();
z5:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.2 %d",d0);
cnt:= aggr.count(z5);
io.printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z6:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.4 %d",d0);
cnt:= aggr.count(z6);
io.printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z7:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.6 %d",d0);
cnt:= aggr.count(z7);
io.printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z8:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 0.8 %d",d0);
cnt:= aggr.count(z8);
io.printf(" count %d\n",cnt);
r3:= r3+r2;
t0:= alarm.usec();
z9:= algebra.select(b,mi,r3);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#select 1.0 %d",d0);
cnt:= aggr.count(z9);
io.printf(" count %d\n",cnt);
t0:= alarm.usec();
sr:= bat.reverse(b);
s:= algebra.sort(sr);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#head sort %d",d0);
cnt:= aggr.count(s);
io.printf(" count %d\n",cnt);
cnt:= aggr.count(z9);
t0:= alarm.usec();
x:bat[:void,:lng]:= optimizer.multiplex("calc","+",b,c);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#optimizer.multiplex(+) %d\n",d0);
t0:= alarm.usec();
x:= batcalc.+(b,c);
t1:= alarm.usec();
d0:= t1-t0;
io.printf("#batcalc.+() %d\n",d0);
