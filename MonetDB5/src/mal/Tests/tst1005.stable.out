stdout of test 'tst1005` in directory 'src/mal` itself:


# 07:58:53 >  
# 07:58:53 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1005.mal </dev/null
# 07:58:53 >  



# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/fabian/scratch/monetdb/five/program-x86_64/etc/MonetDB5.conf
# dbfarm:/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-five-monetdb-pegasus.ins.cwi.nl/monetdb/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the first of a series of BBP test cases
## make sure you can bind to a BAT through the box
#
#bbp.open();
#b:= new(:int,:int);
#insert(b,1,2);
#setName(b,"myfirstlocalbat");
#c:= bbp.bind("myfirstbat");
#print(c);
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
#bbp.open();
#v:= bbp.take("myfirstbat");
#catch MALException;
#	print(MALException);
#exit MALException;
#print("v");
#print(v);
#x:= bbp.getObjects();
#print("getObjects");
#print(x);
#bbp.close();
##catch MALException;
#	#print(MALException);
##exit MALException;
##print("done");
#
function user.main():void;              #  0 main:void := user.main() {G}
# the first of a series of BBP test cases 
# make sure you can bind to a BAT through the box 
    bbp.open();                         #  3 _3:void := CMDbbpopen() 
    b := bat.new(:int,:int);            #  4 b:bat[:int,:int] := CMDBATnew(_5:int, _5:int) {G}
    bat.insert(b,1,2);                  #  5 _6:bat[:int,:int] := BKCinsert_bun(b:bat[:int,:int], _7:int, _8:int) {G}
    bat.setName(b,"myfirstlocalbat");   #  6 _9:void := BKCsetName(b:bat[:int,:int], _10:str) 
    c := bbp.bind("myfirstbat");        #  7 c:bat[:any,:any] := CMDbbpbind(_12:str) {G}
    io.print(c);                        #  8 _13:void := IOprint_val(c:bat[:any,:any]) 
    bbp.close();                        #  9 _14:void := CMDbbpclose() 
# at the end of the session, the BBP should have discarded 
# the temporary bats of the user 
    bbp.open();                         # 12 _17:void := CMDbbpopen() 
    v := bbp.take("myfirstbat");        # 13 v:bat[:any,:any] := CMDbbptake(_12:str) {G}
catch MALException:str ;                # 14 MALException:str {J16}
    io.printf("%s\n",MALException);     # 15 _20:void := IOprint_formatted_str(_21:str, MALException:str) 
exit MALException:str ;                 # 16 MALException:str 
    io.print("v");                      # 17 _22:void := IOprint_val(_23:str) 
    io.print(v);                        # 18 _24:void := IOprint_val(v:bat[:any,:any]) 
    x := bbp.getObjects();              # 19 x:bat[:int,:str] := CMDbbpGetObjects() {G}
    io.print("getObjects");             # 20 _26:void := IOprint_val(_27:str) 
    io.print(x);                        # 21 _28:void := IOprint_val(x:bat[:int,:str]) 
    bbp.close();                        # 22 _29:void := CMDbbpclose() 
end main;	# 23  
MALException:bbp.bind:failed to locate object in box
[ "v" ]
[ nil ]
[ "getObjects" ]
#-------------------------#
# bbp	objects		  # name
# int	str		  # type
#-------------------------#

# 07:58:53 >  
# 07:58:53 >  Done.
# 07:58:53 >  

