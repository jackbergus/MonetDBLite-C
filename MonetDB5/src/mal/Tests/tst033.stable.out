stdout of test 'tst033` in directory 'src/mal` itself:


# 07:58:41 >  
# 07:58:41 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst033.mal </dev/null
# 07:58:41 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#b:=new(:int,:int);
#insert(b,0,0);
#insert(b,1,1);
#insert(b,2,2);
#insert(b,3,3);
#
#z:= select(b,0,2); print(z);
#z:= betweenCO(b,0,2); print(z);
#z:= betweenOC(b,0,2); print(z);
#z:= betweenOO(b,0,2); print(z);
#
function user.main():void;	# 0  (main:void)
    b := bat.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-(_2:int)(_2:int)
    bat.insert(b,0,0);	# 2 BKCinsert_bun_int_int (_3:void)<-(b:bat[:int,:int])(_4:int)(_4:int)
    bat.insert(b,1,1);	# 3 BKCinsert_bun_int_int (_5:void)<-(b:bat[:int,:int])(_6:int)(_6:int)
    bat.insert(b,2,2);	# 4 BKCinsert_bun_int_int (_7:void)<-(b:bat[:int,:int])(_8:int)(_8:int)
    bat.insert(b,3,3);	# 5 BKCinsert_bun_int_int (_9:void)<-(b:bat[:int,:int])(_10:int)(_10:int)
    z := algebra.select(b,0,2);	# 6 ALGselect (z:bat[:int,:int])<-(b:bat[:int,:int])(_4:int)(_8:int)
    io.print(z);	# 7 IOprint_val (_12:int)<-(z:bat[:int,:int])
    z := algebra.betweenCO(b,0,2);	# 8  (z:bat[:int,:int])<-(b:bat[:int,:int])(_4:int)(_8:int)
    io.print(z);	# 9 IOprint_val (_13:int)<-(z:bat[:int,:int])
    z := algebra.betweenOC(b,0,2);	# 10  (z:bat[:int,:int])<-(b:bat[:int,:int])(_4:int)(_8:int)
    io.print(z);	# 11 IOprint_val (_14:int)<-(z:bat[:int,:int])
    z := algebra.betweenOO(b,0,2);	# 12  (z:bat[:int,:int])<-(b:bat[:int,:int])(_4:int)(_8:int)
    io.print(z);	# 13 IOprint_val (_15:int)<-(z:bat[:int,:int])
end main;	# 14  
#-----------------#
# h	tmp_5	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 1,	  1	  ]
[ 2,	  2	  ]
#-----------------#
# h	tmp_6	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 1,	  1	  ]
#-----------------#
# h	tmp_5	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 2,	  2	  ]
#-----------------#
# h	tmp_7	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]

# 07:58:41 >  
# 07:58:41 >  Done.
# 07:58:41 >  

