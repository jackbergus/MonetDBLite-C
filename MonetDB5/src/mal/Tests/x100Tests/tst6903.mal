# a variant for selection using the x100 module
# the experiment should identify the speed improvement

i:= -1L;
N:= 16000000L;
zero:= uint(0L);
b:= x100.newVector(uint,N);
res:= x100.newVector(uint,N);
barrier v:= nextElement(i,0L,N);
	k:= rand();
	l:= uint(k);
	insert(b,nil,l);
	insert(res,nil,zero);
	redo v;
exit v;
#setReadMode(b);
mx:= x100.max(b); 
mz:= x100.int(mx);
printf("max %d",mz);
mi:= x100.min(b); 
mz:= x100.int(mi);
printf(" min %d\n",mz);
t0:= alarm.usec();
c:= copy(b);
t1:= alarm.usec();
d0:= t1-t0;
printf("copy %d",d0);
cnt:= aggr.count(c);
printf(" count %d\n",cnt);
t0:= alarm.usec();
cst:= uint(25L);
z:= x100.==(res,b,cst,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select one %d\n",d0);
cnt:= count(res);
printf(" count %d\n",cnt);

t0:= alarm.usec();
z:= x100.!=(res,b,cst,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select all %d\n",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
v20:= uint(20);
rn:= x100.-(mx,mi);
r2:= x100./(rn,v20);
r3:= x100.+(mi,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.05 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
v20:= uint(10);
r2:= x100./(rn,v20);
r3:= x100.+(mi,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.1 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
v20:= uint(5);
r2:= x100./(rn,v20);
r3:= x100.+(mi,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.2 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
r3:= x100.+(r3,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.4 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
r3:= x100.+(r3,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.6 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
r3:= x100.+(r3,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 0.8 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
r3:= x100.+(r3,r2);
t0:= alarm.usec();
x100.<(res,b,r3,N);
t1:= alarm.usec();
d0:= t1-t0;
printf("select 1.0 %d",d0);
cnt:= count(res);
printf(" count %d\n",cnt);
t0:= alarm.usec();
sr:= reverse(b);
s:= sort(sr);
t1:= alarm.usec();
d0:= t1-t0;
printf("tail sort %d",d0);
#cnt:= count(s);
#printf(" count %d\n",cnt);
#cnt:= count(z9);
#t0:= alarm.usec();
#x:= multiplex.script("+",b,c);
#t1:= alarm.usec();
#d0:= t1-t0;
#printf("multiplex.script(+) %d\n",d0);
#t0:= alarm.usec();
#x:= multiplex.tactics("+",b,c);
#t1:= alarm.usec();
#d0:= t1-t0;
#printf("multiplex.tactics(+) %d\n",d0);
