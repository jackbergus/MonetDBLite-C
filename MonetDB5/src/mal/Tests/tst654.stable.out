stdout of test 'tst654` in directory 'src/mal` itself:


# 08:01:27 >  
# 08:01:27 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst654.mal </dev/null
# 08:01:27 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## An extensive test for the new tablet layout
#mdb('T');
#tablet.display(2,"strong");
#tablet.display(2,"strong",true);
#first:=1;
#last:= 2;
#tablet.display(first,last);
#
#tablet.setFormat(first,last);
#tablet.setProperties("name,type");
#tablet.setColumnName(0,"Eerste");
##tablet.setRowBracket("|","|");
#
#b1:= new(:void,:int);
#insert(b1,42);
#insert(b1,49);
#b2:= new(:void,:str);
#insert(b2,"hello world");
#insert(b2,"goodbye world");
#
#tablet.setProperties("name,type,dense,sorted,key,min,max");
#tablet.display(b1,b2);
#
#in:= int(nil);
#insert(b1,in);
#insert(b2,sn);
#tablet.setProperties(sn);
#tablet.setColumnDecimal(0,3,1);
#tablet.setColumnNull(1,"unknown");
#tablet.display(b1,b2);
#
#sn := str(nil);
#tablet.setTableBracket("<rowset>","</rowset>");
#tablet.setRowBracket("<row>","</row>");
#tablet.setColumnBracket(0,"<age>","</age>");
#tablet.setColumnBracket(1,"<title>","</title>");
#tablet.page(b1,b2);
#
##leftover typeing
##function someone(i:any...);
##print("good");
##end someone;
##someone(2,"strong");
##someone(2,"strong",true);
##someone(1,2);
##b:= new(void,int);
#
function user.main():void;	# 0  (main:void)
# An extensive test for the new tablet layout 	# 1  (_1:str)
    tablet.display(2,"strong");	# 2 TABdisplayRow (_2:int)<-(_3:int)(_4:str)
    tablet.display(2,"strong",true);	# 3 TABdisplayRow (_5:int)<-(_3:int)(_4:str)(_6:bit)
    first := 1;	# 4  (first:int)<-(_8:int)
    last := 2;	# 5  (last:int)<-(_3:int)
    tablet.display(first,last);	# 6 TABdisplayRow (_10:int)<-(first:int)(last:int)
    tablet.setFormat(first,last);	# 7 TABsetFormat (_11:void)<-(first:int)(last:int)
    tablet.setProperties("name,type");	# 8 TABsetProperties (_12:int)<-(_13:str)
    tablet.setName(0,"Eerste");	# 9 TABsetColumnName (_14:void)<-(_15:int)(_16:str)
#tablet.setRowBracket("|","|"); 	# 10  (_17:str)
    b1 := bat.new(:oid,:int);	# 11 CMDBATnew (b1:bat[:oid,:int])<-(_19:oid)(_20:int)
    bat.append(b1,42);	# 12 BKCappend_val_wrap (_21:void)<-(b1:bat[:oid,:int])(_22:int)
    bat.append(b1,49);	# 13 BKCappend_val_wrap (_23:void)<-(b1:bat[:oid,:int])(_24:int)
    b2 := bat.new(:oid,:str);	# 14 CMDBATnew (b2:bat[:oid,:str])<-(_19:oid)(_26:str)
    bat.append(b2,"hello world");	# 15 BKCappend_val_wrap (_27:void)<-(b2:bat[:oid,:str])(_28:str)
    bat.append(b2,"goodbye world");	# 16 BKCappend_val_wrap (_29:void)<-(b2:bat[:oid,:str])(_30:str)
    tablet.setProperties("name,type,dense,sorted,key,min,max");	# 17 TABsetProperties (_31:int)<-(_32:str)
    tablet.display(b1,b2);	# 18 TABdisplayTable (_33:int)<-(b1:bat[:oid,:int])(b2:bat[:oid,:str])
    in := calc.int(nil:void);	# 19 CALCnil2int (in:int)<-(_35:void)
    sn := calc.str(nil:void);	# 20 CALCnil2str (sn:str)<-(_35:void)
    bat.append(b1,in);	# 21 BKCappend_val_wrap (_37:void)<-(b1:bat[:oid,:int])(in:int)
    bat.append(b2,sn);	# 22 BKCappend_val_wrap (_38:void)<-(b2:bat[:oid,:str])(sn:str)
    tablet.setProperties(sn);	# 23 TABsetProperties (_39:int)<-(sn:str)
    tablet.setDecimal(0,3,1);	# 24 TABsetColumnDecimal (_40:void)<-(_15:int)(_41:int)(_8:int)
    tablet.setNull(1,"unknown");	# 25 TABsetColumnNull (_42:void)<-(_8:int)(_43:str)
    tablet.display(b1,b2);	# 26 TABdisplayTable (_44:int)<-(b1:bat[:oid,:int])(b2:bat[:oid,:str])
    tablet.setTableBracket("<rowset>","</rowset>");	# 27 TABsetTableBracket (_45:void)<-(_46:str)(_47:str)
    tablet.setRowBracket("<row>","</row>");	# 28 TABsetRowBracket (_48:void)<-(_49:str)(_50:str)
    tablet.setBracket(0,"<age>","</age>");	# 29 TABsetColumnBracket (_51:void)<-(_52:int)(_53:str)(_54:str)
    tablet.setBracket(1,"<title>","</title>");	# 30 TABsetColumnBracket (_55:void)<-(_56:int)(_57:str)(_58:str)
    tablet.page(b1,b2);	# 31 TABpage (_59:int)<-(b1:bat[:oid,:int])(b2:bat[:oid,:str])
#leftover typeing 	# 32  (_60:str)
#function someone(i:any...); 	# 33  (_61:str)
#print("good"); 	# 34  (_62:str)
#end someone; 	# 35  (_63:str)
#someone(2,"strong"); 	# 36  (_64:str)
#someone(2,"strong",true); 	# 37  (_65:str)
#someone(1,2); 	# 38  (_66:str)
#b:= new(void,int); 	# 39  (_67:str)
end main;	# 40  
#-----------------------#
# _4,	_5		# name
#-----------------------#
[ 2,	"strong"	]
#-----------------------#
#-------------------------------#
# _4,	_5,		_7	# name
#-------------------------------#
[ 2,	"strong",	true	]
#-------------------------------#
#-----------------------#
# first,	last	# name
#-----------------------#
[ 1,		2	]
#-----------------------#
#---------------------------------------#
# tmp_15,	tmp_16			# name
# int,		str			# type
# false,	false			# dense
# true,		false			# sorted
# true,		false			# key
# 42,					# min
# 49,					# max
#---------------------------------------#
[ 42,		"hello world"		]
[ 49,		"goodbye world"		]
#---------------------------------------#
#---------------------------------------#
# tmp_15,	tmp_16			# name
#---------------------------------------#
[  4.2,		"hello world"		]
[  4.9,		"goodbye world"		]
[  nil,		unknown			]
#---------------------------------------#
<rowset><row><age> 4.2</age>	<title>"hello world"</title>		</row>
<row><age> 4.9</age>	<title>"goodbye world"</title>		</row>
<row><age> nil</age>	<title>unknown</title>			</row>
</rowset>

# 08:01:27 >  
# 08:01:27 >  Done.
# 08:01:27 >  

