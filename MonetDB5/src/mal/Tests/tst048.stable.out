stdout of test 'tst048` in directory 'src/mal` itself:


# 16:38:21 >  
# 16:38:21 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=33878 --set sql_port=44403 --set xquery_port=50458 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst048.mal </dev/null
# 16:38:21 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#a := bbp.new(:oid,:int);
#bat.insert(a, 0@0, 0);
#bat.insert(a, 1@0, 1);
#bat.insert(a, 2@0, 2);
#
#io.print(a);
#
#b := bbp.new(:oid,:flt);
#bat.insert(b, 0@0, 0.3);
#bat.insert(b, 1@0, 1.4);
#bat.insert(b, 2@0, 2.5);
#
#io.print(b);
#
### c should be of type [:oid, :flt], but it was printed as [:oid, :int]
#c := batcalc.init(a, 2.1);
#io.print(c);
#
#e:= batcalc.init(b,2.5);
#io.print(e);
#d:= batcalc.init(a,3);
#io.print(d);
#
function user.main():void;              #  0 main:void := user.main() {G}
    a := bat.new(:oid,:int);            #  1 a:bat[:oid,:int] := CMDBATnew(_2:oid, _3:int) {G}
    bat.insert(a,0@0,0);                #  2 _4:bat[:oid,:int] := BKCinsert_bun(a:bat[:oid,:int], _5:oid, _6:int) {G}
    bat.insert(a,1@0,1);                #  3 _7:bat[:oid,:int] := BKCinsert_bun(a:bat[:oid,:int], _8:oid, _9:int) {G}
    bat.insert(a,2@0,2);                #  4 _10:bat[:oid,:int] := BKCinsert_bun(a:bat[:oid,:int], _11:oid, _12:int) {G}
    io.print(a);                        #  5 _13:void := IOprint_val(a:bat[:oid,:int]) 
    b := bat.new(:oid,:flt);            #  6 b:bat[:oid,:flt] := CMDBATnew(_2:oid, _15:flt) {G}
    bat.insert(b,0@0,0.300000012);      #  7 _16:bat[:oid,:flt] := BKCinsert_bun(b:bat[:oid,:flt], _5:oid, _17:flt) {G}
    bat.insert(b,1@0,1.39999998);       #  8 _18:bat[:oid,:flt] := BKCinsert_bun(b:bat[:oid,:flt], _8:oid, _19:flt) {G}
    bat.insert(b,2@0,2.5);              #  9 _20:bat[:oid,:flt] := BKCinsert_bun(b:bat[:oid,:flt], _11:oid, _21:flt) {G}
    io.print(b);                        # 10 _22:void := IOprint_val(b:bat[:oid,:flt]) 
## c should be of type [:oid, :flt], but it was printed as [:oid, :int] 
    c := algebra.project(a,2.0999999);  # 12 c:bat[:oid,:flt] := ALGprojectCst(a:bat[:oid,:int], _25:flt) {G}
    io.print(c);                        # 13 _26:void := IOprint_val(c:bat[:oid,:flt]) 
    e := algebra.project(b,2.5);        # 14 e:bat[:oid,:flt] := ALGprojectCst(b:bat[:oid,:flt], _21:flt) {G}
    io.print(e);                        # 15 _28:void := IOprint_val(e:bat[:oid,:flt]) 
    d := algebra.project(a,3);          # 16 d:bat[:oid,:int] := ALGprojectCst(a:bat[:oid,:int], _30:int) {G}
    io.print(d);                        # 17 _31:void := IOprint_val(d:bat[:oid,:int]) 
end main;	# 18  
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
#-------------------------#
# h	t		  # name
# oid	flt		  # type
#-------------------------#
[ 0@0,	  0.300000012	  ]
[ 1@0,	  1.39999998	  ]
[ 2@0,	  2.5		  ]
#-------------------------#
# h	t		  # name
# void	flt		  # type
#-------------------------#
[ 0@0,	  2.0999999	  ]
[ 1@0,	  2.0999999	  ]
[ 2@0,	  2.0999999	  ]
#-----------------#
# h	t	  # name
# void	flt	  # type
#-----------------#
[ 0@0,	  2.5	  ]
[ 1@0,	  2.5	  ]
[ 2@0,	  2.5	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  3	  ]
[ 1@0,	  3	  ]
[ 2@0,	  3	  ]

# 16:38:21 >  
# 16:38:21 >  Done.
# 16:38:21 >  

