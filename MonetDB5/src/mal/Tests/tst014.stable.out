stdout of test 'tst014` in directory 'src/mal` itself:


# 07:58:37 >  
# 07:58:37 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst014.mal </dev/null
# 07:58:37 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## conditionally redo a block
#	i:=1;
#barrier b:= ==(i,1);
#	i:= i+1;
#	print(i);
#	redo b:= <(i,3);
#exit 	b;
#
function user.main():void;	# 0  (main:void)
# conditionally redo a block 	# 1  (_1:str)
    i := 1;	# 2  (i:int)<-(_3:int)
barrier b := calc.==(i,1);	# 3 CALCcompEQintint (b:bit)<-(i:int)(_3:int) jump 7
    i := calc.+(i,1);	# 4 CALCbinaryADDintint (i:int)<-(i:int)(_3:int)
    io.print(i);	# 5 IOprint_val (_5:void)<-(i:int)
    redo b := calc.<(i,3);	# 6 CALCcompLTintint (b:bit)<-(i:int)(_6:int) jump 4
exit b;	# 7  (b:bit)
end main;	# 8  
[ 2 ]
[ 3 ]

# 07:58:37 >  
# 07:58:37 >  Done.
# 07:58:37 >  

