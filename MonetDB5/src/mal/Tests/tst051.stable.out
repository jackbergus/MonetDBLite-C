stdout of test 'tst051` in directory 'src/mal` itself:


# 22:29:41 >  
# 22:29:41 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=34113 --set sql_port=49714 --set xquery_port=50869 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst051.mal < /dev/null
# 22:29:41 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing string stuff
#s:= "hello world";
#
#t:= str.string(s,0,2);	io.print(t);
#t:= str.string(s,-4,2);	io.print(t);
#t:= str.string(s,0,15);	io.print(t);
#t:= str.string(nil:str,0,15);	io.print(t);
#
#t:= str.string(s,5);	io.print(t);
#t:= str.prefix(s,4);	io.print(t);
#t:= str.suffix(s,4);	io.print(t);
#
#i:= str.locate(s,"hello"); io.print(i);
#i:= str.locate(s,"xyz"); io.print(i);
#i:= str.locate(s,nil:str); io.print(i);
#i:= str.locate(nil:str,"hello"); io.print(i);
#i:= str.locate(nil:str,"xyz"); io.print(i);
#i:= str.locate(nil:str,nil:str); io.print(i);
#
#t:= str.repeat("abc",3);	io.print(t);
#t:= str.repeat(nil:str,3);	io.print(t);
#
#t:= str.insert("hello world",5,1,"brave new "); io.print(t);
#t:= str.insert("",5,1,"brave new "); io.print(t);
#t:= str.insert(nil:str,5,1,"brave new "); io.print(t);
#t:= str.insert("",5,1,"brave new "); io.print(t);
#t:= str.insert("",0,1,"brave new "); io.print(t);
#t:= str.insert("hello world",5,1,""); io.print(t);
#t:= str.insert("hello world",5,1,nil:str); io.print(t);
#
#t:= str.replace("hello world","world","brave new world"); io.print(t);
#
#
function user.main():void;              #  0 main:void := user.main() {G}
# testing string stuff 
    s := "hello world";                 #  2 s:str := _3:str {G}
    t := str.string(s,0,2);             #  3 t:str := STRSubString(s:str, _5:int, _6:int) {G}
    io.print(t);                        #  4 _7:void := IOprint_val(t:str) 
    t := str.string(s,-4,2);            #  5 t:str := STRSubString(s:str, _8:int, _6:int) {G}
    io.print(t);                        #  6 _9:void := IOprint_val(t:str) 
    t := str.string(s,0,15);            #  7 t:str := STRSubString(s:str, _5:int, _10:int) {G}
    io.print(t);                        #  8 _11:void := IOprint_val(t:str) 
    t := str.string(nil:str,0,15);      #  9 t:str := STRSubString(_12:str, _5:int, _10:int) {G}
    io.print(t);                        # 10 _13:void := IOprint_val(t:str) 
    t := str.string(s,5);               # 11 t:str := STRTail(s:str, _14:int) {G}
    io.print(t);                        # 12 _15:void := IOprint_val(t:str) 
    t := str.prefix(s,4);               # 13 t:str := STRprefix(s:str, _16:int) {G}
    io.print(t);                        # 14 _17:void := IOprint_val(t:str) 
    t := str.suffix(s,4);               # 15 t:str := STRsuffix(s:str, _16:int) {G}
    io.print(t);                        # 16 _18:void := IOprint_val(t:str) 
    i := str.locate(s,"hello");         # 17 i:int := STRlocate(s:str, _20:str) 
    io.print(i);                        # 18 _21:void := IOprint_val(i:int) 
    i := str.locate(s,"xyz");           # 19 i:int := STRlocate(s:str, _22:str) 
    io.print(i);                        # 20 _23:void := IOprint_val(i:int) 
    i := str.locate(s,nil:str);         # 21 i:int := STRlocate(s:str, _12:str) 
    io.print(i);                        # 22 _24:void := IOprint_val(i:int) 
    i := str.locate(nil:str,"hello");   # 23 i:int := STRlocate(_12:str, _20:str) 
    io.print(i);                        # 24 _25:void := IOprint_val(i:int) 
    i := str.locate(nil:str,"xyz");     # 25 i:int := STRlocate(_12:str, _22:str) 
    io.print(i);                        # 26 _26:void := IOprint_val(i:int) 
    i := str.locate(nil:str,nil:str);   # 27 i:int := STRlocate(_12:str, _12:str) 
    io.print(i);                        # 28 _27:void := IOprint_val(i:int) 
    t := str.repeat("abc",3);           # 29 t:str := STRrepeat(_28:str, _29:int) {G}
    io.print(t);                        # 30 _30:void := IOprint_val(t:str) 
    t := str.repeat(nil:str,3);         # 31 t:str := STRrepeat(_12:str, _29:int) {G}
    io.print(t);                        # 32 _31:void := IOprint_val(t:str) 
    t := str.insert("hello world",5,1,"brave new ");# 33 t:str := STRinsert(_3:str, _14:int, _32:int, _33:str) {G}
    io.print(t);                        # 34 _34:void := IOprint_val(t:str) 
    t := str.insert("",5,1,"brave new ");# 35 t:str := STRinsert(_35:str, _14:int, _32:int, _33:str) {G}
    io.print(t);                        # 36 _36:void := IOprint_val(t:str) 
    t := str.insert(nil:str,5,1,"brave new ");# 37 t:str := STRinsert(_12:str, _14:int, _32:int, _33:str) {G}
    io.print(t);                        # 38 _37:void := IOprint_val(t:str) 
    t := str.insert("",5,1,"brave new ");# 39 t:str := STRinsert(_35:str, _14:int, _32:int, _33:str) {G}
    io.print(t);                        # 40 _38:void := IOprint_val(t:str) 
    t := str.insert("",0,1,"brave new ");# 41 t:str := STRinsert(_35:str, _39:int, _32:int, _33:str) {G}
    io.print(t);                        # 42 _40:void := IOprint_val(t:str) 
    t := str.insert("hello world",5,1,"");# 43 t:str := STRinsert(_41:str, _14:int, _32:int, _35:str) {G}
    io.print(t);                        # 44 _42:void := IOprint_val(t:str) 
    t := str.insert("hello world",5,1,nil:str);# 45 t:str := STRinsert(_41:str, _14:int, _32:int, _12:str) {G}
    io.print(t);                        # 46 _43:void := IOprint_val(t:str) 
    t := str.replace("hello world","world","brave new world");# 47 t:str := STRreplace(_41:str, _44:str, _45:str) {G}
    io.print(t);                        # 48 _46:void := IOprint_val(t:str) 
end main;	# 49  
[ "he" ]
[ "or" ]
[ "hello world" ]
[ nil ]
[ " world" ]
[ "hell" ]
[ "orld" ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ "abcabcabc" ]
[ nil ]
[ "hellobrave new world" ]
[ "brave new " ]
[ nil ]
[ "brave new " ]
[ "brave new " ]
[ "helloworld" ]
[ nil ]
[ "hello brave new world" ]

# 22:29:41 >  
# 22:29:41 >  Done.
# 22:29:41 >  

