stdout of test 'tst850` in directory 'src/mal` itself:


# 14:43:54 >  
# 14:43:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=44824 --set sql_port=57958 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst850.mal </dev/null
# 14:43:54 >  

# Monet Database Server V4.5.0
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## The likeselect operation
#
#	t:= new(:int,:str);
#	insert(t,1,"hello world");
#	insert(t,2,"sleep well");
#
#	b:= multiplex.script("startsWith",t,"");
#	print(b);
#
function user.main():void;              #  0 main:void := user.main() {G}
# The likeselect operation 
    t := bat.new(:oid,:str);            #  2 t:bat[:oid,:str] := CMDBATnew(_3:oid, _4:str) {G}
    bat.append(t,"hello world");        #  3 _5:bat[:str,:any] := BKCappend_val_wrap(t:bat[:oid,:str], _6:str) {G}
    bat.append(t,"sleep well");         #  4 _7:bat[:str,:any] := BKCappend_val_wrap(t:bat[:oid,:str], _8:str) {G}
    io.print(t);                        #  5 _9:void := IOprint_val(t:bat[:oid,:str]) 
    _15 := bat.new(nil:oid,nil:bit);    #  6 _15:bat[:oid,:bit] := CMDBATnew(_16:oid, _17:bit) {G}
barrier (_19,_20,_21):= bat.newIterator(t);#  7 (_19:lng, _20:oid, _21:str) := CHPbunIterator(t:bat[:oid,:str]) {GJ11}
    _23 := str.startsWith(_21,"");      #  8 _23:bit := STRPrefix(_21:str, _13:str) 
    bat.insert(_15,_20,_23);            #  9 _24:bat[:oid,:bit] := BKCinsert_bun(_15:bat[:oid,:bit], _20:oid, _23:bit) {G}
    redo (_19,_20,_21):= bat.hasMoreElements(t);# 10 (_19:lng, _20:oid, _21:str) := CHPbunHasMoreElements(t:bat[:oid,:str]) {GJ8}
exit (_19,_20,_21);                     # 11 (_19:lng, _20:oid, _21:str) 
    b:bat[:oid,:bit]  := _15;           # 12 b:bat[:oid,:bit] := _15:bat[:oid,:bit] {G}
    io.print(b);                        # 13 _14:void := IOprint_val(b:bat[:oid,:bit]) 
end main;                               # 14  
#-------------------------#
# h	tmp_13		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello world"	  ]
[ 1@0,	  "sleep well"	  ]
#-----------------#
# h	tmp_5	  # name
# int	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]

# 14:43:54 >  
# 14:43:54 >  Done.
# 14:43:54 >  

