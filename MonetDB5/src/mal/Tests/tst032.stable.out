stdout of test 'tst032` in directory 'src/mal` itself:


# 22:30:08 >  
# 22:30:08 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=37869 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst032.mal < /dev/null
# 22:30:08 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing the void semantics
#b:= bat.new(:void,:int);
#bat.insert(b,nil,0);
#bat.insert(b,nil,1);
#bat.insert(b,nil,2);
#io.print(b);
#k:= 1@0;
#bat.replace(b,k,3);
#io.print(b);
#bat.delete(b,k);
#io.print(b);
#
#
function user.main():void;              #  0 main:void := user.main() {G}
# testing the void semantics 
    b := bat.new(:oid,:int);            #  2 b:bat[:oid,:int] := CMDBATnew(_3:oid, _4:int) {G}
    bat.insert(b,nil:oid,0);            #  3 _5:bat[:oid,:int] := BKCinsert_bun(b:bat[:oid,:int], _6:oid, _7:int) {G}
    bat.insert(b,nil:oid,1);            #  4 _8:bat[:oid,:int] := BKCinsert_bun(b:bat[:oid,:int], _6:oid, _9:int) {G}
    bat.insert(b,nil:oid,2);            #  5 _10:bat[:oid,:int] := BKCinsert_bun(b:bat[:oid,:int], _6:oid, _11:int) {G}
    io.print(b);                        #  6 _12:void := IOprint_val(b:bat[:oid,:int]) 
    k := 1@0;                           #  7 k:oid := _14:oid 
    bat.replace(b,k,3);                 #  8 _15:bat[:oid,:int] := BKCreplace_bun(b:bat[:oid,:int], k:oid, _16:int) {G}
    io.print(b);                        #  9 _17:void := IOprint_val(b:bat[:oid,:int]) 
    bat.delete(b,k);                    # 10 _18:bat[:oid,:int] := BKCdelete(b:bat[:oid,:int], k:oid) {G}
    io.print(b);                        # 11 _19:void := IOprint_val(b:bat[:oid,:int]) 
end main;	# 12  
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ nil,	  0	  ]
[ nil,	  1	  ]
[ nil,	  2	  ]

# 22:30:08 >  
# 22:30:08 >  Done.
# 22:30:08 >  

