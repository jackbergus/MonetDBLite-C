stdout of test 'tst2030` in directory 'src/mal` itself:


# 07:59:48 >  
# 07:59:48 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst2030.mal </dev/null
# 07:59:48 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##The 2000 serie  is focussed on parallelism
#
#function clkticks(n:int):void;
#barrier	b:= n>0;
#	printf("#clock tick %d\n",n);
#	alarm.sleep(5);
#	n:= n-1;
#	redo b:=n>0;
#exit	b;
#end clkticks;
function user.clkticks(n:int):void;	# 0  (clkticks:void)<-(n:int)
barrier b := calc.>(n,0);	# 1 CALCcompGTintint (b:bit)<-(n:int)(_3:int) jump 6
    io.printf("#clock tick %d\n",n);	# 2 IOprint_formatted_int (_4:int)<-(_5:str)(n:int)
    alarm.sleep(5);	# 3 ALARMsleep (_6:void)<-(_7:int)
    n := calc.-(n,1);	# 4 CALCbinarySUBintint (n:int)<-(n:int)(_8:int)
    redo b := calc.>(n,0);	# 5 CALCcompGTintint (b:bit)<-(n:int)(_3:int) jump 2
exit b;	# 6  (b:bit)
end clkticks;	# 7  
#
#thread 	hdl:=0;	# synchronize through a boolean
#	clkticks(2);
#exit	hdl;
#printf("#Main thread\n");
#printf("#Wait for child to exit\n");
#
function user.main():int;	# 0  (main:int)
#The 2000 serie  is focussed on parallelism 	# 1  (_2:str)
thread hdl := 0;	# 2  (hdl:int)<-(_4:int) jump 5
# synchronize through a boolean 	# 3  (_6:str)
    user.clkticks(2);	# 4  (_7:void)<-(_8:int)
exit hdl;	# 5  (hdl:int)
    io.printf("#Main thread\n");	# 6 IOprint_str (_9:int)<-(_10:str)
    io.printf("#Wait for child to exit\n");	# 7 IOprint_str (_11:int)<-(_12:str)
end main;	# 8  
#Main thread
#Wait for child to exit
#clock tick 2
#clock tick 1

# 08:00:00 >  
# 08:00:00 >  Done.
# 08:00:00 >  

