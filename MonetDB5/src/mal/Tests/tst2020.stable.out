stdout of test 'tst2020` in directory 'src/mal` itself:


# 07:59:38 >  
# 07:59:38 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst2020.mal </dev/null
# 07:59:38 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## simple parallel with control flow
#
#thread b1:=0;
#	printf("#start thread\n");
#barrier yy;
#	print("leave barrier");
#	leave yy;
#	redo yy;	
#exit	yy;
#	printf("#finish thread\n");
#	printf("#finish thread2\n");
#exit b1;
#	alarm.sleep(10);
#	printf("#end of program, wait for child\n");
#
function user.main():void;	# 0  (main:void)
# simple parallel with control flow 	# 1  (_1:str)
thread b1 := 0;	# 2  (b1:int)<-(_3:int) jump 11
    io.printf("#start thread\n");	# 3 IOprint_str (_4:int)<-(_5:str)
barrier yy;	# 4  (yy:any) jump 8
    io.print("leave barrier");	# 5 IOprint_val (_7:int)<-(_8:str)
    leave yy;	# 6  (yy:any) jump 8
    redo yy;	# 7  (yy:any) jump 5
exit yy;	# 8  (yy:any)
    io.printf("#finish thread\n");	# 9 IOprint_str (_9:int)<-(_10:str)
    io.printf("#finish thread2\n");	# 10 IOprint_str (_11:int)<-(_12:str)
exit b1;	# 11  (b1:int)
    alarm.sleep(5);	# 12 ALARMsleep (_13:void)<-(_14:int)
    io.printf("#end of program, wait for child\n");	# 13 IOprint_str (_15:int)<-(_16:str)
end main;	# 14  
#start thread
[ "leave barrier" ]
#finish thread
#finish thread2
#end of program, wait for child

# 07:59:48 >  
# 07:59:48 >  Done.
# 07:59:48 >  

