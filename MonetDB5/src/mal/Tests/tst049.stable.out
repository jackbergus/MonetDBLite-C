stdout of test 'tst049` in directory 'src/mal` itself:


# 09:04:59 >  
# 09:04:59 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=37375 --set sql_port=44387 --set xquery_port=52599 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst049.mal < /dev/null
# 09:04:59 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#b:= bat.new(:int,:str);
#bat.insert(b,1,"");
#bat.insert(b,2,"t");
#bat.insert(b,3,"ts");
#bat.insert(b,4,"tsz");
#bat.insert(b,5,"a math assignment");
#bat.insert(b,6,"pathfined is fun!");
#bat.insert(b,7,"123123123");
#bat.insert(b,8,"123123456123");
#bat.insert(b,9,"199993456123");
#bat.insert(b,10,"123456123456");
#bat.insert(b,11,"123454321");
#io.print(b);
#
#i:= str.like("hello","hello");
#io.print(i);
#i:= str.like("hello","hell");
#io.print(i);
#i:= str.like("hello","h_llo");
#io.print(i);
#i:= str.like("hello","%llo");
#io.print(i);
#i:= str.like("hello","%___");
#io.print(i);
#i:= str.like("hello","hxllo");
#io.print(i);
#
#i:= str.like("tr","t_");
#io.print(i);
#i:= str.like("trx","t_");
#io.print(i);
#
#z:= batstr.like(b,"t_");
#io.print(z);
#z:= batstr.like(b,"%math%");
#io.print(z);
#z:= batstr.like(b,"%m_th_a%t");
#io.print(z);
#z:= batstr.like(b,"%at%_!");
#io.print(z);
#
#z:= batstr.like(b,"1%");
#io.print(z);
#z:= batstr.like(b,"3%");
#io.print(z);
#z:= batstr.like(b,"%1");
#io.print(z);
#z:= batstr.like(b,"%3");
#io.print(z);
#
#z:= batstr.like(b,"%1%");
#io.print(z);
#z:= batstr.like(b,"%12%");
#io.print(z);
#z:= batstr.like(b,"%13%");
#io.print(z);
#z:= batstr.like(b,"%454%");
#io.print(z);
#
#z:= batstr.like(b,"%2%2%");
#io.print(z);
#z:= batstr.like(b,"_2_3%123");
#io.print(z);
#z:= batstr.like(b,"_123%3");
#io.print(z);
#z:= batstr.like(b,"%1_3456%");
#io.print(z);
#z:= batstr.like(b,"_3456%");
#io.print(z);
#z:= batstr.like(b,"%23");
#io.print(z);
#z:= batstr.like(b,"%","?");
#io.print(z);
#z:= batstr.like(b,"?%","?");
#io.print(z);
#z:= batstr.like(b,".%",".");
#io.print(z);
#
#z:= batstr.like(b,"tt","t");
#io.print(z);
#
function user.main():void;              #  0 main:void {G}
    b := bat.new(:oid,:str);            #  1 b:bat[:oid,:str] := CMDBATnew(_2:oid, _3:str) {G}
    bat.insert(b,1@0,"");               #  2 _4:void := BKCinsert_bun(b:bat[:oid,:str], _5:oid, _6:str) 
    bat.insert(b,2@0,"t");              #  3 _7:void := BKCinsert_bun(b:bat[:oid,:str], _8:oid, _9:str) 
    bat.insert(b,3@0,"ts");             #  4 _10:void := BKCinsert_bun(b:bat[:oid,:str], _11:oid, _12:str) 
    bat.insert(b,4@0,"tsz");            #  5 _13:void := BKCinsert_bun(b:bat[:oid,:str], _14:oid, _15:str) 
    bat.insert(b,5@0,"a math assignment");#  6 _16:void := BKCinsert_bun(b:bat[:oid,:str], _17:oid, _18:str) 
    bat.insert(b,6@0,"pathfined is fun!");#  7 _19:void := BKCinsert_bun(b:bat[:oid,:str], _20:oid, _21:str) 
    bat.insert(b,7@0,"123123123");      #  8 _22:void := BKCinsert_bun(b:bat[:oid,:str], _23:oid, _24:str) 
    bat.insert(b,8@0,"123123456123");   #  9 _25:void := BKCinsert_bun(b:bat[:oid,:str], _26:oid, _27:str) 
    bat.insert(b,9@0,"199993456123");   # 10 _28:void := BKCinsert_bun(b:bat[:oid,:str], _29:oid, _30:str) 
    bat.insert(b,10@0,"123456123456");  # 11 _31:void := BKCinsert_bun(b:bat[:oid,:str], _32:oid, _33:str) 
    bat.insert(b,11@0,"123454321");     # 12 _34:void := BKCinsert_bun(b:bat[:oid,:str], _35:oid, _36:str) 
    io.print(b);                        # 13 _37:void := IOprint_val(b:bat[:oid,:str]) 
    i := str.like("hello","hello");     # 14 i:bit := PCRElike2(_39:str, _39:str) 
    io.print(i);                        # 15 _40:void := IOprint_val(i:bit) 
    i := str.like("hello","hell");      # 16 i:bit := PCRElike2(_39:str, _41:str) 
    io.print(i);                        # 17 _42:void := IOprint_val(i:bit) 
    i := str.like("hello","h_llo");     # 18 i:bit := PCRElike2(_39:str, _43:str) 
    io.print(i);                        # 19 _44:void := IOprint_val(i:bit) 
    i := str.like("hello","%llo");      # 20 i:bit := PCRElike2(_39:str, _45:str) 
    io.print(i);                        # 21 _46:void := IOprint_val(i:bit) 
    i := str.like("hello","%___");      # 22 i:bit := PCRElike2(_39:str, _47:str) 
    io.print(i);                        # 23 _48:void := IOprint_val(i:bit) 
    i := str.like("hello","hxllo");     # 24 i:bit := PCRElike2(_39:str, _49:str) 
    io.print(i);                        # 25 _50:void := IOprint_val(i:bit) 
    i := str.like("tr","t_");           # 26 i:bit := PCRElike2(_51:str, _52:str) 
    io.print(i);                        # 27 _53:void := IOprint_val(i:bit) 
    i := str.like("trx","t_");          # 28 i:bit := PCRElike2(_54:str, _52:str) 
    io.print(i);                        # 29 _55:void := IOprint_val(i:bit) 
    z := batstr.like_uselect(b,"t_");   # 30 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _52:str) {G}
    io.print(z);                        # 31 _57:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%math%");# 32 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _58:str) {G}
    io.print(z);                        # 33 _59:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%m_th_a%t");# 34 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _60:str) {G}
    io.print(z);                        # 35 _61:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%at%_!");# 36 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _62:str) {G}
    io.print(z);                        # 37 _63:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"1%");   # 38 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _64:str) {G}
    io.print(z);                        # 39 _65:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"3%");   # 40 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _66:str) {G}
    io.print(z);                        # 41 _67:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%1");   # 42 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _68:str) {G}
    io.print(z);                        # 43 _69:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%3");   # 44 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _70:str) {G}
    io.print(z);                        # 45 _71:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%1%");  # 46 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _72:str) {G}
    io.print(z);                        # 47 _73:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%12%"); # 48 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _74:str) {G}
    io.print(z);                        # 49 _75:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%13%"); # 50 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _76:str) {G}
    io.print(z);                        # 51 _77:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%454%");# 52 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _78:str) {G}
    io.print(z);                        # 53 _79:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%2%2%");# 54 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _80:str) {G}
    io.print(z);                        # 55 _81:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"_2_3%123");# 56 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _82:str) {G}
    io.print(z);                        # 57 _83:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"_123%3");# 58 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _84:str) {G}
    io.print(z);                        # 59 _85:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%1_3456%");# 60 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _86:str) {G}
    io.print(z);                        # 61 _87:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"_3456%");# 62 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _88:str) {G}
    io.print(z);                        # 63 _89:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%23");  # 64 z:bat[:oid,:oid] := STRbatlike_uselect2(b:bat[:oid,:str], _90:str) {G}
    io.print(z);                        # 65 _91:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"%","?");# 66 z:bat[:oid,:oid] := STRbatlike_uselect(b:bat[:oid,:str], _92:str, _93:str) {G}
    io.print(z);                        # 67 _94:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"?%","?");# 68 z:bat[:oid,:oid] := STRbatlike_uselect(b:bat[:oid,:str], _95:str, _93:str) {G}
    io.print(z);                        # 69 _96:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,".%",".");# 70 z:bat[:oid,:oid] := STRbatlike_uselect(b:bat[:oid,:str], _97:str, _98:str) {G}
    io.print(z);                        # 71 _99:void := IOprint_val(z:bat[:oid,:oid]) 
    z := batstr.like_uselect(b,"tt","t");# 72 z:bat[:oid,:oid] := STRbatlike_uselect(b:bat[:oid,:str], _100:str, _101:str) {G}
    io.print(z);                        # 73 _102:void := IOprint_val(z:bat[:oid,:oid]) 
end main;	# 74  
#---------------------------------#
# h	t			  # name
# int	str			  # type
#---------------------------------#
[ 1@0,	  ""			  ]
[ 2@0,	  "t"			  ]
[ 3@0,	  "ts"			  ]
[ 4@0,	  "tsz"			  ]
[ 5@0,	  "a math assignment"	  ]
[ 6@0,	  "pathfined is fun!"	  ]
[ 7@0,	  "123123123"		  ]
[ 8@0,	  "123123456123"	  ]
[ 9@0,	  "199993456123"	  ]
[ 10@0,	  "123456123456"	  ]
[ 11@0,	  "123454321"		  ]
[ true ]
[ false ]
[ true ]
[ true ]
[ true ]
[ false ]
[ true ]
[ false ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 3@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 5@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 5@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 6@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 8@0,	  nil	  ]
[ 10@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 1@0,	  nil	  ]
[ 2@0,	  nil	  ]
[ 3@0,	  nil	  ]
[ 4@0,	  nil	  ]
[ 5@0,	  nil	  ]
[ 6@0,	  nil	  ]
[ 7@0,	  nil	  ]
[ 8@0,	  nil	  ]
[ 9@0,	  nil	  ]
[ 10@0,	  nil	  ]
[ 11@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	void	  # type
#-----------------#
[ 2@0,	  nil	  ]

# 09:04:59 >  
# 09:04:59 >  Done.
# 09:04:59 >  

