stdout of test 'recycle00` in directory 'src/mal` itself:


# 12:49:06 >  
# 12:49:06 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=33469 --set xrpc_port=48324 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle00.mal
# 12:49:06 >  

# MonetDB server v5.5.0, based on kernel v1.23.0
# Serving database 'mTests_src_mal'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://gio.ins.cwi.nl:33469/
##test the basics of the replicator
#
#function qry();
#	i:=23;
#	j:=i*i;
#	io.print(j);
#end qry;
function user.qry():void;               #  0 qry:void 
    i := 23;                            #  1 i:int := _2:int 
    j := calc.*(i,i);                   #  2 j:int := CALCbinaryMULintint(i:int, i:int) 
    io.print(j);                        #  3 _4:void := IOprint_val(j:int) 
end qry;	# 4  
#
#recycle.setRetainPolicy(1);
#optimizer.recycle("user","qry");
#io.print("start");
#qry();
#io.print("next");
#qry();
#io.print("last");
#qry();
#recycle.dump();
#
function user.main():void;              #  0 main:void {G}
#test the basics of the replicator 
    recycle.setRetainPolicy(1);         #  2 _2:void := RECYCLEsetRetain(_3:int) 
    io.print("start");                  #  3 _7:void := IOprint_val(_8:str) 
    user.qry();                         #  4 _9:void 
    io.print("next");                   #  5 _10:void := IOprint_val(_11:str) 
    user.qry();                         #  6 _12:void 
    io.print("last");                   #  7 _13:void := IOprint_val(_14:str) 
    user.qry();                         #  8 _15:void 
    recycle.dump();                     #  9 _16:void 
end main;	# 10  
[ "start" ]
[ 529 ]
[ "next" ]
[ 529 ]
[ "last" ]
[ 529 ]
#Recycler  catalog
#retain= 1 time =0 sze= 0 alpha= 0.500
#reuse= 2
#rcache= 0
#   0 lru= 0 cnt=   1 ticks=  17  vol=    0     _0 := 23;
#   1 lru= 0 cnt=   1 ticks=  11  vol=    0     _1 := calc.*(23,23);

# 12:49:06 >  
# 12:49:06 >  Done.
# 12:49:06 >  

