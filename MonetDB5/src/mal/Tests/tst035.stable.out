stdout of test 'tst035` in directory 'src/mal` itself:


# 07:58:42 >  
# 07:58:42 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst035.mal </dev/null
# 07:58:42 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##The MAL interpreter should initiate garbage collection correctly
## early version was too early
#z:= "hello world"; print(z);
#z:=z; print(z);
#print("done");
#
#b:=new(:int,:int);
#i:= getLRefCount(b); print(i);
#b:=b;
#i:= getLRefCount(b); print(i);
#b:=b;
#i:= getLRefCount(b); print(i);
#
function user.main():void;              #  0 main:void {G}
#The MAL interpreter should initiate garbage collection correctly 
# early version was too early 
    z := "hello world";                 #  3 z:str := _4:str {G}
    io.print(z);                        #  4 _5:void := IOprint_val(z:str) 
    z := z;                             #  5 z:str := z:str {G}
    io.print(z);                        #  6 _6:void := IOprint_val(z:str) 
    io.print("done");                   #  7 _7:void := IOprint_val(_8:str) 
    b := bat.new(:int,:int);            #  8 b:bat[:int,:int] := CMDBATnew(_10:int, _10:int) {G}
    i := bbp.getLRefCount(b);           #  9 i:int := CMDgetBATlrefcnt(b:bat[:int,:int]) 
    io.print(i);                        # 10 _12:void := IOprint_val(i:int) 
    b := b;                             # 11 b:bat[:int,:int] := b:bat[:int,:int] {G}
    i := bbp.getLRefCount(b);           # 12 i:int := CMDgetBATlrefcnt(b:bat[:int,:int]) 
    io.print(i);                        # 13 _13:void := IOprint_val(i:int) 
    b := b;                             # 14 b:bat[:int,:int] := b:bat[:int,:int] {G}
    i := bbp.getLRefCount(b);           # 15 i:int := CMDgetBATlrefcnt(b:bat[:int,:int]) 
    io.print(i);                        # 16 _14:void := IOprint_val(i:int) 
end main;	# 17  
[ "hello world" ]
[ "hello world" ]
[ "done" ]
[ 1 ]
[ 1 ]
[ 1 ]

# 07:58:42 >  
# 07:58:42 >  Done.
# 07:58:42 >  

