stdout of test 'tst870` in directory 'src/mal` itself:


# 08:11:08 >  
# 08:11:08 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=37241 --set monet_prompt= --trace --dbname=mTests_src_mal  tst870.mal < /dev/null
# 08:11:08 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
##testing the multiplex operations on simple groups
#
#b := bat.new(:oid,:oid);
#bat.insert(b,0@0, 0@0);
#bat.insert(b,1@0, 1@0);
#bat.insert(b,1@0, 2@0);
#bat.insert(b,1@0, 3@0);
#bat.insert(b,2@0, 2@0);
#bat.insert(b,2@0, 0@0);
#bat.insert(b,2@0, 3@0);
#bat.insert(b,3@0, nil:oid);
#bat.insert(b,3@0, 1@0);
#
#io.print(b);
#
#g:= group.min(b);
#io.print(g);
#
#h:= group.max(b);
#io.print(h);
#
function user.main():void;	# 0  (main:void)
#testing the multiplex operations on simple groups 	# 1  (_1:str)
    b := bat.new(:oid,:oid);	# 2 CMDBATnew (b:bat[:oid,:oid])<-(_3:oid)(_3:oid)
    bat.insert(b,0@0,0@0);	# 3 BKCinsert_bun (_4:void)<-(b:bat[:oid,:oid])(_5:oid)(_5:oid)
    bat.insert(b,1@0,1@0);	# 4 BKCinsert_bun (_6:void)<-(b:bat[:oid,:oid])(_7:oid)(_7:oid)
    bat.insert(b,1@0,2@0);	# 5 BKCinsert_bun (_8:void)<-(b:bat[:oid,:oid])(_7:oid)(_9:oid)
    bat.insert(b,1@0,3@0);	# 6 BKCinsert_bun (_10:void)<-(b:bat[:oid,:oid])(_7:oid)(_11:oid)
    bat.insert(b,2@0,2@0);	# 7 BKCinsert_bun (_12:void)<-(b:bat[:oid,:oid])(_9:oid)(_9:oid)
    bat.insert(b,2@0,0@0);	# 8 BKCinsert_bun (_13:void)<-(b:bat[:oid,:oid])(_9:oid)(_5:oid)
    bat.insert(b,2@0,3@0);	# 9 BKCinsert_bun (_14:void)<-(b:bat[:oid,:oid])(_9:oid)(_11:oid)
    bat.insert(b,3@0,nil:oid);	# 10 BKCinsert_bun (_15:void)<-(b:bat[:oid,:oid])(_11:oid)(_16:oid)
    bat.insert(b,3@0,1@0);	# 11 BKCinsert_bun (_17:void)<-(b:bat[:oid,:oid])(_11:oid)(_7:oid)
    io.print(b);	# 12 IOprint_val (_18:int)<-(b:bat[:oid,:oid])
    g := group.min(b);	# 13 GRPmin_oid_oid (g:bat[:oid,:oid])<-(b:bat[:oid,:oid])
    io.print(g);	# 14 IOprint_val (_20:int)<-(g:bat[:oid,:oid])
    h := group.max(b);	# 15 GRPmax_oid_oid (h:bat[:oid,:oid])<-(b:bat[:oid,:oid])
    io.print(h);	# 16 IOprint_val (_22:int)<-(h:bat[:oid,:oid])
end main;	# 17  
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 1@0,	  2@0	  ]
[ 1@0,	  3@0	  ]
[ 2@0,	  2@0	  ]
[ 2@0,	  0@0	  ]
[ 2@0,	  3@0	  ]
[ 3@0,	  nil	  ]
[ 3@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  0@0	  ]
[ 3@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  3@0	  ]
[ 2@0,	  3@0	  ]
[ 3@0,	  nil	  ]

# 08:11:09 >  
# 08:11:09 >  Done.
# 08:11:09 >  

