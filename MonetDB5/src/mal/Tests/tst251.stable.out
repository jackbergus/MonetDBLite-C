stdout of test 'tst251` in directory 'src/mal` itself:


# 08:01:07 >  
# 08:01:07 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst251.mal </dev/null
# 08:01:07 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## The series tst2?? is a patched version of suite_00
## The first and foremost BAT operations
#
## String iterator stuff
#c:= new(:int,:str);
#insert(c,1,"hello");
#insert(c,2,"brave");
#insert(c,3,"world");
#insert(c,4,"");
#x:= str(nil);
#insert(c,5,x);
#insert(c,6,"!");
#print(c);
#barrier (v,h,ts):= newIterator(c);
#	printf("[%d,",h);
#	printf("%s]\n",ts);
#	redo (v,h,ts):= hasMoreElements(c);
#exit v;
#
function user.main():void;	# 0  (main:void)
# The series tst2?? is a patched version of suite_00 	# 1  (_1:str)
# The first and foremost BAT operations 	# 2  (_2:str)
# String iterator stuff 	# 3  (_3:str)
    c := bat.new(:int,:str);	# 4 CMDBATnew (c:bat[:int,:str])<-(_5:int)(_6:str)
    bat.insert(c,1,"hello");	# 5 BKCinsert_bun (_7:void)<-(c:bat[:int,:str])(_8:int)(_9:str)
    bat.insert(c,2,"brave");	# 6 BKCinsert_bun (_10:void)<-(c:bat[:int,:str])(_11:int)(_12:str)
    bat.insert(c,3,"world");	# 7 BKCinsert_bun (_13:void)<-(c:bat[:int,:str])(_14:int)(_15:str)
    bat.insert(c,4,"");	# 8 BKCinsert_bun (_16:void)<-(c:bat[:int,:str])(_17:int)(_18:str)
    x := calc.str(nil:void);	# 9 CALCnil2str (x:str)<-(_20:void)
    bat.insert(c,5,x);	# 10 BKCinsert_bun (_21:void)<-(c:bat[:int,:str])(_22:int)(x:str)
    bat.insert(c,6,"!");	# 11 BKCinsert_bun (_23:void)<-(c:bat[:int,:str])(_24:int)(_25:str)
    io.print(c);	# 12 IOprint_val (_26:int)<-(c:bat[:int,:str])
barrier (v,h,ts):= chopper.newIterator(c);	# 13 CHPbunIterator (v:lng)(h:int)(ts:str)<-(c:bat[:int,:str]) jump 18
    io.print(v);	# 14 IOprint_val (_30:int)<-(v:lng)
    io.printf("[%d,",h);	# 15 IOprint_formatted_int (_31:int)<-(_32:str)(h:int)
    io.printf("%s]\n",ts);	# 16 IOprint_formatted_str (_33:int)<-(_34:str)(ts:str)
    redo (v,h,ts):= chopper.hasMoreElements(c);	# 17 CHPbunHasMoreElements (v:lng)(h:int)(ts:str)<-(c:bat[:int,:str]) jump 14
exit v;	# 18  (v:lng)
end main;	# 19  
#-------------------------#
# h	tmp_4		  # name
# int	str		  # type
#-------------------------#
[ 1,	  "hello"	  ]
[ 2,	  "brave"	  ]
[ 3,	  "world"	  ]
[ 4,	  ""		  ]
[ 5,	  nil		  ]
[ 6,	  "!"		  ]
[ 0 ]
[1,hello]
[ 1 ]
[2,brave]
[ 2 ]
[3,world]
[ 3 ]
[4,]
[ 4 ]
[5,nil]
[ 5 ]
[6,!]

# 08:01:07 >  
# 08:01:07 >  Done.
# 08:01:07 >  

