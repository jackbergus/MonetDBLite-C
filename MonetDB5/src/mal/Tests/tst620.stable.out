stdout of test 'tst620` in directory 'src/mal` itself:


# 21:04:56 >  
# 21:04:56 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=33678 --set sql_port=45734 --set xquery_port=51153 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst620.mal < /dev/null
# 21:04:56 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##check the storage size
#function tst():void;
#	z:= inspect.getSize();
#	io.printf("#size %d\n",z);
#end tst;
function user.tst():void;               #  0 tst:void := user.tst() 
    z := inspect.getSize();             #  1 z:lng := INSPECTgetSize() 
    io.printf("#size %lld\n",z);        #  2 _2:void := IOprint_formatted_lng(_3:str, z:lng) 
end tst;	# 3  
#
#user.tst();
#
#f:= inspect.getSize("algebra");
#fs:= aggr.sum(f);
#fs2:= fs/2;
#io.printf("#algebra size %d\n",fs2);
#
#z:= inspect.getSize("inspect");
#zs:= aggr.sum(z);
#zs2:= zs/2;
#io.printf("#inspect size %d\n",zs2);
#
#l:= inspect.getSize();
#io.printf("#size %d\n",l);
#
function user.main():void;              #  0 main:void := user.main() {G}
#check the storage size 
    user.tst();                         #  2 _2:void := user.tst() 
    f := inspect.getSize("algebra");    #  3 f:bat[:str,:lng] := INSPECTgetModuleSize(_4:str) {G}
    fs:lng  := aggr.sum(f);             #  4 fs:lng := aggr.sum(f:bat[:str,:lng]) 
    fs2 := calc./(fs,2);                #  5 fs2:lng := CALCbinarycheckDIVlngint(fs:lng, _7:int) 
    io.printf("#algebra size %lld\n",fs2);#  6 _8:void := IOprint_formatted_lng(_9:str, fs2:lng) 
    z := inspect.getSize("inspect");    #  7 z:bat[:str,:lng] := INSPECTgetModuleSize(_11:str) {G}
    zs:lng  := aggr.sum(z);             #  8 zs:lng := aggr.sum(z:bat[:str,:lng]) 
    zs2 := calc./(zs,2);                #  9 zs2:lng := CALCbinarycheckDIVlngint(zs:lng, _7:int) 
    io.printf("#inspect size %lld\n",zs2);# 10 _14:void := IOprint_formatted_lng(_15:str, zs2:lng) 
    l := inspect.getSize();             # 11 l:lng := INSPECTgetSize() 
    io.printf("#size %lld\n",l);        # 12 _17:void := IOprint_formatted_lng(_18:str, l:lng) 
end main;	# 13  
#size 580
#algebra size 30304
#inspect size 3288
#size 2500

# 21:04:56 >  
# 21:04:56 >  Done.
# 21:04:56 >  

