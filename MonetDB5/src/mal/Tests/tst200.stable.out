stdout of test 'tst200` in directory 'src/mal` itself:


# 07:59:14 >  
# 07:59:14 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst200.mal </dev/null
# 07:59:14 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## The series tst2?? is a patched version of suite_00
## The first and foremost BAT operations
#
#o:=oid(20000000);
#setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(:int,:int);
#printf("#~BeginVariableOutput~#\n"); 
##binfo:= info(b);
##err:= print(binfo); 
#printf("#~EndVariableOutput~#\n");
#
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#print(b);
#print(b,b,b);
#
function user.main():void;	# 0  (main:void)
# The series tst2?? is a patched version of suite_00 	# 1  (_1:str)
# The first and foremost BAT operations 	# 2  (_2:str)
    o := calc.oid(20000000);	# 3 CALCint2oid (o:oid)<-(_4:int)
    calc.setoid(o);	# 4 CALCsetoidInc (_5:oid)<-(o:oid)
#test basic functionality of the BAT library. 	# 5  (_6:str)
#focussed on integers 	# 6  (_7:str)
#it includes bat.insertions,deletions,selections, and joins. 	# 7  (_8:str)
    b := bat.new(:int,:int);	# 8 CMDBATnew (b:bat[:int,:int])<-(_10:int)(_11:int)
    io.printf("#~BeginVariableOutput~#\n");	# 9 IOprint_str (_12:void)<-(_13:str)
#binfo:= info(b); 	# 10  (_14:str)
#err:= print(binfo);  	# 11  (_15:str)
    io.printf("#~EndVariableOutput~#\n");	# 12 IOprint_str (_16:void)<-(_17:str)
    err := bat.insert(b,1,15);	# 13 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_19:int)(_20:int)
    err := bat.insert(b,2,4);	# 14 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_21:int)(_22:int)
    n0 := calc.int(nil:void);	# 15 CALCnil2int (n0:int)<-(_24:void)
    err := bat.insert(b,3,n0);	# 16 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_25:int)(n0:int)
    err := bat.insert(b,4,16);	# 17 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_22:int)(_26:int)
    err := bat.insert(b,5,25);	# 18 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_27:int)(_28:int)
    err := bat.insert(b,6,36);	# 19 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_29:int)(_30:int)
    err := bat.insert(b,7,49);	# 20 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_31:int)(_32:int)
    err := bat.insert(b,8,64);	# 21 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_33:int)(_34:int)
    err := bat.insert(b,9,n0);	# 22 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(_35:int)(n0:int)
    err := bat.insert(b,n0,n0);	# 23 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(n0:int)(n0:int)
    err := bat.insert(b,n0,81);	# 24 BKCinsert_bun (err:void)<-(b:bat[:int,:int])(n0:int)(_36:int)
    io.print(b);	# 25 IOprint_val (_37:void)<-(b:bat[:int,:int])
    io.print(b,b,b);	# 26 IOtable (_38:void)<-(b:bat[:int,:int])(b:bat[:int,:int])(b:bat[:int,:int])
end main;	# 27  
#~BeginVariableOutput~#
#~EndVariableOutput~#
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
#---------------------------------#
# h	tmp_4	tmp_4	tmp_4	  # name
# int	int	int	int	  # type
#---------------------------------#
[ 1,	  15,	  15,	  15	  ]
[ 2,	  4,	  4,	  4	  ]
[ 3,	  nil,	  nil,	  nil	  ]
[ 4,	  16,	  16,	  16	  ]
[ 5,	  25,	  25,	  25	  ]
[ 6,	  36,	  36,	  36	  ]
[ 7,	  49,	  49,	  49	  ]
[ 8,	  64,	  64,	  64	  ]
[ 9,	  nil,	  nil,	  nil	  ]

# 07:59:14 >  
# 07:59:14 >  Done.
# 07:59:14 >  

