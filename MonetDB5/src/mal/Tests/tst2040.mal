#The 2000 serie  is focussed on parallelism
# Example of a simple producer/consumer pair


	cWait:= true;	#consumer put to sleep
	pWait:= true;	#consumer put to sleep
	i:= 0;

thread 	producer;	
	#io.printf("Created producer thread\n");
barrier pBody:=true;
barrier pWait;		# bussy loop to await for consumer 
	#io.printf("producer: sleep\n");
	alarm.sleep(1);
	redo pWait;
exit 	pWait;
	#io.printf("produce an element\n");
	pWait:= true;
	cWait:= false;
barrier b:= i==0;
	leave producer;
exit	b;
	redo pBody;
exit	pBody;
	#io.printf("Finished producer\n");
exit	producer;

thread consumer;
	#io.printf("Created consumer thread\n");
barrier cBody:=true;
barrier cWait;	
	#io.printf("consumer: sleep\n");
	alarm.sleep(1);
	redo cWait;
exit 	cWait;
	#io.printf("consume element %d\n",i);
barrier b:= i==0;
	leave consumer;
exit	b;
	i:=i-1;
	cWait:= true;
	pWait:= false;
	redo cBody;
exit	cBody;
	#io.printf("Finished consumer\n");
exit 	consumer;

	i:= 2;
	pWait:= false;
	io.printf("await dead of producer/consumer\n");
