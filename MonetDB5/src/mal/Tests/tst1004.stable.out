stdout of test 'tst1004` in directory 'src/mal` itself:


# 07:58:53 >  
# 07:58:53 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1004.mal </dev/null
# 07:58:53 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the first of a series of BBP test cases
#
#print("Start test");
#bbp.open();
#b:= new(:int,:int);
#insert(b,1,2);
#bbp.deposit("myfirstbat",b);
#c:= bbp.take("myfirstbat");
#catch MALException;
#	print(MALException);
#exit MALException;
#print("FIRST ROUND");
#print(c);
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
#bbp.open();
#print("SECOND ROUND");
#y:=bbp.getObjects();
#print(y);
#v:= bbp.take("myfirstbat");
#catch MALException;
#	print(MALException);
#exit MALException;
#print("got myfirstbat?");
#print(v);
#x:= bbp.getNames();
#print(x);
#bbp.close();
#
function user.main():void;              #  0 main:void := user.main() {G}
# the first of a series of BBP test cases 
    io.print("Start test");             #  2 _2:void := IOprint_val(_3:str) 
    bbp.open();                         #  3 _4:void := CMDbbpopen() 
    b := bat.new(:int,:int);            #  4 b:bat[:int,:int] := CMDBATnew(_6:int, _6:int) {G}
    bat.insert(b,1,2);                  #  5 _7:void := BKCinsert_bun(b:bat[:int,:int], _8:int, _9:int) 
    bbp.deposit("myfirstbat",b);        #  6 _10:void := CMDbbpdeposit(_11:str, b:bat[:int,:int]) 
    c := bbp.take("myfirstbat");        #  7 c:bat[:any,:any] := CMDbbptake(_11:str) {G}
catch MALException:str ;                #  8 MALException:str {J10}
    io.print(MALException);             #  9 _14:void := IOprint_val(MALException:str) 
exit MALException:str ;                 # 10 MALException:str 
    io.print("FIRST ROUND");            # 11 _15:void := IOprint_val(_16:str) 
    io.print(c);                        # 12 _17:void := IOprint_val(c:bat[:any,:any]) 
    bbp.close();                        # 13 _18:void := CMDbbpclose() 
# at the end of the session, the BBP should have discarded 
# the temporary bats of the user 
    bbp.open();                         # 16 _21:void := CMDbbpopen() 
    io.print("SECOND ROUND");           # 17 _22:void := IOprint_val(_23:str) 
    y := bbp.getObjects();              # 18 y:bat[:int,:str] := CMDbbpGetObjects() {G}
    yr := bat.reverse(y);               # 19 yr:bat[:str,:int] := BKCreverse(y:bat[:int,:str]) {G}
    yp := algebra.project(yr);          # 20 yp:bat[:str,:oid] := ALGprojectNIL(yr:bat[:str,:int]) {G}
    io.print(yp);                       # 21 _27:void := IOprint_val(yp:bat[:str,:oid]) 
    v := bbp.take("myfirstbat");        # 22 v:bat[:any,:any] := CMDbbptake(_11:str) {G}
catch MALException:str ;                # 23 MALException:str {J25}
    io.print(MALException);             # 24 _29:void := IOprint_val(MALException:str) 
exit MALException:str ;                 # 25 MALException:str 
    io.print("got myfirstbat?");        # 26 _30:void := IOprint_val(_31:str) 
    io.print(v);                        # 27 _32:void := IOprint_val(v:bat[:any,:any]) 
end main;	# 28  
[ "Start test" ]
[ "FIRST ROUND" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ "SECOND ROUND" ]
#-------------------------#
# bbp	objects		  # name
# int	str		  # type
#-------------------------#
[ "myfirstbat",	  nil	  ]
[ "got myfirstbat?" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]

# 07:58:53 >  
# 07:58:53 >  Done.
# 07:58:53 >  

