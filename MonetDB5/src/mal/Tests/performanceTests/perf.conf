# Configuration file for MonetDB Version 5 server

# The configuration file is an integral part of a database store
# and aimed to initialize the server and service components.
# This startup file is read by the GDK kernel to set system wide parameters.

# It may be inspected by application/scripts for specific settings,
# but such client side configurations are better packed in their
# own structure.

# It can also reside in the local directory
# where mserver is called, or the home directory of the MonetDB user.

# Absolute path where MonetDB is installed
prefix=/ufs/mk/monet5/Linux
exec_prefix=${prefix}

# GDK Section
#============
# All databases are stored as a directory under the directory
# given below.  Use this value to change the overall location
# of your data.
gdk_dbfarm=${prefix}/var/MonetDB5/dbfarm	

# MonetDB can only handle one database at a time.  You can specify
# the name of the database to use below.  Note that you can use
# multiple databases, but that you have to edit the database name
# and restart MonetDB.
gdk_dbname=demo			# default database to open

# The options below deal with various aspects of memory usage behaviour.
# If you don't know what these values mean, you should leave them alone.

# gdk_mem_bigsize & gdk_vm_minsize will be set/limited to
# 1/2 of the physically available amount of main-memory
# during start-up in src/tools/mserver.mx
# memory chunks of size >= gdk_mem_bigsize (in bytes) will be mmaped anonymously
#gdk_mem_bigsize=33554432
# memory chunks of size >= gdk_vm_minsize (in bytes) will be mmaped;
#gdk_vm_minsize=134217728

# valgrind issues:
# for 32 bit systems it tries claim 3G of (virtual) memory
# set the alloca map to "no" to run mserver with valgrind;
# also, you need to tell valgrind to use 8-byte alignment, hence:
# "valgrind --alignment=8 mserver --set gdk_alloc_map=no ..."
gdk_alloc_map=no

# the kernel can be used in embedded situations (don't set this yourself)
gdk_embedded=no

# You can enable debug for specific parts.  By default debug is
# switched off.
gdk_debug=0
# possible values: (can be a combination of)
#       1 = thread-specific debug output
#       2 = property enforcing on new BATs
#       4 = memory allocation
#       8 = property checking on all values: tells about wrongly set properties
#      16 = major IO activity
#      32 = BAT handling
#      64 = MIL parser debugging
#     128 = Thread management
#     256 = Event management
#     512 = Transaction management
#    1024 = Locks and Triggers
#    2048 = Dynamic loading
#    4096 = BBP Performance (?)
#    8192 = Delta debugging (?)
#   16384 = Module loading
#   32768 = Yacc specific error messages
#   65536 = tcpip (??)
#  131072 = monet_multiplex: setaggr debugging (??)
#  262144 = \
#  524288 =   ddbench (???)
# 1048576 = /
# 2097152 = show join/select algorithm chosen
# 4194304 = show result size estimations (for join,select)
# 8388608 = extended property checking: tells also about not set properties

# Monet Section
#==============
# monet_admin=adm			#administrator user name
# Prompt when using MAL interface
# monet_prompt=>
# Where do the MonetDB modules reside? The second path is for windows dlls.
monet_mod_path=${exec_prefix}/lib/MonetDB5:${exec_prefix}/lib/MonetDB5/lib:${exec_prefix}/lib/MonetDB5/bin
# Start mserver in daemon mode, or start with MAL interactive interface?
monet_daemon=no
# Display version and copyright information upon startup?
monet_welcome=yes
# Where is the file that stores the secret key to unlock the password
# vault?  The file is read up to the first null-byte ('\0'), so you can
# padd the file with trailing null-bytes to obfuscate the key length.
# You can easily generate some key by running pwgen and adding a few of
# the passwords generated.  Make sure not to make the key too small.
# If you leave this unset, some default key is used.
#monet_vault_key=${prefix}/etc/monetdb.secret

# Mguardian section
#====================================
delay=120		#waiting between pinging the server
# if the guardian process is running, it will automatically
# restart the server upon failuer and sent an email to the owner

# MAL section
# Monet Virtual Machine
#====================================
mal_init=${exec_prefix}/lib/MonetDB5/mal_init.mal
mal_listing = 0           # List everything
#    1 = List the original input
#    2 = List the MAL instruction
#    4 = List the MAL type information
#    8 = List the MAL properties

# Checkpoint and recovery
#===================================
# Checkpoints are stored in their own area, preferrably
# on a different storage device. Checkpoints should be
# initialized manually.
checkpoint_dir=${prefix}/var/MonetDB5/chkpnt

# Monet Application Interface Section
#====================================
mapi_port=50000			#default port to address a mserver

# SQL Interface Section
#====================================
# The SQL debug level (should be disabled for normal use)
sql_debug=0

# Place to store transaction logs
# The logs are typically stored on a different storage medium
# to protect the database against accidental hardware loss.
# it should be different directory as used for xquery!
#sql_logdir=${prefix}/var/MonetDB5/sql_logs

# XQuery Interface Section
#=========================
# default port to address the HTTP server for pathfinder
pf_httpd_port=8080

#output mode "dm" = pretty printed,
#            "xml" = enforce XML with enclosing <XQueryResult> tags
xquery_output=dm

#limit the document cache on disk to 100MB
xquery_cacheMB=100

# Place to store transaction logs
# The logs are typically stored on a different storage medium
# to protect the database against accidental hardware loss.
# it should be different directory as used for sql!
xquery_logdir=${prefix}/var/MonetDB5/xquery_logs
#gdk_dbfarm=/ufs/mk/monet5/dbfarm
#sql_logdir=/ufs/mk/monet5/dblogs/logs/sql
#gdk_dbfarm=/ufs/mk/monet5/dbfarm
#sql_logdir=/ufs/mk/monet5/dblogs/logs/sql
#gdk_dbfarm=/ufs/mk/monet5/dbfarm
#sql_logdir=/ufs/mk/monet5/dblogs/logs/sql
#gdk_dbfarm=/ufs/mk/monet5/dbfarm
#sql_logdir=/ufs/mk/monet5/dblogs/logs/sql
gdk_dbfarm=/ufs/mk/monet5/dbfarm
sql_logdir=/ufs/mk/monet5/dblogs/logs/sql
