stdout of test 'tst253` in directory 'src/mal` itself:


# 11:28:42 >  
# 11:28:42 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=43122 --set sql_port=57578 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst253.mal </dev/null
# 11:28:42 >  



# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# config:/ufs/niels/scratch/Linux-x86_64/build-m5/etc/MonetDB5.conf
# dbfarm:/ufs/niels/scratch/Linux-x86_64/build-m5/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## testing void bats
#b:= new(:void,:str);
#insert(b,"hello");
#insert(b,nil,"world");
#print(b);
#
##materialize header
#print(c);
#d:= mark(c);
#print(d);
#
##perform header marking
#f:= algebra.markH(b);
#io.print(f);
#
function user.main():void;              #  0 main:void := user.main() {G}
# testing void bats 
    b := bat.new(:oid,:str);            #  2 b:bat[:oid,:str] := CMDBATnew(_3:oid, _4:str) {G}
    bat.insert(b,nil:oid,"hello");      #  3 _5:bat[:oid,:str] := BKCinsert_bun(b:bat[:oid,:str], _6:oid, _7:str) {G}
    bat.insert(b,nil:oid,"world");      #  4 _8:bat[:oid,:str] := BKCinsert_bun(b:bat[:oid,:str], _6:oid, _9:str) {G}
    io.print(b);                        #  5 _10:void := IOprint_val(b:bat[:oid,:str]) 
#materialize header 
    c := bat.reverse(b);                #  7 c:bat[:str,:oid] := BKCreverse(b:bat[:oid,:str]) {G}
    io.print(c);                        #  8 _13:void := IOprint_val(c:bat[:str,:oid]) 
    d := algebra.markT(c);              #  9 d:bat[:str,:oid] := ALGtmark_default(c:bat[:str,:oid]) {G}
    io.print(d);                        # 10 _15:void := IOprint_val(d:bat[:str,:oid]) 
#perform header marking 
    f := algebra.markH(b);              # 12 f:bat[:oid,:str] := ALGmarkHead_default(b:bat[:oid,:str]) {G}
    io.print(f);                        # 13 _18:void := IOprint_val(f:bat[:oid,:str]) 
end main;	# 14  
#-------------------------#
# h	tmp_4		  # name
# void	str		  # type
#-------------------------#
[ nil,	  "hello"	  ]
[ nil,	  "world"	  ]
#-------------------------#
# t		tmp_4	  # name
# str		void	  # type
#-------------------------#
[ "hello",	  nil	  ]
[ "world",	  nil	  ]
#---------------------------------#
# h		tmp_6		  # name
# str		void		  # type
#-------------------------#
# h	t	  # name
# str		void	  # type
#-------------------------#
[ "hello",	  0@0	  ]
[ "world",	  1@0	  ]
#-------------------------#
# t	h		  # name
# void	str		  # type
#-------------------------#
[ 0@0,	  "hello"	  ]
[ 1@0,	  "world"	  ]

# 11:28:42 >  
# 11:28:42 >  Done.
# 11:28:42 >  

