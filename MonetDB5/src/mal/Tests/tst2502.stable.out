stdout of test 'tst2502` in directory 'src/mal` itself:


# 08:01:05 >  
# 08:01:05 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst2502.mal </dev/null
# 08:01:05 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Yield commands may only appear in factories
#
#function random(seed:int):int;
#	i:= seed;
#barrier always:= true;
#	i:= 125 *i;
#	i:= i % 32767;
#	yield i;
#	redo always;
#exit always;
#	return random:= 0;
#end random;
factory user.random(seed:int):int;	# 0  (random:int)<-(seed:int)
    i := seed;	# 1  (i:int)<-(seed:int)
barrier always := true;	# 2  (always:bit)<-(_4:bit) jump 7
    i := calc.*(125,i);	# 3 CALCbinaryMULintint (i:int)<-(_5:int)(i:int)
    i := calc.%(i,32767);	# 4 CALCbinarycheckMODintint (i:int)<-(i:int)(_6:int)
    yield i;	# 5  (i:int)
    redo always;	# 6  (always:bit) jump 3
exit always;	# 7  (always:bit)
    return random := 0;	# 8  (random:int)<-(_7:int)
end random;	# 9  
#
#r1:= random(0);
#print(r1);
#r2:= random(0);
#print(r2);
#
function user.main():void;	# 0  (main:void)
# Yield commands may only appear in factories 	# 1  (_1:str)
    r1 := user.random(0);	# 2  (r1:int)<-(_3:int)
    io.print(r1);	# 3 IOprint_val (_4:int)<-(r1:int)
    r2 := user.random(0);	# 4  (r2:int)<-(_3:int)
    io.print(r2);	# 5 IOprint_val (_6:int)<-(r2:int)
end main;	# 6  
[ 0 ]
[ 0 ]

# 08:01:05 >  
# 08:01:05 >  Done.
# 08:01:05 >  

