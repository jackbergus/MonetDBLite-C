stdout of test 'tst905` in directory 'src/mal` itself:


# 08:01:37 >  
# 08:01:37 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst905.mal </dev/null
# 08:01:37 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the multiplex code blocks.
#
#b:= new(:lng,:lng);
#barrier (v,i):= newRange(0:lng);
#	insert(b,i,i);
#	redo (v,i):= nextElement(1:lng,10:lng);
#exit (v,i);
#
#c:= copy(b);
#x:= multiplex.script("+",b,c);
#print(x);
#
function user.main():int;	# 0  (main:int)
# the multiplex code blocks. 	# 1  (_2:str)
    b := bat.new(:lng,:lng);	# 2 CMDBATnew (b:bat[:lng,:lng])<-(_4:lng)(_4:lng)
barrier (v,i):= mal.newRange(0:lng);	# 3 RNGnewRange_lng (v:bit)(i:lng)<-(_7:lng) jump 6
    bat.insert(b,i,i);	# 4 BKCinsert_bun (_8:void)<-(b:bat[:lng,:lng])(i:lng)(i:lng)
    redo (v,i):= mal.nextElement(1:lng,10:lng);	# 5 RNGnextElement_lng (v:bit)(i:lng)<-(_9:lng)(_10:lng) jump 4
exit (v,i);	# 6  (v:bit)(i:lng)
    c := algebra.copy(b);	# 7 ALGcopy (c:bat[:lng,:lng])<-(b:bat[:lng,:lng])
    _15 := bat.new(:lng,:lng);	# 8 CMDBATnew (_15:bat[:lng,:lng])<-(_4:lng)(_4:lng)
barrier (_17,_18,_19):= chop.newIterator(b);	# 9 CHPbunIterator (_17:lng)(_18:lng)(_19:lng)<-(b:bat[:lng,:lng]) jump 16
    _21 := algebra.find(c,_18);	# 10 ALGfind (_21:lng)<-(c:bat[:lng,:lng])(_18:lng)
    _23 := calc.+(_19,_21);	# 11 CALCbinaryADDlnglng (_23:lng)<-(_19:lng)(_21:lng)
    bat.insert(_15,_18,_23);	# 12 BKCinsert_bun (_24:void)<-(_15:bat[:lng,:lng])(_18:lng)(_23:lng)
catch MALexception;	# 13  (MALexception:str) jump 14
exit MALexception;	# 14  (MALexception:str)
    redo (_17,_18,_19):= chop.hasMoreElements(b);	# 15 CHPbunHasMoreElements (_17:lng)(_18:lng)(_19:lng)<-(b:bat[:lng,:lng]) jump 10
exit (_17,_18,_19);	# 16  (_17:lng)(_18:lng)(_19:lng)
    x:bat[:lng,:lng]  := _15;	# 17  (x:bat[:lng,:lng])<-(_15:bat[:lng,:lng])
    io.print(x);	# 18 IOprint_val (_14:int)<-(x:bat[:lng,:lng])
end main;	# 19  
#-----------------#
# h	tmp_6	  # name
# lng	lng	  # type
#-----------------#
[ 0,	  0	  ]
[ 1,	  2	  ]
[ 2,	  4	  ]
[ 3,	  6	  ]
[ 4,	  8	  ]
[ 5,	  10	  ]
[ 6,	  12	  ]
[ 7,	  14	  ]
[ 8,	  16	  ]
[ 9,	  18	  ]

# 08:01:37 >  
# 08:01:37 >  Done.
# 08:01:37 >  

