stdout of test 'tst1150` in directory 'src/mal` itself:


# 07:59:00 >  
# 07:59:00 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1150.mal </dev/null
# 07:59:00 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## simple stream test
#	fp := stream.openWrite("tst1150garbage");
#	stream.writeStr(fp,"Dit is een test\n");
#	stream.flush(fp);
#	stream.close(fp);
#	fp := stream.openRead("tst1150garbage");
#	s := stream.readStr(fp);
#	print(s);
#	stream.close(fp);
#
#	fp := stream.openWrite("tst1150garbage");
#	stream.writeInt(fp,1234);
#	stream.close(fp);
#	fp := stream.openRead("tst1150garbage");
#	i := stream.readInt(fp);
#	print(i);
#
function user.main():void;              #  0 main:void {G}
# simple stream test 
    fp := streams.openWrite("tst1150garbage");#  2 fp:streams := stream_open_wastreamwrap(_3:str) 
    streams.writeStr(fp,"Dit is een test\n");#  3 _4:void := stream_write_stringwrap(fp:streams, _5:str) 
    streams.flush(fp);                  #  4 _6:void := stream_flush_streamwrap(fp:streams) 
    streams.close(fp);                  #  5 _7:void := stream_close_streamwrap(fp:streams) 
    fp := streams.openRead("tst1150garbage");#  6 fp:streams := stream_open_rastreamwrap(_3:str) 
    s := streams.readStr(fp);           #  7 s:str := stream_read_stringwrap(fp:streams) {G}
    io.print(s);                        #  8 _9:void := IOprint_val(s:str) 
    streams.close(fp);                  #  9 _10:void := stream_close_streamwrap(fp:streams) 
    fp := streams.openWrite("tst1150garbage");# 10 fp:streams := stream_open_wastreamwrap(_3:str) 
    streams.writeInt(fp,1234);          # 11 _11:void := stream_writeIntwrap(fp:streams, _12:int) 
    streams.close(fp);                  # 12 _13:void := stream_close_streamwrap(fp:streams) 
    fp := streams.openRead("tst1150garbage");# 13 fp:streams := stream_open_rastreamwrap(_3:str) 
    i := streams.readInt(fp);           # 14 i:int := stream_readIntwrap(fp:streams) 
    io.print(i);                        # 15 _15:void := IOprint_val(i:int) 
end main;	# 16  
[ "Dit is een test\n" ]
[ 1234 ]

# 07:59:00 >  
# 07:59:00 >  Done.
# 07:59:00 >  

