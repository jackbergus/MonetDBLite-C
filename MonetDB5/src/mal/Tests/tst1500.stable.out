stdout of test 'tst1500` in directory 'src/mal` itself:


# 07:59:06 >  
# 07:59:06 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1500.mal </dev/null
# 07:59:06 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#	x := new(:oid,:chr);
#	de_a := insert(x,1@0,'a');
#	ee_a := insert(x,2@0,'a');
#	fe_a := insert(x,3@0,'b');
#	ge_a := insert(x,4@0,'b');
#	he_a := insert(x,5@0,'b');
#	ie_a := insert(x,6@0,'b');
#	je_a := insert(x,7@0,'c');
#	ke_a := insert(x,8@0,'c');
#print("group x");print(x);
#	#b1 := group(x);
#	(hb1,b1) := group(x);
#print("b1 becomes"); print(b1);
#print("hb1 becomes"); print(hb1);
#
function user.main():int;	# 0  (main:int)
    x := bat.new(:oid,:chr);	# 1 CMDBATnew (x:bat[:oid,:chr])<-(_2:oid)(_3:chr)
    de_a := bat.insert(x,1@0,'a');	# 2 BKCinsert_bun (de_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_5:oid)(_6:chr)
    ee_a := bat.insert(x,2@0,'a');	# 3 BKCinsert_bun (ee_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_8:oid)(_6:chr)
    fe_a := bat.insert(x,3@0,'b');	# 4 BKCinsert_bun (fe_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_10:oid)(_11:chr)
    ge_a := bat.insert(x,4@0,'b');	# 5 BKCinsert_bun (ge_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_13:oid)(_11:chr)
    he_a := bat.insert(x,5@0,'b');	# 6 BKCinsert_bun (he_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_15:oid)(_11:chr)
    ie_a := bat.insert(x,6@0,'b');	# 7 BKCinsert_bun (ie_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_17:oid)(_11:chr)
    je_a := bat.insert(x,7@0,'c');	# 8 BKCinsert_bun (je_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_19:oid)(_20:chr)
    ke_a := bat.insert(x,8@0,'c');	# 9 BKCinsert_bun (ke_a:bat[:oid,:chr])<-(x:bat[:oid,:chr])(_22:oid)(_20:chr)
    io.print("group x");	# 10 IOprint_val (_23:int)<-(_24:str)
    io.print(x);	# 11 IOprint_val (_25:int)<-(x:bat[:oid,:chr])
#b1 := group.group(x); 	# 12  (_27:str)
    (hb1,b1):= group.group(x);	# 13 GRPgroup (hb1:bat[:chr,:int])(b1:bat[:oid,:void])<-(x:bat[:oid,:chr])
    io.print("b1 becomes");	# 14 IOprint_val (_30:int)<-(_31:str)
    io.print(b1);	# 15 IOprint_val (_32:int)<-(b1:bat[:oid,:void])
    io.print("hb1 becomes");	# 16 IOprint_val (_33:int)<-(_34:str)
    io.print(hb1);	# 17 IOprint_val (_35:int)<-(hb1:bat[:chr,:int])
end main;	# 18  
[ "group x" ]
#-----------------#
# h	tmp_4	  # name
# oid	chr	  # type
#-----------------#
[ 1@0,	  'a'	  ]
[ 2@0,	  'a'	  ]
[ 3@0,	  'b'	  ]
[ 4@0,	  'b'	  ]
[ 5@0,	  'b'	  ]
[ 6@0,	  'b'	  ]
[ 7@0,	  'c'	  ]
[ 8@0,	  'c'	  ]
[ "b1 becomes" ]
#-----------------#
# h	tmp_5	  # name
# oid	oid	  # type
#-----------------#
[ 1@0,	  1@0	  ]
[ 2@0,	  1@0	  ]
[ 3@0,	  3@0	  ]
[ 4@0,	  3@0	  ]
[ 5@0,	  3@0	  ]
[ 6@0,	  3@0	  ]
[ 7@0,	  7@0	  ]
[ 8@0,	  7@0	  ]
[ "hb1 becomes" ]
#-------------------------#
# h	histo_tmp_5	  # name
# oid	int		  # type
#-------------------------#
[ 1@0,	  2		  ]
[ 3@0,	  4		  ]
[ 7@0,	  2		  ]

# 07:59:06 >  
# 07:59:06 >  Done.
# 07:59:06 >  

