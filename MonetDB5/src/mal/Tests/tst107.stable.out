stdout of test 'tst107` in directory 'src/mal` itself:


# 07:58:58 >  
# 07:58:58 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst107.mal </dev/null
# 07:58:58 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## analyse the basic interpreter loop
#
#	i:=0;
#barrier	v:= true;
#	leave v;
#	i:= 1;
#exit	v;
#barrier t:= i<3;
#	i:=i+1;
#	redo t:=i<3;
#exit	t;
#	i:= 0;
#
function user.main():void;              #  0 main:void := user.main() 
# analyse the basic interpreter loop 
    i := 0;                             #  2 i:int := _3:int 
barrier v := true;                      #  3 v:bit := _5:bit {J6}
    leave v;                            #  4 v:bit {J6}
    i := 1;                             #  5 i:int := _6:int 
exit v;                                 #  6 v:bit 
barrier t := calc.<(i,3);               #  7 t:bit := CALCcompLTintint(i:int, _8:int) {J10}
    i := calc.+(i,1);                   #  8 i:int := CALCbinaryADDintint(i:int, _6:int) 
    redo t := calc.<(i,3);              #  9 t:bit := CALCcompLTintint(i:int, _8:int) {J8}
exit t;                                 # 10 t:bit 
    i := 0;                             # 11 i:int := _3:int 
end main;	# 12  

# 07:58:58 >  
# 07:58:58 >  Done.
# 07:58:58 >  

