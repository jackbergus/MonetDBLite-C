stdout of test 'tst042` in directory 'src/mal` itself:


# 07:58:44 >  
# 07:58:44 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst042.mal </dev/null
# 07:58:44 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#s := "hello";
#i := 1;
#f := 3.14;
#c := 'a';
#b:= true;
#bb:= new(:void,:str);
#
#st:= getType(s); printf("string %d\n",st);
#it:= getType(i); printf("int %d\n",it);
#ft:= getType(f); printf("flt %d\n",ft);
#ct:= getType(c); printf("chr %d\n",ct);
#bt:= getType(b); printf("bit %d\n",bt);
#bbt:= getType(bb); printf("bat %d\n",bbt);
#
## get them as strings
#v:= "";
#v:= getTypeName(st); printf("string %s\n",v);
#v:= getTypeName(it); printf("int %s\n",v);
#v:= getTypeName(ft); printf("flt %s\n",v);
#v:= getTypeName(ct); printf("chr %s\n",v);
#v:= getTypeName(bt); printf("bit %s\n",v);
#v:= getTypeName(bbt); printf("bat %s\n",v);
#
#
function user.main():int;	# 0  (main:int)
    s := "hello";	# 1  (s:str)<-(_2:str)
    i := 1;	# 2  (i:int)<-(_4:int)
    f := 3.1400001;	# 3  (f:flt)<-(_6:flt)
    c := 'a';	# 4  (c:chr)<-(_8:chr)
    b := true;	# 5  (b:bit)<-(_10:bit)
    bb := bat.new(:void,:str);	# 6 CMDBATnew (bb:bat[:void,:str])<-(_12:void)(_13:str)
    st := inspect.getType(s);	# 7 INSPECTtype (st:int)<-(s:str)
    io.printf("string %d\n",st);	# 8 IOprint_formatted_int (_15:int)<-(_16:str)(st:int)
    it := inspect.getType(i);	# 9 INSPECTtype (it:int)<-(i:int)
    io.printf("int %d\n",it);	# 10 IOprint_formatted_int (_18:int)<-(_19:str)(it:int)
    ft := inspect.getType(f);	# 11 INSPECTtype (ft:int)<-(f:flt)
    io.printf("flt %d\n",ft);	# 12 IOprint_formatted_int (_21:int)<-(_22:str)(ft:int)
    ct := inspect.getType(c);	# 13 INSPECTtype (ct:int)<-(c:chr)
    io.printf("chr %d\n",ct);	# 14 IOprint_formatted_int (_24:int)<-(_25:str)(ct:int)
    bt := inspect.getType(b);	# 15 INSPECTtype (bt:int)<-(b:bit)
    io.printf("bit %d\n",bt);	# 16 IOprint_formatted_int (_27:int)<-(_28:str)(bt:int)
    bbt := inspect.getType(bb);	# 17 INSPECTtype (bbt:int)<-(bb:bat[:void,:str])
    io.printf("bat %d\n",bbt);	# 18 IOprint_formatted_int (_30:int)<-(_31:str)(bbt:int)
# get them as strings 	# 19  (_33:str)
    v := "";	# 20  (v:str)<-(_35:str)
    v := inspect.getTypeName(st);	# 21 INSPECTtypename (v:str)<-(st:int)
    io.printf("string %s\n",v);	# 22 IOprint_formatted_str (_36:int)<-(_37:str)(v:str)
    v := inspect.getTypeName(it);	# 23 INSPECTtypename (v:str)<-(it:int)
    io.printf("int %s\n",v);	# 24 IOprint_formatted_str (_38:int)<-(_39:str)(v:str)
    v := inspect.getTypeName(ft);	# 25 INSPECTtypename (v:str)<-(ft:int)
    io.printf("flt %s\n",v);	# 26 IOprint_formatted_str (_40:int)<-(_41:str)(v:str)
    v := inspect.getTypeName(ct);	# 27 INSPECTtypename (v:str)<-(ct:int)
    io.printf("chr %s\n",v);	# 28 IOprint_formatted_str (_42:int)<-(_43:str)(v:str)
    v := inspect.getTypeName(bt);	# 29 INSPECTtypename (v:str)<-(bt:int)
    io.printf("bit %s\n",v);	# 30 IOprint_formatted_str (_44:int)<-(_45:str)(v:str)
    v := inspect.getTypeName(bbt);	# 31 INSPECTtypename (v:str)<-(bbt:int)
    io.printf("bat %s\n",v);	# 32 IOprint_formatted_str (_46:int)<-(_47:str)(v:str)
end main;	# 33  
string 11
int 5
flt 8
chr 2
bit 1
bat 65547
string str
int int
flt flt
chr chr
bit bit
bat bat[:void,:str]

# 07:58:44 >  
# 07:58:44 >  Done.
# 07:58:44 >  

