stdout of test 'tst042` in directory 'src/mal` itself:


# 07:58:44 >  
# 07:58:44 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst042.mal </dev/null
# 07:58:44 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
#s := "hello";
#i := 1;
#f := 3.14;
#c := 'a';
#b:= true;
#bb:= new(:void,:str);
#
#st:= getType(s); printf("string %d\n",st);
#it:= getType(i); printf("int %d\n",it);
#ft:= getType(f); printf("flt %d\n",ft);
#ct:= getType(c); printf("chr %d\n",ct);
#bt:= getType(b); printf("bit %d\n",bt);
#bbt:= getType(bb); printf("bat %d\n",bbt);
#
## get them as strings
#v:= "";
#v:= getTypeName(st); printf("string %s\n",v);
#v:= getTypeName(it); printf("int %s\n",v);
#v:= getTypeName(ft); printf("flt %s\n",v);
#v:= getTypeName(ct); printf("chr %s\n",v);
#v:= getTypeName(bt); printf("bit %s\n",v);
#v:= getTypeName(bbt); printf("bat %s\n",v);
#
#
function user.main():void;	# 0  (main:void)
    s := "hello";	# 1  (s:str)<-(_2:str)
    i := 1;	# 2  (i:int)<-(_4:int)
    f := 3.1400001;	# 3  (f:flt)<-(_6:flt)
    c := 'a';	# 4  (c:chr)<-(_8:chr)
    b := true;	# 5  (b:bit)<-(_10:bit)
    w := 1:wrd;	# 6  (w:wrd)<-(_12:wrd)
    B := 2:bte;	# 7  (B:bte)<-(_14:bte)
    bb := bat.new(:oid,:str);	# 8 CMDBATnew (bb:bat[:oid,:str])<-(_16:oid)(_17:str)
    st := inspect.getType(s);	# 9 INSPECTtypeName (st:str)<-(s:str)
    io.printf("%s\n",st);	# 10 IOprint_formatted_str (_19:void)<-(_20:str)(st:str)
    it := inspect.getType(i);	# 11 INSPECTtypeName (it:str)<-(i:int)
    io.printf("%s\n",it);	# 12 IOprint_formatted_str (_22:void)<-(_20:str)(it:str)
    ft := inspect.getType(f);	# 13 INSPECTtypeName (ft:str)<-(f:flt)
    io.printf("%s\n",ft);	# 14 IOprint_formatted_str (_24:void)<-(_20:str)(ft:str)
    ct := inspect.getType(c);	# 15 INSPECTtypeName (ct:str)<-(c:chr)
    io.printf("%s\n",ct);	# 16 IOprint_formatted_str (_26:void)<-(_20:str)(ct:str)
    bt := inspect.getType(b);	# 17 INSPECTtypeName (bt:str)<-(b:bit)
    io.printf("%s\n",bt);	# 18 IOprint_formatted_str (_28:void)<-(_20:str)(bt:str)
    wt := inspect.getType(w);	# 19 INSPECTtypeName (wt:str)<-(w:wrd)
    io.printf("%s\n",wt);	# 20 IOprint_formatted_str (_30:void)<-(_20:str)(wt:str)
    Bt := inspect.getType(B);	# 21 INSPECTtypeName (Bt:str)<-(B:bte)
    io.printf("%s\n",Bt);	# 22 IOprint_formatted_str (_32:void)<-(_20:str)(Bt:str)
    (ht,tt):= inspect.getType(bb);	# 23 INSPECTtypeName (ht:str)(tt:str)<-(bb:bat[:oid,:str])
    io.printf("bat  head %s\n",ht);	# 24 IOprint_formatted_str (_35:void)<-(_36:str)(ht:str)
    io.printf("bat  head %s\n",tt);	# 25 IOprint_formatted_str (_37:void)<-(_36:str)(tt:str)
end main;	# 26  
str
int
flt
chr
bit
wrd
bte
bat  head oid
bat  head str

# 07:58:44 >  
# 07:58:44 >  Done.
# 07:58:44 >  

