stdout of test 'tst890` in directory 'src/mal` itself:


# 08:01:32 >  
# 08:01:32 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst890.mal </dev/null
# 08:01:32 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
##test reference counting of batcalc
#b:= new(:int,:int);
#setName(b,"b");
#insert(b,1,1);
#c:=multiplex.tactics("+",b,2);
#c:=multiplex.tactics("+",b,3);
#c:=multiplex.tactics("+",b,4);
#c:=multiplex.tactics("+",b,5);
#c:=multiplex.tactics("+",b,6);
#c:=multiplex.tactics("+",b,7);
#c:=multiplex.tactics("+",b,8);
#print(c);
#d:= bbp.getRefCount();
#dl:=bbp.getLRefCount();
#dn:= bbp.getNames();
#print(dn,d,dl);
#
#
function user.main():void;	# 0  (main:void)
#test reference counting of batcalc 	# 1  (_1:str)
    b := bat.new(:int,:int);	# 2 CMDBATnew (b:bat[:int,:int])<-(_3:int)(_3:int)
    bat.setName(b,"b");	# 3 BKCsetName (_4:void)<-(b:bat[:int,:int])(_5:str)
    bat.insert(b,1,1);	# 4 BKCinsert_bun_int_int (_6:void)<-(b:bat[:int,:int])(_7:int)(_7:int)
    c := batcalc.+(b,2);	# 5 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_9:int)
    c := batcalc.+(b,3);	# 6 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_10:int)
    c := batcalc.+(b,4);	# 7 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_11:int)
    c := batcalc.+(b,5);	# 8 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_12:int)
    c := batcalc.+(b,6);	# 9 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_13:int)
    c := batcalc.+(b,7);	# 10 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_14:int)
    c := batcalc.+(b,8);	# 11 CMDbatADDcst_int_int_int (c:bat[:int,:int])<-(b:bat[:int,:int])(_15:int)
    io.print(c);	# 12 IOprint_val (_16:int)<-(c:bat[:int,:int])
    d := bbp.getRefCount();	# 13 CMDbbpRefCount (d:bat[:int,:int])
    dl := bbp.getLRefCount();	# 14 CMDbbpLRefCount (dl:bat[:int,:int])
    dn := bbp.getNames();	# 15 CMDbbpNames (dn:bat[:int,:str])
    io.print(dn,d,dl);	# 16 IOtable (_20:int)<-(dn:bat[:int,:str])(d:bat[:int,:int])(dl:bat[:int,:int])
end main;	# 17  
#-----------------#
# h	tmp_5	  # name
# int	int	  # type
#-----------------#
[ 1,	  9	  ]
#---------------------------------------------------------#
# bbp	name			refcnt	lrefcnt		  # name
# int	str			int	int		  # type
#---------------------------------------------------------#
[ 1,	  "monet_environment",	  1,	  0		  ]
[ 2,	  "monet_unicode_case",	  1,	  0		  ]
[ 3,	  "timezones",		  1,	  0		  ]
[ 4,	  "users",		  1,	  1		  ]
[ 5,	  "password",		  1,	  1		  ]
[ 6,	  "b",			  0,	  1		  ]
[ 7,	  "trace_id_time",	  0,	  1		  ]
[ 8,	  "trace_id_ticks",	  0,	  1		  ]
[ 9,	  "trace_id_pc",	  0,	  1		  ]
[ 10,	  "trace_id_modfcn",	  0,	  1		  ]
[ 11,	  "trace_id_statement",	  0,	  1		  ]
[ 12,	  "tmp_14",		  0,	  1		  ]

# 08:01:32 >  
# 08:01:32 >  Done.
# 08:01:32 >  

