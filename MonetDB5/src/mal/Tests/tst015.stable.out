stdout of test 'tst015` in directory 'src/mal` itself:


# 07:58:37 >  
# 07:58:37 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst015.mal </dev/null
# 07:58:37 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Testing barriers with variables, constants and expressions
#	b:= true;
#barrier	b;
#	printf("1 Correctly entered barrier\n");
#exit	b;
#	b:= false;
#barrier b;
#	printf("1 Incorrectly entered barrier\n");
#exit	b;
#
#	i:= 1;
#barrier	c:= i==1;
#	printf("2 Correctly entered barrier\n");
#exit	c;
#barrier c:= i==0;
#	printf("2 Incorrectly entered barrier\n");
#exit	c;
#
#
function user.main():void;              #  0 main:void := user.main() 
# Testing barriers with variables, constants and expressions 
    b := true;                          #  2 b:bit := _3:bit 
barrier b;                              #  3 b:bit {J5}
    io.printf("1 Correctly entered barrier\n");#  4 _4:void := IOprintf(_5:str) 
exit b;                                 #  5 b:bit 
    b := false;                         #  6 b:bit := _6:bit 
barrier b;                              #  7 b:bit {J9}
    io.printf("1 Incorrectly entered barrier\n");#  8 _7:void := IOprintf(_8:str) 
exit b;                                 #  9 b:bit 
    i := 1;                             # 10 i:int := _10:int 
barrier c := calc.==(i,1);              # 11 c:bit := CALCcompEQintint(i:int, _10:int) {J13}
    io.printf("2 Correctly entered barrier\n");# 12 _12:void := IOprintf(_13:str) 
exit c;                                 # 13 c:bit 
barrier c := calc.==(i,0);              # 14 c:bit := CALCcompEQintint(i:int, _14:int) {J16}
    io.printf("2 Incorrectly entered barrier\n");# 15 _15:void := IOprintf(_16:str) 
exit c;                                 # 16 c:bit 
end main;	# 17  
1 Correctly entered barrier
2 Correctly entered barrier

# 07:58:37 >  
# 07:58:37 >  Done.
# 07:58:37 >  

