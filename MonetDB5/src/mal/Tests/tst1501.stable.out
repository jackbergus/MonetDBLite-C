stdout of test 'tst1501` in directory 'src/mal` itself:


# 07:59:06 >  
# 07:59:06 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1501.mal </dev/null
# 07:59:06 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
#	x := bat.new(:oid,:chr);
#	de_a := bat.insert(x,1@0,'a');
#	ee_a := bat.insert(x,2@0,'a');
#	fe_a := bat.insert(x,3@0,'b');
#	ge_a := bat.insert(x,4@0,'b');
#	he_a := bat.insert(x,5@0,'b');
#	ie_a := bat.insert(x,6@0,'b');
#	je_a := bat.insert(x,7@0,'c');
#	ke_a := bat.insert(x,8@0,'c');
#
#	y := bat.new(:oid,:dbl);
#	le_a := calc.dbl(1.0);
#	me_a := bat.insert(y,1@0,le_a);
#	ne_a := calc.dbl(2.0);
#	oe_a := bat.insert(y,2@0,ne_a);
#	pe_a := calc.dbl(2.0);
#	qe_a := bat.insert(y,3@0,pe_a);
#	re_a := calc.dbl(2.0);
#	se_a := bat.insert(y,4@0,re_a);
#	te_a := calc.dbl(2.0);
#	ue_a := bat.insert(y,5@0,te_a);
#	ve_a := calc.dbl(3.0);
#	we_a := bat.insert(y,6@0,ve_a);
#	xe_a := calc.dbl(1.0);
#	ye_a := bat.insert(y,7@0,xe_a);
#	af_a := calc.dbl(1.0);
#	bf_a := bat.insert(y,8@0,af_a);
#
#	z := bat.new(:oid,:str);
#	cf_a := bat.insert(z,1@0,"c");
#	df_a := bat.insert(z,2@0,"a");
#	ef_a := bat.insert(z,3@0,"b");
#	ff_a := bat.insert(z,4@0,"c");
#	gf_a := bat.insert(z,5@0,"a");
#	hf_a := bat.insert(z,6@0,"a");
#	if_a := bat.insert(z,7@0,"c");
#	jf_a := bat.insert(z,8@0,"a");
#o:= bat.mirror(x);
#io.print(x,y);
#io.table(o,y);
#io.table(o,x,y);
#io.print(x,y,z);
#io.table(o,x,y,z);
#
#
function user.main():void;	# 0  (main:void)
    x := bat.new(:oid,:chr);	# 1 CMDBATnew (x:bat[:oid,:chr])<-(_2:oid)(_3:chr)
    de_a := bat.insert(x,1@0,'a');	# 2 BKCinsert_bun (de_a:void)<-(x:bat[:oid,:chr])(_5:oid)(_6:chr)
    ee_a := bat.insert(x,2@0,'a');	# 3 BKCinsert_bun (ee_a:void)<-(x:bat[:oid,:chr])(_8:oid)(_6:chr)
    fe_a := bat.insert(x,3@0,'b');	# 4 BKCinsert_bun (fe_a:void)<-(x:bat[:oid,:chr])(_10:oid)(_11:chr)
    ge_a := bat.insert(x,4@0,'b');	# 5 BKCinsert_bun (ge_a:void)<-(x:bat[:oid,:chr])(_13:oid)(_11:chr)
    he_a := bat.insert(x,5@0,'b');	# 6 BKCinsert_bun (he_a:void)<-(x:bat[:oid,:chr])(_15:oid)(_11:chr)
    ie_a := bat.insert(x,6@0,'b');	# 7 BKCinsert_bun (ie_a:void)<-(x:bat[:oid,:chr])(_17:oid)(_11:chr)
    je_a := bat.insert(x,7@0,'c');	# 8 BKCinsert_bun (je_a:void)<-(x:bat[:oid,:chr])(_19:oid)(_20:chr)
    ke_a := bat.insert(x,8@0,'c');	# 9 BKCinsert_bun (ke_a:void)<-(x:bat[:oid,:chr])(_22:oid)(_20:chr)
    y := bat.new(:oid,:dbl);	# 10 CMDBATnew (y:bat[:oid,:dbl])<-(_2:oid)(_24:dbl)
    le_a := calc.dbl(1);	# 11 CALCflt2dbl (le_a:dbl)<-(_26:flt)
    me_a := bat.insert(y,1@0,le_a);	# 12 BKCinsert_bun (me_a:void)<-(y:bat[:oid,:dbl])(_5:oid)(le_a:dbl)
    ne_a := calc.dbl(2);	# 13 CALCflt2dbl (ne_a:dbl)<-(_29:flt)
    oe_a := bat.insert(y,2@0,ne_a);	# 14 BKCinsert_bun (oe_a:void)<-(y:bat[:oid,:dbl])(_8:oid)(ne_a:dbl)
    pe_a := calc.dbl(2);	# 15 CALCflt2dbl (pe_a:dbl)<-(_29:flt)
    qe_a := bat.insert(y,3@0,pe_a);	# 16 BKCinsert_bun (qe_a:void)<-(y:bat[:oid,:dbl])(_10:oid)(pe_a:dbl)
    re_a := calc.dbl(2);	# 17 CALCflt2dbl (re_a:dbl)<-(_29:flt)
    se_a := bat.insert(y,4@0,re_a);	# 18 BKCinsert_bun (se_a:void)<-(y:bat[:oid,:dbl])(_13:oid)(re_a:dbl)
    te_a := calc.dbl(2);	# 19 CALCflt2dbl (te_a:dbl)<-(_29:flt)
    ue_a := bat.insert(y,5@0,te_a);	# 20 BKCinsert_bun (ue_a:void)<-(y:bat[:oid,:dbl])(_15:oid)(te_a:dbl)
    ve_a := calc.dbl(3);	# 21 CALCflt2dbl (ve_a:dbl)<-(_38:flt)
    we_a := bat.insert(y,6@0,ve_a);	# 22 BKCinsert_bun (we_a:void)<-(y:bat[:oid,:dbl])(_17:oid)(ve_a:dbl)
    xe_a := calc.dbl(1);	# 23 CALCflt2dbl (xe_a:dbl)<-(_26:flt)
    ye_a := bat.insert(y,7@0,xe_a);	# 24 BKCinsert_bun (ye_a:void)<-(y:bat[:oid,:dbl])(_19:oid)(xe_a:dbl)
    af_a := calc.dbl(1);	# 25 CALCflt2dbl (af_a:dbl)<-(_26:flt)
    bf_a := bat.insert(y,8@0,af_a);	# 26 BKCinsert_bun (bf_a:void)<-(y:bat[:oid,:dbl])(_22:oid)(af_a:dbl)
    z := bat.new(:oid,:str);	# 27 CMDBATnew (z:bat[:oid,:str])<-(_2:oid)(_45:str)
    cf_a := bat.insert(z,1@0,"c");	# 28 BKCinsert_bun (cf_a:void)<-(z:bat[:oid,:str])(_47:oid)(_48:str)
    df_a := bat.insert(z,2@0,"a");	# 29 BKCinsert_bun (df_a:void)<-(z:bat[:oid,:str])(_50:oid)(_51:str)
    ef_a := bat.insert(z,3@0,"b");	# 30 BKCinsert_bun (ef_a:void)<-(z:bat[:oid,:str])(_53:oid)(_54:str)
    ff_a := bat.insert(z,4@0,"c");	# 31 BKCinsert_bun (ff_a:void)<-(z:bat[:oid,:str])(_56:oid)(_48:str)
    gf_a := bat.insert(z,5@0,"a");	# 32 BKCinsert_bun (gf_a:void)<-(z:bat[:oid,:str])(_58:oid)(_51:str)
    hf_a := bat.insert(z,6@0,"a");	# 33 BKCinsert_bun (hf_a:void)<-(z:bat[:oid,:str])(_60:oid)(_51:str)
    if_a := bat.insert(z,7@0,"c");	# 34 BKCinsert_bun (if_a:void)<-(z:bat[:oid,:str])(_62:oid)(_48:str)
    jf_a := bat.insert(z,8@0,"a");	# 35 BKCinsert_bun (jf_a:void)<-(z:bat[:oid,:str])(_64:oid)(_51:str)
    o := bat.mirror(x);	# 36 BKCmirror (o:bat[:oid,:oid])<-(x:bat[:oid,:chr])
    io.print(x,y);	# 37 IOtable (_66:void)<-(x:bat[:oid,:chr])(y:bat[:oid,:dbl])
    io.table(o,y);	# 38 IOttable (_67:void)<-(o:bat[:oid,:oid])(y:bat[:oid,:dbl])
    io.table(o,x,y);	# 39 IOttable (_68:void)<-(o:bat[:oid,:oid])(x:bat[:oid,:chr])(y:bat[:oid,:dbl])
    io.print(x,y,z);	# 40 IOtable (_69:void)<-(x:bat[:oid,:chr])(y:bat[:oid,:dbl])(z:bat[:oid,:str])
    io.table(o,x,y,z);	# 41 IOttable (_70:void)<-(o:bat[:oid,:oid])(x:bat[:oid,:chr])(y:bat[:oid,:dbl])(z:bat[:oid,:str])
end main;	# 42  
#-------------------------#
# h	t	t	  # name
# oid	chr	dbl	  # type
#-------------------------#
[ 1@0,	  'a',	  1	  ]
[ 2@0,	  'a',	  2	  ]
[ 3@0,	  'b',	  2	  ]
[ 4@0,	  'b',	  2	  ]
[ 5@0,	  'b',	  2	  ]
[ 6@0,	  'b',	  3	  ]
[ 7@0,	  'c',	  1	  ]
[ 8@0,	  'c',	  1	  ]
#-----------------#
# t	t	  # name
# oid	dbl	  # type
#-----------------#
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  2	  ]
[ 4@0,	  2	  ]
[ 5@0,	  2	  ]
[ 6@0,	  3	  ]
[ 7@0,	  1	  ]
[ 8@0,	  1	  ]
#-------------------------#
# t	t	t	  # name
# oid	chr	dbl	  # type
#-------------------------#
[ 1@0,	  'a',	  1	  ]
[ 2@0,	  'a',	  2	  ]
[ 3@0,	  'b',	  2	  ]
[ 4@0,	  'b',	  2	  ]
[ 5@0,	  'b',	  2	  ]
[ 6@0,	  'b',	  3	  ]
[ 7@0,	  'c',	  1	  ]
[ 8@0,	  'c',	  1	  ]
#---------------------------------#
# h	t	t	t	  # name
# oid	chr	dbl	str	  # type
#---------------------------------#
[ 1@0,	  'a',	  1,	  "c"	  ]
[ 2@0,	  'a',	  2,	  "a"	  ]
[ 3@0,	  'b',	  2,	  "b"	  ]
[ 4@0,	  'b',	  2,	  "c"	  ]
[ 5@0,	  'b',	  2,	  "a"	  ]
[ 6@0,	  'b',	  3,	  "a"	  ]
[ 7@0,	  'c',	  1,	  "c"	  ]
[ 8@0,	  'c',	  1,	  "a"	  ]
#---------------------------------#
# t	t	t	t	  # name
# oid	chr	dbl	str	  # type
#---------------------------------#
[ 1@0,	  'a',	  1,	  "c"	  ]
[ 2@0,	  'a',	  2,	  "a"	  ]
[ 3@0,	  'b',	  2,	  "b"	  ]
[ 4@0,	  'b',	  2,	  "c"	  ]
[ 5@0,	  'b',	  2,	  "a"	  ]
[ 6@0,	  'b',	  3,	  "a"	  ]
[ 7@0,	  'c',	  1,	  "c"	  ]
[ 8@0,	  'c',	  1,	  "a"	  ]



# 07:59:06 >  
# 07:59:06 >  Done.
# 07:59:06 >  

