stdout of test 'tst265` in directory 'src/mal` itself:


# 12:51:03 >  
# 12:51:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=46688 --set sql_port=58566 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst265.mal </dev/null
# 12:51:03 >  

# Monet Database Server V4.7.0
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Grouped sums
#b:= new(:void,:int);
#setSequenceBase(b,0:oid);
#insert(b,1);
#insert(b,2);
#insert(b,3);
#insert(b,4);
#insert(b,5);
#insert(b,6);
#insert(b,7);
#insert(b,8);
#insert(b,9);
#print(b);
#
#g:= group.sum(b,3);
#print(g);
#
## and use a sliding window
#g:= group.sum(b,3,1);
#print(g);
#
function user.main():void;              #  0 main:void {G}
# Grouped sums 
    b := bat.new(:oid,:int);            #  2 b:bat[:oid,:int] := CMDBATnew(_3:oid, _4:int) {G}
    bat.append(b,1);                    #  3 _5:void := BKCappend_val_wrap(b:bat[:oid,:int], _6:int) 
    bat.append(b,2);                    #  4 _7:void := BKCappend_val_wrap(b:bat[:oid,:int], _8:int) 
    bat.append(b,3);                    #  5 _9:void := BKCappend_val_wrap(b:bat[:oid,:int], _10:int) 
    bat.append(b,4);                    #  6 _11:void := BKCappend_val_wrap(b:bat[:oid,:int], _12:int) 
    bat.append(b,5);                    #  7 _13:void := BKCappend_val_wrap(b:bat[:oid,:int], _14:int) 
    bat.append(b,6);                    #  8 _15:void := BKCappend_val_wrap(b:bat[:oid,:int], _16:int) 
    bat.append(b,7);                    #  9 _17:void := BKCappend_val_wrap(b:bat[:oid,:int], _18:int) 
    bat.append(b,8);                    # 10 _19:void := BKCappend_val_wrap(b:bat[:oid,:int], _20:int) 
    bat.append(b,9);                    # 11 _21:void := BKCappend_val_wrap(b:bat[:oid,:int], _22:int) 
    io.print(b);                        # 12 _23:void := IOprint_val(b:bat[:oid,:int]) 
    g := group.sum(b,3);                # 13 g:bat[:oid,:int] := GRPwindowsum_int(b:bat[:oid,:int], _10:int) {G}
    io.print(g);                        # 14 _25:void := IOprint_val(g:bat[:oid,:int]) 
# and use a sliding window 
    g := group.sum(b,3,1);              # 16 g:bat[:oid,:int] := GRPslidingsum_int(b:bat[:oid,:int], _10:int, _6:int) {G}
    io.print(g);                        # 17 _27:void := IOprint_val(g:bat[:oid,:int]) 
end main;	# 18  
#-----------------#
# h	tmp_13	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
[ 2@0,	  3	  ]
[ 3@0,	  4	  ]
[ 4@0,	  5	  ]
[ 5@0,	  6	  ]
[ 6@0,	  7	  ]
[ 7@0,	  8	  ]
[ 8@0,	  9	  ]
#-----------------#
# h	tmp_14	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  6	  ]
[ 1@0,	  15	  ]
[ 2@0,	  24	  ]
#-----------------#
# h	tmp_15	  # name
# void	lng	  # type
#-----------------#
[ 0@0,	  6	  ]
[ 1@0,	  9	  ]
[ 2@0,	  12	  ]
[ 3@0,	  15	  ]
[ 4@0,	  18	  ]
[ 5@0,	  21	  ]
[ 6@0,	  24	  ]
[ 7@0,	  17	  ]

# 12:51:03 >  
# 12:51:03 >  Done.
# 12:51:03 >  

