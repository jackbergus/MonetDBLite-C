stdout of test 'tst755` in directory 'src/mal` itself:


# 08:01:29 >  
# 08:01:29 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst755.mal </dev/null
# 08:01:29 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Polymorphic function tests
## Catching a pervasive error a.s.a.p.
## The function may not be cloned and a secondary error is generated
#function test(b:bat[:any$1,:any$2],c:any$2);
#	k:= 1+"wrong";
#	print(k);
#end test;
function user.test(b:bat[:any_1,:any_2],c:any_2):void;	# 0  (test:void)<-(b:bat[:any_1,:any_2])(c:any_2)
    k := calc.+(1,"wrong");	# 1  (k:any)<-($4:int)($5:str)
    io.print(k);	# 2 IOprint_val ($6:int)<-(k:any)
end test;	# 3  
#
#c:=new(:int,:str);
#test(c,"hello");
#
!ERROR: 'calc.+' undefined in user.test[1]
!ERROR: Error in cloned function
!ERROR: function user.test(b:bat[:int,:str],c:str):void;	# 0  (test:void)<-(b:bat[:int,:str])(c:str)
!ERROR:     k := calc.+(1,"wrong");	# 1  unknown (k:any)<-($4:int)($5:str)
!ERROR:     io.print(k);	# 2 IOprint_val ($6:int)<-(k:any)
!ERROR: end test;	# 3  
!ERROR: 'user.test' undefined in user.main[5]
function user.main():int;	# 0  (main:int)
# Polymorphic function tests 	# 1  ($2:str)
# Catching a pervasive error a.s.a.p. 	# 2  ($4:str)
# The function may not be cloned and a secondary error is generated 	# 3  ($6:str)
    c := bbp.new(:int,:str);	# 4 CMDBATnew (c:bat[:int,:str])<-($8:int)($9:str)
    user.test(c,"hello");	# 5  unknown ($10:void)<-(c:bat[:int,:str])($11:str)
end main;	# 6  

# 08:01:30 >  
# 08:01:30 >  Done.
# 08:01:30 >  

