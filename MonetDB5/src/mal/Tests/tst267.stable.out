stdout of test 'tst267` in directory 'src/mal` itself:


# 20:55:59 >  
# 20:55:59 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=40036 --set sql_port=52173 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst267.mal </dev/null
# 20:55:59 >  

# Monet Database Server V4.7.0
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Grouped sums
#a:= new(:void,:int);
#setSequenceBase(a,0:oid);
#b:= new(:void,:int);
#setSequenceBase(b,0:oid);
#insert(a,1);
#insert(a,2);
#insert(b,3);
#insert(b,4);
#insert(b,5);
#print(a);
#print(b);
#
#g:= array.*(a,b);
#print(g);
#
function user.main():void;	# 0  (main:void)
# Grouped sums 	# 1  (_1:str)
    a := bat.new(:void,:int);	# 2 CMDBATnew (a:bat[:void,:int])<-(_3:void)(_4:int)
    bat.setSequenceBase(a,0@0:oid);	# 3 BKCsetSequenceBase (_5:bat[:void,:int])<-(a:bat[:void,:int])(_6:oid)
    b := bat.new(:void,:int);	# 4 CMDBATnew (b:bat[:void,:int])<-(_3:void)(_4:int)
    bat.setSequenceBase(b,0@0:oid);	# 5 BKCsetSequenceBase (_8:bat[:void,:int])<-(b:bat[:void,:int])(_6:oid)
    bat.insert(a,1);	# 6 BKCinsert_void_bun (_9:void)<-(a:bat[:void,:int])(_10:int)
    bat.insert(a,2);	# 7 BKCinsert_void_bun (_11:void)<-(a:bat[:void,:int])(_12:int)
    bat.insert(b,5);	# 8 BKCinsert_void_bun (_13:void)<-(b:bat[:void,:int])(_14:int)
    bat.insert(b,6);	# 9 BKCinsert_void_bun (_15:void)<-(b:bat[:void,:int])(_16:int)
    bat.insert(b,7);	# 10 BKCinsert_void_bun (_17:void)<-(b:bat[:void,:int])(_18:int)
    bat.insert(b,8);	# 11 BKCinsert_void_bun (_19:void)<-(b:bat[:void,:int])(_20:int)
    io.print(a);	# 12 IOprint_val (_21:int)<-(a:bat[:void,:int])
    io.print(b);	# 13 IOprint_val (_22:int)<-(b:bat[:void,:int])
    g := array.product(a,b);	# 14 ARRAYproduct (g:bat[:int,:int])<-(a:bat[:void,:int])(b:bat[:void,:int])
    io.print(g);	# 15 IOprint_val (_24:int)<-(g:bat[:int,:int])
end main;	# 16  
#-----------------#
# h	tmp_13	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
#-----------------#
# h	tmp_14	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  5	  ]
[ 1@0,	  6	  ]
[ 2@0,	  7	  ]
[ 3@0,	  8	  ]
#-----------------#
# h	tmp_15	  # name
# void	int	  # type
#-----------------#
[ 1,	  5	  ]
[ 2,	  6	  ]
[ 1,	  7	  ]
[ 2,	  8	  ]

# 20:55:59 >  
# 20:55:59 >  Done.
# 20:55:59 >  

