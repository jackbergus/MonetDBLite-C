stdout of test 'tst267` in directory 'src/mal` itself:


# 20:55:59 >  
# 20:55:59 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=40036 --set sql_port=52173 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst267.mal </dev/null
# 20:55:59 >  

# Monet Database Server V4.7.0
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Grouped sums
#a:= new(:void,:int);
#setSequenceBase(a,0:oid);
#b:= new(:void,:int);
#setSequenceBase(b,0:oid);
#insert(a,1);
#insert(a,2);
#insert(b,3);
#insert(b,4);
#insert(b,5);
#print(a);
#print(b);
#
#g:= array.*(a,b);
#print(g);
#
function user.main():void;              #  0 main:void {G}
# Grouped sums 
    a := bat.new(:oid,:int);            #  2 a:bat[:oid,:int] := CMDBATnew(_3:oid, _4:int) {G}
    b := bat.new(:oid,:int);            #  3 b:bat[:oid,:int] := CMDBATnew(_3:oid, _4:int) {G}
    bat.append(a,1);                    #  4 _6:void := BKCappend_val_wrap(a:bat[:oid,:int], _7:int) 
    bat.append(a,2);                    #  5 _8:void := BKCappend_val_wrap(a:bat[:oid,:int], _9:int) 
    bat.append(b,5);                    #  6 _10:void := BKCappend_val_wrap(b:bat[:oid,:int], _11:int) 
    bat.append(b,6);                    #  7 _12:void := BKCappend_val_wrap(b:bat[:oid,:int], _13:int) 
    bat.append(b,7);                    #  8 _14:void := BKCappend_val_wrap(b:bat[:oid,:int], _15:int) 
    bat.append(b,8);                    #  9 _16:void := BKCappend_val_wrap(b:bat[:oid,:int], _17:int) 
    io.print(a);                        # 10 _18:void := IOprint_val(a:bat[:oid,:int]) 
    io.print(b);                        # 11 _19:void := IOprint_val(b:bat[:oid,:int]) 
    g := array.product(a,b);            # 12 g:bat[:int,:int] := ARRAYproduct(a:bat[:oid,:int], b:bat[:oid,:int]) {G}
    io.print(g);                        # 13 _21:void := IOprint_val(g:bat[:int,:int]) 
end main;	# 14  
#-----------------#
# h	tmp_13	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
#-----------------#
# h	tmp_14	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  5	  ]
[ 1@0,	  6	  ]
[ 2@0,	  7	  ]
[ 3@0,	  8	  ]
#-----------------#
# h	tmp_15	  # name
# void	int	  # type
#-----------------#
[ 1,	  5	  ]
[ 2,	  6	  ]
[ 1,	  7	  ]
[ 2,	  8	  ]

# 20:55:59 >  
# 20:55:59 >  Done.
# 20:55:59 >  

