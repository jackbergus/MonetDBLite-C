stdout of test 'tst304` in directory 'src/mal` itself:


# 08:01:16 >  
# 08:01:16 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst304.mal </dev/null
# 08:01:16 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## Exceptions can be explicitly raised in a function
## which requires the exception identifier to be defined.
#
#function myException();
#raise	IllegalAccess:="new exception";
#	print("should have left function ");
#end myException;
function user.myException():void;	# 0  (myException:void)
    raise IllegalAccess := "new exception\n";	# 1  (IllegalAccess:str)<-(_2:str)
    io.print("should have left function ");	# 2 IOprint_val (_3:int)<-(_4:str)
end myException;	# 3  
#
#	myException();
#	print("should not come here");
##exception block;
#catch	IllegalAccess;
#	printf("catched IllegalAccess\n");
#exit	IllegalAccess;
#	print("done");
#
function user.main():int;	# 0  (main:int)
# Exceptions can be explicitly raised in a function 	# 1  (_2:str)
# which requires the exception identifier to be defined. 	# 2  (_4:str)
    user.myException();	# 3  (_5:void)
    io.print("should not come here");	# 4 IOprint_val (_6:int)<-(_7:str)
#exception block; 	# 5  (_9:str)
catch IllegalAccess;	# 6  (IllegalAccess:any) jump 8
    io.printf("catched IllegalAccess\n");	# 7 IOprint_str (_11:int)<-(_12:str)
exit IllegalAccess;	# 8  (IllegalAccess:any)
    io.print("done");	# 9 IOprint_val (_13:int)<-(_14:str)
end main;	# 10  
catched IllegalAccess
[ "done" ]

#

# 08:01:16 >  
# 08:01:16 >  Done.
# 08:01:16 >  

