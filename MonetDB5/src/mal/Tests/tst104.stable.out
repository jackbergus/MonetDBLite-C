stdout of test 'tst104` in directory 'src/mal` itself:


# 07:58:56 >  
# 07:58:56 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst104.mal </dev/null
# 07:58:56 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## check propagation of type variables over bats
## can be checked after bat module has been added
#
#command f(a:any_1, b:bat[:any_2,:any_1],c:any_2):any_3
!MALException:MAL.getAddress:address of 'user.dummy' not found
command user.f(a:any_1,b:bat[:any_2,:any_1],c:any_2):any_3 address dummy;#  0 f:any_3 := user.f(a:any_1, b:bat[:any_2,:any_1], c:any_2) {UPG}
#
#b:= new(:str,:int);
#a:= f(1,b,"hello");
#
!TypeException:user.main[4]:'user.f' undefined in: a:any := user.f(_7:int, b:bat[:str,:int], _8:str)
function user.main():void;              #  0 main:void := user.main() {G}
# check propagation of type variables over bats 
# can be checked after bat module has been added 
    b := bat.new(:str,:int);            #  3 b:bat[:str,:int] := CMDBATnew(_4:str, _5:int) {G}
    a := user.f(1,b,"hello");           #  4 a:any := user.f(_7:int, b:bat[:str,:int], _8:str) {U}
end main;	# 5  

# 07:58:56 >  
# 07:58:56 >  Done.
# 07:58:56 >  

