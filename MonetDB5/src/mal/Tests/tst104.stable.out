stdout of test 'tst104` in directory 'src/mal` itself:


# 07:58:56 >  
# 07:58:56 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst104.mal </dev/null
# 07:58:56 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## check propagation of type variables over bats
## can be checked after bat module has been added
#
#command f(a:any$1, b:bat[:any$2,:any$1],c:any$2):any 
!ERROR: address of 'user.dummy' not found
command user.f(a:any$1,b:bat[:any$2,:any$1],c:any$2):any address dummy;	# 0  dynamic (f:any)<-(a:any$1)(b:bat[:any$2,:any$1])(c:any$2)
#
#b:= new(:str,:int);
#a:= f(1,b,"hello");
#
!ERROR: 'user.f' undefined in user.main[4]
function user.main():int;	# 0  (main:int)
# check propagation of type variables over bats 	# 1  ($2:str)
# can be checked after bat module has been added 	# 2  ($4:str)
    b := bbp.new(:str,:int);	# 3 CMDBATnew (b:bat[:str,:int])<-($6:str)($7:int)
    a := user.f(1,b,"hello");	# 4  unknown (a:any)<-($9:int)(b:bat[:str,:int])($10:str)
end main;	# 5  

# 07:58:56 >  
# 07:58:56 >  Done.
# 07:58:56 >  

