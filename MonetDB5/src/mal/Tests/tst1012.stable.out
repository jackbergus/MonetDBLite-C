stdout of test 'tst1012` in directory 'src/mal` itself:


# 07:58:54 >  
# 07:58:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1012.mal </dev/null
# 07:58:54 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information.
## the first of a series of BBP test cases
#
#bbp.open();
#b:= new(:int,:int);
#insert(b,1,2);
#bbp.deposit("mysecondbat",b);
#c:= bbp.take("mysecondbat");
#print(c);
#bat.setPersistent(b);
#x:= bat.isPersistent(b);
#z:= bat.isTransient(b);
#print(x); print(z); print("");
#bat.setTransient(b);
#x:= bat.isPersistent(b);
#z:= bat.isTransient(b);
#print(x); print(z); print("");
#bbp.close();
## at the end of the session, the BBP should have discarded
## the temporary bats of the user
## aug 02 this does not work, because the transaction is
## not properly closed. This means that a temporary bat
##remains in store.
#bbp.open();
#v:= bbp.take("mysecondbat");
#print(v);
#bbp.close();
#
function user.main():void;              #  0 main:void := user.main() {G}
# the first of a series of BBP test cases 
    bbp.open();                         #  2 _2:void := CMDbbpopen() 
    b := bat.new(:int,:int);            #  3 b:bat[:int,:int] := CMDBATnew(_4:int, _4:int) {G}
    bat.insert(b,1,2);                  #  4 _5:bat[:int,:int] := BKCinsert_bun(b:bat[:int,:int], _6:int, _7:int) {G}
    bbp.deposit("mysecondbat",b);       #  5 _8:void := CMDbbpdeposit(_9:str, b:bat[:int,:int]) 
    c := bbp.take("mysecondbat");       #  6 c:bat[:any,:any] := CMDbbptake(_9:str) {G}
    io.print(c);                        #  7 _11:void := IOprint_val(c:bat[:any,:any]) 
    bat.setPersistent(b);               #  8 _12:void := BKCsetPersistent(b:bat[:int,:int]) 
    x := bat.isPersistent(b);           #  9 x:bit := BKCisPersistent(b:bat[:int,:int]) 
    z := bat.isTransient(b);            # 10 z:bit := BKCisTransient(b:bat[:int,:int]) 
    io.print(x);                        # 11 _15:void := IOprint_val(x:bit) 
    io.print(z);                        # 12 _16:void := IOprint_val(z:bit) 
    io.print("");                       # 13 _17:void := IOprint_val(_18:str) 
    bat.setTransient(b);                # 14 _19:void := BKCsetTransient(b:bat[:int,:int]) 
    x := bat.isPersistent(b);           # 15 x:bit := BKCisPersistent(b:bat[:int,:int]) 
    z := bat.isTransient(b);            # 16 z:bit := BKCisTransient(b:bat[:int,:int]) 
    io.print(x);                        # 17 _20:void := IOprint_val(x:bit) 
    io.print(z);                        # 18 _21:void := IOprint_val(z:bit) 
    io.print("");                       # 19 _22:void := IOprint_val(_18:str) 
    bbp.close();                        # 20 _23:void := CMDbbpclose() 
# at the end of the session, the BBP should have discarded 
# the temporary bats of the user 
# aug 02 this does not work, because the transaction is 
# not properly closed. This means that a temporary bat 
#remains in store. 
    bbp.open();                         # 26 _29:void := CMDbbpopen() 
    v := bbp.take("mysecondbat");       # 27 v:bat[:any,:any] := CMDbbptake(_9:str) {G}
    io.print(v);                        # 28 _31:void := IOprint_val(v:bat[:any,:any]) 
    bbp.close();                        # 29 _32:void := CMDbbpclose() 
end main;	# 30  
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]
[ true ]
[ false ]
[ "" ]
[ false ]
[ true ]
[ "" ]
#-----------------#
# h	tmp_4	  # name
# int	int	  # type
#-----------------#
[ 1,	  2	  ]

# 07:58:54 >  
# 07:58:54 >  Done.
# 07:58:54 >  

