#!/bin/bash
# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2005 CWI.
# All Rights Reserved.

# The mguardian looks after the healthyness of invidual servers
# A mguardian process is run for each mserver unless you specify
# otherwise.
# The mguardian control information is kept in .mguardian and
# consists of the <delay,pid> pair

function usage()
{
	echo "Usage: mguardian [options] [mserver(s)]"
	echo "    --start        Start looking after mserver(s)"
	echo "    --shutdown     Stop looking after mserver(s) "
	echo "    --delay        Set check delay to N seconds [300]"
	echo "    --help         This list of options"
}

DBFARM=$MONET5_PREFIX/var/MonetDB5/dbfarm
DELAY=300
ACTION=start


case "$1" in
 "--start" )
	ACTION=start
	shift
	;;
 "--shutdown" )
	ACTION=shutdown
	shift
	;;
 "--delay"* )
	delay=`echo $1|sed -e "s/--delay=//"`
	if [ $delay"" != "" ]
	then 
		DELAY=$delay
	fi
	ACTION=delay
	shift
	;;
 "--help" | * )
	usage 
	exit 0 ;;
esac

cd $DBFARM
if [ "$*" != "" ]
then
	DBLIST=$*
else
	DBLIST=`ls`
fi

function getPID ()
{
	active=""
	if [ -f $1/.gdk_lock ]
	then
		pid=`head -1 $1/.gdk_lock |sed -e "s/.*PID=//"|sed -e "s/ .*//"`
		active=`ps --no-heading --format pid -p $pid`
	fi
	echo $active
}

#for each mserver a separate mguardian process is started
#it runs in the background until the mguardian control file disappears
function check_mserver()
{
	if [ -f $1/.mguardian ]
	then
		delay=`head -1 $1/.mguardian| sed -e "s/,.*//"`
	else
		delay=$DELAY
	fi
	echo "$delay,$$" >$1/.mguardian
	echo `date` " GUARDIAN START $1 " >>monetdb.log

	pid=`getPID $1`

	while [ -f $1/.mguardian ]
	do
		active=`ps --no-heading --format pid -p $pid`
		if  [ $active"" = "" ]
		then
            args=`cat $1/.mserver.args`
            mserver --set daemon=yes $args &
			echo `date` " RESTARTED $1 $args" >>monetdb.log
			pid=`getPID $1`
		fi
		# we should pick a cheaper way to detect changes to the delay
		delay=`head -1 $1/.mguardian| sed -e "s/,.*//"`
		echo "sleep guarding $1 $delay seconds"
		sleep $delay
	done
	echo `date` " GUARDIAN STOPPED $1 " >>monetdb.log
}

#ignore a server also involves killing any running mguardian
# for it. 
function stop_guardian()
{
	pid=`getPID $1`
	if [ -f $1/.mguardian ]
	then
		pid=`head -1 $1/.mguardian |sed -e "s/.*,//"`
		echo "shutdown $1 $pid"
		if [ pid"" != "" ]
		then
			kill -TERM $pid
			echo `date` " GUARDIAN STOPPED $1 " >>monetdb.log
		fi
	fi
}


# first terminate other mguardians
# todo

case $ACTION in
	"start" )
		for i in $DBLIST
		do
			if [ -f $i/.mguardian ]
			then
				 ( check_mserver  $i )  &
			fi
		done
		;;
	"shutdown" )
		for i in $DBLIST
		do
			if [ -d $i ]
			then
				stop_guardian $i
			fi
		done
		;;
	"delay" )
		for i in $DBLIST
		do
			if [ -d $i ]
			then
				 echo "$DELAY," >$i/.mguardian
			fi
		done
		;;
esac
echo "mguardian process finished"
