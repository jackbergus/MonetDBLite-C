#!/bin/bash
# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-2006 CWI.
# All Rights Reserved.

#See the MonetDB Version 5 documentation for details

function usage()
{
	echo "Usage: mchkpnt [options] "
	echo "    --dbname=<database_name>"
	echo "    --ascii=<yes/no> default no"
	echo "    --chkpnt=<directory>"
	echo "    --help"
}

function diefunc() {
	local linenr="$2" exitnr="$3"
	shift 2
	echo >&2
	echo "A fatal error occurred at line ${linenr}!" >&2
	echo "${*:-(no error message given)}, exit state: ${exitnr}" >&
	echo "Please check your configuration and try again" >&2
	exit 1
}
alias die='diefunc "$LINENO" "$?"'

DBFARM=$MONET5_PREFIX/var/MonetDB5/dbfarm
DBLOGS=$MONET5_PREFIX/var/MonetDB5/dblogs
CHKPNTDIR=$MONET5_PREFIX/var/MonetDB5/chkpnt
TAG=`date +%F-%H%M%S`

# First perform some sanity checks
if [ "$MONET5_PREFIX"  = "" ]
then
	echo "The MONET5_PREFIX environment variable has not been set"
	echo "It should point to where you have installed the build directory"
	exit
fi
# start the checkpoint process.
if [ ! -d $DBFARM ]
then
	echo "Database storage area '$DBFARM' is not accessible"
	exit
fi

# massage the argument list to prepare for calling
DBNAME=""
ASCII="no"
while [ $# -gt 0 ]
do
	case "$1" in
	 "--help" )
		usage 
		exit ;;
	"--ascii="* )
		ASCII="${1#--ascii=}"
		;;
	"--dbname="* )
		DBNAME="${1#--dbname=}"
		;;
	"--chkpnt="* )
		CHKPNTDIR="${1#--chkpnt=}"
		;;
	"--tag="* )
		TAG="${1#--tag=}"
		;;
	* )
		usage
		;;
	esac
	shift
done

if [ -z "$DBNAME" ]
then
	echo "Database name missing";
	usage
	exit
fi

if [ ! -d "$DBFARM/$DBNAME" ]
then
	echo "Database '$DBNAME' missing";
	exit
fi

if [ ! -d $CHKPNTDIR ]
then
	mkdir -p $CHKPNTDIR
fi
if [ ! -d $CHKPNTDIR ]
then
	echo "Checkpoint directory '$CHKPNTDIR' not available"
	exit
fi

if [ ! -d "$CHKPNTDIR/$DBNAME" ]
then
	mkdir -p "$CHKPNTDIR/$DBNAME"
fi
if [ ! -d "$CHKPNTDIR/$DBNAME" ]
then
	echo "Database checkpoint directory '$CHKPNTDIR/$DBNAME' is not accessible"
	exit
fi

CHKPFILE="$CHKPNTDIR/$DBNAME/$TAG"
LOGFILE="$CHKPNTDIR/$DBNAME/$TAG-logs"

if [ -f $CHKPFILE ]
then
	echo "Checkpoint file '$CHKPFILE' already exist"
	exit
fi

if [ -f $LOGFILE ]
then
	echo "Checkpoint log file '$LOGFILE' already exist"
	exit
fi

# Ready for preparing the checkpoint
cd $DBFARM

echo "Checkpoint store $CHKPNTDIR"
echo "Preparing checkpoint file '$DBNAME/$TAG'"
if [ "$ASCII" = "yes" ]
then
	monetdb --start --dbname=$DBNAME
	sleep 2
	MapiClient -lsql --dump >$CHKPFILE.sql || die "Creation of dump failed"
	gzip $CHKPFILE.sql || die "Compression of dump file failed"
else
	tar -cf $CHKPFILE.tar $DBNAME || die "Creation of checkpoint file failed"
	gzip $CHKPFILE.tar || die "Compression of checkpoint file failed"
fi

cd $DBLOGS
echo "Preparing checkpoint log file '$DBNAME/$TAG-logs'"
if [ ! -d "$DBNAME" ]
then
	echo "No log directory available for '$DBNAME'"
	exit;
fi
tar -cf $LOGFILE.tar $DBNAME || die "Creation of checkpoint log file failed"
gzip $LOGFILE.tar || die "Compression of checkpoint log file failed"
