@' The contents of this file are subject to the MonetDB Public License
@' Version 1.1 (the "License"); you may not use this file except in
@' compliance with the License. You may obtain a copy of the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
@'
@' Software distributed under the License is distributed on an "AS IS"
@' basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
@' License for the specific language governing rights and limitations
@' under the License.
@'
@' The Original Code is the MonetDB Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2007 CWI.
@' All Rights Reserved.

@f opt_inline
@a M. Kersten
@subsection Function Inliners
The routine @sc{optimizer.inline()} searches MAL function definitions
whose property @{inline@}  is set. In addition, all MAL function calls
whose primary target variable carry the @{inline@} property are inlined
as well.
The code is expanded inline using the macro processor.

@{
@mal
pattern optimizer.inline():str
address OPTinline;
pattern optimizer.inline(mod:str, fcn:str):str
address OPTinline
comment "Expand inline functions";

@h
#ifndef _OPT_INLINE_
#define _OPT_INLINE_
#include "opt_prelude.h"
#include "opt_support.h"
#include "mal_interpreter.h"
#include "opt_macro.h"

/* #define DEBUG_OPT_INLINE     show partial result */

@c
#include "mal_config.h"
#include "opt_inline.h"

static int
OPTinlineImplementation(MalBlkPtr mb, MalStkPtr stk, InstrPtr p)
{
	int i;
	InstrPtr q,sig;
	int actions = 0;
	(void) p;

	for (i = 1; i < mb->stop; i++) {
		q = getInstrPtr(mb, i);
		if( q->blk ){
			sig = getInstrPtr(q->blk,0);
			if (sig->token == FUNCTIONsymbol &&
			    varGetProp(q->blk, getArg(sig, 0), inlineProp) != NULL) {
				(void) inlineMALblock(mb,i,q->blk);
				actions++;
#ifdef DEBUG_OPT_INLINE
				printFunction(GDKout, mb, LIST_MAL_ALL);
#endif
			} else if (varGetProp(mb, getArg(q,0), inlineProp) != NULL) {
				inlineMALblock(mb,i,q->blk);
				actions++;
#ifdef DEBUG_OPT_INLINE
				printFunction(GDKout, mb, LIST_MAL_ALL);
#endif
			}
		}
	}
	(void)stk;
	return actions;
}

@include optimizerWrapper.mx
@h
@:exportOptimizer(inline)@
#endif
@c
#include "opt_statistics.h"
@:wrapOptimizer(inline,OPT_CHECK_ALL)@
@}
