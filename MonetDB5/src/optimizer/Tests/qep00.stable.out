stdout of test 'qep00` in directory 'src/optimizer` itself:


# 18:42:45 >  
# 18:42:45 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=32834 --set sql_port=44108 --set xquery_port=52561 --set monet_prompt= --trace --dbname=mTests_src_optimizer  qep00.mal </dev/null
# 18:42:45 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## demonstrate the QEP construction
#R:= bbp.new(:void,:int);
#S:= bbp.new(:void,:int);
#E1:= algebra.select(R,1,3);
#E2:= algebra.select(S,4,9);
#R2:= bat.reverse(E2);
#J1:= algebra.join(E1,R2);
#optimizer.dumpQEP();
#
# demonstrate the QEP construction 
    J1 := algebra.join(E1,R2);
        E1 := algebra.select(R,1,3);
            R := bat.new(:void,:int);
        R2 := bat.reverse(E2);
            E2 := algebra.select(S,4,9);
                S := bat.new(:void,:int);
function user.main():void;              #  0 main:void {G}
# demonstrate the QEP construction 
    R := bat.new(:void,:int);           #  2 R:bat[:void,:int] := CMDBATnew(_3:void, _4:int) {G}
    S := bat.new(:void,:int);           #  3 S:bat[:void,:int] := CMDBATnew(_3:void, _4:int) {G}
    E1 := algebra.select(R,1,3);        #  4 E1:bat[:void,:int] := ALGselect(R:bat[:void,:int], _7:int, _8:int) {G}
    E2 := algebra.select(S,4,9);        #  5 E2:bat[:void,:int] := ALGselect(S:bat[:void,:int], _10:int, _11:int) {G}
    R2 := bat.reverse(E2);              #  6 R2:bat[:int,:void] := BKCreverse(E2:bat[:void,:int]) {G}
    J1 := algebra.join(E1,R2);          #  7 J1:bat[:void,:void] := ALGjoin(E1:bat[:void,:int], R2:bat[:int,:void]) {G}
end main;	# 8  

# 18:42:45 >  
# 18:42:45 >  Done.
# 18:42:45 >  

