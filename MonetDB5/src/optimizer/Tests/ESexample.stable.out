stdout of test 'ESexample` in directory 'src/optimizer` itself:


# 23:53:03 >  
# 23:53:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  ESexample.mal </dev/null
# 23:53:03 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#function test():void;
#	V1 := bbp.new(:void,:int);
#	V7 := bbp.new(:void,:int);
#	V10{empty} := bbp.new(:int,:void);
#	V11 := bat.reverse(V10);    
#	V12 := algebra.kdiff(V7,V11);       
#	V16 := algebra.markH(V12);  
#	V17 := algebra.join(V16,V7);        
#	bat.append(V1,V17); 
#	V19 := bbp.new(:void,:int);
#	V22 := bbp.new(:void,:int);
#	V23 := algebra.join(V16,V22);       
#	bat.append(V19,V23);        
#	V25 := algebra.count(V17);  
#end test;
function user.test():void;	# 0  (test:void)
    V1 := bbp.new(:void,:int);	# 1 CMDBATnew (V1:bat[:void,:int])<-(_2:void)(_3:int)
    V7 := bbp.new(:void,:int);	# 2 CMDBATnew (V7:bat[:void,:int])<-(_2:void)(_3:int)
    V10{empty} := bbp.new(:int,:void);	# 3 CMDBATnew (V10:bat[:int,:void])<-(_3:int)(_2:void)
    V11 := bat.reverse(V10{empty});	# 4 BKCreverse (V11:bat[:void,:int])<-(V10:bat[:int,:void])
    V12 := algebra.kdiff(V7,V11);	# 5 ALGkdiff (V12:bat[:void,:int])<-(V7:bat[:void,:int])(V11:bat[:void,:int])
    V16 := algebra.markH(V12);	# 6 ALGmarkHead_default1 (V16:bat[:void,:oid])<-(V12:bat[:void,:int])
    V17 := algebra.join(V16,V7);	# 7 ALGjoin (V17:bat[:void,:int])<-(V16:bat[:void,:oid])(V7:bat[:void,:int])
    bat.append(V1,V17);	# 8 BKCbat_append_void_bat_wrap (_10:bat[:void,:int])<-(V1:bat[:void,:int])(V17:bat[:void,:int])
    V19 := bbp.new(:void,:int);	# 9 CMDBATnew (V19:bat[:void,:int])<-(_2:void)(_3:int)
    V22 := bbp.new(:void,:int);	# 10 CMDBATnew (V22:bat[:void,:int])<-(_2:void)(_3:int)
    V23 := algebra.join(V16,V22);	# 11 ALGjoin (V23:bat[:void,:int])<-(V16:bat[:void,:oid])(V22:bat[:void,:int])
    bat.append(V19,V23);	# 12 BKCbat_append_void_bat_wrap (_14:bat[:void,:int])<-(V19:bat[:void,:int])(V23:bat[:void,:int])
    V25 := algebra.count(V17);	# 13 ALGcount_bat (V25:lng)<-(V17:bat[:void,:int])
end test;	# 14  
#
##optimizer.setProperty("user","test","V10","empty",1);
#optimizer.emptySet("user","test");
#mdb.list("user","test");
#
ESoptimizer called, collect empty sets and process them
found 5  V10
START emptyset optimizer 1:,5 
MID STAGE doAR=1
function user.test():void;	# 0  (test:void)
    V1 := bbp.new(:void,:int);	# 1 CMDBATnew (V1:bat[:void,:int])<-(_2:void)(_3:int)
    V7 := bbp.new(:void,:int);	# 2 CMDBATnew (V7:bat[:void,:int])<-(_2:void)(_3:int)
    V10{empty} := bbp.new(:int,:void);	# 3 CMDBATnew (V10:bat[:int,:void])<-(_3:int)(_2:void)
    V11 := bat.reverse(V10{empty});	# 4 BKCreverse (V11:bat[:void,:int])<-(V10:bat[:int,:void])
    V12 := V7;	# 5 ALGkdiff (V12:bat[:void,:int])<-(V7:bat[:void,:int])
    V16 := algebra.markH(V12);	# 6 ALGmarkHead_default1 (V16:bat[:void,:oid])<-(V12:bat[:void,:int])
    V17 := algebra.join(V16,V7);	# 7 ALGjoin (V17:bat[:void,:int])<-(V16:bat[:void,:oid])(V7:bat[:void,:int])
    bat.append(V1,V17);	# 8 BKCbat_append_void_bat_wrap (_10:bat[:void,:int])<-(V1:bat[:void,:int])(V17:bat[:void,:int])
    V19 := bbp.new(:void,:int);	# 9 CMDBATnew (V19:bat[:void,:int])<-(_2:void)(_3:int)
    V22 := bbp.new(:void,:int);	# 10 CMDBATnew (V22:bat[:void,:int])<-(_2:void)(_3:int)
    V23 := algebra.join(V16,V22);	# 11 ALGjoin (V23:bat[:void,:int])<-(V16:bat[:void,:oid])(V22:bat[:void,:int])
    bat.append(V19,V23);	# 12 BKCbat_append_void_bat_wrap (_14:bat[:void,:int])<-(V19:bat[:void,:int])(V23:bat[:void,:int])
    V25 := algebra.count(V17);	# 13 ALGcount_bat (V25:lng)<-(V17:bat[:void,:int])
end test;	# 14  
FINAL STAGE errors=0
function user.test():void;	# 0  (test:void)
    V1 := bbp.new(:void,:int);	# 1 CMDBATnew (V1:bat[:void,:int])<-(_2:void)(_3:int)
    V7 := bbp.new(:void,:int);	# 2 CMDBATnew (V7:bat[:void,:int])<-(_2:void)(_3:int)
    V16 := algebra.markH(V7);	# 3 ALGmarkHead_default1 (V16:bat[:void,:oid])<-(V7:bat[:void,:int])
    V17 := algebra.join(V16,V7);	# 4 ALGjoin (V17:bat[:void,:int])<-(V16:bat[:void,:oid])(V7:bat[:void,:int])
    bat.append(V1,V17);	# 5 BKCbat_append_void_bat_wrap (_10:bat[:void,:int])<-(V1:bat[:void,:int])(V17:bat[:void,:int])
    V19 := bbp.new(:void,:int);	# 6 CMDBATnew (V19:bat[:void,:int])<-(_2:void)(_3:int)
    V22 := bbp.new(:void,:int);	# 7 CMDBATnew (V22:bat[:void,:int])<-(_2:void)(_3:int)
    V23 := algebra.join(V16,V22);	# 8 ALGjoin (V23:bat[:void,:int])<-(V16:bat[:void,:oid])(V22:bat[:void,:int])
    bat.append(V19,V23);	# 9 BKCbat_append_void_bat_wrap (_14:bat[:void,:int])<-(V19:bat[:void,:int])(V23:bat[:void,:int])
end test;	# 10  
function user.main():int;	# 0  (main:int)
#optimizer.setProperty("user","test","V10","empty",1); 	# 1  (_2:str)
    mdb.list("user","test");	# 2 MDBlist3 (_6:void)<-(_4:str)(_5:str)
end main;	# 3  
function user.test():void;
    V1 := bbp.new(:void,:int);
    V7 := bbp.new(:void,:int);
    V16 := algebra.markH(V7);
    V17 := algebra.join(V16,V7);
    bat.append(V1,V17);
    V19 := bbp.new(:void,:int);
    V22 := bbp.new(:void,:int);
    V23 := algebra.join(V16,V22);
    bat.append(V19,V23);
end test;

# 23:53:03 >  
# 23:53:03 >  Done.
# 23:53:03 >  

