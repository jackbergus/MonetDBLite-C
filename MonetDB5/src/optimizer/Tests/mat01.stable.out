stdout of test 'mat01` in directory 'src/optimizer` itself:


# 08:54:20 >  
# 08:54:20 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=36757 --set sql_port=42245 --set xquery_port=56755 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat01.mal < /dev/null
# 08:54:20 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## select count(*) from tables
#include sql;
#mdb.list();
##   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2);
## bind the two components separately
#    v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
#    v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
#    v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
#    v2 := mat.new(v2v0,v2v1,v2v2);
#    v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);
#    v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#    v17 := algebra.markT(v12,0@0);
#    v19 := bat.reverse(v17);
#    v21 := algebra.join(v19,v2);
#    v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);
#    v28 := bat.reverse(v26);
#    v30 := algebra.kdifference(v23,v28);
#    v34 := algebra.markT(v30,0@0);
#    v36 := bat.reverse(v34);
#    v38 := algebra.join(v36,v23);
#    v40 := bat.setAccess(v21,"w");
#    bat.append(v40,v38);
#    v47 := algebra.markT(v40,0@0);
#    v49 := bat.reverse(v47);
#    v51 := algebra.join(v49,v40);
#    v56 := algebra.markT(v51,0@0);
#    v58 := bat.reverse(v56);
#    v60 := algebra.join(v58,v51);
#    v62 := aggr.count(v60);
#    sql.exportValue(3,"tables","countvid","int",32,0,6,v62);
#
#optimizer.multitable();
#
#
function user.main():void;	# 0  (main:void)
    mdb.list();	# 1 MDBlist (_1:void)
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 	# 2  (_3:str)
# bind the two components separately 	# 3  (_5:str)
    v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);	# 4 mvc_bind_wrap (v2v0:bat[:void,:int])<-(_7:str)(_8:str)(_9:str)(_10:int)
    v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);	# 5 mvc_bind_wrap (v2v1:bat[:void,:int])<-(_7:str)(_8:str)(_9:str)(_10:int)
    v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);	# 6 mvc_bind_wrap (v2v2:bat[:void,:int])<-(_7:str)(_8:str)(_9:str)(_10:int)
    v2 := mat.new(v2v0,v2v1,v2v2);	# 7 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])(v2v2:bat[:void,:int])
    v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);	# 8 mvc_bind_wrap (v23:bat[:void,:int])<-(_7:str)(_15:str)(_9:str)(_10:int)
    v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);	# 9 mvc_bind_dbat_wrap (v8:bat[:void,:oid])<-(_7:str)(_8:str)(_10:int)
    v10 := bat.reverse(v8);	# 10 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _47 := algebra.kdifference(v2v0,v10);	# 11 ALGkdiff (_47:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _48 := algebra.kdifference(v2v1,v10);	# 12 ALGkdiff (_48:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    _49 := algebra.kdifference(v2v2,v10);	# 13 ALGkdiff (_49:bat[:oid,:int])<-(v2v2:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_47,_48,_49);	# 14 MATnew (v12:bat[:oid,:int])<-(_47:bat[:oid,:int])(_48:bat[:oid,:int])(_49:bat[:oid,:int])
    _53 := algebra.markT(_47,0@0);	# 15 ALGtmark (_53:bat[:oid,:void])<-(_47:bat[:oid,:int])(_20:oid)
    _54 := algebra.markT(_48,0@0);	# 16 ALGtmark (_54:bat[:oid,:void])<-(_48:bat[:oid,:int])(_20:oid)
    _55 := algebra.markT(_49,0@0);	# 17 ALGtmark (_55:bat[:oid,:void])<-(_49:bat[:oid,:int])(_20:oid)
    v17 := mat.new(_53,_54,_55);	# 18 MATnew (v17:bat[:oid,:void])<-(_53:bat[:oid,:void])(_54:bat[:oid,:void])(_55:bat[:oid,:void])
    _59 := bat.reverse(_53);	# 19 BKCreverse (_59:bat[:void,:oid])<-(_53:bat[:oid,:void])
    _60 := bat.reverse(_54);	# 20 BKCreverse (_60:bat[:void,:oid])<-(_54:bat[:oid,:void])
    _61 := bat.reverse(_55);	# 21 BKCreverse (_61:bat[:void,:oid])<-(_55:bat[:oid,:void])
    v19 := mat.new(_59,_60,_61);	# 22 MATnew (v19:bat[:void,:oid])<-(_59:bat[:void,:oid])(_60:bat[:void,:oid])(_61:bat[:void,:oid])
    _69 := algebra.join(_59,v2v0);	# 23 ALGjoin (_69:bat[:void,:int])<-(_59:bat[:void,:oid])(v2v0:bat[:void,:int])
    _70 := algebra.join(_60,v2v0);	# 24 ALGjoin (_70:bat[:void,:int])<-(_60:bat[:void,:oid])(v2v0:bat[:void,:int])
    _71 := algebra.join(_61,v2v0);	# 25 ALGjoin (_71:bat[:void,:int])<-(_61:bat[:void,:oid])(v2v0:bat[:void,:int])
    _50 := mat.new(_69,_70,_71);	# 26 MATnew (_50:bat[:void,:int])<-(_69:bat[:void,:int])(_70:bat[:void,:int])(_71:bat[:void,:int])
    _72 := algebra.join(_59,v2v1);	# 27 ALGjoin (_72:bat[:void,:int])<-(_59:bat[:void,:oid])(v2v1:bat[:void,:int])
    _73 := algebra.join(_60,v2v1);	# 28 ALGjoin (_73:bat[:void,:int])<-(_60:bat[:void,:oid])(v2v1:bat[:void,:int])
    _74 := algebra.join(_61,v2v1);	# 29 ALGjoin (_74:bat[:void,:int])<-(_61:bat[:void,:oid])(v2v1:bat[:void,:int])
    _51 := mat.new(_72,_73,_74);	# 30 MATnew (_51:bat[:void,:int])<-(_72:bat[:void,:int])(_73:bat[:void,:int])(_74:bat[:void,:int])
    _75 := algebra.join(_59,v2v2);	# 31 ALGjoin (_75:bat[:void,:int])<-(_59:bat[:void,:oid])(v2v2:bat[:void,:int])
    _76 := algebra.join(_60,v2v2);	# 32 ALGjoin (_76:bat[:void,:int])<-(_60:bat[:void,:oid])(v2v2:bat[:void,:int])
    _77 := algebra.join(_61,v2v2);	# 33 ALGjoin (_77:bat[:void,:int])<-(_61:bat[:void,:oid])(v2v2:bat[:void,:int])
    _52 := mat.new(_75,_76,_77);	# 34 MATnew (_52:bat[:void,:int])<-(_75:bat[:void,:int])(_76:bat[:void,:int])(_77:bat[:void,:int])
    _50 := mat.pack(_69,_70,_71);	# 35 MATpack (_50:bat[:void,:int])<-(_69:bat[:void,:int])(_70:bat[:void,:int])(_71:bat[:void,:int])
    _51 := mat.pack(_72,_73,_74);	# 36 MATpack (_51:bat[:void,:int])<-(_72:bat[:void,:int])(_73:bat[:void,:int])(_74:bat[:void,:int])
    _52 := mat.pack(_75,_76,_77);	# 37 MATpack (_52:bat[:void,:int])<-(_75:bat[:void,:int])(_76:bat[:void,:int])(_77:bat[:void,:int])
    v21 := mat.new(_50,_51,_52);	# 38 MATnew (v21:bat[:void,:int])<-(_50:bat[:void,:int])(_51:bat[:void,:int])(_52:bat[:void,:int])
    v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);	# 39 mvc_bind_dbat_wrap (v26:bat[:void,:oid])<-(_7:str)(_15:str)(_10:int)
    v28 := bat.reverse(v26);	# 40 BKCreverse (v28:bat[:oid,:void])<-(v26:bat[:void,:oid])
    v30 := algebra.kdifference(v23,v28);	# 41 ALGkdiff (v30:bat[:oid,:int])<-(v23:bat[:void,:int])(v28:bat[:oid,:void])
    v34 := algebra.markT(v30,0@0);	# 42 ALGtmark (v34:bat[:oid,:void])<-(v30:bat[:oid,:int])(_20:oid)
    v36 := bat.reverse(v34);	# 43 BKCreverse (v36:bat[:void,:oid])<-(v34:bat[:oid,:void])
    v38 := algebra.join(v36,v23);	# 44 ALGjoin (v38:bat[:void,:int])<-(v36:bat[:void,:oid])(v23:bat[:void,:int])
    _56 := bat.setAccess(_50,"w");	# 45 BKCsetAccess (_56:bat[:void,:int])<-(_50:bat[:void,:int])(_30:str)
    _57 := bat.setAccess(_51,"w");	# 46 BKCsetAccess (_57:bat[:void,:int])<-(_51:bat[:void,:int])(_30:str)
    _58 := bat.setAccess(_52,"w");	# 47 BKCsetAccess (_58:bat[:void,:int])<-(_52:bat[:void,:int])(_30:str)
    v40 := mat.new(_56,_57,_58);	# 48 MATnew (v40:bat[:void,:int])<-(_56:bat[:void,:int])(_57:bat[:void,:int])(_58:bat[:void,:int])
    _62 := bat.append(_58,v38);	# 49 BKCbat_append_void_bat_wrap (_62:void)<-(_58:bat[:void,:int])(v38:bat[:void,:int])
    _63 := algebra.markT(_56,0@0);	# 50 ALGtmark (_63:bat[:oid,:void])<-(_56:bat[:void,:int])(_20:oid)
    _64 := algebra.markT(_57,0@0);	# 51 ALGtmark (_64:bat[:oid,:void])<-(_57:bat[:void,:int])(_20:oid)
    _65 := algebra.markT(_58,0@0);	# 52 ALGtmark (_65:bat[:oid,:void])<-(_58:bat[:void,:int])(_20:oid)
    v47 := mat.new(_63,_64,_65);	# 53 MATnew (v47:bat[:oid,:void])<-(_63:bat[:oid,:void])(_64:bat[:oid,:void])(_65:bat[:oid,:void])
    _78 := bat.reverse(_63);	# 54 BKCreverse (_78:bat[:void,:oid])<-(_63:bat[:oid,:void])
    _79 := bat.reverse(_64);	# 55 BKCreverse (_79:bat[:void,:oid])<-(_64:bat[:oid,:void])
    _80 := bat.reverse(_65);	# 56 BKCreverse (_80:bat[:void,:oid])<-(_65:bat[:oid,:void])
    v49 := mat.new(_78,_79,_80);	# 57 MATnew (v49:bat[:void,:oid])<-(_78:bat[:void,:oid])(_79:bat[:void,:oid])(_80:bat[:void,:oid])
    _87 := algebra.join(_78,_56);	# 58 ALGjoin (_87:bat[:void,:int])<-(_78:bat[:void,:oid])(_56:bat[:void,:int])
    _88 := algebra.join(_79,_56);	# 59 ALGjoin (_88:bat[:void,:int])<-(_79:bat[:void,:oid])(_56:bat[:void,:int])
    _89 := algebra.join(_80,_56);	# 60 ALGjoin (_89:bat[:void,:int])<-(_80:bat[:void,:oid])(_56:bat[:void,:int])
    _66 := mat.new(_87,_88,_89);	# 61 MATnew (_66:bat[:void,:int])<-(_87:bat[:void,:int])(_88:bat[:void,:int])(_89:bat[:void,:int])
    _90 := algebra.join(_78,_57);	# 62 ALGjoin (_90:bat[:void,:int])<-(_78:bat[:void,:oid])(_57:bat[:void,:int])
    _91 := algebra.join(_79,_57);	# 63 ALGjoin (_91:bat[:void,:int])<-(_79:bat[:void,:oid])(_57:bat[:void,:int])
    _92 := algebra.join(_80,_57);	# 64 ALGjoin (_92:bat[:void,:int])<-(_80:bat[:void,:oid])(_57:bat[:void,:int])
    _67 := mat.new(_90,_91,_92);	# 65 MATnew (_67:bat[:void,:int])<-(_90:bat[:void,:int])(_91:bat[:void,:int])(_92:bat[:void,:int])
    _93 := algebra.join(_78,_58);	# 66 ALGjoin (_93:bat[:void,:int])<-(_78:bat[:void,:oid])(_58:bat[:void,:int])
    _94 := algebra.join(_79,_58);	# 67 ALGjoin (_94:bat[:void,:int])<-(_79:bat[:void,:oid])(_58:bat[:void,:int])
    _95 := algebra.join(_80,_58);	# 68 ALGjoin (_95:bat[:void,:int])<-(_80:bat[:void,:oid])(_58:bat[:void,:int])
    _68 := mat.new(_93,_94,_95);	# 69 MATnew (_68:bat[:void,:int])<-(_93:bat[:void,:int])(_94:bat[:void,:int])(_95:bat[:void,:int])
    _66 := mat.pack(_87,_88,_89);	# 70 MATpack (_66:bat[:void,:int])<-(_87:bat[:void,:int])(_88:bat[:void,:int])(_89:bat[:void,:int])
    _67 := mat.pack(_90,_91,_92);	# 71 MATpack (_67:bat[:void,:int])<-(_90:bat[:void,:int])(_91:bat[:void,:int])(_92:bat[:void,:int])
    _68 := mat.pack(_93,_94,_95);	# 72 MATpack (_68:bat[:void,:int])<-(_93:bat[:void,:int])(_94:bat[:void,:int])(_95:bat[:void,:int])
    v51 := mat.new(_66,_67,_68);	# 73 MATnew (v51:bat[:void,:int])<-(_66:bat[:void,:int])(_67:bat[:void,:int])(_68:bat[:void,:int])
    _81 := algebra.markT(_66,0@0);	# 74 ALGtmark (_81:bat[:oid,:void])<-(_66:bat[:void,:int])(_20:oid)
    _82 := algebra.markT(_67,0@0);	# 75 ALGtmark (_82:bat[:oid,:void])<-(_67:bat[:void,:int])(_20:oid)
    _83 := algebra.markT(_68,0@0);	# 76 ALGtmark (_83:bat[:oid,:void])<-(_68:bat[:void,:int])(_20:oid)
    v56 := mat.new(_81,_82,_83);	# 77 MATnew (v56:bat[:oid,:void])<-(_81:bat[:oid,:void])(_82:bat[:oid,:void])(_83:bat[:oid,:void])
    _96 := bat.reverse(_81);	# 78 BKCreverse (_96:bat[:void,:oid])<-(_81:bat[:oid,:void])
    _97 := bat.reverse(_82);	# 79 BKCreverse (_97:bat[:void,:oid])<-(_82:bat[:oid,:void])
    _98 := bat.reverse(_83);	# 80 BKCreverse (_98:bat[:void,:oid])<-(_83:bat[:oid,:void])
    v58 := mat.new(_96,_97,_98);	# 81 MATnew (v58:bat[:void,:oid])<-(_96:bat[:void,:oid])(_97:bat[:void,:oid])(_98:bat[:void,:oid])
    _103 := algebra.join(_96,_66);	# 82 ALGjoin (_103:bat[:void,:int])<-(_96:bat[:void,:oid])(_66:bat[:void,:int])
    _104 := algebra.join(_97,_66);	# 83 ALGjoin (_104:bat[:void,:int])<-(_97:bat[:void,:oid])(_66:bat[:void,:int])
    _105 := algebra.join(_98,_66);	# 84 ALGjoin (_105:bat[:void,:int])<-(_98:bat[:void,:oid])(_66:bat[:void,:int])
    _84 := mat.new(_103,_104,_105);	# 85 MATnew (_84:bat[:void,:int])<-(_103:bat[:void,:int])(_104:bat[:void,:int])(_105:bat[:void,:int])
    _106 := algebra.join(_96,_67);	# 86 ALGjoin (_106:bat[:void,:int])<-(_96:bat[:void,:oid])(_67:bat[:void,:int])
    _107 := algebra.join(_97,_67);	# 87 ALGjoin (_107:bat[:void,:int])<-(_97:bat[:void,:oid])(_67:bat[:void,:int])
    _108 := algebra.join(_98,_67);	# 88 ALGjoin (_108:bat[:void,:int])<-(_98:bat[:void,:oid])(_67:bat[:void,:int])
    _85 := mat.new(_106,_107,_108);	# 89 MATnew (_85:bat[:void,:int])<-(_106:bat[:void,:int])(_107:bat[:void,:int])(_108:bat[:void,:int])
    _109 := algebra.join(_96,_68);	# 90 ALGjoin (_109:bat[:void,:int])<-(_96:bat[:void,:oid])(_68:bat[:void,:int])
    _110 := algebra.join(_97,_68);	# 91 ALGjoin (_110:bat[:void,:int])<-(_97:bat[:void,:oid])(_68:bat[:void,:int])
    _111 := algebra.join(_98,_68);	# 92 ALGjoin (_111:bat[:void,:int])<-(_98:bat[:void,:oid])(_68:bat[:void,:int])
    _86 := mat.new(_109,_110,_111);	# 93 MATnew (_86:bat[:void,:int])<-(_109:bat[:void,:int])(_110:bat[:void,:int])(_111:bat[:void,:int])
    _84 := mat.pack(_103,_104,_105);	# 94 MATpack (_84:bat[:void,:int])<-(_103:bat[:void,:int])(_104:bat[:void,:int])(_105:bat[:void,:int])
    _85 := mat.pack(_106,_107,_108);	# 95 MATpack (_85:bat[:void,:int])<-(_106:bat[:void,:int])(_107:bat[:void,:int])(_108:bat[:void,:int])
    _86 := mat.pack(_109,_110,_111);	# 96 MATpack (_86:bat[:void,:int])<-(_109:bat[:void,:int])(_110:bat[:void,:int])(_111:bat[:void,:int])
    v60 := mat.new(_84,_85,_86);	# 97 MATnew (v60:bat[:void,:int])<-(_84:bat[:void,:int])(_85:bat[:void,:int])(_86:bat[:void,:int])
    v62 := 0;	# 98  (v62:int)<-(_99:int)
    _100 := aggr.count(_84);	# 99 ALGcount_bat (_100:int)<-(_84:bat[:void,:int])
    v62 := calc.+(v62,_100);	# 100 CALCbinaryADDintint (v62:int)<-(v62:int)(_100:int)
    _101 := aggr.count(_85);	# 101 ALGcount_bat (_101:int)<-(_85:bat[:void,:int])
    v62 := calc.+(v62,_101);	# 102 CALCbinaryADDintint (v62:int)<-(v62:int)(_101:int)
    _102 := aggr.count(_86);	# 103 ALGcount_bat (_102:int)<-(_86:bat[:void,:int])
    v62 := calc.+(v62,_102);	# 104 CALCbinaryADDintint (v62:int)<-(v62:int)(_102:int)
    sql.exportValue(3,"tables","countvid","int",32,0,6,v62);	# 105 mvc_export_value_wrap (_39:void)<-(_40:int)(_41:str)(_42:str)(_43:str)(_44:int)(_10:int)(_45:int)(v62:int)
end main;	# 106  
function user.main():void;
    mdb.list();
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 
# bind the two components separately 
    v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
    v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
    v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
    v2 := mat.new(v2v0,v2v1,v2v2);
    v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);
    v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);
    v10 := bat.reverse(v8);
    _47 := algebra.kdifference(v2v0,v10);
    _48 := algebra.kdifference(v2v1,v10);
    _49 := algebra.kdifference(v2v2,v10);
    v12 := mat.new(_47,_48,_49);
    _53 := algebra.markT(_47,0@0);
    _54 := algebra.markT(_48,0@0);
    _55 := algebra.markT(_49,0@0);
    v17 := mat.new(_53,_54,_55);
    _59 := bat.reverse(_53);
    _60 := bat.reverse(_54);
    _61 := bat.reverse(_55);
    v19 := mat.new(_59,_60,_61);
    _69 := algebra.join(_59,v2v0);
    _70 := algebra.join(_60,v2v0);
    _71 := algebra.join(_61,v2v0);
    _50 := mat.new(_69,_70,_71);
    _72 := algebra.join(_59,v2v1);
    _73 := algebra.join(_60,v2v1);
    _74 := algebra.join(_61,v2v1);
    _51 := mat.new(_72,_73,_74);
    _75 := algebra.join(_59,v2v2);
    _76 := algebra.join(_60,v2v2);
    _77 := algebra.join(_61,v2v2);
    _52 := mat.new(_75,_76,_77);
    _50 := mat.pack(_69,_70,_71);
    _51 := mat.pack(_72,_73,_74);
    _52 := mat.pack(_75,_76,_77);
    v21 := mat.new(_50,_51,_52);
    v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    _56 := bat.setAccess(_50,"w");
    _57 := bat.setAccess(_51,"w");
    _58 := bat.setAccess(_52,"w");
    v40 := mat.new(_56,_57,_58);
    _62 := bat.append(_58,v38);
    _63 := algebra.markT(_56,0@0);
    _64 := algebra.markT(_57,0@0);
    _65 := algebra.markT(_58,0@0);
    v47 := mat.new(_63,_64,_65);
    _78 := bat.reverse(_63);
    _79 := bat.reverse(_64);
    _80 := bat.reverse(_65);
    v49 := mat.new(_78,_79,_80);
    _87 := algebra.join(_78,_56);
    _88 := algebra.join(_79,_56);
    _89 := algebra.join(_80,_56);
    _66 := mat.new(_87,_88,_89);
    _90 := algebra.join(_78,_57);
    _91 := algebra.join(_79,_57);
    _92 := algebra.join(_80,_57);
    _67 := mat.new(_90,_91,_92);
    _93 := algebra.join(_78,_58);
    _94 := algebra.join(_79,_58);
    _95 := algebra.join(_80,_58);
    _68 := mat.new(_93,_94,_95);
    _66 := mat.pack(_87,_88,_89);
    _67 := mat.pack(_90,_91,_92);
    _68 := mat.pack(_93,_94,_95);
    v51 := mat.new(_66,_67,_68);
    _81 := algebra.markT(_66,0@0);
    _82 := algebra.markT(_67,0@0);
    _83 := algebra.markT(_68,0@0);
    v56 := mat.new(_81,_82,_83);
    _96 := bat.reverse(_81);
    _97 := bat.reverse(_82);
    _98 := bat.reverse(_83);
    v58 := mat.new(_96,_97,_98);
    _103 := algebra.join(_96,_66);
    _104 := algebra.join(_97,_66);
    _105 := algebra.join(_98,_66);
    _84 := mat.new(_103,_104,_105);
    _106 := algebra.join(_96,_67);
    _107 := algebra.join(_97,_67);
    _108 := algebra.join(_98,_67);
    _85 := mat.new(_106,_107,_108);
    _109 := algebra.join(_96,_68);
    _110 := algebra.join(_97,_68);
    _111 := algebra.join(_98,_68);
    _86 := mat.new(_109,_110,_111);
    _84 := mat.pack(_103,_104,_105);
    _85 := mat.pack(_106,_107,_108);
    _86 := mat.pack(_109,_110,_111);
    v60 := mat.new(_84,_85,_86);
    v62 := 0;
    _100 := aggr.count(_84);
    v62 := calc.+(v62,_100);
    _101 := aggr.count(_85);
    v62 := calc.+(v62,_101);
    _102 := aggr.count(_86);
    v62 := calc.+(v62,_102);
    sql.exportValue(3,"tables","countvid","int",32,0,6,v62);
end main;
!ERROR: MALexception:mvc:PARSER not initialized

# 08:54:20 >  
# 08:54:20 >  Done.
# 08:54:20 >  

