stdout of test 'mat01` in directory 'src/optimizer` itself:


# 11:53:46 >  
# 11:53:46 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39582 --set sql_port=44122 --set xquery_port=52828 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat01.mal < /dev/null
# 11:53:46 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## select count(*) from tables
#include sql;
#mdb.list();
##   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2);
## bind the two components separately
##   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
## simulate the SQL behavior
#    v2v0:= bat.new(:void,:int);
#    bat.insert(v2v0,nil,0);
#    v2v1:= bat.new(:void,:int);
#    bat.insert(v2v1,nil,1);
#    v2v2:= bat.new(:void,:int);
#    bat.insert(v2v2,nil,2);
#    v2 := mat.new(v2v0,v2v1,v2v2);
#
##   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);
#    v23:= bat.new(:void,:int);
#    bat.insert(v23,nil,3);
#
##   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);
#    v8:= bat.new(:void,:oid);
#  
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#    v17 := algebra.markT(v12,0@0);
#    v19 := bat.reverse(v17);
#    v21 := algebra.join(v19,v2);
#
##   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);
#    v26:= bat.new(:void,:oid);
#
#    v28 := bat.reverse(v26);
#    v30 := algebra.kdifference(v23,v28);
#    v34 := algebra.markT(v30,0@0);
#    v36 := bat.reverse(v34);
#    v38 := algebra.join(v36,v23);
#    v40 := bat.setAccess(v21,"w");
#    bat.append(v40,v38);
#    v47 := algebra.markT(v40,0@0);
#    v49 := bat.reverse(v47);
#    v51 := algebra.join(v49,v40);
#    v56 := algebra.markT(v51,0@0);
#    v58 := bat.reverse(v56);
#    v60 := algebra.join(v58,v51);
#    v62 := aggr.count(v60);
##   sql.exportValue(3,"tables","countvid","int",32,0,6,v62);
#	io.print(v62);
#
#optimizer.multitable();
#
#
function user.main():void;	# 0  (main:void)
    mdb.list();	# 1 MDBlist (_1:void)
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 	# 2  (_3:str)
# bind the two components separately 	# 3  (_5:str)
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 4  (_7:str)
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 5  (_9:str)
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 6  (_11:str)
# simulate the SQL behavior 	# 7  (_13:str)
    v2v0 := bat.new(:void,:int);	# 8 CMDBATnew (v2v0:bat[:void,:int])<-(_15:void)(_16:int)
    bat.insert(v2v0,nil,0);	# 9 BKCinsert_bun (_17:void)<-(v2v0:bat[:void,:int])(_18:void)(_19:int)
    v2v1 := bat.new(:void,:int);	# 10 CMDBATnew (v2v1:bat[:void,:int])<-(_15:void)(_16:int)
    bat.insert(v2v1,nil,1);	# 11 BKCinsert_bun (_21:void)<-(v2v1:bat[:void,:int])(_18:void)(_22:int)
    v2v2 := bat.new(:void,:int);	# 12 CMDBATnew (v2v2:bat[:void,:int])<-(_15:void)(_16:int)
    bat.insert(v2v2,nil,2);	# 13 BKCinsert_bun (_24:void)<-(v2v2:bat[:void,:int])(_18:void)(_25:int)
    v2 := mat.new(v2v0,v2v1,v2v2);	# 14 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])(v2v2:bat[:void,:int])
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 	# 15  (_28:str)
    v23 := bat.new(:void,:int);	# 16 CMDBATnew (v23:bat[:void,:int])<-(_15:void)(_16:int)
    bat.insert(v23,nil,3);	# 17 BKCinsert_bun (_30:void)<-(v23:bat[:void,:int])(_18:void)(_31:int)
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 	# 18  (_33:str)
    v8 := bat.new(:void,:oid);	# 19 CMDBATnew (v8:bat[:void,:oid])<-(_15:void)(_35:oid)
    v10 := bat.reverse(v8);	# 20 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _64 := algebra.kdifference(v2v0,v10);	# 21 ALGkdiff (_64:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _65 := algebra.kdifference(v2v1,v10);	# 22 ALGkdiff (_65:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    _66 := algebra.kdifference(v2v2,v10);	# 23 ALGkdiff (_66:bat[:oid,:int])<-(v2v2:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_64,_65,_66);	# 24 MATnew (v12:bat[:oid,:int])<-(_64:bat[:oid,:int])(_65:bat[:oid,:int])(_66:bat[:oid,:int])
    _67 := algebra.markT(_64,0@0);	# 25 ALGtmark (_67:bat[:oid,:void])<-(_64:bat[:oid,:int])(_39:oid)
    _68 := algebra.markT(_65,0@0);	# 26 ALGtmark (_68:bat[:oid,:void])<-(_65:bat[:oid,:int])(_39:oid)
    _69 := algebra.markT(_66,0@0);	# 27 ALGtmark (_69:bat[:oid,:void])<-(_66:bat[:oid,:int])(_39:oid)
    v17 := mat.new(_67,_68,_69);	# 28 MATnew (v17:bat[:oid,:void])<-(_67:bat[:oid,:void])(_68:bat[:oid,:void])(_69:bat[:oid,:void])
    _70 := bat.reverse(_67);	# 29 BKCreverse (_70:bat[:void,:oid])<-(_67:bat[:oid,:void])
    _71 := bat.reverse(_68);	# 30 BKCreverse (_71:bat[:void,:oid])<-(_68:bat[:oid,:void])
    _72 := bat.reverse(_69);	# 31 BKCreverse (_72:bat[:void,:oid])<-(_69:bat[:oid,:void])
    v19 := mat.new(_70,_71,_72);	# 32 MATnew (v19:bat[:void,:oid])<-(_70:bat[:void,:oid])(_71:bat[:void,:oid])(_72:bat[:void,:oid])
    v19 := mat.pack(_70,_71,_72);	# 33 MATpack (v19:bat[:void,:oid])<-(_70:bat[:void,:oid])(_71:bat[:void,:oid])(_72:bat[:void,:oid])
    _73 := algebra.join(v19,v2v0);	# 34 ALGjoin (_73:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v0:bat[:void,:int])
    _74 := algebra.join(v19,v2v1);	# 35 ALGjoin (_74:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v1:bat[:void,:int])
    _75 := algebra.join(v19,v2v2);	# 36 ALGjoin (_75:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v2:bat[:void,:int])
    v21 := mat.new(_73,_74,_75);	# 37 MATnew (v21:bat[:void,:int])<-(_73:bat[:void,:int])(_74:bat[:void,:int])(_75:bat[:void,:int])
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 	# 38  (_43:str)
    v26 := bat.new(:void,:oid);	# 39 CMDBATnew (v26:bat[:void,:oid])<-(_15:void)(_35:oid)
    v28 := bat.reverse(v26);	# 40 BKCreverse (v28:bat[:oid,:void])<-(v26:bat[:void,:oid])
    v30 := algebra.kdifference(v23,v28);	# 41 ALGkdiff (v30:bat[:oid,:int])<-(v23:bat[:void,:int])(v28:bat[:oid,:void])
    v34 := algebra.markT(v30,0@0);	# 42 ALGtmark (v34:bat[:oid,:void])<-(v30:bat[:oid,:int])(_39:oid)
    v36 := bat.reverse(v34);	# 43 BKCreverse (v36:bat[:void,:oid])<-(v34:bat[:oid,:void])
    v38 := algebra.join(v36,v23);	# 44 ALGjoin (v38:bat[:void,:int])<-(v36:bat[:void,:oid])(v23:bat[:void,:int])
    _76 := bat.setAccess(_73,"w");	# 45 BKCsetAccess (_76:bat[:void,:int])<-(_73:bat[:void,:int])(_51:str)
    _77 := bat.setAccess(_74,"w");	# 46 BKCsetAccess (_77:bat[:void,:int])<-(_74:bat[:void,:int])(_51:str)
    _78 := bat.setAccess(_75,"w");	# 47 BKCsetAccess (_78:bat[:void,:int])<-(_75:bat[:void,:int])(_51:str)
    v40 := mat.new(_76,_77,_78);	# 48 MATnew (v40:bat[:void,:int])<-(_76:bat[:void,:int])(_77:bat[:void,:int])(_78:bat[:void,:int])
    _79 := bat.append(_78,v38);	# 49 BKCbat_append_void_bat_wrap (_79:void)<-(_78:bat[:void,:int])(v38:bat[:void,:int])
    _80 := algebra.markT(_76,0@0);	# 50 ALGtmark (_80:bat[:oid,:void])<-(_76:bat[:void,:int])(_39:oid)
    _81 := algebra.markT(_77,0@0);	# 51 ALGtmark (_81:bat[:oid,:void])<-(_77:bat[:void,:int])(_39:oid)
    _82 := algebra.markT(_78,0@0);	# 52 ALGtmark (_82:bat[:oid,:void])<-(_78:bat[:void,:int])(_39:oid)
    v47 := mat.new(_80,_81,_82);	# 53 MATnew (v47:bat[:oid,:void])<-(_80:bat[:oid,:void])(_81:bat[:oid,:void])(_82:bat[:oid,:void])
    _83 := bat.reverse(_80);	# 54 BKCreverse (_83:bat[:void,:oid])<-(_80:bat[:oid,:void])
    _84 := bat.reverse(_81);	# 55 BKCreverse (_84:bat[:void,:oid])<-(_81:bat[:oid,:void])
    _85 := bat.reverse(_82);	# 56 BKCreverse (_85:bat[:void,:oid])<-(_82:bat[:oid,:void])
    v49 := mat.new(_83,_84,_85);	# 57 MATnew (v49:bat[:void,:oid])<-(_83:bat[:void,:oid])(_84:bat[:void,:oid])(_85:bat[:void,:oid])
    v49 := mat.pack(_83,_84,_85);	# 58 MATpack (v49:bat[:void,:oid])<-(_83:bat[:void,:oid])(_84:bat[:void,:oid])(_85:bat[:void,:oid])
    _86 := algebra.join(v49,_76);	# 59 ALGjoin (_86:bat[:void,:int])<-(v49:bat[:void,:oid])(_76:bat[:void,:int])
    _87 := algebra.join(v49,_77);	# 60 ALGjoin (_87:bat[:void,:int])<-(v49:bat[:void,:oid])(_77:bat[:void,:int])
    _88 := algebra.join(v49,_78);	# 61 ALGjoin (_88:bat[:void,:int])<-(v49:bat[:void,:oid])(_78:bat[:void,:int])
    v51 := mat.new(_86,_87,_88);	# 62 MATnew (v51:bat[:void,:int])<-(_86:bat[:void,:int])(_87:bat[:void,:int])(_88:bat[:void,:int])
    _89 := algebra.markT(_86,0@0);	# 63 ALGtmark (_89:bat[:oid,:void])<-(_86:bat[:void,:int])(_39:oid)
    _90 := algebra.markT(_87,0@0);	# 64 ALGtmark (_90:bat[:oid,:void])<-(_87:bat[:void,:int])(_39:oid)
    _91 := algebra.markT(_88,0@0);	# 65 ALGtmark (_91:bat[:oid,:void])<-(_88:bat[:void,:int])(_39:oid)
    v56 := mat.new(_89,_90,_91);	# 66 MATnew (v56:bat[:oid,:void])<-(_89:bat[:oid,:void])(_90:bat[:oid,:void])(_91:bat[:oid,:void])
    _92 := bat.reverse(_89);	# 67 BKCreverse (_92:bat[:void,:oid])<-(_89:bat[:oid,:void])
    _93 := bat.reverse(_90);	# 68 BKCreverse (_93:bat[:void,:oid])<-(_90:bat[:oid,:void])
    _94 := bat.reverse(_91);	# 69 BKCreverse (_94:bat[:void,:oid])<-(_91:bat[:oid,:void])
    v58 := mat.new(_92,_93,_94);	# 70 MATnew (v58:bat[:void,:oid])<-(_92:bat[:void,:oid])(_93:bat[:void,:oid])(_94:bat[:void,:oid])
    v58 := mat.pack(_92,_93,_94);	# 71 MATpack (v58:bat[:void,:oid])<-(_92:bat[:void,:oid])(_93:bat[:void,:oid])(_94:bat[:void,:oid])
    _95 := algebra.join(v58,_86);	# 72 ALGjoin (_95:bat[:void,:int])<-(v58:bat[:void,:oid])(_86:bat[:void,:int])
    _96 := algebra.join(v58,_87);	# 73 ALGjoin (_96:bat[:void,:int])<-(v58:bat[:void,:oid])(_87:bat[:void,:int])
    _97 := algebra.join(v58,_88);	# 74 ALGjoin (_97:bat[:void,:int])<-(v58:bat[:void,:oid])(_88:bat[:void,:int])
    v60 := mat.new(_95,_96,_97);	# 75 MATnew (v60:bat[:void,:int])<-(_95:bat[:void,:int])(_96:bat[:void,:int])(_97:bat[:void,:int])
    v62 := 0;	# 76  (v62:int)<-(_98:int)
    _99 := aggr.count(_95);	# 77 ALGcount_bat (_99:int)<-(_95:bat[:void,:int])
    v62 := calc.+(v62,_99);	# 78 CALCbinaryADDintint (v62:int)<-(v62:int)(_99:int)
    _100 := aggr.count(_96);	# 79 ALGcount_bat (_100:int)<-(_96:bat[:void,:int])
    v62 := calc.+(v62,_100);	# 80 CALCbinaryADDintint (v62:int)<-(v62:int)(_100:int)
    _101 := aggr.count(_97);	# 81 ALGcount_bat (_101:int)<-(_97:bat[:void,:int])
    v62 := calc.+(v62,_101);	# 82 CALCbinaryADDintint (v62:int)<-(v62:int)(_101:int)
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 	# 83  (_61:str)
    io.print(v62);	# 84 IOprint_val (_62:int)<-(v62:int)
end main;	# 85  
function user.main():void;
    mdb.list();
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 
# bind the two components separately 
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
# simulate the SQL behavior 
    v2v0 := bat.new(:void,:int);
    bat.insert(v2v0,nil,0);
    v2v1 := bat.new(:void,:int);
    bat.insert(v2v1,nil,1);
    v2v2 := bat.new(:void,:int);
    bat.insert(v2v2,nil,2);
    v2 := mat.new(v2v0,v2v1,v2v2);
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 
    v23 := bat.new(:void,:int);
    bat.insert(v23,nil,3);
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 
    v8 := bat.new(:void,:oid);
    v10 := bat.reverse(v8);
    _64 := algebra.kdifference(v2v0,v10);
    _65 := algebra.kdifference(v2v1,v10);
    _66 := algebra.kdifference(v2v2,v10);
    v12 := mat.new(_64,_65,_66);
    _67 := algebra.markT(_64,0@0);
    _68 := algebra.markT(_65,0@0);
    _69 := algebra.markT(_66,0@0);
    v17 := mat.new(_67,_68,_69);
    _70 := bat.reverse(_67);
    _71 := bat.reverse(_68);
    _72 := bat.reverse(_69);
    v19 := mat.new(_70,_71,_72);
    v19 := mat.pack(_70,_71,_72);
    _73 := algebra.join(v19,v2v0);
    _74 := algebra.join(v19,v2v1);
    _75 := algebra.join(v19,v2v2);
    v21 := mat.new(_73,_74,_75);
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 
    v26 := bat.new(:void,:oid);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    _76 := bat.setAccess(_73,"w");
    _77 := bat.setAccess(_74,"w");
    _78 := bat.setAccess(_75,"w");
    v40 := mat.new(_76,_77,_78);
    _79 := bat.append(_78,v38);
    _80 := algebra.markT(_76,0@0);
    _81 := algebra.markT(_77,0@0);
    _82 := algebra.markT(_78,0@0);
    v47 := mat.new(_80,_81,_82);
    _83 := bat.reverse(_80);
    _84 := bat.reverse(_81);
    _85 := bat.reverse(_82);
    v49 := mat.new(_83,_84,_85);
    v49 := mat.pack(_83,_84,_85);
    _86 := algebra.join(v49,_76);
    _87 := algebra.join(v49,_77);
    _88 := algebra.join(v49,_78);
    v51 := mat.new(_86,_87,_88);
    _89 := algebra.markT(_86,0@0);
    _90 := algebra.markT(_87,0@0);
    _91 := algebra.markT(_88,0@0);
    v56 := mat.new(_89,_90,_91);
    _92 := bat.reverse(_89);
    _93 := bat.reverse(_90);
    _94 := bat.reverse(_91);
    v58 := mat.new(_92,_93,_94);
    v58 := mat.pack(_92,_93,_94);
    _95 := algebra.join(v58,_86);
    _96 := algebra.join(v58,_87);
    _97 := algebra.join(v58,_88);
    v60 := mat.new(_95,_96,_97);
    v62 := 0;
    _99 := aggr.count(_95);
    v62 := calc.+(v62,_99);
    _100 := aggr.count(_96);
    v62 := calc.+(v62,_100);
    _101 := aggr.count(_97);
    v62 := calc.+(v62,_101);
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 
    io.print(v62);
end main;
[ 0 ]

# 11:53:46 >  
# 11:53:46 >  Done.
# 11:53:46 >  

