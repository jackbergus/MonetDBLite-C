stdout of test 'mat01` in directory 'src/optimizer` itself:


# 11:53:46 >  
# 11:53:46 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39582 --set sql_port=44122 --set xquery_port=52828 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat01.mal < /dev/null
# 11:53:46 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## select count(*) from tables
#include sql;
#mdb.list();
##   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2);
## bind the two components separately
##   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
## simulate the SQL behavior
#    v2v0:= bat.new(:void,:int);
#    bat.insert(v2v0,nil,0);
#    v2v1:= bat.new(:void,:int);
#    bat.insert(v2v1,nil,1);
#    v2v2:= bat.new(:void,:int);
#    bat.insert(v2v2,nil,2);
#    v2 := mat.new(v2v0,v2v1,v2v2);
#
##   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0);
#    v23:= bat.new(:void,:int);
#    bat.insert(v23,nil,3);
#
##   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0);
#    v8:= bat.new(:void,:oid);
#  
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#    v17 := algebra.markT(v12,0@0);
#    v19 := bat.reverse(v17);
#    v21 := algebra.join(v19,v2);
#
##   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0);
#    v26:= bat.new(:void,:oid);
#
#    v28 := bat.reverse(v26);
#    v30 := algebra.kdifference(v23,v28);
#    v34 := algebra.markT(v30,0@0);
#    v36 := bat.reverse(v34);
#    v38 := algebra.join(v36,v23);
#    v40 := bat.setAccess(v21,"w");
#    bat.append(v40,v38);
#    v47 := algebra.markT(v40,0@0);
#    v49 := bat.reverse(v47);
#    v51 := algebra.join(v49,v40);
#    v56 := algebra.markT(v51,0@0);
#    v58 := bat.reverse(v56);
#    v60 := algebra.join(v58,v51);
#    v62 := aggr.count(v60);
##   sql.exportValue(3,"tables","countvid","int",32,0,6,v62);
#	io.print(v62);
#
#optimizer.multitable();
#
#
function user.main():void;	# 0  (main:void)
# select count(*) from tables 	# 1  (_2:str)
    mdb.list();	# 2 MDBlist (_3:void)
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 	# 3  (_5:str)
# bind the two components separately 	# 4  (_7:str)
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 5  (_9:str)
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 6  (_11:str)
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 7  (_13:str)
# simulate the SQL behavior 	# 8  (_15:str)
    v2v0 := bat.new(:void,:int);	# 9 CMDBATnew (v2v0:bat[:void,:int])<-(_17:void)(_18:int)
    bat.insert(v2v0,nil,0);	# 10 BKCinsert_bun (_19:void)<-(v2v0:bat[:void,:int])(_20:void)(_21:int)
    v2v1 := bat.new(:void,:int);	# 11 CMDBATnew (v2v1:bat[:void,:int])<-(_17:void)(_18:int)
    bat.insert(v2v1,nil,1);	# 12 BKCinsert_bun (_23:void)<-(v2v1:bat[:void,:int])(_20:void)(_24:int)
    v2v2 := bat.new(:void,:int);	# 13 CMDBATnew (v2v2:bat[:void,:int])<-(_17:void)(_18:int)
    bat.insert(v2v2,nil,2);	# 14 BKCinsert_bun (_26:void)<-(v2v2:bat[:void,:int])(_20:void)(_27:int)
    v2 := mat.new(v2v0,v2v1,v2v2);	# 15 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])(v2v2:bat[:void,:int])
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 	# 16  (_30:str)
    v23 := bat.new(:void,:int);	# 17 CMDBATnew (v23:bat[:void,:int])<-(_17:void)(_18:int)
    bat.insert(v23,nil,3);	# 18 BKCinsert_bun (_32:void)<-(v23:bat[:void,:int])(_20:void)(_33:int)
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 	# 19  (_35:str)
    v8 := bat.new(:void,:oid);	# 20 CMDBATnew (v8:bat[:void,:oid])<-(_17:void)(_37:oid)
    v10 := bat.reverse(v8);	# 21 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _66 := algebra.kdifference(v2v0,v10);	# 22 ALGkdiff (_66:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _67 := algebra.kdifference(v2v1,v10);	# 23 ALGkdiff (_67:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    _68 := algebra.kdifference(v2v2,v10);	# 24 ALGkdiff (_68:bat[:oid,:int])<-(v2v2:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_66,_67,_68);	# 25 MATnew (v12:bat[:oid,:int])<-(_66:bat[:oid,:int])(_67:bat[:oid,:int])(_68:bat[:oid,:int])
    _69 := algebra.markT(_66,0@0);	# 26 ALGtmark (_69:bat[:oid,:void])<-(_66:bat[:oid,:int])(_41:oid)
    _70 := algebra.markT(_67,0@0);	# 27 ALGtmark (_70:bat[:oid,:void])<-(_67:bat[:oid,:int])(_41:oid)
    _71 := algebra.markT(_68,0@0);	# 28 ALGtmark (_71:bat[:oid,:void])<-(_68:bat[:oid,:int])(_41:oid)
    v17 := mat.new(_69,_70,_71);	# 29 MATnew (v17:bat[:oid,:void])<-(_69:bat[:oid,:void])(_70:bat[:oid,:void])(_71:bat[:oid,:void])
    _72 := bat.reverse(_69);	# 30 BKCreverse (_72:bat[:void,:oid])<-(_69:bat[:oid,:void])
    _73 := bat.reverse(_70);	# 31 BKCreverse (_73:bat[:void,:oid])<-(_70:bat[:oid,:void])
    _74 := bat.reverse(_71);	# 32 BKCreverse (_74:bat[:void,:oid])<-(_71:bat[:oid,:void])
    v19 := mat.new(_72,_73,_74);	# 33 MATnew (v19:bat[:void,:oid])<-(_72:bat[:void,:oid])(_73:bat[:void,:oid])(_74:bat[:void,:oid])
    v19 := mat.pack(_72,_73,_74);	# 34 MATpack (v19:bat[:void,:oid])<-(_72:bat[:void,:oid])(_73:bat[:void,:oid])(_74:bat[:void,:oid])
    _75 := algebra.join(v19,v2v0);	# 35 ALGjoin (_75:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v0:bat[:void,:int])
    _76 := algebra.join(v19,v2v1);	# 36 ALGjoin (_76:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v1:bat[:void,:int])
    _77 := algebra.join(v19,v2v2);	# 37 ALGjoin (_77:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v2:bat[:void,:int])
    v21 := mat.new(_75,_76,_77);	# 38 MATnew (v21:bat[:void,:int])<-(_75:bat[:void,:int])(_76:bat[:void,:int])(_77:bat[:void,:int])
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 	# 39  (_45:str)
    v26 := bat.new(:void,:oid);	# 40 CMDBATnew (v26:bat[:void,:oid])<-(_17:void)(_37:oid)
    v28 := bat.reverse(v26);	# 41 BKCreverse (v28:bat[:oid,:void])<-(v26:bat[:void,:oid])
    v30 := algebra.kdifference(v23,v28);	# 42 ALGkdiff (v30:bat[:oid,:int])<-(v23:bat[:void,:int])(v28:bat[:oid,:void])
    v34 := algebra.markT(v30,0@0);	# 43 ALGtmark (v34:bat[:oid,:void])<-(v30:bat[:oid,:int])(_41:oid)
    v36 := bat.reverse(v34);	# 44 BKCreverse (v36:bat[:void,:oid])<-(v34:bat[:oid,:void])
    v38 := algebra.join(v36,v23);	# 45 ALGjoin (v38:bat[:void,:int])<-(v36:bat[:void,:oid])(v23:bat[:void,:int])
    _78 := bat.setAccess(_75,"w");	# 46 BKCsetAccess (_78:bat[:void,:int])<-(_75:bat[:void,:int])(_53:str)
    _79 := bat.setAccess(_76,"w");	# 47 BKCsetAccess (_79:bat[:void,:int])<-(_76:bat[:void,:int])(_53:str)
    _80 := bat.setAccess(_77,"w");	# 48 BKCsetAccess (_80:bat[:void,:int])<-(_77:bat[:void,:int])(_53:str)
    v40 := mat.new(_78,_79,_80);	# 49 MATnew (v40:bat[:void,:int])<-(_78:bat[:void,:int])(_79:bat[:void,:int])(_80:bat[:void,:int])
    _81 := bat.append(_80,v38);	# 50 BKCbat_append_void_bat_wrap (_81:void)<-(_80:bat[:void,:int])(v38:bat[:void,:int])
    _82 := algebra.markT(_78,0@0);	# 51 ALGtmark (_82:bat[:oid,:void])<-(_78:bat[:void,:int])(_41:oid)
    _83 := algebra.markT(_79,0@0);	# 52 ALGtmark (_83:bat[:oid,:void])<-(_79:bat[:void,:int])(_41:oid)
    _84 := algebra.markT(_80,0@0);	# 53 ALGtmark (_84:bat[:oid,:void])<-(_80:bat[:void,:int])(_41:oid)
    v47 := mat.new(_82,_83,_84);	# 54 MATnew (v47:bat[:oid,:void])<-(_82:bat[:oid,:void])(_83:bat[:oid,:void])(_84:bat[:oid,:void])
    _85 := bat.reverse(_82);	# 55 BKCreverse (_85:bat[:void,:oid])<-(_82:bat[:oid,:void])
    _86 := bat.reverse(_83);	# 56 BKCreverse (_86:bat[:void,:oid])<-(_83:bat[:oid,:void])
    _87 := bat.reverse(_84);	# 57 BKCreverse (_87:bat[:void,:oid])<-(_84:bat[:oid,:void])
    v49 := mat.new(_85,_86,_87);	# 58 MATnew (v49:bat[:void,:oid])<-(_85:bat[:void,:oid])(_86:bat[:void,:oid])(_87:bat[:void,:oid])
    v49 := mat.pack(_85,_86,_87);	# 59 MATpack (v49:bat[:void,:oid])<-(_85:bat[:void,:oid])(_86:bat[:void,:oid])(_87:bat[:void,:oid])
    _88 := algebra.join(v49,_78);	# 60 ALGjoin (_88:bat[:void,:int])<-(v49:bat[:void,:oid])(_78:bat[:void,:int])
    _89 := algebra.join(v49,_79);	# 61 ALGjoin (_89:bat[:void,:int])<-(v49:bat[:void,:oid])(_79:bat[:void,:int])
    _90 := algebra.join(v49,_80);	# 62 ALGjoin (_90:bat[:void,:int])<-(v49:bat[:void,:oid])(_80:bat[:void,:int])
    v51 := mat.new(_88,_89,_90);	# 63 MATnew (v51:bat[:void,:int])<-(_88:bat[:void,:int])(_89:bat[:void,:int])(_90:bat[:void,:int])
    _91 := algebra.markT(_88,0@0);	# 64 ALGtmark (_91:bat[:oid,:void])<-(_88:bat[:void,:int])(_41:oid)
    _92 := algebra.markT(_89,0@0);	# 65 ALGtmark (_92:bat[:oid,:void])<-(_89:bat[:void,:int])(_41:oid)
    _93 := algebra.markT(_90,0@0);	# 66 ALGtmark (_93:bat[:oid,:void])<-(_90:bat[:void,:int])(_41:oid)
    v56 := mat.new(_91,_92,_93);	# 67 MATnew (v56:bat[:oid,:void])<-(_91:bat[:oid,:void])(_92:bat[:oid,:void])(_93:bat[:oid,:void])
    _94 := bat.reverse(_91);	# 68 BKCreverse (_94:bat[:void,:oid])<-(_91:bat[:oid,:void])
    _95 := bat.reverse(_92);	# 69 BKCreverse (_95:bat[:void,:oid])<-(_92:bat[:oid,:void])
    _96 := bat.reverse(_93);	# 70 BKCreverse (_96:bat[:void,:oid])<-(_93:bat[:oid,:void])
    v58 := mat.new(_94,_95,_96);	# 71 MATnew (v58:bat[:void,:oid])<-(_94:bat[:void,:oid])(_95:bat[:void,:oid])(_96:bat[:void,:oid])
    v58 := mat.pack(_94,_95,_96);	# 72 MATpack (v58:bat[:void,:oid])<-(_94:bat[:void,:oid])(_95:bat[:void,:oid])(_96:bat[:void,:oid])
    _97 := algebra.join(v58,_88);	# 73 ALGjoin (_97:bat[:void,:int])<-(v58:bat[:void,:oid])(_88:bat[:void,:int])
    _98 := algebra.join(v58,_89);	# 74 ALGjoin (_98:bat[:void,:int])<-(v58:bat[:void,:oid])(_89:bat[:void,:int])
    _99 := algebra.join(v58,_90);	# 75 ALGjoin (_99:bat[:void,:int])<-(v58:bat[:void,:oid])(_90:bat[:void,:int])
    v60 := mat.new(_97,_98,_99);	# 76 MATnew (v60:bat[:void,:int])<-(_97:bat[:void,:int])(_98:bat[:void,:int])(_99:bat[:void,:int])
    v62 := 0;	# 77  (v62:int)<-(_100:int)
    _101 := aggr.count(_97);	# 78 ALGcount_bat (_101:int)<-(_97:bat[:void,:int])
    v62 := calc.+(v62,_101);	# 79 CALCbinaryADDintint (v62:int)<-(v62:int)(_101:int)
    _102 := aggr.count(_98);	# 80 ALGcount_bat (_102:int)<-(_98:bat[:void,:int])
    v62 := calc.+(v62,_102);	# 81 CALCbinaryADDintint (v62:int)<-(v62:int)(_102:int)
    _103 := aggr.count(_99);	# 82 ALGcount_bat (_103:int)<-(_99:bat[:void,:int])
    v62 := calc.+(v62,_103);	# 83 CALCbinaryADDintint (v62:int)<-(v62:int)(_103:int)
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 	# 84  (_63:str)
    io.print(v62);	# 85 IOprint_val (_64:int)<-(v62:int)
end main;	# 86  
function user.main():void;
    mdb.list();
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0,2); 
# bind the two components separately 
#   v2v0:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v1:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v2v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
# simulate the SQL behavior 
    v2v0 := bat.new(:void,:int);
    bat.insert(v2v0,nil,0);
    v2v1 := bat.new(:void,:int);
    bat.insert(v2v1,nil,1);
    v2v2 := bat.new(:void,:int);
    bat.insert(v2v2,nil,2);
    v2 := mat.new(v2v0,v2v1,v2v2);
#   v23:bat[:void,:int]  := sql.bind("sys","ttables","id",0); 
    v23 := bat.new(:void,:int);
    bat.insert(v23,nil,3);
#   v8:bat[:void,:oid]  := sql.bind_dbat("sys","ptables",0); 
    v8 := bat.new(:void,:oid);
    v10 := bat.reverse(v8);
    _66 := algebra.kdifference(v2v0,v10);
    _67 := algebra.kdifference(v2v1,v10);
    _68 := algebra.kdifference(v2v2,v10);
    v12 := mat.new(_66,_67,_68);
    _69 := algebra.markT(_66,0@0);
    _70 := algebra.markT(_67,0@0);
    _71 := algebra.markT(_68,0@0);
    v17 := mat.new(_69,_70,_71);
    _72 := bat.reverse(_69);
    _73 := bat.reverse(_70);
    _74 := bat.reverse(_71);
    v19 := mat.new(_72,_73,_74);
    v19 := mat.pack(_72,_73,_74);
    _75 := algebra.join(v19,v2v0);
    _76 := algebra.join(v19,v2v1);
    _77 := algebra.join(v19,v2v2);
    v21 := mat.new(_75,_76,_77);
#   v26:bat[:void,:oid]  := sql.bind_dbat("sys","ttables",0); 
    v26 := bat.new(:void,:oid);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    _78 := bat.setAccess(_75,"w");
    _79 := bat.setAccess(_76,"w");
    _80 := bat.setAccess(_77,"w");
    v40 := mat.new(_78,_79,_80);
    _81 := bat.append(_80,v38);
    _82 := algebra.markT(_78,0@0);
    _83 := algebra.markT(_79,0@0);
    _84 := algebra.markT(_80,0@0);
    v47 := mat.new(_82,_83,_84);
    _85 := bat.reverse(_82);
    _86 := bat.reverse(_83);
    _87 := bat.reverse(_84);
    v49 := mat.new(_85,_86,_87);
    v49 := mat.pack(_85,_86,_87);
    _88 := algebra.join(v49,_78);
    _89 := algebra.join(v49,_79);
    _90 := algebra.join(v49,_80);
    v51 := mat.new(_88,_89,_90);
    _91 := algebra.markT(_88,0@0);
    _92 := algebra.markT(_89,0@0);
    _93 := algebra.markT(_90,0@0);
    v56 := mat.new(_91,_92,_93);
    _94 := bat.reverse(_91);
    _95 := bat.reverse(_92);
    _96 := bat.reverse(_93);
    v58 := mat.new(_94,_95,_96);
    v58 := mat.pack(_94,_95,_96);
    _97 := algebra.join(v58,_88);
    _98 := algebra.join(v58,_89);
    _99 := algebra.join(v58,_90);
    v60 := mat.new(_97,_98,_99);
    v62 := 0;
    _101 := aggr.count(_97);
    v62 := calc.+(v62,_101);
    _102 := aggr.count(_98);
    v62 := calc.+(v62,_102);
    _103 := aggr.count(_99);
    v62 := calc.+(v62,_103);
#   sql.exportValue(3,"tables","countvid","int",32,0,6,v62); 
    io.print(v62);
end main;
[ 0 ]

# 11:53:46 >  
# 11:53:46 >  Done.
# 11:53:46 >  

