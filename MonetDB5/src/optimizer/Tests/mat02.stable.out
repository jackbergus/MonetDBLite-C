stdout of test 'mat02` in directory 'src/optimizer` itself:


# 23:56:30 >  
# 23:56:30 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=35317 --set sql_port=48831 --set xquery_port=50010 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat02.mal < /dev/null
# 23:56:30 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#
## select count(name) from tables
#include sql;
#mdb.list();
## simulate the SQL behavior
##   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0);
##   v60:bat[:void,:str]  := sql.bind("sys","ptables","name",0);
#    v2v0:= bat.new(:void,:int);
#    bat.insert(v2v0,0@0,0);
#    v2v1:= bat.new(:void,:int);
#    bat.insert(v2v1,1@0,1);
#    v2v2:= bat.new(:void,:int);
#	bat.setSequenceBase(v2v2,2@0);
#    bat.insert(v2v2,nil,2);
#    v2 := mat.new(v2v0,v2v1,v2v2);
#io.print(v2v2);
#	v60a := bat.new(:void,:str);
#	bat.insert(v60a,0@0,"first");
#	v60b := bat.new(:void,:str);
#	bat.insert(v60b,1@0,"second");
#	v60:= mat.new(v60a,v60b);
#
##   v23:bat[:void,:int]  := sql.bindvdbat("sys","ptables",0);
#    v23:= bat.new(:void,:int);
##   v68:bat[:void,:str]  := sql.bind("sys","ptables","name",0);
#	v68:= bat.new(:void,:str);
#
##   v8:bat[:void,:oid]  := sql.bindvdbat("sys","ptables",0);
#    v8:= bat.new(:void,:oid);
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#    v17 := algebra.markT(v12,0@0);
#    v19 := bat.reverse(v17);
#    v21 := algebra.join(v19,v2);
##   v26:bat[:void,:oid]  := sql.bindvdbat("sys","ttables",0);
#    v26:= bat.new(:void,:oid);
#    v28 := bat.reverse(v26);
#    v30 := algebra.kdifference(v23,v28);
#    v34 := algebra.markT(v30,0@0);
#    v36 := bat.reverse(v34);
#    v38 := algebra.join(v36,v23);
#    v40 := bat.setAccess(v21,"w");
#    bat.append(v40,v38);
#    v47 := algebra.markT(v40,0@0);
#    v49 := bat.reverse(v47);
#    v51 := algebra.join(v49,v40);
#    v56 := algebra.markT(v51,0@0);
#    v58 := bat.reverse(v56);
#    v66 := algebra.join(v19,v60);
#    v71 := algebra.join(v36,v68);
#    v73 := bat.setAccess(v66,"w");
#    bat.append(v73,v71);
#    v77 := algebra.join(v49,v73);
#    v79 := algebra.join(v58,v77);
##   v81 := sql.resultSet(1,3,v79);
##   sql.rsColumn(v81,"tables","name","varchar",1024,0,v79);
#    io.print(v79);
#
#optimizer.multitable();
#
#
function user.main():void;	# 0  (main:void)
# select count(name) from tables 	# 1  (_2:str)
    mdb.list();	# 2 MDBlist (_3:void)
# simulate the SQL behavior 	# 3  (_5:str)
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 	# 4  (_7:str)
#   v60:bat[:void,:str]  := sql.bind("sys","ptables","name",0); 	# 5  (_9:str)
    v2v0 := bat.new(:void,:int);	# 6 CMDBATnew (v2v0:bat[:void,:int])<-(_11:void)(_12:int)
    bat.insert(v2v0,0@0,0);	# 7 BKCinsert_bun_oid_any (_13:void)<-(v2v0:bat[:void,:int])(_14:oid)(_15:int)
    v2v1 := bat.new(:void,:int);	# 8 CMDBATnew (v2v1:bat[:void,:int])<-(_11:void)(_12:int)
    bat.insert(v2v1,1@0,1);	# 9 BKCinsert_bun_oid_any (_17:void)<-(v2v1:bat[:void,:int])(_18:oid)(_19:int)
    v2v2 := bat.new(:void,:int);	# 10 CMDBATnew (v2v2:bat[:void,:int])<-(_11:void)(_12:int)
    bat.setSequenceBase(v2v2,2@0);	# 11 BKCsetSequenceBase (_21:bat[:void,:int])<-(v2v2:bat[:void,:int])(_22:oid)
    bat.insert(v2v2,nil,2);	# 12 BKCinsert_bun (_23:void)<-(v2v2:bat[:void,:int])(_24:void)(_25:int)
    v2 := mat.new(v2v0,v2v1,v2v2);	# 13 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])(v2v2:bat[:void,:int])
    io.print(v2v2);	# 14 IOprint_val (_27:int)<-(v2v2:bat[:void,:int])
    v60a := bat.new(:void,:str);	# 15 CMDBATnew (v60a:bat[:void,:str])<-(_11:void)(_29:str)
    bat.insert(v60a,0@0,"first");	# 16 BKCinsert_bun_oid_str (_30:void)<-(v60a:bat[:void,:str])(_14:oid)(_31:str)
    v60b := bat.new(:void,:str);	# 17 CMDBATnew (v60b:bat[:void,:str])<-(_11:void)(_33:str)
    bat.insert(v60b,1@0,"second");	# 18 BKCinsert_bun_oid_str (_34:void)<-(v60b:bat[:void,:str])(_18:oid)(_35:str)
    v60 := mat.new(v60a,v60b);	# 19 MATnew (v60:bat[:void,:str])<-(v60a:bat[:void,:str])(v60b:bat[:void,:str])
#   v23:bat[:void,:int]  := sql.bindvdbat("sys","ptables",0); 	# 20  (_38:str)
    v23 := bat.new(:void,:int);	# 21 CMDBATnew (v23:bat[:void,:int])<-(_11:void)(_12:int)
#   v68:bat[:void,:str]  := sql.bind("sys","ptables","name",0); 	# 22  (_41:str)
    v68 := bat.new(:void,:str);	# 23 CMDBATnew (v68:bat[:void,:str])<-(_11:void)(_43:str)
#   v8:bat[:void,:oid]  := sql.bindvdbat("sys","ptables",0); 	# 24  (_45:str)
    v8 := bat.new(:void,:oid);	# 25 CMDBATnew (v8:bat[:void,:oid])<-(_11:void)(_47:oid)
    v10 := bat.reverse(v8);	# 26 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _83 := algebra.kdifference(v2v0,v10);	# 27 ALGkdiff (_83:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _84 := algebra.kdifference(v2v1,v10);	# 28 ALGkdiff (_84:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    _85 := algebra.kdifference(v2v2,v10);	# 29 ALGkdiff (_85:bat[:oid,:int])<-(v2v2:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_83,_84,_85);	# 30 MATnew (v12:bat[:oid,:int])<-(_83:bat[:oid,:int])(_84:bat[:oid,:int])(_85:bat[:oid,:int])
    _86 := algebra.markT(_83,0@0);	# 31 ALGtmark (_86:bat[:oid,:void])<-(_83:bat[:oid,:int])(_51:oid)
    _87 := algebra.markT(_84,0@0);	# 32 ALGtmark (_87:bat[:oid,:void])<-(_84:bat[:oid,:int])(_51:oid)
    _88 := algebra.markT(_85,0@0);	# 33 ALGtmark (_88:bat[:oid,:void])<-(_85:bat[:oid,:int])(_51:oid)
    v17 := mat.new(_86,_87,_88);	# 34 MATnew (v17:bat[:oid,:void])<-(_86:bat[:oid,:void])(_87:bat[:oid,:void])(_88:bat[:oid,:void])
    _89 := bat.reverse(_86);	# 35 BKCreverse (_89:bat[:void,:oid])<-(_86:bat[:oid,:void])
    _90 := bat.reverse(_87);	# 36 BKCreverse (_90:bat[:void,:oid])<-(_87:bat[:oid,:void])
    _91 := bat.reverse(_88);	# 37 BKCreverse (_91:bat[:void,:oid])<-(_88:bat[:oid,:void])
    v19 := mat.new(_89,_90,_91);	# 38 MATnew (v19:bat[:void,:oid])<-(_89:bat[:void,:oid])(_90:bat[:void,:oid])(_91:bat[:void,:oid])
    v19 := mat.pack(_89,_90,_91);	# 39 MATpack (v19:bat[:void,:oid])<-(_89:bat[:void,:oid])(_90:bat[:void,:oid])(_91:bat[:void,:oid])
    _92 := algebra.join(v19,v2v0);	# 40 ALGjoin (_92:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v0:bat[:void,:int])
    _93 := algebra.join(v19,v2v1);	# 41 ALGjoin (_93:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v1:bat[:void,:int])
    _94 := algebra.join(v19,v2v2);	# 42 ALGjoin (_94:bat[:void,:int])<-(v19:bat[:void,:oid])(v2v2:bat[:void,:int])
    v21 := mat.new(_92,_93,_94);	# 43 MATnew (v21:bat[:void,:int])<-(_92:bat[:void,:int])(_93:bat[:void,:int])(_94:bat[:void,:int])
#   v26:bat[:void,:oid]  := sql.bindvdbat("sys","ttables",0); 	# 44  (_55:str)
    v26 := bat.new(:void,:oid);	# 45 CMDBATnew (v26:bat[:void,:oid])<-(_11:void)(_57:oid)
    v28 := bat.reverse(v26);	# 46 BKCreverse (v28:bat[:oid,:void])<-(v26:bat[:void,:oid])
    v30 := algebra.kdifference(v23,v28);	# 47 ALGkdiff (v30:bat[:oid,:int])<-(v23:bat[:void,:int])(v28:bat[:oid,:void])
    v34 := algebra.markT(v30,0@0);	# 48 ALGtmark (v34:bat[:oid,:void])<-(v30:bat[:oid,:int])(_51:oid)
    v36 := bat.reverse(v34);	# 49 BKCreverse (v36:bat[:void,:oid])<-(v34:bat[:oid,:void])
    v38 := algebra.join(v36,v23);	# 50 ALGjoin (v38:bat[:void,:int])<-(v36:bat[:void,:oid])(v23:bat[:void,:int])
    _95 := bat.setAccess(_92,"w");	# 51 BKCsetAccess (_95:bat[:void,:int])<-(_92:bat[:void,:int])(_64:str)
    _96 := bat.setAccess(_93,"w");	# 52 BKCsetAccess (_96:bat[:void,:int])<-(_93:bat[:void,:int])(_64:str)
    _97 := bat.setAccess(_94,"w");	# 53 BKCsetAccess (_97:bat[:void,:int])<-(_94:bat[:void,:int])(_64:str)
    v40 := mat.new(_95,_96,_97);	# 54 MATnew (v40:bat[:void,:int])<-(_95:bat[:void,:int])(_96:bat[:void,:int])(_97:bat[:void,:int])
    _98 := bat.append(_97,v38);	# 55 BKCbat_append_void_bat_wrap (_98:void)<-(_97:bat[:void,:int])(v38:bat[:void,:int])
    _99 := algebra.markT(_95,0@0);	# 56 ALGtmark (_99:bat[:oid,:void])<-(_95:bat[:void,:int])(_51:oid)
    _100 := algebra.markT(_96,0@0);	# 57 ALGtmark (_100:bat[:oid,:void])<-(_96:bat[:void,:int])(_51:oid)
    _101 := algebra.markT(_97,0@0);	# 58 ALGtmark (_101:bat[:oid,:void])<-(_97:bat[:void,:int])(_51:oid)
    v47 := mat.new(_99,_100,_101);	# 59 MATnew (v47:bat[:oid,:void])<-(_99:bat[:oid,:void])(_100:bat[:oid,:void])(_101:bat[:oid,:void])
    _102 := bat.reverse(_99);	# 60 BKCreverse (_102:bat[:void,:oid])<-(_99:bat[:oid,:void])
    _103 := bat.reverse(_100);	# 61 BKCreverse (_103:bat[:void,:oid])<-(_100:bat[:oid,:void])
    _104 := bat.reverse(_101);	# 62 BKCreverse (_104:bat[:void,:oid])<-(_101:bat[:oid,:void])
    v49 := mat.new(_102,_103,_104);	# 63 MATnew (v49:bat[:void,:oid])<-(_102:bat[:void,:oid])(_103:bat[:void,:oid])(_104:bat[:void,:oid])
    v49 := mat.pack(_102,_103,_104);	# 64 MATpack (v49:bat[:void,:oid])<-(_102:bat[:void,:oid])(_103:bat[:void,:oid])(_104:bat[:void,:oid])
    _105 := algebra.join(v49,_95);	# 65 ALGjoin (_105:bat[:void,:int])<-(v49:bat[:void,:oid])(_95:bat[:void,:int])
    _106 := algebra.join(v49,_96);	# 66 ALGjoin (_106:bat[:void,:int])<-(v49:bat[:void,:oid])(_96:bat[:void,:int])
    _107 := algebra.join(v49,_97);	# 67 ALGjoin (_107:bat[:void,:int])<-(v49:bat[:void,:oid])(_97:bat[:void,:int])
    v51 := mat.new(_105,_106,_107);	# 68 MATnew (v51:bat[:void,:int])<-(_105:bat[:void,:int])(_106:bat[:void,:int])(_107:bat[:void,:int])
    _108 := algebra.markT(_105,0@0);	# 69 ALGtmark (_108:bat[:oid,:void])<-(_105:bat[:void,:int])(_51:oid)
    _109 := algebra.markT(_106,0@0);	# 70 ALGtmark (_109:bat[:oid,:void])<-(_106:bat[:void,:int])(_51:oid)
    _110 := algebra.markT(_107,0@0);	# 71 ALGtmark (_110:bat[:oid,:void])<-(_107:bat[:void,:int])(_51:oid)
    v56 := mat.new(_108,_109,_110);	# 72 MATnew (v56:bat[:oid,:void])<-(_108:bat[:oid,:void])(_109:bat[:oid,:void])(_110:bat[:oid,:void])
    _111 := bat.reverse(_108);	# 73 BKCreverse (_111:bat[:void,:oid])<-(_108:bat[:oid,:void])
    _112 := bat.reverse(_109);	# 74 BKCreverse (_112:bat[:void,:oid])<-(_109:bat[:oid,:void])
    _113 := bat.reverse(_110);	# 75 BKCreverse (_113:bat[:void,:oid])<-(_110:bat[:oid,:void])
    v58 := mat.new(_111,_112,_113);	# 76 MATnew (v58:bat[:void,:oid])<-(_111:bat[:void,:oid])(_112:bat[:void,:oid])(_113:bat[:void,:oid])
    _114 := algebra.join(v19,v60a);	# 77 ALGjoin (_114:bat[:void,:str])<-(v19:bat[:void,:oid])(v60a:bat[:void,:str])
    _115 := algebra.join(v19,v60b);	# 78 ALGjoin (_115:bat[:void,:str])<-(v19:bat[:void,:oid])(v60b:bat[:void,:str])
    v66 := mat.new(_114,_115);	# 79 MATnew (v66:bat[:void,:str])<-(_114:bat[:void,:str])(_115:bat[:void,:str])
    v71 := algebra.join(v36,v68);	# 80 ALGjoin (v71:bat[:void,:str])<-(v36:bat[:void,:oid])(v68:bat[:void,:str])
    _116 := bat.setAccess(_114,"w");	# 81 BKCsetAccess (_116:bat[:void,:str])<-(_114:bat[:void,:str])(_64:str)
    _117 := bat.setAccess(_115,"w");	# 82 BKCsetAccess (_117:bat[:void,:str])<-(_115:bat[:void,:str])(_64:str)
    v73 := mat.new(_116,_117);	# 83 MATnew (v73:bat[:void,:str])<-(_116:bat[:void,:str])(_117:bat[:void,:str])
    _118 := bat.append(_117,v71);	# 84 BKCbat_append_void_bat_wrap (_118:void)<-(_117:bat[:void,:str])(v71:bat[:void,:str])
    _119 := algebra.join(v49,_116);	# 85 ALGjoin (_119:bat[:void,:str])<-(v49:bat[:void,:oid])(_116:bat[:void,:str])
    _120 := algebra.join(v49,_117);	# 86 ALGjoin (_120:bat[:void,:str])<-(v49:bat[:void,:oid])(_117:bat[:void,:str])
    v77 := mat.new(_119,_120);	# 87 MATnew (v77:bat[:void,:str])<-(_119:bat[:void,:str])(_120:bat[:void,:str])
    v58 := mat.pack(_111,_112,_113);	# 88 MATpack (v58:bat[:void,:oid])<-(_111:bat[:void,:oid])(_112:bat[:void,:oid])(_113:bat[:void,:oid])
    _121 := algebra.join(v58,_119);	# 89 ALGjoin (_121:bat[:void,:str])<-(v58:bat[:void,:oid])(_119:bat[:void,:str])
    _122 := algebra.join(v58,_120);	# 90 ALGjoin (_122:bat[:void,:str])<-(v58:bat[:void,:oid])(_120:bat[:void,:str])
    v79 := mat.new(_121,_122);	# 91 MATnew (v79:bat[:void,:str])<-(_121:bat[:void,:str])(_122:bat[:void,:str])
#   v81 := sql.resultSet(1,3,v79); 	# 92  (_78:str)
#   sql.rsColumn(v81,"tables","name","varchar",1024,0,v79); 	# 93  (_80:str)
    v79 := mat.pack(_121,_122);	# 94 MATpack (v79:bat[:void,:str])<-(_121:bat[:void,:str])(_122:bat[:void,:str])
    io.print(v79);	# 95 IOprint_val (_81:int)<-(v79:bat[:void,:str])
end main;	# 96  
function user.main():void;
    mdb.list();
# simulate the SQL behavior 
#   v2:bat[:void,:int]  := sql.bind("sys","ptables","id",0); 
#   v60:bat[:void,:str]  := sql.bind("sys","ptables","name",0); 
    v2v0 := bat.new(:void,:int);
    bat.insert(v2v0,0@0,0);
    v2v1 := bat.new(:void,:int);
    bat.insert(v2v1,1@0,1);
    v2v2 := bat.new(:void,:int);
    bat.setSequenceBase(v2v2,2@0);
    bat.insert(v2v2,nil,2);
    v2 := mat.new(v2v0,v2v1,v2v2);
    io.print(v2v2);
    v60a := bat.new(:void,:str);
    bat.insert(v60a,0@0,"first");
    v60b := bat.new(:void,:str);
    bat.insert(v60b,1@0,"second");
    v60 := mat.new(v60a,v60b);
#   v23:bat[:void,:int]  := sql.bindvdbat("sys","ptables",0); 
    v23 := bat.new(:void,:int);
#   v68:bat[:void,:str]  := sql.bind("sys","ptables","name",0); 
    v68 := bat.new(:void,:str);
#   v8:bat[:void,:oid]  := sql.bindvdbat("sys","ptables",0); 
    v8 := bat.new(:void,:oid);
    v10 := bat.reverse(v8);
    _83 := algebra.kdifference(v2v0,v10);
    _84 := algebra.kdifference(v2v1,v10);
    _85 := algebra.kdifference(v2v2,v10);
    v12 := mat.new(_83,_84,_85);
    _86 := algebra.markT(_83,0@0);
    _87 := algebra.markT(_84,0@0);
    _88 := algebra.markT(_85,0@0);
    v17 := mat.new(_86,_87,_88);
    _89 := bat.reverse(_86);
    _90 := bat.reverse(_87);
    _91 := bat.reverse(_88);
    v19 := mat.new(_89,_90,_91);
    v19 := mat.pack(_89,_90,_91);
    _92 := algebra.join(v19,v2v0);
    _93 := algebra.join(v19,v2v1);
    _94 := algebra.join(v19,v2v2);
    v21 := mat.new(_92,_93,_94);
#   v26:bat[:void,:oid]  := sql.bindvdbat("sys","ttables",0); 
    v26 := bat.new(:void,:oid);
    v28 := bat.reverse(v26);
    v30 := algebra.kdifference(v23,v28);
    v34 := algebra.markT(v30,0@0);
    v36 := bat.reverse(v34);
    v38 := algebra.join(v36,v23);
    _95 := bat.setAccess(_92,"w");
    _96 := bat.setAccess(_93,"w");
    _97 := bat.setAccess(_94,"w");
    v40 := mat.new(_95,_96,_97);
    _98 := bat.append(_97,v38);
    _99 := algebra.markT(_95,0@0);
    _100 := algebra.markT(_96,0@0);
    _101 := algebra.markT(_97,0@0);
    v47 := mat.new(_99,_100,_101);
    _102 := bat.reverse(_99);
    _103 := bat.reverse(_100);
    _104 := bat.reverse(_101);
    v49 := mat.new(_102,_103,_104);
    v49 := mat.pack(_102,_103,_104);
    _105 := algebra.join(v49,_95);
    _106 := algebra.join(v49,_96);
    _107 := algebra.join(v49,_97);
    v51 := mat.new(_105,_106,_107);
    _108 := algebra.markT(_105,0@0);
    _109 := algebra.markT(_106,0@0);
    _110 := algebra.markT(_107,0@0);
    v56 := mat.new(_108,_109,_110);
    _111 := bat.reverse(_108);
    _112 := bat.reverse(_109);
    _113 := bat.reverse(_110);
    v58 := mat.new(_111,_112,_113);
    _114 := algebra.join(v19,v60a);
    _115 := algebra.join(v19,v60b);
    v66 := mat.new(_114,_115);
    v71 := algebra.join(v36,v68);
    _116 := bat.setAccess(_114,"w");
    _117 := bat.setAccess(_115,"w");
    v73 := mat.new(_116,_117);
    _118 := bat.append(_117,v71);
    _119 := algebra.join(v49,_116);
    _120 := algebra.join(v49,_117);
    v77 := mat.new(_119,_120);
    v58 := mat.pack(_111,_112,_113);
    _121 := algebra.join(v58,_119);
    _122 := algebra.join(v58,_120);
    v79 := mat.new(_121,_122);
#   v81 := sql.resultSet(1,3,v79); 
#   sql.rsColumn(v81,"tables","name","varchar",1024,0,v79); 
    v79 := mat.pack(_121,_122);
    io.print(v79);
end main;
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 2@0,	  2	  ]

# 23:56:30 >  
# 23:56:30 >  Done.
# 23:56:30 >  

