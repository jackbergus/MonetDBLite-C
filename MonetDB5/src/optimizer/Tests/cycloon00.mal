function sql.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];
	return bat.new(:any_1,:any_2);
end bind;

function sql.exportResult(x:any_1, y:bat[:any_3,:any_2]);
	io.print(1);
end exportResult;

function sql.rsColumn(x:any_1, s:str,t:str,k:str,i:int, kk:int, z:bat[:any_3,:any_4]);
	io.print(1);
end rsColumn;

function sql.resultSet(i:int, j:int, k:bat[:any_1,:any_2]):bat[:oid,:oid];
	return bat.new(:oid,:oid);
end resultSet;

function tst();
	x1:bat[:oid,:int] := sql.bind("sys","tab","id",0);
	x6:bat[:oid,:int] := sql.bind("sys","col","t_id",0);
	x9:= bat.reverse(x6);
	x10:= algebra.join(x1,x9);
	x13:= algebra.markT(x10,0@0);
	x14:= bat.reverse(x13);
	x15:= algebra.join(x14,x1);
	x16:= sql.resultSet(1,1,x15);
	sql.rsColumn(x16,"sys.c","t_id","int",32,0,x15);
	x22 := io.stdout();
	sql.exportResult(x22,x16);
end tst;
optimizer.datacyclotron("user","tst");
mdb.list("user","tst");

