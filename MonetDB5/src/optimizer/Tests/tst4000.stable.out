stdout of test 'tst4000` in directory 'src/optimizer` itself:


# 23:52:51 >  
# 23:52:51 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4000.mal </dev/null
# 23:52:51 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:34820/
function user.main():void;              #  0 main:void := user.main() {G}
# The 4000 series deals with strategic optimizer constructs 
# common subexpression evaluation 
    b := bat.new(:int,:int);            #  3 b:bat[:int,:int] := CMDBATnew(_7:int, _7:int) {G}
    c := bat.new(:int,:int);            #  4 c:bat[:int,:int] := CMDBATnew(_7:int, _7:int) {G}
# identical until insert takes place 
    d := algebra.select(b,0,100);       #  6 d:bat[:int,:int] := ALGselect(b:bat[:int,:int], _11:int, _12:int) {G}
# mapped onto one instruction 
    l := calc.+(24,27);                 #  8 l:int := CALCbinaryADDintint(_16:int, _18:int) 
# mapped to l 
    l3 := calc.+(l,24);                 # 10 l3:int := CALCbinaryADDintint(l:int, _16:int) 
# replace the alias 
end main;	# 12  

# 23:52:51 >  
# 23:52:51 >  Done.
# 23:52:51 >  

