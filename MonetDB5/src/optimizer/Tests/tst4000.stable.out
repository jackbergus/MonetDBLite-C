stdout of test 'tst4000` in directory 'src/optimizer` itself:


# 23:52:51 >  
# 23:52:51 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4000.mal </dev/null
# 23:52:51 >  

!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## The 4000 series deals with strategic optimizer constructs
## common subexpression evaluation
#optimizer.setDebug();
#optimizer.commonExpressionRemoval();
#optimizer.aliasRemoval();
#b:= bbp.new(:int,:int);
#c:= bbp.new(:int,:int);       # identical until insert takes place
#d:= algebra.select(b,0,100);
#e:= algebra.select(b,0,100);    # mapped onto one instruction
#k1:= 24;
#k2:= 27;
#l:= k1+k2;
#l2:= k1+k2;             # mapped to l
#l3:= l2+k1;             # replace the alias
#
#
function user.main():void;	# 0  (main:void)
# The 4000 series deals with strategic optimizer constructs 	# 1  (_1:str)
# common subexpression evaluation 	# 2  (_2:str)
    b := bat.new(:int,:int);	# 3 CMDBATnew (b:bat[:int,:int])<-(_7:int)(_7:int)
    c := bat.new(:int,:int);	# 4 CMDBATnew (c:bat[:int,:int])<-(_7:int)(_7:int)
# identical until insert takes place 	# 5  (_9:str)
    d := algebra.select(b,0,100);	# 6 ALGselect (d:bat[:int,:int])<-(b:bat[:int,:int])(_11:int)(_12:int)
# mapped onto one instruction 	# 7  (_14:str)
    l := calc.+(24,27);	# 8 CALCbinaryADDintint (l:int)<-(_16:int)(_18:int)
# mapped to l 	# 9  (_21:str)
    l3 := calc.+(l,24);	# 10 CALCbinaryADDintint (l3:int)<-(l:int)(_16:int)
# replace the alias 	# 11  (_23:str)
end main;	# 12  

# 23:52:51 >  
# 23:52:51 >  Done.
# 23:52:51 >  

