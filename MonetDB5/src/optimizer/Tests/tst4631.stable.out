stdout of test 'tst4631` in directory 'src/optimizer` itself:


# 19:36:05 >  
# 19:36:05 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31892 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4631.mal < /dev/null
# 19:36:05 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];
    return _5 := bat.new(:any_1,:any_2);
end bind;
function user.bind_dbat(s:str,t:str,i:int):bat[:any_1,:any_2];
    return _4 := bat.new(:any_1,:any_2);
end bind_dbat;
function user.qry1():void;
    V3 := user.bind("sys","lineitem","l_shipdate",0);
    V8 := user.bind_dbat("sys","lineitem",0);
    V9 := bat.reverse(V8);
    V10 := algebra.kdifference(V3,V9);
    a := mtime.date(nil);
    V14 := algebra.uselect(V10,a,a);
    V17 := algebra.markT(V14,0@0);
    V18 := bat.reverse(V17);
    V19 := user.bind("sys","lineitem","l_returnflag",0);
    V21 := user.bind_dbat("sys","lineitem",0);
    V22 := bat.reverse(V21);
    V23 := algebra.kdifference(V19,V22);
    V24 := algebra.join(V18,V23);
    (V25,E25) := group.new(V24);
    V26 := user.bind("sys","lineitem","l_linestatus",0);
    V28 := user.bind_dbat("sys","lineitem",0);
    V29 := bat.reverse(V28);
    V30 := algebra.kdifference(V26,V29);
    V31 := algebra.join(V18,V30);
    (Ext,V32) := group.derive(V25,E25,V31);
    V33 := algebra.tunique(Ext);
    V34 := bat.mirror(V33);
    V35 := user.bind_dbat("sys","lineitem",0);
    V36 := bat.reverse(V35);
    V37 := algebra.kdifference(V19,V36);
    V38 := algebra.join(V18,V37);
    V39 := algebra.join(V34,V38);
    V40 := algebra.sort(V39);
    V41 := user.bind_dbat("sys","lineitem",0);
    V45 := bat.reverse(V41);
    V46 := algebra.kdifference(V26,V45);
    V47 := algebra.join(V18,V46);
    V48 := algebra.join(V34,V47);
    V49 := group.refine(V40,V48);
    V50 := user.bind("sys","lineitem","l_quantity",0);
    V52 := user.bind_dbat("sys","lineitem",0);
    V53 := bat.reverse(V52);
    V54 := algebra.kdifference(V50,V53);
    V55 := algebra.join(V18,V54);
    V56 := aggr.sum(V55,V32,V34);
    V57 := user.bind("sys","lineitem","l_extendedprice",0);
    V59 := user.bind_dbat("sys","lineitem",0);
    V60 := bat.reverse(V59);
    V61 := algebra.kdifference(V57,V60);
    V62 := algebra.join(V18,V61);
    V63 := aggr.sum(V62,V32,V34);
    V64 := user.bind_dbat("sys","lineitem",0);
    V65 := bat.reverse(V64);
    V66 := algebra.kdifference(V57,V65);
    V67 := algebra.join(V18,V66);
    V69 := calc.lng(1);
    V71 := calc.*(V69,100);
    V72 := user.bind("sys","lineitem","l_discount",0);
    V74 := user.bind_dbat("sys","lineitem",0);
    V78 := bat.reverse(V74);
    V79 := algebra.kdifference(V72,V78);
    V80 := algebra.join(V18,V79);
    V81 := mal.multiplex("calc","-",V71,V80);
    V83 := batcalc.*(V67,V81);
    V85 := aggr.sum(V83,V32,V34);
    V86 := user.bind_dbat("sys","lineitem",0);
    V87 := bat.reverse(V86);
    V88 := algebra.kdifference(V57,V87);
    V89 := algebra.join(V18,V88);
    V90 := calc.lng(1);
    V91 := calc.*(V90,100);
    V92 := user.bind_dbat("sys","lineitem",0);
    V93 := bat.reverse(V92);
    V94 := algebra.kdifference(V72,V93);
    V95 := algebra.join(V18,V94);
    V96 := mal.multiplex("calc","-",V91,V95);
    V97 := batcalc.*(V89,V96);
    V98 := calc.lng(1);
    V99 := calc.*(V98,100);
    V100 := user.bind("sys","lineitem","l_tax",0);
    V102 := user.bind_dbat("sys","lineitem",0);
    V103 := bat.reverse(V102);
    V104 := algebra.kdifference(V100,V103);
    V105 := algebra.join(V18,V104);
    V106 := mal.multiplex("calc","+",V99,V105);
    V108 := batcalc.*(V97,V106);
    V109 := aggr.sum(V108,V32,V34);
    V110 := user.bind_dbat("sys","lineitem",0);
    V114 := bat.reverse(V110);
    V115 := algebra.kdifference(V50,V114);
    V116 := algebra.join(V18,V115);
    V117 := aggr.avg(V116,V32,V34);
    V118 := user.bind_dbat("sys","lineitem",0);
    V119 := bat.reverse(V118);
    V120 := algebra.kdifference(V57,V119);
    V121 := algebra.join(V18,V120);
    V122 := aggr.avg(V121,V32,V34);
    V124 := mal.multiplex("calc","round",V122,100);
    V126 := user.bind_dbat("sys","lineitem",0);
    V127 := bat.reverse(V126);
    V128 := algebra.kdifference(V72,V127);
    V129 := algebra.join(V18,V128);
    V130 := aggr.avg(V129,V32,V34);
    V131 := mal.multiplex("calc","round",V130,100);
    V132 := aggr.count(V32,V32,V34);
end qry1;
function user.main():void;
# TPCH Q1 non-optimized 
#don;t depend on SQL library 
    mdb.List("user","qry1");
end main;
function user.qry1():void;              #  0 qry1:void := user.qry1() {G}
    V3:bat[:oid,:date]  := user.bind("sys","lineitem","l_shipdate",0);#  1 V3:bat[:oid,:date] := user.bind(_2:str, _3:str, _4:str, _5:int) {G}
    V8:bat[:oid,:oid]  := user.bind_dbat("sys","lineitem",0);#  2 V8:bat[:oid,:oid] := user.bind_dbat(_2:str, _3:str, _5:int) {G}
    V9 := bat.reverse(V8);              #  3 V9:bat[:oid,:oid] := BKCreverse(V8:bat[:oid,:oid]) {G}
    V10 := algebra.kdifference(V3,V9);  #  4 V10:bat[:oid,:date] := ALGkdiff(V3:bat[:oid,:date], V9:bat[:oid,:oid]) {G}
    a := mtime.date(nil);               #  5 a:date := MTIMEnil2date(_10:void) 
    V14 := algebra.uselect(V10,a,a);    #  6 V14:bat[:oid,:oid] := ALGuselect(V10:bat[:oid,:date], a:date, a:date) {G}
    V17 := algebra.markT(V14,0@0);      #  7 V17:bat[:oid,:oid] := ALGtmark(V14:bat[:oid,:oid], _13:oid) {G}
    V18 := bat.reverse(V17);            #  8 V18:bat[:oid,:oid] := BKCreverse(V17:bat[:oid,:oid]) {G}
    V19:bat[:oid,:bit]  := user.bind("sys","lineitem","l_returnflag",0);#  9 V19:bat[:oid,:bit] := user.bind(_2:str, _3:str, _16:str, _5:int) {G}
    V21:bat[:oid,:oid]  := V8;          # 10 V21:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V22 := bat.reverse(V21);            # 11 V22:bat[:oid,:oid] := BKCreverse(V21:bat[:oid,:oid]) {G}
    V23 := algebra.kdifference(V19,V22);# 12 V23:bat[:oid,:bit] := ALGkdiff(V19:bat[:oid,:bit], V22:bat[:oid,:oid]) {G}
    V24 := algebra.join(V18,V23);       # 13 V24:bat[:oid,:bit] := ALGjoin(V18:bat[:oid,:oid], V23:bat[:oid,:bit]) {G}
    (V25,E25) := group.new(V24);        # 14 (V25:bat[:oid,:int], E25:bat[:oid,:oid]) := GRPgroup(V24:bat[:oid,:bit]) {G}
    V26:bat[:oid,:bit]  := user.bind("sys","lineitem","l_linestatus",0);# 15 V26:bat[:oid,:bit] := user.bind(_2:str, _3:str, _24:str, _5:int) {G}
    V28:bat[:oid,:oid]  := V8;          # 16 V28:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V29 := bat.reverse(V28);            # 17 V29:bat[:oid,:oid] := BKCreverse(V28:bat[:oid,:oid]) {G}
    V30 := algebra.kdifference(V26,V29);# 18 V30:bat[:oid,:bit] := ALGkdiff(V26:bat[:oid,:bit], V29:bat[:oid,:oid]) {G}
    V31 := algebra.join(V18,V30);       # 19 V31:bat[:oid,:bit] := ALGjoin(V18:bat[:oid,:oid], V30:bat[:oid,:bit]) {G}
    (Ext,V32) := group.derive(V25,E25,V31);# 20 (Ext:bat[:oid,:int], V32:bat[:oid,:oid]) := GRPderive(V25:bat[:oid,:int], E25:bat[:oid,:oid], V31:bat[:oid,:bit]) {G}
    V33 := algebra.tunique(Ext);        # 21 V33:bat[:oid,:int] := ALGtunique(Ext:bat[:oid,:int]) {G}
    V34 := bat.mirror(V33);             # 22 V34:bat[:oid,:oid] := BKCmirror(V33:bat[:oid,:int]) {G}
    V35:bat[:oid,:oid]  := V8;          # 23 V35:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V36 := bat.reverse(V35);            # 24 V36:bat[:oid,:oid] := BKCreverse(V35:bat[:oid,:oid]) {G}
    V37 := algebra.kdifference(V19,V36);# 25 V37:bat[:oid,:bit] := ALGkdiff(V19:bat[:oid,:bit], V36:bat[:oid,:oid]) {G}
    V38 := algebra.join(V18,V37);       # 26 V38:bat[:oid,:bit] := ALGjoin(V18:bat[:oid,:oid], V37:bat[:oid,:bit]) {G}
    V39 := algebra.join(V34,V38);       # 27 V39:bat[:oid,:bit] := ALGjoin(V34:bat[:oid,:oid], V38:bat[:oid,:bit]) {G}
    V40 := algebra.sort(V39);           # 28 V40:bat[:oid,:bit] := ALGhsort(V39:bat[:oid,:bit]) {G}
    V41:bat[:oid,:oid]  := V8;          # 29 V41:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V45 := bat.reverse(V41);            # 30 V45:bat[:oid,:oid] := BKCreverse(V41:bat[:oid,:oid]) {G}
    V46 := algebra.kdifference(V26,V45);# 31 V46:bat[:oid,:bit] := ALGkdiff(V26:bat[:oid,:bit], V45:bat[:oid,:oid]) {G}
    V47 := algebra.join(V18,V46);       # 32 V47:bat[:oid,:bit] := ALGjoin(V18:bat[:oid,:oid], V46:bat[:oid,:bit]) {G}
    V48 := algebra.join(V34,V47);       # 33 V48:bat[:oid,:bit] := ALGjoin(V34:bat[:oid,:oid], V47:bat[:oid,:bit]) {G}
    V49 := group.refine(V40,V48);       # 34 V49:bat[:oid,:oid] := GRPrefine(V40:bat[:oid,:bit], V48:bat[:oid,:bit]) {G}
    V50:bat[:oid,:int]  := user.bind("sys","lineitem","l_quantity",0);# 35 V50:bat[:oid,:int] := user.bind(_2:str, _3:str, _46:str, _5:int) {G}
    V52:bat[:oid,:oid]  := V8;          # 36 V52:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V53 := bat.reverse(V52);            # 37 V53:bat[:oid,:oid] := BKCreverse(V52:bat[:oid,:oid]) {G}
    V54 := algebra.kdifference(V50,V53);# 38 V54:bat[:oid,:int] := ALGkdiff(V50:bat[:oid,:int], V53:bat[:oid,:oid]) {G}
    V55 := algebra.join(V18,V54);       # 39 V55:bat[:oid,:int] := ALGjoin(V18:bat[:oid,:oid], V54:bat[:oid,:int]) {G}
    V56 := aggr.sum(V55,V32,V34);       # 40 V56:bat[:oid,:lng] := AX3aggrX3_sum3_int_lng(V55:bat[:oid,:int], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V57:bat[:oid,:flt]  := user.bind("sys","lineitem","l_extendedprice",0);# 41 V57:bat[:oid,:flt] := user.bind(_2:str, _3:str, _53:str, _5:int) {G}
    V59:bat[:oid,:oid]  := V8;          # 42 V59:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V60 := bat.reverse(V59);            # 43 V60:bat[:oid,:oid] := BKCreverse(V59:bat[:oid,:oid]) {G}
    V61 := algebra.kdifference(V57,V60);# 44 V61:bat[:oid,:flt] := ALGkdiff(V57:bat[:oid,:flt], V60:bat[:oid,:oid]) {G}
    V62 := algebra.join(V18,V61);       # 45 V62:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V61:bat[:oid,:flt]) {G}
    V63 := aggr.sum(V62,V32,V34);       # 46 V63:bat[:oid,:dbl] := AX3aggrX3_sum3_flt_dbl(V62:bat[:oid,:flt], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V64:bat[:oid,:oid]  := V8;          # 47 V64:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V65 := bat.reverse(V64);            # 48 V65:bat[:oid,:oid] := BKCreverse(V64:bat[:oid,:oid]) {G}
    V66 := algebra.kdifference(V57,V65);# 49 V66:bat[:oid,:flt] := ALGkdiff(V57:bat[:oid,:flt], V65:bat[:oid,:oid]) {G}
    V67 := algebra.join(V18,V66);       # 50 V67:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V66:bat[:oid,:flt]) {G}
    V69 := calc.lng(1);                 # 51 V69:lng := CALCint2lng(_64:int) 
    V71 := calc.*(V69,100);             # 52 V71:lng := CALCbinaryMULlngint(V69:lng, _66:int) 
    V72:bat[:oid,:flt]  := user.bind("sys","lineitem","l_discount",0);# 53 V72:bat[:oid,:flt] := user.bind(_2:str, _3:str, _68:str, _5:int) {G}
    V74:bat[:oid,:oid]  := V8;          # 54 V74:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V78 := bat.reverse(V74);            # 55 V78:bat[:oid,:oid] := BKCreverse(V74:bat[:oid,:oid]) {G}
    V79 := algebra.kdifference(V72,V78);# 56 V79:bat[:oid,:flt] := ALGkdiff(V72:bat[:oid,:flt], V78:bat[:oid,:oid]) {G}
    V80 := algebra.join(V18,V79);       # 57 V80:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V79:bat[:oid,:flt]) {G}
    V81:bat[:oid,:flt]  := mal.multiplex("calc","-",V71,V80);# 58 V81:bat[:oid,:flt] := OPTremapMultiplex(_74:str, _75:str, V71:lng, V80:bat[:oid,:flt]) {G}
    V83 := batcalc.*(V67,V81);          # 59 V83:bat[:oid,:flt] := CMDbatMUL_flt_flt_flt(V67:bat[:oid,:flt], V81:bat[:oid,:flt]) {G}
    V85 := aggr.sum(V83,V32,V34);       # 60 V85:bat[:oid,:dbl] := AX3aggrX3_sum3_flt_dbl(V83:bat[:oid,:flt], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V86:bat[:oid,:oid]  := V8;          # 61 V86:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V87 := bat.reverse(V86);            # 62 V87:bat[:oid,:oid] := BKCreverse(V86:bat[:oid,:oid]) {G}
    V88 := algebra.kdifference(V57,V87);# 63 V88:bat[:oid,:flt] := ALGkdiff(V57:bat[:oid,:flt], V87:bat[:oid,:oid]) {G}
    V89 := algebra.join(V18,V88);       # 64 V89:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V88:bat[:oid,:flt]) {G}
    V90 := V69;                         # 65 V90:lng := V69:lng 
    V91 := calc.*(V90,100);             # 66 V91:lng := CALCbinaryMULlngint(V90:lng, _66:int) 
    V92:bat[:oid,:oid]  := V8;          # 67 V92:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V93 := bat.reverse(V92);            # 68 V93:bat[:oid,:oid] := BKCreverse(V92:bat[:oid,:oid]) {G}
    V94 := algebra.kdifference(V72,V93);# 69 V94:bat[:oid,:flt] := ALGkdiff(V72:bat[:oid,:flt], V93:bat[:oid,:oid]) {G}
    V95 := algebra.join(V18,V94);       # 70 V95:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V94:bat[:oid,:flt]) {G}
    V96:bat[:oid,:flt]  := mal.multiplex("calc","-",V91,V95);# 71 V96:bat[:oid,:flt] := OPTremapMultiplex(_74:str, _75:str, V91:lng, V95:bat[:oid,:flt]) {G}
    V97 := batcalc.*(V89,V96);          # 72 V97:bat[:oid,:flt] := CMDbatMUL_flt_flt_flt(V89:bat[:oid,:flt], V96:bat[:oid,:flt]) {G}
    V98 := V69;                         # 73 V98:lng := V69:lng 
    V99 := calc.*(V98,100);             # 74 V99:lng := CALCbinaryMULlngint(V98:lng, _66:int) 
    V100:bat[:oid,:flt]  := user.bind("sys","lineitem","l_tax",0);# 75 V100:bat[:oid,:flt] := user.bind(_2:str, _3:str, _93:str, _5:int) {G}
    V102:bat[:oid,:oid]  := V8;         # 76 V102:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V103 := bat.reverse(V102);          # 77 V103:bat[:oid,:oid] := BKCreverse(V102:bat[:oid,:oid]) {G}
    V104 := algebra.kdifference(V100,V103);# 78 V104:bat[:oid,:flt] := ALGkdiff(V100:bat[:oid,:flt], V103:bat[:oid,:oid]) {G}
    V105 := algebra.join(V18,V104);     # 79 V105:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V104:bat[:oid,:flt]) {G}
    V106:bat[:oid,:flt]  := mal.multiplex("calc","+",V99,V105);# 80 V106:bat[:oid,:flt] := OPTremapMultiplex(_74:str, _99:str, V99:lng, V105:bat[:oid,:flt]) {G}
    V108 := batcalc.*(V97,V106);        # 81 V108:bat[:oid,:flt] := CMDbatMUL_flt_flt_flt(V97:bat[:oid,:flt], V106:bat[:oid,:flt]) {G}
    V109 := aggr.sum(V108,V32,V34);     # 82 V109:bat[:oid,:dbl] := AX3aggrX3_sum3_flt_dbl(V108:bat[:oid,:flt], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V110:bat[:oid,:oid]  := V8;         # 83 V110:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V114 := bat.reverse(V110);          # 84 V114:bat[:oid,:oid] := BKCreverse(V110:bat[:oid,:oid]) {G}
    V115 := algebra.kdifference(V50,V114);# 85 V115:bat[:oid,:int] := ALGkdiff(V50:bat[:oid,:int], V114:bat[:oid,:oid]) {G}
    V116 := algebra.join(V18,V115);     # 86 V116:bat[:oid,:int] := ALGjoin(V18:bat[:oid,:oid], V115:bat[:oid,:int]) {G}
    V117 := aggr.avg(V116,V32,V34);     # 87 V117:bat[:oid,:dbl] := AX3aggrX3_avg3_int(V116:bat[:oid,:int], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V118:bat[:oid,:oid]  := V8;         # 88 V118:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V119 := bat.reverse(V118);          # 89 V119:bat[:oid,:oid] := BKCreverse(V118:bat[:oid,:oid]) {G}
    V120 := algebra.kdifference(V57,V119);# 90 V120:bat[:oid,:flt] := ALGkdiff(V57:bat[:oid,:flt], V119:bat[:oid,:oid]) {G}
    V121 := algebra.join(V18,V120);     # 91 V121:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V120:bat[:oid,:flt]) {G}
    V122 := aggr.avg(V121,V32,V34);     # 92 V122:bat[:oid,:dbl] := AX3aggrX3_avg3_flt(V121:bat[:oid,:flt], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V124:bat[:oid,:int]  := mal.multiplex("calc","round",V122,100);# 93 V124:bat[:oid,:int] := OPTremapMultiplex(_74:str, _113:str, V122:bat[:oid,:dbl], _66:int) {G}
    V126:bat[:oid,:oid]  := V8;         # 94 V126:bat[:oid,:oid] := V8:bat[:oid,:oid] {G}
    V127 := bat.reverse(V126);          # 95 V127:bat[:oid,:oid] := BKCreverse(V126:bat[:oid,:oid]) {G}
    V128 := algebra.kdifference(V72,V127);# 96 V128:bat[:oid,:flt] := ALGkdiff(V72:bat[:oid,:flt], V127:bat[:oid,:oid]) {G}
    V129 := algebra.join(V18,V128);     # 97 V129:bat[:oid,:flt] := ALGjoin(V18:bat[:oid,:oid], V128:bat[:oid,:flt]) {G}
    V130 := aggr.avg(V129,V32,V34);     # 98 V130:bat[:oid,:dbl] := AX3aggrX3_avg3_flt(V129:bat[:oid,:flt], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
    V131 := mal.multiplex("calc","round",V130,100);# 99 V131:any := OPTremapMultiplex(_74:str, _113:str, V130:bat[:oid,:dbl], _66:int) 
    V132 := aggr.count(V32,V32,V34);    #100 V132:bat[:oid,:wrd] := AX3aggrX3_count3Nils(V32:bat[:oid,:oid], V32:bat[:oid,:oid], V34:bat[:oid,:oid]) {G}
end qry1;                               #101  
    optimizer.aliases();                #102 _123:str := OPTaliases() {G}
    optimizer.commonTerms();            #103 _124:str := OPTcommonTerms() {G}
#optimizer.aliases    actions= 0 time=19 usec 
#optimizer.reduce     actions=11 time=42 usec 
#optimizer.commonTerms actions=16 time=60 usec 

# 19:36:05 >  
# 19:36:05 >  Done.
# 19:36:05 >  

