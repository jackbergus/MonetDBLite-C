stdout of test 'tst4631` in directory 'src/optimizer` itself:


# 19:36:05 >  
# 19:36:05 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31892 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4631.mal < /dev/null
# 19:36:05 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
## TPCH Q1 non-optimized
#
##don;t depend on SQL library
#function user.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];
#	return bat.new(:any_1,:any_2);
#end bind;
function user.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];	# 0  dynamic (bind:bat[:any_1,:any_2])<-(s:str)(t:str)(c:str)(i:int)
    return bat.new(:any_1,:any_2);	# 1 CMDBATnew (_5:bat[:any,:any])<-(_6:any_1)(_7:any_2)
end bind;	# 2  
#function user.bind_dbat(s:str,t:str,i:int):bat[:any_1,:any_2];
#	return bat.new(:any_1,:any_2);
#end bind_dbat;
function user.bind_dbat(s:str,t:str,i:int):bat[:any_1,:any_2];	# 0  dynamic (bind_dbat:bat[:any_1,:any_2])<-(s:str)(t:str)(i:int)
    return bat.new(:any_1,:any_2);	# 1 CMDBATnew (_4:bat[:any,:any])<-(_5:any_1)(_6:any_2)
end bind_dbat;	# 2  
#
#function qry1();
#    V3:bat[:void,:date] := user.bind("sys","lineitem","l_shipdate",0);
#    V8:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V9 := bat.reverse(V8);
#    V10 := algebra.kdifference(V3,V9);
#	a:= mtime.date(nil);
#    V14 := algebra.uselect(V10,a,a);
#    V17 := algebra.markT(V14,0@0);
#    V18 := bat.reverse(V17);
#    V19:bat[:void,:bit] := user.bind("sys","lineitem","l_returnflag",0);
#    V21:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V22 := bat.reverse(V21);
#    V23 := algebra.kdifference(V19,V22);
#    V24 := algebra.join(V18,V23);
#    (V25,E25) := group.new(V24);
#    V26:bat[:void,:bit] := user.bind("sys","lineitem","l_linestatus",0);
#    V28:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V29 := bat.reverse(V28);
#    V30 := algebra.kdifference(V26,V29);
#    V31 := algebra.join(V18,V30);
#    (V32,Ext) := group.derive(V25,V31);
#    V33 := algebra.tunique(V32);
#    V34 := bat.mirror(V33);
#    V35:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V36 := bat.reverse(V35);
#    V37 := algebra.kdifference(V19,V36);
#    V38 := algebra.join(V18,V37);
#    V39 := algebra.join(V34,V38);
#    V40 := algebra.sort(V39);
#    V41:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V45 := bat.reverse(V41);
#    V46 := algebra.kdifference(V26,V45);
#    V47 := algebra.join(V18,V46);
#    V48 := algebra.join(V34,V47);
#    V49 := group.refine(V40,V48);
#    V50:bat[:void,:int] := user.bind("sys","lineitem","l_quantity",0);
#    V52:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V53 := bat.reverse(V52);
#    V54 := algebra.kdifference(V50,V53);
#    V55 := algebra.join(V18,V54);
#    V56 := aggr.sum(V55,V32,V34);
#    V57:bat[:void,:flt] := user.bind("sys","lineitem","l_extendedprice",0);
#    V59:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V60 := bat.reverse(V59);
#    V61 := algebra.kdifference(V57,V60);
#    V62 := algebra.join(V18,V61);
#    V63 := aggr.sum(V62,V32,V34);
#    V64:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V65 := bat.reverse(V64);
#    V66 := algebra.kdifference(V57,V65);
#    V67 := algebra.join(V18,V66);
#    V69 := calc.lng(1);
#    V71 := calc.*(V69,100);
#    V72:bat[:void,:flt] := user.bind("sys","lineitem","l_discount",0);
#    V74:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V78 := bat.reverse(V74);
#    V79 := algebra.kdifference(V72,V78);
#    V80 := algebra.join(V18,V79);
#    V81 := optimizer.multiplex("calc.-",V71,V80);
#    V83 := batcalc.*(V67,V81);
#    V85 := aggr.sum(V83,V32,V34);
#    V86:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V87 := bat.reverse(V86);
#    V88 := algebra.kdifference(V57,V87);
#    V89 := algebra.join(V18,V88);
#    V90 := calc.lng(1);
#    V91 := calc.*(V90,100);
#    V92:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V93 := bat.reverse(V92);
#    V94 := algebra.kdifference(V72,V93);
#    V95 := algebra.join(V18,V94);
#    V96 := optimizer.multiplex("calc.-",V91,V95);
#    V97 := batcalc.*(V89,V96);
#    V98 := calc.lng(1);
#    V99 := calc.*(V98,100);
#    V100:bat[:void,:flt] := user.bind("sys","lineitem","l_tax",0);
#    V102:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V103 := bat.reverse(V102);
#    V104 := algebra.kdifference(V100,V103);
#    V105 := algebra.join(V18,V104);
#    V106 := optimizer.multiplex("calc.+",V99,V105);
#    V108 := batcalc.*(V97,V106);
#    V109 := aggr.sum(V108,V32,V34);
#    V110:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V114 := bat.reverse(V110);
#    V115 := algebra.kdifference(V50,V114);
#    V116 := algebra.join(V18,V115);
#    V117 := aggr.avg(V116,V32,V34);
#    V118:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V119 := bat.reverse(V118);
#    V120 := algebra.kdifference(V57,V119);
#    V121 := algebra.join(V18,V120);
#    V122 := aggr.avg(V121,V32,V34);
#    V124 := optimizer.multiplex("calc.round",V122,100);
#    V126:bat[:void,:oid] := user.bind_dbat("sys","lineitem",0);
#    V127 := bat.reverse(V126);
#    V128 := algebra.kdifference(V72,V127);
#    V129 := algebra.join(V18,V128);
#    V130 := aggr.avg(V129,V32,V34);
#    V131 := optimizer.multiplex("calc.round",V130,100);
#    V132 := aggr.count(V32,V32,V34);
#end qry1;
function user.qry1():void;	# 0  (qry1:void)
    V3:bat[:void,:date]  := user.bind("sys","lineitem","l_shipdate",0);	# 1  (V3:bat[:void,:date])<-(_2:str)(_3:str)(_4:str)(_5:int)
    V8:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 2  (V8:bat[:void,:oid])<-(_2:str)(_3:str)(_5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:oid,:void])<-(V8:bat[:void,:oid])
    V10 := algebra.kdifference(V3,V9);	# 4 ALGkdiff (V10:bat[:oid,:date])<-(V3:bat[:void,:date])(V9:bat[:oid,:void])
    a := mtime.date(nil:void);	# 5 MTIMEnil2date (a:date)<-(_10:void)
    V14 := algebra.uselect(V10,a,a);	# 6 ALGuselect (V14:bat[:oid,:void])<-(V10:bat[:oid,:date])(a:date)(a:date)
    V17 := algebra.markT(V14,0@0);	# 7 ALGtmark (V17:bat[:oid,:void])<-(V14:bat[:oid,:void])(_13:oid)
    V18 := bat.reverse(V17);	# 8 BKCreverse (V18:bat[:void,:oid])<-(V17:bat[:oid,:void])
    V19:bat[:void,:bit]  := user.bind("sys","lineitem","l_returnflag",0);	# 9  (V19:bat[:void,:bit])<-(_2:str)(_3:str)(_16:str)(_5:int)
    V21:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 10  (V21:bat[:void,:oid])<-(_2:str)(_3:str)(_5:int)
    V22 := bat.reverse(V21);	# 11 BKCreverse (V22:bat[:oid,:void])<-(V21:bat[:void,:oid])
    V23 := algebra.kdifference(V19,V22);	# 12 ALGkdiff (V23:bat[:oid,:bit])<-(V19:bat[:void,:bit])(V22:bat[:oid,:void])
    V24 := algebra.join(V18,V23);	# 13 ALGjoin (V24:bat[:void,:bit])<-(V18:bat[:void,:oid])(V23:bat[:oid,:bit])
    (V25,E25):= group.new(V24);	# 14 GRPgroup (V25:bat[:void,:int])(E25:bat[:void,:oid])<-(V24:bat[:void,:bit])
    V26:bat[:void,:bit]  := user.bind("sys","lineitem","l_linestatus",0);	# 15  (V26:bat[:void,:bit])<-(_2:str)(_3:str)(_24:str)(_5:int)
    V28:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 16  (V28:bat[:void,:oid])<-(_2:str)(_3:str)(_5:int)
    V29 := bat.reverse(V28);	# 17 BKCreverse (V29:bat[:oid,:void])<-(V28:bat[:void,:oid])
    V30 := algebra.kdifference(V26,V29);	# 18 ALGkdiff (V30:bat[:oid,:bit])<-(V26:bat[:void,:bit])(V29:bat[:oid,:void])
    V31 := algebra.join(V18,V30);	# 19 ALGjoin (V31:bat[:void,:bit])<-(V18:bat[:void,:oid])(V30:bat[:oid,:bit])
    (Ext,V32):= group.derive(V25,E25,V31);	# 20 GRPderive (Ext:bat[:void,:int])(V32:bat[:void,:oid])<-(V25:bat[:void,:int])(E25:bat[:void,:oid])(V31:bat[:void,:bit])
    V33 := algebra.tunique(Ext);	# 21 ALGtunique (V33:bat[:void,:int])<-(Ext:bat[:void,:int])
    V34 := bat.mirror(V33);	# 22 BKCmirror (V34:bat[:void,:void])<-(V33:bat[:void,:int])
    V35:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 23  (V35:bat[:void,:oid])<-(_2:str)(_3:str)(_5:int)
    V36 := bat.reverse(V35);	# 24 BKCreverse (V36:bat[:oid,:void])<-(V35:bat[:void,:oid])
    V37 := algebra.kdifference(V19,V36);	# 25 ALGkdiff (V37:bat[:oid,:bit])<-(V19:bat[:void,:bit])(V36:bat[:oid,:void])
    V38 := algebra.join(V18,V37);	# 26 ALGjoin (V38:bat[:void,:bit])<-(V18:bat[:void,:oid])(V37:bat[:oid,:bit])
    V39 := algebra.join(V34,V38);	# 27 ALGjoin (V39:bat[:void,:bit])<-(V34:bat[:void,:void])(V38:bat[:void,:bit])
    V40 := algebra.sort(V39);	# 28 ALGhsort (V40:bat[:void,:bit])<-(V39:bat[:void,:bit])
    V41:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 29  (V41:bat[:void,:oid])<-(_40:str)(_41:str)(_42:int)
    V45 := bat.reverse(V41);	# 30 BKCreverse (V45:bat[:oid,:void])<-(V41:bat[:void,:oid])
    V46 := algebra.kdifference(V26,V45);	# 31 ALGkdiff (V46:bat[:oid,:bit])<-(V26:bat[:void,:bit])(V45:bat[:oid,:void])
    V47 := algebra.join(V18,V46);	# 32 ALGjoin (V47:bat[:void,:bit])<-(V18:bat[:void,:oid])(V46:bat[:oid,:bit])
    V48 := algebra.join(V34,V47);	# 33 ALGjoin (V48:bat[:void,:bit])<-(V34:bat[:void,:void])(V47:bat[:void,:bit])
    V49 := group.refine(V40,V48);	# 34 GRPrefine (V49:bat[:void,:oid])<-(V40:bat[:void,:bit])(V48:bat[:void,:bit])
    V50:bat[:void,:int]  := user.bind("sys","lineitem","l_quantity",0);	# 35  (V50:bat[:void,:int])<-(_40:str)(_41:str)(_49:str)(_42:int)
    V52:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 36  (V52:bat[:void,:oid])<-(_40:str)(_41:str)(_42:int)
    V53 := bat.reverse(V52);	# 37 BKCreverse (V53:bat[:oid,:void])<-(V52:bat[:void,:oid])
    V54 := algebra.kdifference(V50,V53);	# 38 ALGkdiff (V54:bat[:oid,:int])<-(V50:bat[:void,:int])(V53:bat[:oid,:void])
    V55 := algebra.join(V18,V54);	# 39 ALGjoin (V55:bat[:void,:int])<-(V18:bat[:void,:oid])(V54:bat[:oid,:int])
    V56 := aggr.sum(V55,V32,V34);	# 40 AX3aggrX3_sum3_int_lng (V56:bat[:void,:lng])<-(V55:bat[:void,:int])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V57:bat[:void,:flt]  := user.bind("sys","lineitem","l_extendedprice",0);	# 41  (V57:bat[:void,:flt])<-(_40:str)(_41:str)(_56:str)(_42:int)
    V59:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 42  (V59:bat[:void,:oid])<-(_40:str)(_41:str)(_42:int)
    V60 := bat.reverse(V59);	# 43 BKCreverse (V60:bat[:oid,:void])<-(V59:bat[:void,:oid])
    V61 := algebra.kdifference(V57,V60);	# 44 ALGkdiff (V61:bat[:oid,:flt])<-(V57:bat[:void,:flt])(V60:bat[:oid,:void])
    V62 := algebra.join(V18,V61);	# 45 ALGjoin (V62:bat[:void,:flt])<-(V18:bat[:void,:oid])(V61:bat[:oid,:flt])
    V63 := aggr.sum(V62,V32,V34);	# 46 AX3aggrX3_sum3_flt_dbl (V63:bat[:void,:dbl])<-(V62:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V64:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 47  (V64:bat[:void,:oid])<-(_40:str)(_41:str)(_42:int)
    V65 := bat.reverse(V64);	# 48 BKCreverse (V65:bat[:oid,:void])<-(V64:bat[:void,:oid])
    V66 := algebra.kdifference(V57,V65);	# 49 ALGkdiff (V66:bat[:oid,:flt])<-(V57:bat[:void,:flt])(V65:bat[:oid,:void])
    V67 := algebra.join(V18,V66);	# 50 ALGjoin (V67:bat[:void,:flt])<-(V18:bat[:void,:oid])(V66:bat[:oid,:flt])
    V69 := calc.lng(1);	# 51 CALCint2lng (V69:lng)<-(_67:int)
    V71 := calc.*(V69,100);	# 52 CALCbinaryMULlngint (V71:lng)<-(V69:lng)(_69:int)
    V72:bat[:void,:flt]  := user.bind("sys","lineitem","l_discount",0);	# 53  (V72:bat[:void,:flt])<-(_40:str)(_41:str)(_71:str)(_42:int)
    V74:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 54  (V74:bat[:void,:oid])<-(_40:str)(_41:str)(_42:int)
    V78 := bat.reverse(V74);	# 55 BKCreverse (V78:bat[:oid,:void])<-(V74:bat[:void,:oid])
    V79 := algebra.kdifference(V72,V78);	# 56 ALGkdiff (V79:bat[:oid,:flt])<-(V72:bat[:void,:flt])(V78:bat[:oid,:void])
    V80 := algebra.join(V18,V79);	# 57 ALGjoin (V80:bat[:void,:flt])<-(V18:bat[:void,:oid])(V79:bat[:oid,:flt])
    V81 := optimizer.multiplex("calc","-",V71,V80);	# 58 OPTmultiplex (V81:any)<-(_77:str)(_78:str)(V71:lng)(V80:bat[:void,:flt])
    V83 := batcalc.*(V67,V81);	# 59 CMDbatMULcst_flt_flt_flt (V83:bat[:void,:flt])<-(V67:bat[:void,:flt])(V81:any)
    V85 := aggr.sum(V83,V32,V34);	# 60 AX3aggrX3_sum3_flt_dbl (V85:bat[:void,:dbl])<-(V83:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V86:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 61  (V86:bat[:void,:oid])<-(_82:str)(_83:str)(_84:int)
    V87 := bat.reverse(V86);	# 62 BKCreverse (V87:bat[:oid,:void])<-(V86:bat[:void,:oid])
    V88 := algebra.kdifference(V57,V87);	# 63 ALGkdiff (V88:bat[:oid,:flt])<-(V57:bat[:void,:flt])(V87:bat[:oid,:void])
    V89 := algebra.join(V18,V88);	# 64 ALGjoin (V89:bat[:void,:flt])<-(V18:bat[:void,:oid])(V88:bat[:oid,:flt])
    V90 := calc.lng(1);	# 65 CALCint2lng (V90:lng)<-(_67:int)
    V91 := calc.*(V90,100);	# 66 CALCbinaryMULlngint (V91:lng)<-(V90:lng)(_69:int)
    V92:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 67  (V92:bat[:void,:oid])<-(_82:str)(_83:str)(_84:int)
    V93 := bat.reverse(V92);	# 68 BKCreverse (V93:bat[:oid,:void])<-(V92:bat[:void,:oid])
    V94 := algebra.kdifference(V72,V93);	# 69 ALGkdiff (V94:bat[:oid,:flt])<-(V72:bat[:void,:flt])(V93:bat[:oid,:void])
    V95 := algebra.join(V18,V94);	# 70 ALGjoin (V95:bat[:void,:flt])<-(V18:bat[:void,:oid])(V94:bat[:oid,:flt])
    V96 := optimizer.multiplex("calc","-",V91,V95);	# 71 OPTmultiplex (V96:any)<-(_77:str)(_78:str)(V91:lng)(V95:bat[:void,:flt])
    V97 := batcalc.*(V89,V96);	# 72 CMDbatMULcst_flt_flt_flt (V97:bat[:void,:flt])<-(V89:bat[:void,:flt])(V96:any)
    V98 := calc.lng(1);	# 73 CALCint2lng (V98:lng)<-(_67:int)
    V99 := calc.*(V98,100);	# 74 CALCbinaryMULlngint (V99:lng)<-(V98:lng)(_69:int)
    V100:bat[:void,:flt]  := user.bind("sys","lineitem","l_tax",0);	# 75  (V100:bat[:void,:flt])<-(_82:str)(_83:str)(_99:str)(_84:int)
    V102:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 76  (V102:bat[:void,:oid])<-(_82:str)(_83:str)(_84:int)
    V103 := bat.reverse(V102);	# 77 BKCreverse (V103:bat[:oid,:void])<-(V102:bat[:void,:oid])
    V104 := algebra.kdifference(V100,V103);	# 78 ALGkdiff (V104:bat[:oid,:flt])<-(V100:bat[:void,:flt])(V103:bat[:oid,:void])
    V105 := algebra.join(V18,V104);	# 79 ALGjoin (V105:bat[:void,:flt])<-(V18:bat[:void,:oid])(V104:bat[:oid,:flt])
    V106 := optimizer.multiplex("calc","+",V99,V105);	# 80 OPTmultiplex (V106:any)<-(_77:str)(_105:str)(V99:lng)(V105:bat[:void,:flt])
    V108 := batcalc.*(V97,V106);	# 81 CMDbatMULcst_flt_flt_flt (V108:bat[:void,:flt])<-(V97:bat[:void,:flt])(V106:any)
    V109 := aggr.sum(V108,V32,V34);	# 82 AX3aggrX3_sum3_flt_dbl (V109:bat[:void,:dbl])<-(V108:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V110:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 83  (V110:bat[:void,:oid])<-(_82:str)(_83:str)(_84:int)
    V114 := bat.reverse(V110);	# 84 BKCreverse (V114:bat[:oid,:void])<-(V110:bat[:void,:oid])
    V115 := algebra.kdifference(V50,V114);	# 85 ALGkdiff (V115:bat[:oid,:int])<-(V50:bat[:void,:int])(V114:bat[:oid,:void])
    V116 := algebra.join(V18,V115);	# 86 ALGjoin (V116:bat[:void,:int])<-(V18:bat[:void,:oid])(V115:bat[:oid,:int])
    V117 := aggr.avg(V116,V32,V34);	# 87 AX3aggrX3_avg3_int (V117:bat[:void,:dbl])<-(V116:bat[:void,:int])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V118:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 88  (V118:bat[:void,:oid])<-(_82:str)(_83:str)(_84:int)
    V119 := bat.reverse(V118);	# 89 BKCreverse (V119:bat[:oid,:void])<-(V118:bat[:void,:oid])
    V120 := algebra.kdifference(V57,V119);	# 90 ALGkdiff (V120:bat[:oid,:flt])<-(V57:bat[:void,:flt])(V119:bat[:oid,:void])
    V121 := algebra.join(V18,V120);	# 91 ALGjoin (V121:bat[:void,:flt])<-(V18:bat[:void,:oid])(V120:bat[:oid,:flt])
    V122 := aggr.avg(V121,V32,V34);	# 92 AX3aggrX3_avg3_flt (V122:bat[:void,:dbl])<-(V121:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V124 := optimizer.multiplex("calc","round",V122,100);	# 93 OPTmultiplex (V124:any)<-(_119:str)(_120:str)(V122:bat[:void,:dbl])(_121:int)
    V126:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 94  (V126:bat[:void,:oid])<-(_123:str)(_124:str)(_125:int)
    V127 := bat.reverse(V126);	# 95 BKCreverse (V127:bat[:oid,:void])<-(V126:bat[:void,:oid])
    V128 := algebra.kdifference(V72,V127);	# 96 ALGkdiff (V128:bat[:oid,:flt])<-(V72:bat[:void,:flt])(V127:bat[:oid,:void])
    V129 := algebra.join(V18,V128);	# 97 ALGjoin (V129:bat[:void,:flt])<-(V18:bat[:void,:oid])(V128:bat[:oid,:flt])
    V130 := aggr.avg(V129,V32,V34);	# 98 AX3aggrX3_avg3_flt (V130:bat[:void,:dbl])<-(V129:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V131 := optimizer.multiplex("calc","round",V130,100);	# 99 OPTmultiplex (V131:any)<-(_119:str)(_120:str)(V130:bat[:void,:dbl])(_121:int)
    V132 := aggr.count(V32,V32,V34);	# 100 AX3aggrX3_count3Nils (V132:bat[:void,:int])<-(V32:bat[:void,:oid])(V32:bat[:void,:oid])(V34:bat[:void,:void])
end qry1;	# 101  
#
#optimizer.setDebug();
#optimizer.aliasRemoval("user","qry1");
#optimizer.commonExpressionRemoval("user","qry1");
#mdb.list("user","qry1");
#
!ERROR: 'V91' may not be used before being initialized in qry1[39]
!ERROR: 'V95' may not be used before being initialized in qry1[39]
!ERROR: 'V99' may not be used before being initialized in qry1[44]
Optimizer optimizer.commonTerms failed
function user.qry1():void;	# 0  (qry1:void)
    V3:bat[:void,:date]  := user.bind("sys","lineitem","l_shipdate",0);	# 1  (V3:bat[:void,:date])<-(_2:str)(_3:str)(_4:str)(_5:int)
    V8:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);	# 2  (V8:bat[:void,:oid])<-(_2:str)(_3:str)(_5:int)
    V9 := bat.reverse(V8);	# 3 BKCreverse (V9:bat[:oid,:void])<-(V8:bat[:void,:oid])
    V10 := algebra.kdifference(V3,V9);	# 4 ALGkdiff (V10:bat[:oid,:date])<-(V3:bat[:void,:date])(V9:bat[:oid,:void])
    a := mtime.date(nil:void);	# 5 MTIMEnil2date (a:date)<-(_10:void)
    V14 := algebra.uselect(V10,a,a);	# 6 ALGuselect (V14:bat[:oid,:void])<-(V10:bat[:oid,:date])(a:date)(a:date)
    V17 := algebra.markT(V14,0@0);	# 7 ALGtmark (V17:bat[:oid,:void])<-(V14:bat[:oid,:void])(_13:oid)
    V18 := bat.reverse(V17);	# 8 BKCreverse (V18:bat[:void,:oid])<-(V17:bat[:oid,:void])
    V19:bat[:void,:bit]  := user.bind("sys","lineitem","l_returnflag",0);	# 9  (V19:bat[:void,:bit])<-(_2:str)(_3:str)(_16:str)(_5:int)
    V23 := algebra.kdifference(V19,V9);	# 10 ALGkdiff (V23:bat[:oid,:bit])<-(V19:bat[:void,:bit])(V9:bat[:oid,:void])
    V24 := algebra.join(V18,V23);	# 11 ALGjoin (V24:bat[:void,:bit])<-(V18:bat[:void,:oid])(V23:bat[:oid,:bit])
    (V25,E25):= group.new(V24);	# 12 GRPgroup (V25:bat[:void,:int])(E25:bat[:void,:oid])<-(V24:bat[:void,:bit])
    V26:bat[:void,:bit]  := user.bind("sys","lineitem","l_linestatus",0);	# 13  (V26:bat[:void,:bit])<-(_2:str)(_3:str)(_24:str)(_5:int)
    V30 := algebra.kdifference(V26,V9);	# 14 ALGkdiff (V30:bat[:oid,:bit])<-(V26:bat[:void,:bit])(V9:bat[:oid,:void])
    V31 := algebra.join(V18,V30);	# 15 ALGjoin (V31:bat[:void,:bit])<-(V18:bat[:void,:oid])(V30:bat[:oid,:bit])
    (Ext,V32):= group.derive(V25,E25,V31);	# 16 GRPderive (Ext:bat[:void,:int])(V32:bat[:void,:oid])<-(V25:bat[:void,:int])(E25:bat[:void,:oid])(V31:bat[:void,:bit])
    V33 := algebra.tunique(Ext);	# 17 ALGtunique (V33:bat[:void,:int])<-(Ext:bat[:void,:int])
    V34 := bat.mirror(V33);	# 18 BKCmirror (V34:bat[:void,:void])<-(V33:bat[:void,:int])
    V39 := algebra.join(V34,V24);	# 19 ALGjoin (V39:bat[:void,:bit])<-(V34:bat[:void,:void])(V24:bat[:void,:bit])
    V40 := algebra.sort(V39);	# 20 ALGhsort (V40:bat[:void,:bit])<-(V39:bat[:void,:bit])
    V48 := algebra.join(V34,V31);	# 21 ALGjoin (V48:bat[:void,:bit])<-(V34:bat[:void,:void])(V31:bat[:void,:bit])
    V49 := group.refine(V40,V48);	# 22 GRPrefine (V49:bat[:void,:oid])<-(V40:bat[:void,:bit])(V48:bat[:void,:bit])
    V50:bat[:void,:int]  := user.bind("sys","lineitem","l_quantity",0);	# 23  (V50:bat[:void,:int])<-(_2:str)(_3:str)(_46:str)(_5:int)
    V54 := algebra.kdifference(V50,V9);	# 24 ALGkdiff (V54:bat[:oid,:int])<-(V50:bat[:void,:int])(V9:bat[:oid,:void])
    V55 := algebra.join(V18,V54);	# 25 ALGjoin (V55:bat[:void,:int])<-(V18:bat[:void,:oid])(V54:bat[:oid,:int])
    V56 := aggr.sum(V55,V32,V34);	# 26 AX3aggrX3_sum3_int_lng (V56:bat[:void,:lng])<-(V55:bat[:void,:int])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V57:bat[:void,:flt]  := user.bind("sys","lineitem","l_extendedprice",0);	# 27  (V57:bat[:void,:flt])<-(_2:str)(_3:str)(_53:str)(_5:int)
    V61 := algebra.kdifference(V57,V9);	# 28 ALGkdiff (V61:bat[:oid,:flt])<-(V57:bat[:void,:flt])(V9:bat[:oid,:void])
    V62 := algebra.join(V18,V61);	# 29 ALGjoin (V62:bat[:void,:flt])<-(V18:bat[:void,:oid])(V61:bat[:oid,:flt])
    V63 := aggr.sum(V62,V32,V34);	# 30 AX3aggrX3_sum3_flt_dbl (V63:bat[:void,:dbl])<-(V62:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V69 := calc.lng(1);	# 31 CALCint2lng (V69:lng)<-(_64:int)
    V71 := calc.*(V69,100);	# 32 CALCbinaryMULlngint (V71:lng)<-(V69:lng)(_66:int)
    V72:bat[:void,:flt]  := user.bind("sys","lineitem","l_discount",0);	# 33  (V72:bat[:void,:flt])<-(_2:str)(_3:str)(_68:str)(_5:int)
    V79 := algebra.kdifference(V72,V9);	# 34 ALGkdiff (V79:bat[:oid,:flt])<-(V72:bat[:void,:flt])(V9:bat[:oid,:void])
    V80 := algebra.join(V18,V79);	# 35 ALGjoin (V80:bat[:void,:flt])<-(V18:bat[:void,:oid])(V79:bat[:oid,:flt])
    V81 := optimizer.multiplex("calc","-",V71,V80);	# 36 OPTmultiplex (V81:any)<-(_74:str)(_75:str)(V71:lng)(V80:bat[:void,:flt])
    V83 := batcalc.*(V62,V81);	# 37 CMDbatMULcst_flt_flt_flt (V83:bat[:void,:flt])<-(V62:bat[:void,:flt])(V81:any)
    V85 := aggr.sum(V83,V32,V34);	# 38 AX3aggrX3_sum3_flt_dbl (V85:bat[:void,:dbl])<-(V83:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V96 := optimizer.multiplex("calc","-",V91,V95);	# 39 OPTmultiplex (V96:any)<-(_74:str)(_75:str)(V91:lng)(V95:bat[:void,:flt])
    V97 := batcalc.*(V62,V96);	# 40 CMDbatMULcst_flt_flt_flt (V97:bat[:void,:flt])<-(V62:bat[:void,:flt])(V96:any)
    V100:bat[:void,:flt]  := user.bind("sys","lineitem","l_tax",0);	# 41  (V100:bat[:void,:flt])<-(_2:str)(_3:str)(_93:str)(_5:int)
    V104 := algebra.kdifference(V100,V9);	# 42 ALGkdiff (V104:bat[:oid,:flt])<-(V100:bat[:void,:flt])(V9:bat[:oid,:void])
    V105 := algebra.join(V18,V104);	# 43 ALGjoin (V105:bat[:void,:flt])<-(V18:bat[:void,:oid])(V104:bat[:oid,:flt])
    V106 := optimizer.multiplex("calc","+",V99,V105);	# 44 OPTmultiplex (V106:any)<-(_74:str)(_99:str)(V99:lng)(V105:bat[:void,:flt])
    V108 := batcalc.*(V97,V106);	# 45 CMDbatMULcst_flt_flt_flt (V108:bat[:void,:flt])<-(V97:bat[:void,:flt])(V106:any)
    V109 := aggr.sum(V108,V32,V34);	# 46 AX3aggrX3_sum3_flt_dbl (V109:bat[:void,:dbl])<-(V108:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V117 := aggr.avg(V55,V32,V34);	# 47 AX3aggrX3_avg3_int (V117:bat[:void,:dbl])<-(V55:bat[:void,:int])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V122 := aggr.avg(V62,V32,V34);	# 48 AX3aggrX3_avg3_flt (V122:bat[:void,:dbl])<-(V62:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V124 := optimizer.multiplex("calc","round",V122,100);	# 49 OPTmultiplex (V124:any)<-(_74:str)(_113:str)(V122:bat[:void,:dbl])(_66:int)
    V130 := aggr.avg(V80,V32,V34);	# 50 AX3aggrX3_avg3_flt (V130:bat[:void,:dbl])<-(V80:bat[:void,:flt])(V32:bat[:void,:oid])(V34:bat[:void,:void])
    V131 := optimizer.multiplex("calc","round",V130,100);	# 51 OPTmultiplex (V131:any)<-(_74:str)(_113:str)(V130:bat[:void,:dbl])(_66:int)
    V132 := aggr.count(V32,V32,V34);	# 52 AX3aggrX3_count3Nils (V132:bat[:void,:int])<-(V32:bat[:void,:oid])(V32:bat[:void,:oid])(V34:bat[:void,:void])
end qry1;	# 53  
#actions=48 time=121 usec optimizer.commonTerms 	# 54  unknown (_123:str)
function user.main():void;	# 0  (main:void)
# TPCH Q1 non-optimized 	# 1  (_1:str)
#don;t depend on SQL library 	# 2  (_2:str)
    mdb.list("user","qry1");	# 3 MDBlist3 (_9:void)<-(_5:str)(_6:str)
end main;	# 4  
function user.qry1():void;
    V3:bat[:void,:date]  := user.bind("sys","lineitem","l_shipdate",0);
    V8:bat[:void,:oid]  := user.bind_dbat("sys","lineitem",0);
    V9 := bat.reverse(V8);
    V10 := algebra.kdifference(V3,V9);
    a := mtime.date(nil:void);
    V14 := algebra.uselect(V10,a,a);
    V17 := algebra.markT(V14,0@0);
    V18 := bat.reverse(V17);
    V19:bat[:void,:bit]  := user.bind("sys","lineitem","l_returnflag",0);
    V23 := algebra.kdifference(V19,V9);
    V24 := algebra.join(V18,V23);
    (V25,E25):= group.new(V24);
    V26:bat[:void,:bit]  := user.bind("sys","lineitem","l_linestatus",0);
    V30 := algebra.kdifference(V26,V9);
    V31 := algebra.join(V18,V30);
    (Ext,V32):= group.derive(V25,E25,V31);
    V33 := algebra.tunique(Ext);
    V34 := bat.mirror(V33);
    V39 := algebra.join(V34,V24);
    V40 := algebra.sort(V39);
    V48 := algebra.join(V34,V31);
    V49 := group.refine(V40,V48);
    V50:bat[:void,:int]  := user.bind("sys","lineitem","l_quantity",0);
    V54 := algebra.kdifference(V50,V9);
    V55 := algebra.join(V18,V54);
    V56 := aggr.sum(V55,V32,V34);
    V57:bat[:void,:flt]  := user.bind("sys","lineitem","l_extendedprice",0);
    V61 := algebra.kdifference(V57,V9);
    V62 := algebra.join(V18,V61);
    V63 := aggr.sum(V62,V32,V34);
    V69 := calc.lng(1);
    V71 := calc.*(V69,100);
    V72:bat[:void,:flt]  := user.bind("sys","lineitem","l_discount",0);
    V79 := algebra.kdifference(V72,V9);
    V80 := algebra.join(V18,V79);
    V81 := optimizer.multiplex("calc","-",V71,V80);
    V83 := batcalc.*(V62,V81);
    V85 := aggr.sum(V83,V32,V34);
    V96 := optimizer.multiplex("calc","-",V91,V95);
    V97 := batcalc.*(V62,V96);
    V100:bat[:void,:flt]  := user.bind("sys","lineitem","l_tax",0);
    V104 := algebra.kdifference(V100,V9);
    V105 := algebra.join(V18,V104);
    V106 := optimizer.multiplex("calc","+",V99,V105);
    V108 := batcalc.*(V97,V106);
    V109 := aggr.sum(V108,V32,V34);
    V117 := aggr.avg(V55,V32,V34);
    V122 := aggr.avg(V62,V32,V34);
    V124 := optimizer.multiplex("calc","round",V122,100);
    V130 := aggr.avg(V80,V32,V34);
    V131 := optimizer.multiplex("calc","round",V130,100);
    V132 := aggr.count(V32,V32,V34);
end qry1;

# 19:36:05 >  
# 19:36:05 >  Done.
# 19:36:05 >  

