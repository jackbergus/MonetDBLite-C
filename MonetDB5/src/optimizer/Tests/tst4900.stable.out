stdout of test 'tst4900` in directory 'src/optimizer` itself:


# 23:53:01 >  
# 23:53:01 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4900.mal </dev/null
# 23:53:01 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#function f1(s:str):void;
#	t1:bat[:void,:dbl] := bbp.bind("TREC2003_test_priors_8x32318");
#	t2 := array.grid(132000,8,1,0);
#	t3 := array.grid(1,100,10560,0);
#	#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot
#	t4 := array.grid(1,100,10560,0,8);
#	t5 := batcalc.+(t2,t4);
#	t6 := batcalc.oid(t5);
#	t7 := algebra.join(t6,t1);
#	t8 := calc.dbl(1.0);
#	t9 := calc.dbl(2.0);
#	t10 := calc.dbl(3.1415);
#	t11 := calc.*(t9,t10);
#	t12 := calc.dbl(14.0);
#	t13 := mmath.pow(t11,t12);
#	t14 := mmath.sqrt(t13);
#	t15 := calc.dbl(t14);
#	t16:bat[:void,:dbl] := bbp.bind("TREC2003_test_sigs_14x8x32318");
#	t17 := array.grid(800,14,1,0);
#	t18 := array.grid(100,8,14,0);
#	t19 := array.grid(1,100,112,0);
#	#t20 := batcalc.*(8,t19);
#	t20 := array.grid(1,100,112,0,8);
#	t21 := batcalc.+(t18,t20);
#	t22 := batcalc.*(14,t21);
#	t23 := batcalc.+(t17,t22);
#	t24 := batcalc.oid(t23);
#	t25 := algebra.join(t24,t16);
#	t30 := batcalc.oid(t21);
#	t31 := array.grid(1,800,1,0);
#	t32 := aggrX3.prod(t25,t30,t31);
#	t33 := batcalc.*(t15,t32);
#	t34 := batcalc./(t8,t33);
#	t40 := algebra.join(t6,t34);
#	t41 := calc.dbl(-0.5);
#	#t42:bat[:void,:dbl] := bbp.bind("Query_14x1320");
#	t42:bat[:void,:dbl] := bbp.bind(s);
#	t43 := array.grid(1056000,14,1,0);
#	t44 := array.grid(100,1320,112,0);
#	#t45 := batcalc.*(14,t44);
#	t45 := array.grid(100,1320,112,0,14);
#	t46 := batcalc.+(t43,t45);
#	t47 := batcalc.oid(t46);
#	t48 := algebra.join(t47,t42);
#	t49:bat[:void,:dbl] := bbp.bind("TREC2003_test_mus_14x8x32318");
#	t51 := array.grid(132000,8,14,0);
#	t52 := array.grid(1,100,147840,0);
#	#t53 := batcalc.*(8,t52);
#	t53 := array.grid(1,100,147840,0,8);
#	t54 := batcalc.+(t51,t53);
#	t55 := batcalc.*(14,t54);
#	t56 := batcalc.+(t43,t55);
#	t57 := batcalc.oid(t56);
#	t58 := algebra.join(t57,t49);
#	t59 := batcalc.-(t48,t58);
#	#t61 := batcalc.pow(t59,t9);
#	t61 := batcalc.*(t59,t59);
#	t71 := algebra.join(t57,t16);
#	t72 := batcalc./(t61,t71);
#	t76 := batcalc.*(1320,t52);
#	t77 := batcalc.+(t44,t76);
#	t78 := batcalc.*(8,t77);
#	t79 := batcalc.+(t51,t78);
#	t80 := batcalc.oid(t79);
#	t81 := array.grid(1,1056000,1,0);
#	t82 := aggrX3.sum(t72,t80,t81);
#	t83 := batcalc.*(t41,t82);
#	t84 := batcalc.exp(t83);
#	t85 := batcalc.*(t40,t84);
#	t86 := batcalc.*(t7,t85);
#	#t87 := array.grid(100,1320,8,0); will save 30% by reuse
#	t87 := array.grid(t81,100,1320,8,0); 
#	t89 := batcalc.*(1320,t3);
#	t90 := batcalc.+(t87,t89);
#	t91 := batcalc.oid(t90);
#	t92 := array.grid(1,132000,1,0);
#	t93 := aggrX3.sum(t86,t91,t92);
#	t94 := batcalc.log(t93);
#	t95 := array.grid(1,100,1320,0);
#	t96 := batcalc.oid(t95);
#	t97 := array.grid(1,100,1,0);
#	t98 := aggrX3.sum(t94,t96,t97);
#	top := t98;
#	io.table(t97,top);
#end f1;
function user.f1(s:str):void;           #  0 f1:void := user.f1(s:str) {G}
    t1:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");#  1 t1:bat[:oid,:dbl] := CMDbbpbind(_3:str) {G}
    t2 := array.grid(132000,8,1,0);     #  2 t2:bat[:oid,:int] := ARRAYgrid_int(_5:int, _6:int, _7:int, _8:int) {G}
    t3 := array.grid(1,100,10560,0);    #  3 t3:bat[:oid,:int] := ARRAYgrid_int(_7:int, _10:int, _11:int, _8:int) {G}
#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot 
    t4 := array.grid(1,100,10560,0,8);  #  5 t4:bat[:oid,:int] := ARRAYgridShift_int(_7:int, _10:int, _11:int, _8:int, _6:int) {G}
    t5 := batcalc.+(t2,t4);             #  6 t5:bat[:oid,:int] := CMDbatADD_int_int_int(t2:bat[:oid,:int], t4:bat[:oid,:int]) {G}
    t6 := batcalc.oid(t5);              #  7 t6:bat[:oid,:oid] := CMDconvert_int_oid(t5:bat[:oid,:int]) {G}
    t7 := algebra.join(t6,t1);          #  8 t7:bat[:oid,:dbl] := ALGjoin(t6:bat[:oid,:oid], t1:bat[:oid,:dbl]) {G}
    t8 := calc.dbl(1);                  #  9 t8:dbl := CALCflt2dbl(_18:flt) 
    t9 := calc.dbl(2);                  # 10 t9:dbl := CALCflt2dbl(_20:flt) 
    t10 := calc.dbl(3.1415);            # 11 t10:dbl := CALCflt2dbl(_22:flt) 
    t11 := calc.*(t9,t10);              # 12 t11:dbl := CALCbinaryMULdbldbl(t9:dbl, t10:dbl) 
    t12 := calc.dbl(14);                # 13 t12:dbl := CALCflt2dbl(_25:flt) 
    t13 := mmath.pow(t11,t12);          # 14 t13:dbl := MATHbinary_POWdbl(t11:dbl, t12:dbl) 
    t14 := mmath.sqrt(t13);             # 15 t14:dbl := MATHunary_SQRTdbl(t13:dbl) 
    t15 := calc.dbl(t14);               # 16 t15:dbl := CALCdbl2dbl(t14:dbl) 
    t16:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");# 17 t16:bat[:oid,:dbl] := CMDbbpbind(_30:str) {G}
    t17 := array.grid(800,14,1,0);      # 18 t17:bat[:oid,:int] := ARRAYgrid_int(_32:int, _33:int, _7:int, _8:int) {G}
    t18 := array.grid(100,8,14,0);      # 19 t18:bat[:oid,:int] := ARRAYgrid_int(_10:int, _6:int, _33:int, _8:int) {G}
    t19 := array.grid(1,100,112,0);     # 20 t19:bat[:oid,:int] := ARRAYgrid_int(_7:int, _10:int, _36:int, _8:int) {G}
#t20 := batcalc.*(8,t19); 
    t20 := array.grid(1,100,112,0,8);   # 22 t20:bat[:oid,:int] := ARRAYgridShift_int(_7:int, _10:int, _36:int, _8:int, _39:int) {G}
    t21 := batcalc.+(t18,t20);          # 23 t21:bat[:oid,:int] := CMDbatADD_int_int_int(t18:bat[:oid,:int], t20:bat[:oid,:int]) {G}
    t22 := batcalc.*(14,t21);           # 24 t22:bat[:oid,:int] := CMDcstMULbat_int_int_int(_33:int, t21:bat[:oid,:int]) {G}
    t23 := batcalc.+(t17,t22);          # 25 t23:bat[:oid,:int] := CMDbatADD_int_int_int(t17:bat[:oid,:int], t22:bat[:oid,:int]) {G}
    t24 := batcalc.oid(t23);            # 26 t24:bat[:oid,:oid] := CMDconvert_int_oid(t23:bat[:oid,:int]) {G}
    t25 := algebra.join(t24,t16);       # 27 t25:bat[:oid,:dbl] := ALGjoin(t24:bat[:oid,:oid], t16:bat[:oid,:dbl]) {G}
    t30 := batcalc.oid(t21);            # 28 t30:bat[:oid,:oid] := CMDconvert_int_oid(t21:bat[:oid,:int]) {G}
    t31 := array.grid(1,800,1,0);       # 29 t31:bat[:oid,:int] := ARRAYgrid_int(_47:int, _32:int, _47:int, _48:int) {G}
    t32 := aggr.product(t25,t30,t31);   # 30 t32:bat[:oid,:dbl] := AX3aggrX3_prod3_dbl_dbl(t25:bat[:oid,:dbl], t30:bat[:oid,:oid], t31:bat[:oid,:int]) {G}
    t33 := batcalc.*(t15,t32);          # 31 t33:bat[:oid,:dbl] := CMDcstMULbat_dbl_dbl_dbl(t15:dbl, t32:bat[:oid,:dbl]) {G}
    t34 := batcalc./(t8,t33);           # 32 t34:bat[:oid,:dbl] := CMDcstDIVbat_dbl_dbl_dbl(t8:dbl, t33:bat[:oid,:dbl]) {G}
    t40 := algebra.join(t6,t34);        # 33 t40:bat[:oid,:dbl] := ALGjoin(t6:bat[:oid,:oid], t34:bat[:oid,:dbl]) {G}
    t41 := calc.dbl(-0.5);              # 34 t41:dbl := CALCflt2dbl(_54:flt) 
#t42:bat[:oid,:dbl] := bbp.bind("Query_14x1320"); 
    t42:bat[:oid,:dbl]  := bbp.bind(s); # 36 t42:bat[:oid,:dbl] := CMDbbpbind(s:str) {G}
    t43 := array.grid(1056000,14,1,0);  # 37 t43:bat[:oid,:int] := ARRAYgrid_int(_58:int, _33:int, _47:int, _48:int) {G}
    t44 := array.grid(100,1320,112,0);  # 38 t44:bat[:oid,:int] := ARRAYgrid_int(_60:int, _61:int, _36:int, _48:int) {G}
#t45 := batcalc.*(14,t44); 
    t45 := array.grid(100,1320,112,0,14);# 40 t45:bat[:oid,:int] := ARRAYgridShift_int(_60:int, _61:int, _36:int, _48:int, _33:int) {G}
    t46 := batcalc.+(t43,t45);          # 41 t46:bat[:oid,:int] := CMDbatADD_int_int_int(t43:bat[:oid,:int], t45:bat[:oid,:int]) {G}
    t47 := batcalc.oid(t46);            # 42 t47:bat[:oid,:oid] := CMDconvert_int_oid(t46:bat[:oid,:int]) {G}
    t48 := algebra.join(t47,t42);       # 43 t48:bat[:oid,:dbl] := ALGjoin(t47:bat[:oid,:oid], t42:bat[:oid,:dbl]) {G}
    t49:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");# 44 t49:bat[:oid,:dbl] := CMDbbpbind(_68:str) {G}
    t51 := array.grid(132000,8,14,0);   # 45 t51:bat[:oid,:int] := ARRAYgrid_int(_70:int, _39:int, _71:int, _48:int) {G}
    t52 := array.grid(1,100,147840,0);  # 46 t52:bat[:oid,:int] := ARRAYgrid_int(_47:int, _60:int, _73:int, _48:int) {G}
#t53 := batcalc.*(8,t52); 
    t53 := array.grid(1,100,147840,0,8);# 48 t53:bat[:oid,:int] := ARRAYgridShift_int(_47:int, _60:int, _73:int, _48:int, _76:int) {G}
    t54 := batcalc.+(t51,t53);          # 49 t54:bat[:oid,:int] := CMDbatADD_int_int_int(t51:bat[:oid,:int], t53:bat[:oid,:int]) {G}
    t55 := batcalc.*(14,t54);           # 50 t55:bat[:oid,:int] := CMDcstMULbat_int_int_int(_71:int, t54:bat[:oid,:int]) {G}
    t56 := batcalc.+(t43,t55);          # 51 t56:bat[:oid,:int] := CMDbatADD_int_int_int(t43:bat[:oid,:int], t55:bat[:oid,:int]) {G}
    t57 := batcalc.oid(t56);            # 52 t57:bat[:oid,:oid] := CMDconvert_int_oid(t56:bat[:oid,:int]) {G}
    t58 := algebra.join(t57,t49);       # 53 t58:bat[:oid,:dbl] := ALGjoin(t57:bat[:oid,:oid], t49:bat[:oid,:dbl]) {G}
    t59 := batcalc.-(t48,t58);          # 54 t59:bat[:oid,:dbl] := CMDbatSUB_dbl_dbl_dbl(t48:bat[:oid,:dbl], t58:bat[:oid,:dbl]) {G}
#t61 := batcalc.pow(t59,t9); 
    t61 := batcalc.*(t59,t59);          # 56 t61:bat[:oid,:dbl] := CMDbatMUL_dbl_dbl_dbl(t59:bat[:oid,:dbl], t59:bat[:oid,:dbl]) {G}
    t71 := algebra.join(t57,t16);       # 57 t71:bat[:oid,:dbl] := ALGjoin(t57:bat[:oid,:oid], t16:bat[:oid,:dbl]) {G}
    t72 := batcalc./(t61,t71);          # 58 t72:bat[:oid,:dbl] := CMDbatDIV_dbl_dbl_dbl(t61:bat[:oid,:dbl], t71:bat[:oid,:dbl]) {G}
    t76 := batcalc.*(1320,t52);         # 59 t76:bat[:oid,:int] := CMDcstMULbat_int_int_int(_61:int, t52:bat[:oid,:int]) {G}
    t77 := batcalc.+(t44,t76);          # 60 t77:bat[:oid,:int] := CMDbatADD_int_int_int(t44:bat[:oid,:int], t76:bat[:oid,:int]) {G}
    t78 := batcalc.*(8,t77);            # 61 t78:bat[:oid,:int] := CMDcstMULbat_int_int_int(_76:int, t77:bat[:oid,:int]) {G}
    t79 := batcalc.+(t51,t78);          # 62 t79:bat[:oid,:int] := CMDbatADD_int_int_int(t51:bat[:oid,:int], t78:bat[:oid,:int]) {G}
    t80 := batcalc.oid(t79);            # 63 t80:bat[:oid,:oid] := CMDconvert_int_oid(t79:bat[:oid,:int]) {G}
    t81 := array.grid(1,1056000,1,0);   # 64 t81:bat[:oid,:int] := ARRAYgrid_int(_93:int, _94:int, _93:int, _95:int) {G}
    t82 := aggr.sum(t72,t80,t81);       # 65 t82:bat[:oid,:dbl] := AX3aggrX3_sum3_dbl_dbl(t72:bat[:oid,:dbl], t80:bat[:oid,:oid], t81:bat[:oid,:int]) {G}
    t83 := batcalc.*(t41,t82);          # 66 t83:bat[:oid,:dbl] := CMDcstMULbat_dbl_dbl_dbl(t41:dbl, t82:bat[:oid,:dbl]) {G}
    t84 := batmath.exp(t83);            # 67 t84:bat[:oid,:dbl] := CMDscience_bat_exp(t83:bat[:oid,:dbl]) {G}
    t85 := batcalc.*(t40,t84);          # 68 t85:bat[:oid,:dbl] := CMDbatMUL_dbl_dbl_dbl(t40:bat[:oid,:dbl], t84:bat[:oid,:dbl]) {G}
    t86 := batcalc.*(t7,t85);           # 69 t86:bat[:oid,:dbl] := CMDbatMUL_dbl_dbl_dbl(t7:bat[:oid,:dbl], t85:bat[:oid,:dbl]) {G}
#t87 := array.grid(100,1320,8,0); will save 30% by reuse 
    t87 := array.grid(t81,100,1320,8,0);# 71 t87:bat[:oid,:int] := ARRAYgridBAT_int(t81:bat[:oid,:int], _103:int, _104:int, _76:int, _95:int) {G}
    t89 := batcalc.*(1320,t3);          # 72 t89:bat[:oid,:int] := CMDcstMULbat_int_int_int(_104:int, t3:bat[:oid,:int]) {G}
    t90 := batcalc.+(t87,t89);          # 73 t90:bat[:oid,:int] := CMDbatADD_int_int_int(t87:bat[:oid,:int], t89:bat[:oid,:int]) {G}
    t91 := batcalc.oid(t90);            # 74 t91:bat[:oid,:oid] := CMDconvert_int_oid(t90:bat[:oid,:int]) {G}
    t92 := array.grid(1,132000,1,0);    # 75 t92:bat[:oid,:int] := ARRAYgrid_int(_93:int, _109:int, _93:int, _95:int) {G}
    t93 := aggr.sum(t86,t91,t92);       # 76 t93:bat[:oid,:dbl] := AX3aggrX3_sum3_dbl_dbl(t86:bat[:oid,:dbl], t91:bat[:oid,:oid], t92:bat[:oid,:int]) {G}
    t94 := batmath.log(t93);            # 77 t94:bat[:oid,:dbl] := CMDscience_bat_log(t93:bat[:oid,:dbl]) {G}
    t95 := array.grid(1,100,1320,0);    # 78 t95:bat[:oid,:int] := ARRAYgrid_int(_93:int, _103:int, _104:int, _95:int) {G}
    t96 := batcalc.oid(t95);            # 79 t96:bat[:oid,:oid] := CMDconvert_int_oid(t95:bat[:oid,:int]) {G}
    t97 := array.grid(1,100,1,0);       # 80 t97:bat[:oid,:int] := ARRAYgrid_int(_93:int, _103:int, _93:int, _95:int) {G}
    t98 := aggr.sum(t94,t96,t97);       # 81 t98:bat[:oid,:dbl] := AX3aggrX3_sum3_dbl_dbl(t94:bat[:oid,:dbl], t96:bat[:oid,:oid], t97:bat[:oid,:int]) {G}
    top := t98;                         # 82 top:bat[:oid,:dbl] := t98:bat[:oid,:dbl] {G}
    io.table(t97,top);                  # 83 _117:void := IOttable(t97:bat[:oid,:int], top:bat[:oid,:dbl]) 
end f1;	# 84  
#	optimizer.expressionAccumulation("user","f1"); 
#	optimizer.garbageCollector("user","f1");
#	optimizer.factorize("user","f1");
#	mdb.list("user","f1");
#	##f1();
#
#
function user.main():void;              #  0 main:void := user.main() {G}
    mdb.list("user","f1");              #  1 _6:void := MDBlist3(_2:str, _3:str) 
##f1(); 
end main;	# 3  
factory user.f1(s:str):void;
    t1:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");
    t2 := array.grid(132000,8,1,0);
    t3 := array.grid(1,100,10560,0);
    t4 := array.grid(1,100,10560,0,8);
    _118 := algebra.reuse(t2);
    t5 := batcalc.+(_118,t2,t4);
    _118 := nil;
    t2 := nil;
    t4 := nil;
    t6 := batcalc.oid(t5);
    t5 := nil;
    t7 := algebra.join(t6,t1);
    t1:bat[:oid,:dbl]  := nil;
    t8 := calc.dbl(1);
    t9 := calc.dbl(2);
    t10 := calc.dbl(3.1415);
    t11 := calc.*(t9,t10);
    t12 := calc.dbl(14);
    t13 := mmath.pow(t11,t12);
    t14 := mmath.sqrt(t13);
    t15 := calc.dbl(t14);
    t16:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");
    t17 := array.grid(800,14,1,0);
    t18 := array.grid(100,8,14,0);
    t19 := array.grid(1,100,112,0);
    t20 := array.grid(1,100,112,0,8);
    _119 := algebra.reuse(t18);
    t21 := batcalc.+(_119,t18,t20);
    _119 := nil;
    t18 := nil;
    t20 := nil;
    t22 := batcalc.*(14,t21);
    _120 := algebra.reuse(t17);
    t23 := batcalc.+(_120,t17,t22);
    _120 := nil;
    t17 := nil;
    t22 := nil;
    t24 := batcalc.oid(t23);
    t23 := nil;
    t25 := algebra.join(t24,t16);
    t24 := nil;
    t30 := batcalc.oid(t21);
    t21 := nil;
    t31 := array.grid(1,800,1,0);
    t32 := aggr.product(t25,t30,t31);
    t25 := nil;
    t30 := nil;
    t31 := nil;
    _121 := algebra.reuse(t32);
    t33 := batcalc.*(_121,t15,t32);
    _121 := nil;
    t32 := nil;
    t33 := batcalc./(t33,t8,t33);
    t40 := algebra.join(t6,t33);
    t6 := nil;
    t33 := nil;
    t41 := calc.dbl(-0.5);
    t43 := array.grid(1056000,14,1,0);
    t44 := array.grid(100,1320,112,0);
    t45 := array.grid(100,1320,112,0,14);
    _122 := algebra.reuse(t45);
    t46 := batcalc.+(_122,t43,t45);
    _122 := nil;
    t45 := nil;
    t47 := batcalc.oid(t46);
    t46 := nil;
    t47 := nil;
    t42:bat[:oid,:dbl]  := nil;
    t49:bat[:oid,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");
    t51 := array.grid(132000,8,14,0);
    t52 := array.grid(1,100,147840,0);
    t53 := array.grid(1,100,147840,0,8);
    _123 := algebra.reuse(t53);
    t54 := batcalc.+(_123,t51,t53);
    _123 := nil;
    t53 := nil;
    t54 := batcalc.*(t54,14,t54);
    t54 := batcalc.+(t54,t43,t54);
    t43 := nil;
    t57 := batcalc.oid(t54);
    t54 := nil;
    t58 := algebra.join(t57,t49);
    t49:bat[:oid,:dbl]  := nil;
    _124 := nil;
    t48 := nil;
    t58 := nil;
#t61 := batcalc.pow(t59,t9); 
    t59 := batcalc.*(t59,t59,t59);
    t71 := algebra.join(t57,t16);
    t57 := nil;
    t16:bat[:oid,:dbl]  := nil;
    t59 := batcalc./(t59,t59,t71);
    t71 := nil;
    _125 := algebra.reuse(t52);
    t76 := batcalc.*(_125,1320,t52);
    _125 := nil;
    t52 := nil;
    t76 := batcalc.+(t76,t44,t76);
    t44 := nil;
    t76 := batcalc.*(t76,8,t76);
    t76 := batcalc.+(t76,t51,t76);
    t51 := nil;
    t80 := batcalc.oid(t76);
    t76 := nil;
    t81 := array.grid(1,1056000,1,0);
    t59 := nil;
    t80 := nil;
    _126 := nil;
    t82 := nil;
    t83 := nil;
    _127 := algebra.reuse(t40);
    _127 := nil;
    t40 := nil;
    t84 := nil;
    t85 := batcalc.*(t85,t7,t85);
    t7 := nil;
#t87 := array.grid(100,1320,8,0); will save 30% by reuse 
    t87 := array.grid(t81,100,1320,8,0);
    t81 := nil;
    _128 := algebra.reuse(t3);
    t89 := batcalc.*(_128,1320,t3);
    _128 := nil;
    t3 := nil;
    t89 := batcalc.+(t89,t87,t89);
    t87 := nil;
    t91 := batcalc.oid(t89);
    t89 := nil;
    t92 := array.grid(1,132000,1,0);
    t85 := nil;
    t91 := nil;
    t92 := nil;
    t93 := nil;
    t95 := array.grid(1,100,1320,0);
    t96 := batcalc.oid(t95);
    t95 := nil;
    t97 := array.grid(1,100,1,0);
    t94 := nil;
    t96 := nil;
    t98 := nil;
    t97 := nil;
    top := nil;
barrier always := true;
    t42:bat[:oid,:dbl]  := bbp.bind(s);
    t48 := algebra.join(t47,t42);
    _124 := algebra.reuse(t48);
    t59 := batcalc.-(_124,t48,t58);
    t82 := aggr.sum(t59,t80,t81);
    _126 := algebra.reuse(t82);
    t83 := batcalc.*(_126,t41,t82);
    t84 := batmath.exp(t83);
    t85 := batcalc.*(_127,t40,t84);
    t93 := aggr.sum(t85,t91,t92);
    t94 := batmath.log(t93);
    t98 := aggr.sum(t94,t96,t97);
    top := t98;
    io.table(t97,top);
    yield f1;
    redo always;
exit always;
end f1;

# 23:53:01 >  
# 23:53:01 >  Done.
# 23:53:01 >  

