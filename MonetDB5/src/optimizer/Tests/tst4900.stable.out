stdout of test 'tst4900` in directory 'src/optimizer` itself:


# 23:53:01 >  
# 23:53:01 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  tst4900.mal </dev/null
# 23:53:01 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#function f1(s:str):void;
#	t1:bat[:void,:dbl] := bbp.bind("TREC2003_test_priors_8x32318");
#	t2 := array.grid(132000,8,1,0);
#	t3 := array.grid(1,100,10560,0);
#	#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot
#	t4 := array.grid(1,100,10560,0,8);
#	t5 := batcalc.+(t2,t4);
#	t6 := batcalc.oid(t5);
#	t7 := algebra.join(t6,t1);
#	t8 := calc.dbl(1.0);
#	t9 := calc.dbl(2.0);
#	t10 := calc.dbl(3.1415);
#	t11 := calc.*(t9,t10);
#	t12 := calc.dbl(14.0);
#	t13 := mmath.pow(t11,t12);
#	t14 := mmath.sqrt(t13);
#	t15 := calc.dbl(t14);
#	t16:bat[:void,:dbl] := bbp.bind("TREC2003_test_sigs_14x8x32318");
#	t17 := array.grid(800,14,1,0);
#	t18 := array.grid(100,8,14,0);
#	t19 := array.grid(1,100,112,0);
#	#t20 := batcalc.*(8,t19);
#	t20 := array.grid(1,100,112,0,8);
#	t21 := batcalc.+(t18,t20);
#	t22 := batcalc.*(14,t21);
#	t23 := batcalc.+(t17,t22);
#	t24 := batcalc.oid(t23);
#	t25 := algebra.join(t24,t16);
#	t30 := batcalc.oid(t21);
#	t31 := array.grid(1,800,1,0);
#	t32 := aggrX3.prod(t25,t30,t31);
#	t33 := batcalc.*(t15,t32);
#	t34 := batcalc./(t8,t33);
#	t40 := algebra.join(t6,t34);
#	t41 := calc.dbl(-0.5);
#	#t42:bat[:void,:dbl] := bbp.bind("Query_14x1320");
#	t42:bat[:void,:dbl] := bbp.bind(s);
#	t43 := array.grid(1056000,14,1,0);
#	t44 := array.grid(100,1320,112,0);
#	#t45 := batcalc.*(14,t44);
#	t45 := array.grid(100,1320,112,0,14);
#	t46 := batcalc.+(t43,t45);
#	t47 := batcalc.oid(t46);
#	t48 := algebra.join(t47,t42);
#	t49:bat[:void,:dbl] := bbp.bind("TREC2003_test_mus_14x8x32318");
#	t51 := array.grid(132000,8,14,0);
#	t52 := array.grid(1,100,147840,0);
#	#t53 := batcalc.*(8,t52);
#	t53 := array.grid(1,100,147840,0,8);
#	t54 := batcalc.+(t51,t53);
#	t55 := batcalc.*(14,t54);
#	t56 := batcalc.+(t43,t55);
#	t57 := batcalc.oid(t56);
#	t58 := algebra.join(t57,t49);
#	t59 := batcalc.-(t48,t58);
#	#t61 := batcalc.pow(t59,t9);
#	t61 := batcalc.*(t59,t59);
#	t71 := algebra.join(t57,t16);
#	t72 := batcalc./(t61,t71);
#	t76 := batcalc.*(1320,t52);
#	t77 := batcalc.+(t44,t76);
#	t78 := batcalc.*(8,t77);
#	t79 := batcalc.+(t51,t78);
#	t80 := batcalc.oid(t79);
#	t81 := array.grid(1,1056000,1,0);
#	t82 := aggrX3.sum(t72,t80,t81);
#	t83 := batcalc.*(t41,t82);
#	t84 := batcalc.exp(t83);
#	t85 := batcalc.*(t40,t84);
#	t86 := batcalc.*(t7,t85);
#	#t87 := array.grid(100,1320,8,0); will save 30% by reuse
#	t87 := array.grid(t81,100,1320,8,0); 
#	t89 := batcalc.*(1320,t3);
#	t90 := batcalc.+(t87,t89);
#	t91 := batcalc.oid(t90);
#	t92 := array.grid(1,132000,1,0);
#	t93 := aggrX3.sum(t86,t91,t92);
#	t94 := batcalc.log(t93);
#	t95 := array.grid(1,100,1320,0);
#	t96 := batcalc.oid(t95);
#	t97 := array.grid(1,100,1,0);
#	t98 := aggrX3.sum(t94,t96,t97);
#	top := t98;
#	io.table(t97,top);
#end f1;
function user.f1(s:str):void;	# 0  (f1:void)<-(s:str)
    t1:bat[:void,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");	# 1 CMDbbpbind (t1:bat[:void,:dbl])<-(_3:str)
    t2 := array.grid(132000,8,1,0);	# 2 ARRAYgrid_int (t2:bat[:void,:int])<-(_5:int)(_6:int)(_7:int)(_8:int)
    t3 := array.grid(1,100,10560,0);	# 3 ARRAYgrid_int (t3:bat[:void,:int])<-(_7:int)(_10:int)(_11:int)(_8:int)
    t4 := array.grid(1,100,10560,0,8);	# 4 ARRAYgridShift_int (t4:bat[:void,:int])<-(_7:int)(_10:int)(_11:int)(_8:int)(_6:int)
    t5 := batcalc.+(t2,t4);	# 5 CMDbatADD_int_int_int (t5:bat[:void,:int])<-(t2:bat[:void,:int])(t4:bat[:void,:int])
    t6 := batcalc.oid(t5);	# 6 CMDconvertvoid_int_oid (t6:bat[:void,:oid])<-(t5:bat[:void,:int])
    t7 := algebra.join(t6,t1);	# 7 ALGjoin (t7:bat[:void,:dbl])<-(t6:bat[:void,:oid])(t1:bat[:void,:dbl])
    t8 := calc.dbl(1.0);	# 8 CALCflt2dbl (t8:dbl)<-(_17:flt)
    t9 := calc.dbl(2.0);	# 9 CALCflt2dbl (t9:dbl)<-(_19:flt)
    t10 := calc.dbl(3.1415);	# 10 CALCflt2dbl (t10:dbl)<-(_21:flt)
    t11 := calc.*(t9,t10);	# 11 CALCbinaryMULdbldbl (t11:dbl)<-(t9:dbl)(t10:dbl)
    t12 := calc.dbl(14.0);	# 12 CALCflt2dbl (t12:dbl)<-(_24:flt)
    t13 := mmath.pow(t11,t12);	# 13 MATHbinary_POWdbl (t13:dbl)<-(t11:dbl)(t12:dbl)
    t14 := mmath.sqrt(t13);	# 14 MATHunary_SQRTdbl (t14:dbl)<-(t13:dbl)
    t15 := calc.dbl(t14);	# 15 CALCdbl2dbl (t15:dbl)<-(t14:dbl)
    t16:bat[:void,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");	# 16 CMDbbpbind (t16:bat[:void,:dbl])<-(_29:str)
    t17 := array.grid(800,14,1,0);	# 17 ARRAYgrid_int (t17:bat[:void,:int])<-(_31:int)(_32:int)(_7:int)(_8:int)
    t18 := array.grid(100,8,14,0);	# 18 ARRAYgrid_int (t18:bat[:void,:int])<-(_10:int)(_6:int)(_32:int)(_8:int)
    t19 := array.grid(1,100,112,0);	# 19 ARRAYgrid_int (t19:bat[:void,:int])<-(_7:int)(_10:int)(_35:int)(_8:int)
    t20 := array.grid(1,100,112,0,8);	# 20 ARRAYgridShift_int (t20:bat[:void,:int])<-(_7:int)(_10:int)(_35:int)(_8:int)(_6:int)
    t21 := batcalc.+(t18,t20);	# 21 CMDbatADD_int_int_int (t21:bat[:void,:int])<-(t18:bat[:void,:int])(t20:bat[:void,:int])
    t22 := batcalc.*(14,t21);	# 22 CMDcstMULbat_int_int_int (t22:bat[:void,:int])<-(_32:int)(t21:bat[:void,:int])
    t23 := batcalc.+(t17,t22);	# 23 CMDbatADD_int_int_int (t23:bat[:void,:int])<-(t17:bat[:void,:int])(t22:bat[:void,:int])
    t24 := batcalc.oid(t23);	# 24 CMDconvertvoid_int_oid (t24:bat[:void,:oid])<-(t23:bat[:void,:int])
    t25 := algebra.join(t24,t16);	# 25 ALGjoin (t25:bat[:void,:dbl])<-(t24:bat[:void,:oid])(t16:bat[:void,:dbl])
    t30 := batcalc.oid(t21);	# 26 CMDconvertvoid_int_oid (t30:bat[:void,:oid])<-(t21:bat[:void,:int])
    t31 := array.grid(1,800,1,0);	# 27 ARRAYgrid_int (t31:bat[:void,:int])<-(_44:int)(_31:int)(_44:int)(_45:int)
    t32 := aggr.product(t25,t30,t31);	# 28 AX3aggrX3_prod3_dbl_dbl (t32:bat[:void,:dbl])<-(t25:bat[:void,:dbl])(t30:bat[:void,:oid])(t31:bat[:void,:int])
    t33 := batcalc.*(t15,t32);	# 29 CMDcstMULbat_dbl_dbl_dbl (t33:bat[:void,:dbl])<-(t15:dbl)(t32:bat[:void,:dbl])
    t34 := batcalc./(t8,t33);	# 30 CMDcstDIVbat_dbl_dbl_dbl (t34:bat[:void,:dbl])<-(t8:dbl)(t33:bat[:void,:dbl])
    t40 := algebra.join(t6,t34);	# 31 ALGjoin (t40:bat[:void,:dbl])<-(t6:bat[:void,:oid])(t34:bat[:void,:dbl])
    t41 := calc.dbl(-0.5);	# 32 CALCflt2dbl (t41:dbl)<-(_51:flt)
    t42:bat[:void,:dbl]  := bbp.bind(s);	# 33 CMDbbpbind (t42:bat[:void,:dbl])<-(s:str)
    t43 := array.grid(1056000,14,1,0);	# 34 ARRAYgrid_int (t43:bat[:void,:int])<-(_54:int)(_32:int)(_44:int)(_45:int)
    t44 := array.grid(100,1320,112,0);	# 35 ARRAYgrid_int (t44:bat[:void,:int])<-(_56:int)(_57:int)(_35:int)(_45:int)
    t45 := array.grid(100,1320,112,0,14);	# 36 ARRAYgridShift_int (t45:bat[:void,:int])<-(_56:int)(_57:int)(_35:int)(_45:int)(_32:int)
    t46 := batcalc.+(t43,t45);	# 37 CMDbatADD_int_int_int (t46:bat[:void,:int])<-(t43:bat[:void,:int])(t45:bat[:void,:int])
    t47 := batcalc.oid(t46);	# 38 CMDconvertvoid_int_oid (t47:bat[:void,:oid])<-(t46:bat[:void,:int])
    t48 := algebra.join(t47,t42);	# 39 ALGjoin (t48:bat[:void,:dbl])<-(t47:bat[:void,:oid])(t42:bat[:void,:dbl])
    t49:bat[:void,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");	# 40 CMDbbpbind (t49:bat[:void,:dbl])<-(_63:str)
    t51 := array.grid(132000,8,14,0);	# 41 ARRAYgrid_int (t51:bat[:void,:int])<-(_65:int)(_66:int)(_67:int)(_45:int)
    t52 := array.grid(1,100,147840,0);	# 42 ARRAYgrid_int (t52:bat[:void,:int])<-(_44:int)(_56:int)(_69:int)(_45:int)
    t53 := array.grid(1,100,147840,0,8);	# 43 ARRAYgridShift_int (t53:bat[:void,:int])<-(_44:int)(_56:int)(_69:int)(_45:int)(_66:int)
    t54 := batcalc.+(t51,t53);	# 44 CMDbatADD_int_int_int (t54:bat[:void,:int])<-(t51:bat[:void,:int])(t53:bat[:void,:int])
    t55 := batcalc.*(14,t54);	# 45 CMDcstMULbat_int_int_int (t55:bat[:void,:int])<-(_67:int)(t54:bat[:void,:int])
    t56 := batcalc.+(t43,t55);	# 46 CMDbatADD_int_int_int (t56:bat[:void,:int])<-(t43:bat[:void,:int])(t55:bat[:void,:int])
    t57 := batcalc.oid(t56);	# 47 CMDconvertvoid_int_oid (t57:bat[:void,:oid])<-(t56:bat[:void,:int])
    t58 := algebra.join(t57,t49);	# 48 ALGjoin (t58:bat[:void,:dbl])<-(t57:bat[:void,:oid])(t49:bat[:void,:dbl])
    t59 := batcalc.-(t48,t58);	# 49 CMDbatSUB_dbl_dbl_dbl (t59:bat[:void,:dbl])<-(t48:bat[:void,:dbl])(t58:bat[:void,:dbl])
    t61 := batcalc.*(t59,t59);	# 50 CMDbatMUL_dbl_dbl_dbl (t61:bat[:void,:dbl])<-(t59:bat[:void,:dbl])(t59:bat[:void,:dbl])
    t71 := algebra.join(t57,t16);	# 51 ALGjoin (t71:bat[:void,:dbl])<-(t57:bat[:void,:oid])(t16:bat[:void,:dbl])
    t72 := batcalc./(t61,t71);	# 52 CMDbatDIV_dbl_dbl_dbl (t72:bat[:void,:dbl])<-(t61:bat[:void,:dbl])(t71:bat[:void,:dbl])
    t76 := batcalc.*(1320,t52);	# 53 CMDcstMULbat_int_int_int (t76:bat[:void,:int])<-(_57:int)(t52:bat[:void,:int])
    t77 := batcalc.+(t44,t76);	# 54 CMDbatADD_int_int_int (t77:bat[:void,:int])<-(t44:bat[:void,:int])(t76:bat[:void,:int])
    t78 := batcalc.*(8,t77);	# 55 CMDcstMULbat_int_int_int (t78:bat[:void,:int])<-(_66:int)(t77:bat[:void,:int])
    t79 := batcalc.+(t51,t78);	# 56 CMDbatADD_int_int_int (t79:bat[:void,:int])<-(t51:bat[:void,:int])(t78:bat[:void,:int])
    t80 := batcalc.oid(t79);	# 57 CMDconvertvoid_int_oid (t80:bat[:void,:oid])<-(t79:bat[:void,:int])
    t81 := array.grid(1,1056000,1,0);	# 58 ARRAYgrid_int (t81:bat[:void,:int])<-(_86:int)(_87:int)(_86:int)(_88:int)
    t82 := aggr.sum(t72,t80,t81);	# 59 AX3aggrX3_sum3_dbl_dbl (t82:bat[:void,:dbl])<-(t72:bat[:void,:dbl])(t80:bat[:void,:oid])(t81:bat[:void,:int])
    t83 := batcalc.*(t41,t82);	# 60 CMDcstMULbat_dbl_dbl_dbl (t83:bat[:void,:dbl])<-(t41:dbl)(t82:bat[:void,:dbl])
    t84 := batmath.exp(t83);	# 61 CMDsciencevoid_exp (t84:bat[:void,:dbl])<-(t83:bat[:void,:dbl])
    t85 := batcalc.*(t40,t84);	# 62 CMDbatMUL_dbl_dbl_dbl (t85:bat[:void,:dbl])<-(t40:bat[:void,:dbl])(t84:bat[:void,:dbl])
    t86 := batcalc.*(t7,t85);	# 63 CMDbatMUL_dbl_dbl_dbl (t86:bat[:void,:dbl])<-(t7:bat[:void,:dbl])(t85:bat[:void,:dbl])
    t87 := array.grid(t81,100,1320,8,0);	# 64 ARRAYgridBAT_int (t87:bat[:void,:int])<-(t81:bat[:void,:int])(_95:int)(_96:int)(_66:int)(_88:int)
    t89 := batcalc.*(1320,t3);	# 65 CMDcstMULbat_int_int_int (t89:bat[:void,:int])<-(_96:int)(t3:bat[:void,:int])
    t90 := batcalc.+(t87,t89);	# 66 CMDbatADD_int_int_int (t90:bat[:void,:int])<-(t87:bat[:void,:int])(t89:bat[:void,:int])
    t91 := batcalc.oid(t90);	# 67 CMDconvertvoid_int_oid (t91:bat[:void,:oid])<-(t90:bat[:void,:int])
    t92 := array.grid(1,132000,1,0);	# 68 ARRAYgrid_int (t92:bat[:void,:int])<-(_86:int)(_101:int)(_86:int)(_88:int)
    t93 := aggr.sum(t86,t91,t92);	# 69 AX3aggrX3_sum3_dbl_dbl (t93:bat[:void,:dbl])<-(t86:bat[:void,:dbl])(t91:bat[:void,:oid])(t92:bat[:void,:int])
    t94 := batmath.log(t93);	# 70 CMDsciencevoid_log (t94:bat[:void,:dbl])<-(t93:bat[:void,:dbl])
    t95 := array.grid(1,100,1320,0);	# 71 ARRAYgrid_int (t95:bat[:void,:int])<-(_86:int)(_95:int)(_96:int)(_88:int)
    t96 := batcalc.oid(t95);	# 72 CMDconvertvoid_int_oid (t96:bat[:void,:oid])<-(t95:bat[:void,:int])
    t97 := array.grid(1,100,1,0);	# 73 ARRAYgrid_int (t97:bat[:void,:int])<-(_86:int)(_95:int)(_86:int)(_88:int)
    t98 := aggr.sum(t94,t96,t97);	# 74 AX3aggrX3_sum3_dbl_dbl (t98:bat[:void,:dbl])<-(t94:bat[:void,:dbl])(t96:bat[:void,:oid])(t97:bat[:void,:int])
    top := t98;	# 75  (top:bat[:void,:dbl])<-(t98:bat[:void,:dbl])
    io.table(t97,top);	# 76 IOttable (_109:int)<-(t97:bat[:void,:int])(top:bat[:void,:dbl])
end f1;	# 77  
#	optimizer.expressionAccumulation("user","f1"); 
#	optimizer.garbageCollector("user","f1");
#	optimizer.factorize("user","f1");
#	mdb.list("user","f1");
#	##f1();
#
#
function user.main():int;	# 0  (main:int)
#t4 := batcalc.*(8,t3); doing a reconstruction saves a lot 	# 1  (_2:str)
#t20 := batcalc.*(8,t19); 	# 2  (_4:str)
#t42:bat[:void,:dbl] := bbp.bind("Query_14x1320"); 	# 3  (_6:str)
#t45 := batcalc.*(14,t44); 	# 4  (_8:str)
#t53 := batcalc.*(8,t52); 	# 5  (_10:str)
#t61 := batcalc.pow(t59,t9); 	# 6  (_12:str)
#t87 := array.grid(100,1320,8,0); will save 30% by reuse 	# 7  (_14:str)
    mdb.list("user","f1");	# 8 MDBlist3 (_20:void)<-(_16:str)(_17:str)
##f1(); 	# 9  (_22:str)
end main;	# 10  
factory user.f1(s:str):void;
    t1:bat[:void,:dbl]  := bbp.bind("TREC2003_test_priors_8x32318");
    t2 := array.grid(132000,8,1,0);
    t3 := array.grid(1,100,10560,0);
    t4 := array.grid(1,100,10560,0,8);
    batcalc.+(t2,t2,t4);
    bat.setGarbage(t4);
    t6 := batcalc.oid(t2);
    bat.setGarbage(t2);
    t7 := algebra.join(t6,t1);
    bat.setGarbage(t1);
    t8 := calc.dbl(1.0);
    t9 := calc.dbl(2.0);
    t10 := calc.dbl(3.1415);
    t11 := calc.*(t9,t10);
    t12 := calc.dbl(14.0);
    t13 := mmath.pow(t11,t12);
    t14 := mmath.sqrt(t13);
    t16:bat[:void,:dbl]  := bbp.bind("TREC2003_test_sigs_14x8x32318");
    t17 := array.grid(800,14,1,0);
    t18 := array.grid(100,8,14,0);
    t19 := array.grid(1,100,112,0);
    t20 := array.grid(1,100,112,0,8);
    batcalc.+(t18,t18,t20);
    bat.setGarbage(t20);
    t22 := batcalc.*(14,t18);
    batcalc.+(t17,t17,t22);
    bat.setGarbage(t22);
    t24 := batcalc.oid(t17);
    bat.setGarbage(t17);
    t25 := algebra.join(t24,t16);
    bat.setGarbage(t24);
    t30 := batcalc.oid(t18);
    bat.setGarbage(t18);
    t31 := array.grid(1,800,1,0);
    t32 := aggr.product(t25,t30,t31);
    bat.setGarbage(t25);
    bat.setGarbage(t30);
    bat.setGarbage(t31);
    batcalc.*(t32,t14,t32);
    batcalc./(t32,t8,t32);
    t40 := algebra.join(t6,t32);
    bat.setGarbage(t6);
    bat.setGarbage(t32);
    t41 := calc.dbl(-0.5);
    t43 := array.grid(1056000,14,1,0);
    t44 := array.grid(100,1320,112,0);
    t45 := array.grid(100,1320,112,0,14);
    batcalc.+(t45,t43,t45);
    t47 := batcalc.oid(t45);
    bat.setGarbage(t45);
    bat.setGarbage(t47);
    t49:bat[:void,:dbl]  := bbp.bind("TREC2003_test_mus_14x8x32318");
    t51 := array.grid(132000,8,14,0);
    t52 := array.grid(1,100,147840,0);
    t53 := array.grid(1,100,147840,0,8);
    batcalc.+(t53,t51,t53);
    batcalc.*(t53,14,t53);
    batcalc.+(t43,t43,t53);
    bat.setGarbage(t53);
    t57 := batcalc.oid(t43);
    bat.setGarbage(t43);
    t58 := algebra.join(t57,t49);
    bat.setGarbage(t49);
    bat.setGarbage(t58);
    t71 := algebra.join(t57,t16);
    bat.setGarbage(t57);
    bat.setGarbage(t16);
    bat.setGarbage(t71);
    batcalc.*(t52,1320,t52);
    batcalc.+(t44,t44,t52);
    bat.setGarbage(t52);
    batcalc.*(t44,8,t44);
    batcalc.+(t51,t51,t44);
    bat.setGarbage(t44);
    t80 := batcalc.oid(t51);
    bat.setGarbage(t51);
    t81 := array.grid(1,1056000,1,0);
    bat.setGarbage(t80);
    batcalc.*(t7,t7,t40);
    bat.setGarbage(t40);
    t87 := array.grid(t81,100,1320,8,0);
    bat.setGarbage(t81);
    batcalc.*(t3,1320,t3);
    batcalc.+(t87,t87,t3);
    bat.setGarbage(t3);
    t91 := batcalc.oid(t87);
    bat.setGarbage(t87);
    t92 := array.grid(1,132000,1,0);
    t93 := aggr.sum(t7,t91,t92);
    bat.setGarbage(t7);
    bat.setGarbage(t91);
    bat.setGarbage(t92);
    t94 := batmath.log(t93);
    bat.setGarbage(t93);
    t95 := array.grid(1,100,1320,0);
    t96 := batcalc.oid(t95);
    bat.setGarbage(t95);
    t97 := array.grid(1,100,1,0);
    t98 := aggr.sum(t94,t96,t97);
    bat.setGarbage(t94);
    bat.setGarbage(t96);
    top := t98;
    bat.setGarbage(t98);
    io.table(t97,top);
    bat.setGarbage(t97);
    bat.setGarbage(top);
barrier always := true;
    t42:bat[:void,:dbl]  := bbp.bind(s);
    t48 := algebra.join(t47,t42);
    bat.setGarbage(t42);
    batcalc.-(t48,t48,t58);
    batcalc.*(t48,t48,t48);
    batcalc./(t48,t48,t71);
    t82 := aggr.sum(t48,t80,t81);
    bat.setGarbage(t48);
    batcalc.*(t82,t41,t82);
    t84 := batmath.exp(t82);
    bat.setGarbage(t82);
    batcalc.*(t40,t40,t84);
    bat.setGarbage(t84);
    yield f1;
    redo always;
exit always;
end f1;

# 23:53:01 >  
# 23:53:01 >  Done.
# 23:53:01 >  

