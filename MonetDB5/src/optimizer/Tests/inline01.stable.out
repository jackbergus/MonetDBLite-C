stdout of test 'inline01` in directory 'src/optimizer` itself:


# 00:18:07 >  
# 00:18:07 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31500 --set xrpc_port=46952 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline01.mal
# 00:18:07 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.help{inline}():void;
    b := bat.new(:int,:int);
    c := bat.new(:int,:int);
    z:int  := 1;
    bat.insert(b,1,1);
barrier (x,y,z:int ) := bat.newIterator(b);
    io.print(x);
catch MALException:str ;
exit MALException:str ;
exit (x,y,z:int );
barrier (x,y,z:int ) := bat.newIterator(c);
    io.print(x);
    redo (x,y,z:int ) := bat.hasMoreElements(c);
catch MALException:str ;
exit MALException:str ;
exit (x,y,z:int );
end help;
function user.qry1{inline}():void;
    user.help();
end qry1;
function user.qry():void;
    user.qry1();
end qry;
function user.main():void;
    mdb.List("user","qry");
end main;
function user.qry():void;               #  0 qry:void := user.qry() {G}
    _5 := bat.new(:int,:int);           #  1 _5:bat[:int,:int] := CMDBATnew(_6:int, _6:int) {G}
    _7 := bat.new(:int,:int);           #  2 _7:bat[:int,:int] := CMDBATnew(_6:int, _6:int) {G}
    _8:int  := 1;                       #  3 _8:int := _9:int 
    bat.insert(_5,1,1);                 #  4 _10:bat[:int,:int] := BKCinsert_bun(_5:bat[:int,:int], _9:int, _9:int) {G}
barrier (_11,_12,_8:int ) := bat.newIterator(_5);#  5 (_11:lng, _12:int, _8:int) := CHPbunIterator(_5:bat[:int,:int]) {J9}
    io.print(_11);                      #  6 _13:void := IOprint_val(_11:lng) 
catch MALException:str ;                #  7 MALException:str {J8}
exit MALException:str ;                 #  8 MALException:str 
exit (_11,_12,_8:int );                 #  9 (_11:lng, _12:int, _8:int) 
barrier (_11,_12,_8:int ) := bat.newIterator(_7);# 10 (_11:lng, _12:int, _8:int) := CHPbunIterator(_7:bat[:int,:int]) {J15}
    io.print(_11);                      # 11 _15:void := IOprint_val(_11:lng) 
    redo (_11,_12,_8:int ) := bat.hasMoreElements(_7);# 12 (_11:lng, _12:int, _8:int) := CHPbunHasMoreElements(_7:bat[:int,:int]) {J11}
catch MALException:str ;                # 13 MALException:str {J14}
exit MALException:str ;                 # 14 MALException:str 
exit (_11,_12,_8:int );                 # 15 (_11:lng, _12:int, _8:int) 
end qry;                                # 16  

# 00:18:07 >  
# 00:18:07 >  Done.
# 00:18:07 >  

