stdout of test 'remote01` in directory 'src/optimizer` itself:


# 09:35:05 >  
# 09:35:05 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=39715 --set xrpc_port=43844 --set monet_prompt= --trace --dbname=mTests_src_optimizer  remote01.mal
# 09:35:05 >  

# MonetDB server v5.3.0, based on kernel v1.21.0
# Serving database 'mTests_src_optimizer'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2007 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32348/
function user.main():void;
# First test of the remoteQueries optimizer 
# we create a remote bat and fake a bind operation. 
    cat := inspect.getEnvironment();
    fs := algebra.find(cat,"mapi_port");
    port := calc.int(fs);
#io.printf("port %d\n",port); 
    mid := mapi.reconnect("localhost",port,"s0_0","monetdb","monetdb","mal");
    mapi.rpc(mid,"rb:= bat.new(:int,:int); bat.setName(rb,\"rbat\");");
    mapi.rpc(mid,"bat.insert(rb,1,1);");
    mapi.rpc(mid,"bat.insert(rb,3,3);");
    mapi.rpc(mid,"bat.insert(rb,5,5);");
    mapi.rpc(mid,"bat.insert(rb,6,6);");
    mapi.rpc(mid,"bat.insert(rb,7,7);");
    mapi.rpc(mid,"c:=algebra.select(rb,0,12);");
    c := mapi.rpc(mid,"io.print(c);");
    io.print(c);
    mapi.rpc(mid,"c:=algebra.select(rb,0,4);");
    c := mapi.rpc(mid,"io.print(c);");
    io.print(c);
    b := mapi.bind(mid,"rbat");
    io.print(b);
# see if we can do some remote selections. 
    mapi.rpc(mid,"d:=algebra.select(b,5,10);");
    low := calc.+(5,1);
    mapi.put(mid,"low",low);
    mapi.rpc(mid,"e:=algebra.select(d,low,7);");
    mapi.rpc(mid,"i:=aggr.count(d);");
    i := mapi.rpc(mid,"io.print(i);");
    io.printf(" count %d\n",i);
    d := mapi.rpc(mid,"io.print(d);");
    io.print(d);
    mapi.disconnect(mid);
#optimizer.remoteQueries(); 
end main;
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 3,	  3	  ]
[ 5,	  5	  ]
[ 6,	  6	  ]
[ 7,	  7	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 3,	  3	  ]
[ nil ]
 count 3
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 5,	  5	  ]
[ 6,	  6	  ]
[ 7,	  7	  ]

# 09:35:05 >  
# 09:35:05 >  Done.
# 09:35:05 >  

