stdout of test 'remote01` in directory 'src/optimizer` itself:


# 09:35:05 >  
# 09:35:05 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=39715 --set xrpc_port=43844 --set monet_prompt= --trace --dbname=mTests_src_optimizer  remote01.mal
# 09:35:05 >  

# MonetDB server v5.3.0, based on kernel v1.21.0
# Serving database 'mTests_src_optimizer'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2007 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://gio.ins.cwi.nl:39715/
## First test of the remoteQueries optimizer
## we create a remote bat and fake a bind operation.
#
#cat:= inspect.getEnvironment();
#fs := algebra.find(cat,"mapi_port");
#port := calc.int(fs);
##io.printf("port %d\n",port);
#
#mid:= mapi.reconnect("localhost",port,"s0_0","monetdb","monetdb","mal");
#mapi.rpc(mid,"rb:= bat.new(:int,:int); bat.setName(rb,\"rbat\");");
#mapi.rpc(mid,"bat.insert(rb,1,1);");
#mapi.rpc(mid,"bat.insert(rb,3,3);");
#mapi.rpc(mid,"bat.insert(rb,5,5);");
#mapi.rpc(mid,"bat.insert(rb,6,6);");
#mapi.rpc(mid,"bat.insert(rb,7,7);");
#mapi.rpc(mid,"c:=algebra.select(rb,0,12);");
#c:bat[:int,:int]:= mapi.rpc(mid, "io.print(c);");
#io.print(c);
#mapi.rpc(mid,"c:=algebra.select(rb,0,4);");
#c:bat[:int,:int]:= mapi.rpc(mid, "io.print(c);");
#io.print(c);
#
#b:bat[:int,:int]:= mapi.bind(mid,"rbat");
#io.print(b);
#
## see if we can do some remote selections.
#mapi.rpc(mid,"d:=algebra.select(b,5,10);");
#low:= 5+1;
#mapi.put(mid,"low",low);
#mapi.rpc(mid,"e:=algebra.select(d,low,7);");
#mapi.rpc(mid,"i:=aggr.count(d);");
#i:lng:= mapi.rpc(mid,"io.print(i);");
#io.printf(" count %d\n",i);
#d:bat[:int,:int]:= mapi.rpc(mid,"io.print(d);");
#io.print(d);
#mapi.disconnect(mid);
#optimizer.remoteQueries();
#
function user.main():void;	# 0  (main:void)
# First test of the remoteQueries optimizer 	# 1  (_1:str)
# we create a remote bat and fake a bind operation. 	# 2  (_2:str)
    cat := inspect.getEnvironment();	# 3 INSPECTgetEnvironment (cat:bat[:str,:str])
    fs := algebra.find(cat,"mapi_port");	# 4 ALGfind (fs:str)<-(cat:bat[:str,:str])(_5:str)
    port := calc.int(fs);	# 5 CALCstr2int (port:int)<-(fs:str)
#io.printf("port %d\n",port); 	# 6  (_7:str)
    mid := mapi.reconnect("localhost",port,"s0_0","monetdb","monetdb","mal");	# 7 SERVERreconnectAlias (mid:int)<-(_9:str)(port:int)(_10:str)(_11:str)(_11:str)(_12:str)
    mapi.rpc(mid,"rb:= bat.new(:int,:int); bat.setName(rb,\"rbat\");");	# 8 SERVERquery (_13:void)<-(mid:int)(_14:str)
    mapi.rpc(mid,"bat.insert(rb,1,1);");	# 9 SERVERquery (_15:void)<-(mid:int)(_16:str)
    mapi.rpc(mid,"bat.insert(rb,3,3);");	# 10 SERVERquery (_17:void)<-(mid:int)(_18:str)
    mapi.rpc(mid,"bat.insert(rb,5,5);");	# 11 SERVERquery (_19:void)<-(mid:int)(_20:str)
    mapi.rpc(mid,"bat.insert(rb,6,6);");	# 12 SERVERquery (_21:void)<-(mid:int)(_22:str)
    mapi.rpc(mid,"bat.insert(rb,7,7);");	# 13 SERVERquery (_23:void)<-(mid:int)(_24:str)
    mapi.rpc(mid,"c:=algebra.select(rb,0,12);");	# 14 SERVERquery (_25:void)<-(mid:int)(_26:str)
    c:bat[:int,:int]  := mapi.rpc(mid,"io.print(c);");	# 15 SERVERmapi_rpc_bat (c:bat[:int,:int])<-(mid:int)(_28:str)
    io.print(c);	# 16 IOprint_val (_29:void)<-(c:bat[:int,:int])
    mapi.rpc(mid,"c:=algebra.select(rb,0,4);");	# 17 SERVERquery (_30:void)<-(mid:int)(_31:str)
    c:bat[:int,:int]  := mapi.rpc(mid,"io.print(c);");	# 18 SERVERmapi_rpc_bat (c:bat[:int,:int])<-(mid:int)(_28:str)
    io.print(c);	# 19 IOprint_val (_32:void)<-(c:bat[:int,:int])
    b:bat[:int,:int]  := mapi.bind(mid,"rbat");	# 20 SERVERbindBAT (b:bat[:int,:int])<-(mid:int)(_34:str)
    io.print(b);	# 21 IOprint_val (_35:void)<-(b:bat[:int,:int])
# see if we can do some remote selections. 	# 22  (_36:str)
    mapi.rpc(mid,"d:=algebra.select(b,5,10);");	# 23 SERVERquery (_37:void)<-(mid:int)(_38:str)
    low := calc.+(5,1);	# 24 CALCbinaryADDintint (low:int)<-(_40:int)(_41:int)
    mapi.put(mid,"low",low);	# 25 SERVERput (_42:void)<-(mid:int)(_43:str)(low:int)
    mapi.rpc(mid,"e:=algebra.select(d,low,7);");	# 26 SERVERquery (_44:void)<-(mid:int)(_45:str)
    mapi.rpc(mid,"i:=aggr.count(d);");	# 27 SERVERquery (_46:void)<-(mid:int)(_47:str)
    i:lng  := mapi.rpc(mid,"io.print(i);");	# 28 SERVERmapi_rpc_single_row (i:lng)<-(mid:int)(_49:str)
    io.printf(" count %d\n",i);	# 29 IOprint_formatted_lng (_50:void)<-(_51:str)(i:lng)
    d:bat[:int,:int]  := mapi.rpc(mid,"io.print(d);");	# 30 SERVERmapi_rpc_bat (d:bat[:int,:int])<-(mid:int)(_53:str)
    io.print(d);	# 31 IOprint_val (_54:void)<-(d:bat[:int,:int])
    mapi.disconnect(mid);	# 32 SERVERdisconnect (_55:void)<-(mid:int)
end main;	# 33  
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 3,	  3	  ]
[ 5,	  5	  ]
[ 6,	  6	  ]
[ 7,	  7	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ 3,	  3	  ]
!MALException:mapi.bind:remote error: SyntaxException:parseError:b:bat[int,int]:=bbp.bind("rbat");
!MALException:mapi.bind:remote error:SyntaxException:parseError:     ^',' expected
!MALException:mapi.bind:remote error:SyntaxException:parseError:
!MALException:mapi.bind:remote error:';' expected

# 09:35:05 >  
# 09:35:05 >  Done.
# 09:35:05 >  

