stdout of test 'pbm01` in directory 'src/optimizer` itself:


# 23:24:12 >  
# 23:24:12 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=35444 --set sql_port=44153 --set xquery_port=51797 --set monet_prompt= --trace --dbname=mTests_src_optimizer  pbm01.mal < /dev/null
# 23:24:12 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## extract the definition by the optimizer
#    d:bat[:void,:int]:= mat.expand("Sales2005");
#	s:= algebra.select(d,0,300);
#	io.print(s);
#    optimizer.multitable();
#	io.print("done");
#    mdb.list();
#
function user.main():void;	# 0  (main:void)
# extract the definition by the optimizer 	# 1  (_1:str)
    d:bat[:void,:int]  := mat.expand("Sales2005");	# 2 MATdummy (d:bat[:void,:int])<-(_3:str)
    _12 := bbp.bind("tmp_4");	# 3 CMDbbpbind (_12:bat[:void,:int])<-(_13:str)
    _14 := bbp.bind("tmp_5");	# 4 CMDbbpbind (_14:bat[:void,:int])<-(_15:str)
    _16 := bbp.bind("tmp_6");	# 5 CMDbbpbind (_16:bat[:void,:int])<-(_17:str)
    d:bat[:void,:int]  := mat.new(_12,_14,_16);	# 6 MATnew (d:bat[:void,:int])<-(_12:bat[:void,:int])(_14:bat[:void,:int])(_16:bat[:void,:int])
    _18 := algebra.select(_12,0,300);	# 7 ALGselect (_18:bat[:void,:int])<-(_12:bat[:void,:int])(_5:int)(_6:int)
    _19 := algebra.select(_14,0,300);	# 8 ALGselect (_19:bat[:void,:int])<-(_14:bat[:void,:int])(_5:int)(_6:int)
    _20 := algebra.select(_16,0,300);	# 9 ALGselect (_20:bat[:void,:int])<-(_16:bat[:void,:int])(_5:int)(_6:int)
    s := mat.new(_18,_19,_20);	# 10 MATnew (s:bat[:void,:int])<-(_18:bat[:void,:int])(_19:bat[:void,:int])(_20:bat[:void,:int])
    s := mat.pack(_18,_19,_20);	# 11 MATpack (s:bat[:void,:int])<-(_18:bat[:void,:int])(_19:bat[:void,:int])(_20:bat[:void,:int])
    io.print(s);	# 12 IOprint_val (_7:int)<-(s:bat[:void,:int])
    io.print("done");	# 13 IOprint_val (_9:int)<-(_10:str)
    mdb.list();	# 14 MDBlist (_11:void)
end main;	# 15  
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ "done" ]
function user.main():void;
# extract the definition by the optimizer 
    d:bat[:void,:int]  := mat.expand("Sales2005");
    _12 := bbp.bind("tmp_4");
    _14 := bbp.bind("tmp_5");
    _16 := bbp.bind("tmp_6");
    d:bat[:void,:int]  := mat.new(_12,_14,_16);
    _18 := algebra.select(_12,0,300);
    _19 := algebra.select(_14,0,300);
    _20 := algebra.select(_16,0,300);
    s := mat.new(_18,_19,_20);
    s := mat.pack(_18,_19,_20);
    io.print(s);
    io.print("done");
    mdb.list();
end main;

# 23:24:12 >  
# 23:24:12 >  Done.
# 23:24:12 >  

