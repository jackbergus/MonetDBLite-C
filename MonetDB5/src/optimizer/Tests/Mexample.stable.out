stdout of test 'Mexample` in directory 'src/optimizer` itself:


# 23:53:03 >  
# 23:53:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  Mexample.mal </dev/null
# 23:53:03 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#	b:= bbp.new(:int,:int);
#	bat.insert(b,1,1);
#	c:bat[:int,:int]:=optimizer.multiplex("calc.+",b,1);
#	mdb.list();
#
function user.main():void;	# 0  (main:void)
    b := bat.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-(_2:int)(_2:int)
    bat.insert(b,1,1);	# 2 BKCinsert_bun (_3:void)<-(b:bat[:int,:int])(_4:int)(_4:int)
    _8 := bat.new(:int,:int);	# 3 CMDBATnew (_8:bat[:int,:int])<-(_2:int)(_2:int)
barrier (_10,_11,_12):= bat.newIterator(b);	# 4 CHPbunIterator (_10:lng)(_11:int)(_12:int)<-(b:bat[:int,:int]) jump 10
    _14 := calc.+(_12,1);	# 5 CALCbinaryADDintint (_14:int)<-(_12:int)(_4:int)
    bat.insert(_8,_11,_14);	# 6 BKCinsert_bun (_15:void)<-(_8:bat[:int,:int])(_11:int)(_14:int)
catch MALexception;	# 7  (MALexception:str) jump 8
exit MALexception;	# 8  (MALexception:str)
    redo (_10,_11,_12):= bat.hasMoreElements(b);	# 9 CHPbunHasMoreElements (_10:lng)(_11:int)(_12:int)<-(b:bat[:int,:int]) jump 5
exit (_10,_11,_12);	# 10  (_10:lng)(_11:int)(_12:int)
    c:bat[:int,:int]  := _8;	# 11  (c:bat[:int,:int])<-(_8:bat[:int,:int])
    mdb.list();	# 12 MDBlist (_7:void)
end main;	# 13  
function user.main():void;
    b := bat.new(:int,:int);
    bat.insert(b,1,1);
    _8 := bat.new(:int,:int);
barrier (_10,_11,_12):= bat.newIterator(b);
    _14 := calc.+(_12,1);
    bat.insert(_8,_11,_14);
catch MALexception;
exit MALexception;
    redo (_10,_11,_12):= bat.hasMoreElements(b);
exit (_10,_11,_12);
    c:bat[:int,:int]  := _8;
    mdb.list();
end main;

# 23:53:03 >  
# 23:53:03 >  Done.
# 23:53:03 >  

