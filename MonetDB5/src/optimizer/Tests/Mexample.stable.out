stdout of test 'Mexample` in directory 'src/optimizer` itself:


# 23:53:03 >  
# 23:53:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  Mexample.mal </dev/null
# 23:53:03 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#	b:= bbp.new(:int,:int);
#	bat.insert(b,1,1);
#	c:bat[:int,:int]:=optimizer.multiplex("calc.+",b,1);
#	mdb.list();
#
function user.main():void;	# 0  (main:void)
    b := bat.new(:int,:int);	# 1 CMDBATnew (b:bat[:int,:int])<-(_2:int)(_2:int)
    bat.insert(b,1,1);	# 2 BKCinsert_bun (_3:void)<-(b:bat[:int,:int])(_4:int)(_4:int)
    _8 := bat.new(nil:int,nil:int);	# 3 CMDBATnew (_8:bat[:int,:int])<-(_9:int)(_9:int)
barrier (_11,_12,_13):= bat.newIterator(b);	# 4 CHPbunIterator (_11:lng)(_12:int)(_13:int)<-(b:bat[:int,:int]) jump 11
    _15 := calc.+(_13,1);	# 5 CALCbinaryADDintint (_15:int)<-(_13:int)(_4:int)
    bat.insert(_8,_12,_15);	# 6 BKCinsert_bun (_16:void)<-(_8:bat[:int,:int])(_12:int)(_15:int)
    redo (_11,_12,_13):= bat.hasMoreElements(b);	# 7 CHPbunHasMoreElements (_11:lng)(_12:int)(_13:int)<-(b:bat[:int,:int]) jump 5
catch MALException:str ;	# 8  (MALException:str) jump 10
    redo (_11,_12,_13):= bat.hasMoreElements(b);	# 9 CHPbunHasMoreElements (_11:lng)(_12:int)(_13:int)<-(b:bat[:int,:int]) jump 5
exit MALException:str ;	# 10  (MALException:str)
exit (_11,_12,_13);	# 11  (_11:lng)(_12:int)(_13:int)
    c:bat[:int,:int]  := _8;	# 12  (c:bat[:int,:int])<-(_8:bat[:int,:int])
    mdb.list();	# 13 MDBlist (_7:void)
end main;	# 14  
function user.main():void;
    b := bat.new(:int,:int);
    bat.insert(b,1,1);
    _8 := bat.new(nil:int,nil:int);
barrier (_11,_12,_13):= bat.newIterator(b);
    _15 := calc.+(_13,1);
    bat.insert(_8,_12,_15);
    redo (_11,_12,_13):= bat.hasMoreElements(b);
catch MALException:str ;
    redo (_11,_12,_13):= bat.hasMoreElements(b);
exit MALException:str ;
exit (_11,_12,_13);
    c:bat[:int,:int]  := _8;
    mdb.list();
end main;

# 23:53:03 >  
# 23:53:03 >  Done.
# 23:53:03 >  

