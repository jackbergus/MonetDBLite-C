stdout of test 'inline00` in directory 'src/optimizer` itself:


# 00:18:07 >  
# 00:18:07 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31500 --set xrpc_port=46952 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline00.mal
# 00:18:07 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
#function help{inline}();
#b:= bat.new(:int,:int);
#c:= bat.new(:int,:int);
#bat.insert(b,1,1);
#
#barrier (x,y,z):= bat.newIterator(b);
#	io.print(x);
#catch MALException:str;
#exit MALException;
#exit (x,y,z);
#
#barrier (x,y,z):= bat.newIterator(c);
#	io.print(x);
#	redo (x,y,z):= bat.hasMoreElements(c);
#catch MALException:str;
#exit MALException;
#exit (x,y,z);
#end help;
function user.help{inline}():void;      #  0 help:void := user.help() {G}
    b := bat.new(:int,:int);            #  1 b:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    c := bat.new(:int,:int);            #  2 c:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    bat.insert(b,1,1);                  #  3 _4:void := BKCinsert_bun(b:bat[:int,:int], _5:int, _5:int) 
barrier (x,y,z):= bat.newIterator(b);   #  4 (x:lng, y:int, z:int) := CHPbunIterator(b:bat[:int,:int]) {J8}
    io.print(x);                        #  5 _9:void := IOprint_val(x:lng) 
catch MALException:str ;                #  6 MALException:str {J7}
exit MALException:str ;                 #  7 MALException:str 
exit (x,y,z);                           #  8 (x:lng, y:int, z:int) 
barrier (x,y,z):= bat.newIterator(c);   #  9 (x:lng, y:int, z:int) := CHPbunIterator(c:bat[:int,:int]) {J14}
    io.print(x);                        # 10 _11:void := IOprint_val(x:lng) 
    redo (x,y,z):= bat.hasMoreElements(c);# 11 (x:lng, y:int, z:int) := CHPbunHasMoreElements(c:bat[:int,:int]) {J10}
catch MALException:str ;                # 12 MALException:str {J13}
exit MALException:str ;                 # 13 MALException:str 
exit (x,y,z);                           # 14 (x:lng, y:int, z:int) 
end help;	# 15  
#
#function user.qry();
#	user.help();
#end qry;
function user.qry():void;               #  0 qry:void := user.qry() 
    user.help();                        #  1 _1:void := user.help() 
end qry;	# 2  
#
#optimizer.inline("user","qry");
#mdb.list("user","qry");
#
function user.main():void;              #  0 main:void := user.main() {G}
    mdb.list("user","qry");             #  1 _5:void := MDBlist3(_2:str, _3:str) 
end main;	# 2  
function user.qry():void;
    _3 := bat.new(:int,:int);
    _5 := bat.new(:int,:int);
    bat.insert(_3,1,1);
barrier (_8,_9,_10):= bat.newIterator(_3);
    io.print(_8);
catch MALException:str ;
exit MALException:str ;
exit (_8,_9,_10);
barrier (_8,_9,_10):= bat.newIterator(_5);
    io.print(_8);
    redo (_8,_9,_10):= bat.hasMoreElements(_5);
catch MALException:str ;
exit MALException:str ;
exit (_8,_9,_10);
end qry;

# 00:18:07 >  
# 00:18:07 >  Done.
# 00:18:07 >  

