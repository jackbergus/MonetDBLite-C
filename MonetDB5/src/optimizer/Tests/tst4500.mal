# Beware this is not the correct TPC-1, but a merely a test
optimizer.setDebug();
optimizer.commonExpressionRemoval();
optimizer.aliasRemoval();
optimizer.deadCodeRemoval();
#don;t depend on SQL library
function user.bind(s:str,t:str,c:str,i:int):bat[:any_1,:any_2];
	return bind:= :bat[:any_1,:any_2];
end bind;
#s14 := user.bind("sys",  "lineitem", "l_shipdate"); #lineitem
	myc:= bbp.bind("myc");
	s14:bat[:void,:date] := user.bind("sys","lineitem","l_shipdate",0);
#s16 := date("1998-12-01");
	s16 := mtime.date("1998-12-01");
#s17 := 7776000;
	s17 := 7776000;
#s15 := date_sub_sec_interval(s16,s17);
#s13 := s14.uselect(date(nil), s15);
	zz:= nil:str;
	aa_a := mtime.date(zz);
	s13 := algebra.uselect(s14,aa_a,aa_a);
#s12 := s13.reverse();
	s12 := bat.reverse(s13,);
#s11 := s12.reverse().mark(oid(0)).reverse();# lineitem
	ba_a := calc.oid(0);
	ca_a := bat.reverse(s12,);
	da_a := algebra.markT(ca_a,ba_a);
	s11 := bat.reverse(da_a,);
#s18 := user.bind("sys",  "lineitem", "l_returnflag"); #lineitem
	s18:bat[:void,:chr] := user.bind("sys","lineitem","l_returnflag",0);
#s10 := s11.join(s18);
	s10 := algebra.join(s11,s18);
#s9 := s10.group();
	(h,s9) := group.new(s10);
#s20 := user.bind("sys",  "lineitem", "l_linestatus"); #lineitem
	s20:bat[:void,:chr] := user.bind("sys","lineitem","l_linestatus",0);
#s19 := s11.join(s20);
	s19 := algebra.join(s11,s20);
#s8 := s9.group(s19);
	(h2,s8) := group.derive(s9,s19);
#s7 := s8.tunique().mirror();
	ea_a := algebra.tunique(s8,);
	s7 := bat.mirror(ea_a,);
#s6 := s7.join(s11);
	s6 := algebra.join(s7,s11);
#s5 := s6.join(s18);
	s5 := algebra.join(s6,s18);
#s4 := s5.reverse().sort().reverse();
	fa_a := bat.reverse(s5,);
	ga_a := algebra.sort(fa_a,);
	s4 := bat.reverse(ga_a,);
#s22 := s7.join(s11);
	s22 := algebra.join(s7,s11);
#s21 := s22.join(s20);
	s21 := algebra.join(s22,s20);
#s3 := s4.CTrefine(s21);
	s3 := group.refine(s4,s21);
#s25 := s11.join(s18);
	s25 := algebra.join(s11,s18);
#s24 := s7.join(s25);
	s24 := algebra.join(s7,s25);
#s27 := s11.join(s20);
	s27 := algebra.join(s11,s20);
#s26 := s7.join(s27);
	s26 := algebra.join(s7,s27);
#s31 := user.bind("sys",  "lineitem", "l_quantity"); #lineitem
	s31:bat[:void,:int] := user.bind("sys","lineitem","l_quantity",0);
#s30 := s11.join(s31);
	s30 := algebra.join(s11,s31);
#s29 := {sum}(s30, s8, s7);
	s29 := group.sum(s30,s8);
#s35 := user.bind("sys",  "lineitem", "l_extendedprice"); #lineitem
	s35:bat[:void,:int] := user.bind("sys","lineitem","l_extendedprice",0);
#s34 := s11.join(s35);
	s34 := algebra.join(s11,s35);
#s33 := {sum}(s34, s8, s7);
	s33 := group.sum(s34,s8);
#s39 := s11.join(s35);
	s39 := algebra.join(s11,s35);
#s42 := 1;
	s42 := 1;
#s41 := flt(s42);
	s41 := calc.flt(s42);
#s44 := user.bind("sys",  "lineitem", "l_discount"); #lineitem
	s44:bat[:void,:int] := user.bind("sys","lineitem","l_discount",0);
#s43 := s11.join(s44);
	s43 := algebra.join(s11,s44);
#s45 := [s43 ~ s41];
	ha_a:= batcalc.init(s43,s41);
	s45 := ha_a;
#s40 := [-](s45,s43);
	s40 := batcalc.-(s45,s43);
#s38 := [*](s39,s40);
	s38 := batcalc.*(s39,s40);
#s37 := {sum}(s38, s8, s7);
	s37 := group.sum(s38,s8);
#s50 := s11.join(s35);
	s50 := algebra.join(s11,s35);
#s53 := 1;
	s53 := 1;
#s52 := flt(s53);
	s52 := calc.flt(s53);
#s54 := s11.join(s44);
	s54 := algebra.join(s11,s44);
#s55 := [s54 ~ s52];
	ia_a:= batcalc.init(s54,s52);
	s55 := ia_a;
#s51 := [-](s55,s54);
	s51 := batcalc.-(s55,s54);
#s49 := [*](s50,s51);
	s49 := batcalc.*(s50,s51);
#s58 := 1;
	s58 := 1;
#s57 := flt(s58);
	s57 := calc.flt(s58);
#s60 := user.bind("sys",  "lineitem", "l_tax"); #lineitem
	s60:bat[:void,:int] := user.bind("sys","lineitem","l_tax",0);
#s59 := s11.join(s60);
	s59 := algebra.join(s11,s60);
#s61 := [s59 ~ s57];
	ja_a:= batcalc.init(s59,s57);
	s61 := ja_a;
#s56 := [+](s61,s59);
	s56 := batcalc.+(s61,s59);
#s48 := [*](s49,s56);
	s48 := batcalc.*(s49,s56);
#s47 := {sum}(s48, s8, s7);
	s47 := group.sum(s48,s8);
#s64 := s11.join(s31);
	s64 := algebra.join(s11,s31);
#s63 := {avg}(s64, s8, s7);
	s63 := group.avg(s64,s8);
#s67 := s11.join(s35);
	s67 := algebra.join(s11,s35);
#s66 := {avg}(s67, s8, s7);
	s66 := group.avg(s67,s8);
#s70 := s11.join(s44);
	s70 := algebra.join(s11,s44);
#s69 := {avg}(s70, s8, s7);
	s69 := group.avg(s70,s8);
#s72 := {count}(s8, s8, s7);
#	s72 := group.count(s8,s8);
io.print(s64,s67,s66,s70,s69);
