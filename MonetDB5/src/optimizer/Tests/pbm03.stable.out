stdout of test 'pbm03` in directory 'src/optimizer` itself:


# 18:21:49 >  
# 18:21:49 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=34781 --set sql_port=41829 --set xquery_port=53534 --set monet_prompt= --trace --dbname=mTests_src_optimizer  pbm03.mal < /dev/null
# 18:21:49 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## use a group to expand
#    mdb.list();
#	pbm.open();
#    b:bat[:void,:int] := mat.expand("Sales2005");
#    s := algebra.select(b,0,2);
#    i := aggr.count(s);
#    io.print(s);
#    io.print(i);
#    c0 := bat.new(:int,:int);
#    bat.insert(c0,0,4);
#    c1 := bat.new(:int,:int);
#    bat.insert(c1,1,5);
#    c := mat.new(c0,c1);
#    bat.insert(c,1,6);
#    j := algebra.join(b,c);
#    io.print(j);
#io.print(b);
#io.print(c);
#
#optimizer.multitable();
#
function user.main():void;	# 0  (main:void)
# use a group to expand 	# 1  (_1:str)
    mdb.list();	# 2 MDBlist (_2:void)
    pbm.open();	# 3 PBMopen (_3:void)
    b:bat[:void,:int]  := mat.expand("Sales2005");	# 4 MATdummy (b:bat[:void,:int])<-(_5:str)
    _31 := bbp.bind("tmp_4");	# 5 CMDbbpbind (_31:bat[:void,:int])<-(_32:str)
    _33 := bbp.bind("tmp_5");	# 6 CMDbbpbind (_33:bat[:void,:int])<-(_34:str)
    _35 := bbp.bind("tmp_6");	# 7 CMDbbpbind (_35:bat[:void,:int])<-(_36:str)
    b:bat[:void,:int]  := mat.new(_31,_33,_35);	# 8 MATnew (b:bat[:void,:int])<-(_31:bat[:void,:int])(_33:bat[:void,:int])(_35:bat[:void,:int])
    _37 := algebra.select(_31,0,2);	# 9 ALGselect (_37:bat[:void,:int])<-(_31:bat[:void,:int])(_7:int)(_8:int)
    _38 := algebra.select(_33,0,2);	# 10 ALGselect (_38:bat[:void,:int])<-(_33:bat[:void,:int])(_7:int)(_8:int)
    _39 := algebra.select(_35,0,2);	# 11 ALGselect (_39:bat[:void,:int])<-(_35:bat[:void,:int])(_7:int)(_8:int)
    s := mat.new(_37,_38,_39);	# 12 MATnew (s:bat[:void,:int])<-(_37:bat[:void,:int])(_38:bat[:void,:int])(_39:bat[:void,:int])
    i := 0;	# 13  (i:int)<-(_7:int)
    _40 := aggr.count(_37);	# 14 ALGcount_bat (_40:int)<-(_37:bat[:void,:int])
    i := calc.+(i,_40);	# 15 CALCbinaryADDintint (i:int)<-(i:int)(_40:int)
    _41 := aggr.count(_38);	# 16 ALGcount_bat (_41:int)<-(_38:bat[:void,:int])
    i := calc.+(i,_41);	# 17 CALCbinaryADDintint (i:int)<-(i:int)(_41:int)
    _42 := aggr.count(_39);	# 18 ALGcount_bat (_42:int)<-(_39:bat[:void,:int])
    i := calc.+(i,_42);	# 19 CALCbinaryADDintint (i:int)<-(i:int)(_42:int)
    s := mat.pack(_37,_38,_39);	# 20 MATpack (s:bat[:void,:int])<-(_37:bat[:void,:int])(_38:bat[:void,:int])(_39:bat[:void,:int])
    io.print(s);	# 21 IOprint_val (_10:int)<-(s:bat[:void,:int])
    io.print(i);	# 22 IOprint_val (_11:int)<-(i:int)
    c0 := bat.new(:int,:int);	# 23 CMDBATnew (c0:bat[:int,:int])<-(_13:int)(_14:int)
    bat.insert(c0,0,4);	# 24 BKCinsert_bun_int_int (_15:void)<-(c0:bat[:int,:int])(_7:int)(_16:int)
    c1 := bat.new(:int,:int);	# 25 CMDBATnew (c1:bat[:int,:int])<-(_18:int)(_19:int)
    bat.insert(c1,1,5);	# 26 BKCinsert_bun_int_int (_20:void)<-(c1:bat[:int,:int])(_21:int)(_22:int)
    c := mat.new(c0,c1);	# 27 MATnew (c:bat[:int,:int])<-(c0:bat[:int,:int])(c1:bat[:int,:int])
    bat.insert(c1,1,6);	# 28 BKCinsert_bun_int_int (_24:void)<-(c1:bat[:int,:int])(_21:int)(_25:int)
    b:bat[:void,:int]  := mat.pack(_31,_33,_35);	# 29 MATpack (b:bat[:void,:int])<-(_31:bat[:void,:int])(_33:bat[:void,:int])(_35:bat[:void,:int])
    _43 := algebra.join(b,c0);	# 30 ALGjoin (_43:bat[:void,:int])<-(b:bat[:void,:int])(c0:bat[:int,:int])
    _44 := algebra.join(b,c1);	# 31 ALGjoin (_44:bat[:void,:int])<-(b:bat[:void,:int])(c1:bat[:int,:int])
    j := mat.new(_43,_44);	# 32 MATnew (j:bat[:void,:int])<-(_43:bat[:void,:int])(_44:bat[:void,:int])
    j := mat.pack(_43,_44);	# 33 MATpack (j:bat[:void,:int])<-(_43:bat[:void,:int])(_44:bat[:void,:int])
    io.print(j);	# 34 IOprint_val (_27:int)<-(j:bat[:void,:int])
    io.print(b);	# 35 IOprint_val (_28:int)<-(b:bat[:void,:int])
    c := mat.pack(c0,c1);	# 36 MATpack (c:bat[:int,:int])<-(c0:bat[:int,:int])(c1:bat[:int,:int])
    io.print(c);	# 37 IOprint_val (_29:int)<-(c:bat[:int,:int])
end main;	# 38  
function user.main():void;
# use a group to expand 
    mdb.list();
    pbm.open();
    b:bat[:void,:int]  := mat.expand("Sales2005");
    _31 := bbp.bind("tmp_4");
    _33 := bbp.bind("tmp_5");
    _35 := bbp.bind("tmp_6");
    b:bat[:void,:int]  := mat.new(_31,_33,_35);
    _37 := algebra.select(_31,0,2);
    _38 := algebra.select(_33,0,2);
    _39 := algebra.select(_35,0,2);
    s := mat.new(_37,_38,_39);
    i := 0;
    _40 := aggr.count(_37);
    i := calc.+(i,_40);
    _41 := aggr.count(_38);
    i := calc.+(i,_41);
    _42 := aggr.count(_39);
    i := calc.+(i,_42);
    s := mat.pack(_37,_38,_39);
    io.print(s);
    io.print(i);
    c0 := bat.new(:int,:int);
    bat.insert(c0,0,4);
    c1 := bat.new(:int,:int);
    bat.insert(c1,1,5);
    c := mat.new(c0,c1);
    bat.insert(c1,1,6);
    b:bat[:void,:int]  := mat.pack(_31,_33,_35);
    _43 := algebra.join(b,c0);
    _44 := algebra.join(b,c1);
    j := mat.new(_43,_44);
    j := mat.pack(_43,_44);
    io.print(j);
    io.print(b);
    c := mat.pack(c0,c1);
    io.print(c);
end main;
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0 ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0,	  4	  ]
[ 1,	  5	  ]
[ 1,	  6	  ]

# 18:21:49 >  
# 18:21:49 >  Done.
# 18:21:49 >  

