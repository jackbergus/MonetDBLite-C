stdout of test 'generator00` in directory 'src/optimizer` itself:


# 23:13:00 >  
# 23:13:00 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=32517 --set sql_port=42566 --set xquery_port=56714 --set monet_prompt= --trace --dbname=mTests_src_optimizer  generator00.mal < /dev/null
# 23:13:00 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
## the generator optimizer
## this test shows the basics.
#mdb.list();
#	io.print("start");
#	b:bat[:void,:int]:= pbm.generator("Sales2005");
#	s:= algebra.select(b,0,3);
#	t:= algebra.select(s,0,2);
#	io.print("finished");
#optimizer.generators();
#
#
function user.main():void;	# 0  (main:void)
# the generator optimizer 	# 1  (_1:str)
# this test shows the basics. 	# 2  (_2:str)
    mdb.list();	# 3 MDBlist (_3:void)
    io.print("start");	# 4 IOprint_val (_4:void)<-(_5:str)
barrier b:bat[:void,:int]  := pbm.newIterator("Sales2005");	# 5 PBMnewIterator (b:bat[:void,:int])<-(_7:str) jump 9
    s := algebra.select(b,0,3);	# 6 ALGselect (s:bat[:oid,:int])<-(b:bat[:void,:int])(_9:int)(_10:int)
    t := algebra.select(s,0,2);	# 7 ALGselect (t:bat[:oid,:int])<-(s:bat[:oid,:int])(_9:int)(_12:int)
    redo b:bat[:void,:int]  := pbm.getNextElement("Sales2005");	# 8 PBMgetNextElement (b:bat[:void,:int])<-(_7:str) jump 6
exit b:bat[:void,:int] ;	# 9  (b:bat[:void,:int])
    io.print("finished");	# 10 IOprint_val (_13:void)<-(_14:str)
end main;	# 11  
function user.main():void;
# the generator optimizer 
# this test shows the basics. 
    mdb.list();
    io.print("start");
barrier b:bat[:void,:int]  := pbm.newIterator("Sales2005");
    s := algebra.select(b,0,3);
    t := algebra.select(s,0,2);
    redo b:bat[:void,:int]  := pbm.getNextElement("Sales2005");
exit b:bat[:void,:int] ;
    io.print("finished");
end main;
[ "start" ]
!ERROR: MALexception:pbm.newIterator:Could not find PBAT

# 23:13:00 >  
# 23:13:00 >  Done.
# 23:13:00 >  

