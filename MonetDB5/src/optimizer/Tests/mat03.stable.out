stdout of test 'mat03` in directory 'src/optimizer` itself:


# 22:52:23 >  
# 22:52:23 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=32255 --set sql_port=41881 --set xquery_port=57613 --set monet_prompt= --trace --dbname=mTests_src_optimizer  mat03.mal < /dev/null
# 22:52:23 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
##select * from t,s where t.i=s.j;
#
#mdb.list();
##   v2:bat[:void,:int]  := sql.bind("sys","t","i",0);
#	v2v0:= bat.new(:void,:int);
#    bat.insert(v2v0,nil,0);
#    v2v1:= bat.new(:void,:int);
#    bat.insert(v2v1,nil,1);
#	v2:= mat.new(v2v0,v2v1);
#
##   v14:bat[:void,:int]  := sql.bind("sys","s","j",0);
#    v14v0:= bat.new(:void,:int);
#    bat.insert(v14v0,nil,0);
#    v14v1:= bat.new(:void,:int);
#    bat.insert(v14v1,nil,1);
#	v14:= mat.new(v14v0,v14v1);
#
#
##   v8:bat[:void,:oid]  := sql.bindvdbat("sys","t",0);
#	v8:= bat.new(:void,:oid);
#    v10 := bat.reverse(v8);
#    v12 := algebra.kdifference(v2,v10);
#
##   v18:bat[:void,:oid]  := sql.bindvdbat("sys","s",0);
#	v18:= bat.new(:void,:oid);
#
#    v20 := bat.reverse(v18);
#    v22 := algebra.kdifference(v14,v20);
#    v24 := bat.reverse(v22);
#    v26 := algebra.join(v12,v24);
#    v31 := algebra.markT(v26,0@0);
#    v33 := bat.reverse(v31);
#    v35 := algebra.join(v33,v2);
#    v37 := bat.reverse(v26);
#    v41 := algebra.markT(v37,0@0);
#    v43 := bat.reverse(v41);
#    v45 := algebra.join(v43,v14);
##   v47 := sql.resultSet(2,3,v35);
##   sql.rsColumn(v47,"t","i","int",32,0,v35);
##   sql.rsColumn(v47,"s","j","int",32,0,v45);
##   sql.exportResult(v47);
#
#	io.print(v35,v45);
#optimizer.multitable();
#
function user.main():void;	# 0  (main:void)
#select * from t,s where t.i=s.j; 	# 1  (_2:str)
    mdb.list();	# 2 MDBlist (_3:void)
#   v2:bat[:void,:int]  := sql.bind("sys","t","i",0); 	# 3  (_5:str)
    v2v0 := bat.new(:void,:int);	# 4 CMDBATnew (v2v0:bat[:void,:int])<-(_7:void)(_8:int)
    bat.insert(v2v0,nil,0);	# 5 BKCinsert_bun (_9:void)<-(v2v0:bat[:void,:int])(_10:void)(_11:int)
    v2v1 := bat.new(:void,:int);	# 6 CMDBATnew (v2v1:bat[:void,:int])<-(_7:void)(_8:int)
    bat.insert(v2v1,nil,1);	# 7 BKCinsert_bun (_13:void)<-(v2v1:bat[:void,:int])(_10:void)(_14:int)
    v2 := mat.new(v2v0,v2v1);	# 8 MATnew (v2:bat[:void,:int])<-(v2v0:bat[:void,:int])(v2v1:bat[:void,:int])
#   v14:bat[:void,:int]  := sql.bind("sys","s","j",0); 	# 9  (_17:str)
    v14v0 := bat.new(:void,:int);	# 10 CMDBATnew (v14v0:bat[:void,:int])<-(_7:void)(_8:int)
    bat.insert(v14v0,nil,0);	# 11 BKCinsert_bun (_19:void)<-(v14v0:bat[:void,:int])(_10:void)(_11:int)
    v14v1 := bat.new(:void,:int);	# 12 CMDBATnew (v14v1:bat[:void,:int])<-(_7:void)(_8:int)
    bat.insert(v14v1,nil,1);	# 13 BKCinsert_bun (_21:void)<-(v14v1:bat[:void,:int])(_10:void)(_14:int)
    v14 := mat.new(v14v0,v14v1);	# 14 MATnew (v14:bat[:void,:int])<-(v14v0:bat[:void,:int])(v14v1:bat[:void,:int])
#   v8:bat[:void,:oid]  := sql.bindvdbat("sys","t",0); 	# 15  (_24:str)
    v8 := bat.new(:void,:oid);	# 16 CMDBATnew (v8:bat[:void,:oid])<-(_7:void)(_26:oid)
    v10 := bat.reverse(v8);	# 17 BKCreverse (v10:bat[:oid,:void])<-(v8:bat[:void,:oid])
    _54 := algebra.kdifference(v2v0,v10);	# 18 ALGkdiff (_54:bat[:oid,:int])<-(v2v0:bat[:void,:int])(v10:bat[:oid,:void])
    _55 := algebra.kdifference(v2v1,v10);	# 19 ALGkdiff (_55:bat[:oid,:int])<-(v2v1:bat[:void,:int])(v10:bat[:oid,:void])
    v12 := mat.new(_54,_55);	# 20 MATnew (v12:bat[:oid,:int])<-(_54:bat[:oid,:int])(_55:bat[:oid,:int])
#   v18:bat[:void,:oid]  := sql.bindvdbat("sys","s",0); 	# 21  (_30:str)
    v18 := bat.new(:void,:oid);	# 22 CMDBATnew (v18:bat[:void,:oid])<-(_7:void)(_26:oid)
    v20 := bat.reverse(v18);	# 23 BKCreverse (v20:bat[:oid,:void])<-(v18:bat[:void,:oid])
    _56 := algebra.kdifference(v14v0,v20);	# 24 ALGkdiff (_56:bat[:oid,:int])<-(v14v0:bat[:void,:int])(v20:bat[:oid,:void])
    _57 := algebra.kdifference(v14v1,v20);	# 25 ALGkdiff (_57:bat[:oid,:int])<-(v14v1:bat[:void,:int])(v20:bat[:oid,:void])
    v22 := mat.new(_56,_57);	# 26 MATnew (v22:bat[:oid,:int])<-(_56:bat[:oid,:int])(_57:bat[:oid,:int])
    _58 := bat.reverse(_56);	# 27 BKCreverse (_58:bat[:int,:oid])<-(_56:bat[:oid,:int])
    _59 := bat.reverse(_57);	# 28 BKCreverse (_59:bat[:int,:oid])<-(_57:bat[:oid,:int])
    v24 := mat.new(_58,_59);	# 29 MATnew (v24:bat[:int,:oid])<-(_58:bat[:int,:oid])(_59:bat[:int,:oid])
    v12 := mat.pack(_54,_55);	# 30 MATpack (v12:bat[:oid,:int])<-(_54:bat[:oid,:int])(_55:bat[:oid,:int])
    _60 := algebra.join(v12,_58);	# 31 ALGjoin (_60:bat[:oid,:oid])<-(v12:bat[:oid,:int])(_58:bat[:int,:oid])
    _61 := algebra.join(v12,_59);	# 32 ALGjoin (_61:bat[:oid,:oid])<-(v12:bat[:oid,:int])(_59:bat[:int,:oid])
    v26 := mat.new(_60,_61);	# 33 MATnew (v26:bat[:oid,:oid])<-(_60:bat[:oid,:oid])(_61:bat[:oid,:oid])
    _62 := algebra.markT(_60,0@0);	# 34 ALGtmark (_62:bat[:oid,:void])<-(_60:bat[:oid,:oid])(_37:oid)
    _63 := algebra.markT(_61,0@0);	# 35 ALGtmark (_63:bat[:oid,:void])<-(_61:bat[:oid,:oid])(_37:oid)
    v31 := mat.new(_62,_63);	# 36 MATnew (v31:bat[:oid,:void])<-(_62:bat[:oid,:void])(_63:bat[:oid,:void])
    _64 := bat.reverse(_62);	# 37 BKCreverse (_64:bat[:void,:oid])<-(_62:bat[:oid,:void])
    _65 := bat.reverse(_63);	# 38 BKCreverse (_65:bat[:void,:oid])<-(_63:bat[:oid,:void])
    v33 := mat.new(_64,_65);	# 39 MATnew (v33:bat[:void,:oid])<-(_64:bat[:void,:oid])(_65:bat[:void,:oid])
    v33 := mat.pack(_64,_65);	# 40 MATpack (v33:bat[:void,:oid])<-(_64:bat[:void,:oid])(_65:bat[:void,:oid])
    _66 := algebra.join(v33,v2v0);	# 41 ALGjoin (_66:bat[:void,:int])<-(v33:bat[:void,:oid])(v2v0:bat[:void,:int])
    _67 := algebra.join(v33,v2v1);	# 42 ALGjoin (_67:bat[:void,:int])<-(v33:bat[:void,:oid])(v2v1:bat[:void,:int])
    v35 := mat.new(_66,_67);	# 43 MATnew (v35:bat[:void,:int])<-(_66:bat[:void,:int])(_67:bat[:void,:int])
    _68 := bat.reverse(_60);	# 44 BKCreverse (_68:bat[:oid,:oid])<-(_60:bat[:oid,:oid])
    _69 := bat.reverse(_61);	# 45 BKCreverse (_69:bat[:oid,:oid])<-(_61:bat[:oid,:oid])
    v37 := mat.new(_68,_69);	# 46 MATnew (v37:bat[:oid,:oid])<-(_68:bat[:oid,:oid])(_69:bat[:oid,:oid])
    _70 := algebra.markT(_68,0@0);	# 47 ALGtmark (_70:bat[:oid,:void])<-(_68:bat[:oid,:oid])(_37:oid)
    _71 := algebra.markT(_69,0@0);	# 48 ALGtmark (_71:bat[:oid,:void])<-(_69:bat[:oid,:oid])(_37:oid)
    v41 := mat.new(_70,_71);	# 49 MATnew (v41:bat[:oid,:void])<-(_70:bat[:oid,:void])(_71:bat[:oid,:void])
    _72 := bat.reverse(_70);	# 50 BKCreverse (_72:bat[:void,:oid])<-(_70:bat[:oid,:void])
    _73 := bat.reverse(_71);	# 51 BKCreverse (_73:bat[:void,:oid])<-(_71:bat[:oid,:void])
    v43 := mat.new(_72,_73);	# 52 MATnew (v43:bat[:void,:oid])<-(_72:bat[:void,:oid])(_73:bat[:void,:oid])
    v43 := mat.pack(_72,_73);	# 53 MATpack (v43:bat[:void,:oid])<-(_72:bat[:void,:oid])(_73:bat[:void,:oid])
    _74 := algebra.join(v43,v14v0);	# 54 ALGjoin (_74:bat[:void,:int])<-(v43:bat[:void,:oid])(v14v0:bat[:void,:int])
    _75 := algebra.join(v43,v14v1);	# 55 ALGjoin (_75:bat[:void,:int])<-(v43:bat[:void,:oid])(v14v1:bat[:void,:int])
    v45 := mat.new(_74,_75);	# 56 MATnew (v45:bat[:void,:int])<-(_74:bat[:void,:int])(_75:bat[:void,:int])
#   v47 := sql.resultSet(2,3,v35); 	# 57  (_45:str)
#   sql.rsColumn(v47,"t","i","int",32,0,v35); 	# 58  (_47:str)
#   sql.rsColumn(v47,"s","j","int",32,0,v45); 	# 59  (_49:str)
#   sql.exportResult(v47); 	# 60  (_51:str)
    v35 := mat.pack(_66,_67);	# 61 MATpack (v35:bat[:void,:int])<-(_66:bat[:void,:int])(_67:bat[:void,:int])
    v45 := mat.pack(_74,_75);	# 62 MATpack (v45:bat[:void,:int])<-(_74:bat[:void,:int])(_75:bat[:void,:int])
    io.print(v35,v45);	# 63 IOtable (_52:int)<-(v35:bat[:void,:int])(v45:bat[:void,:int])
end main;	# 64  
function user.main():void;
#select * from t,s where t.i=s.j; 
    mdb.list();
#   v2:bat[:void,:int]  := sql.bind("sys","t","i",0); 
    v2v0 := bat.new(:void,:int);
    bat.insert(v2v0,nil,0);
    v2v1 := bat.new(:void,:int);
    bat.insert(v2v1,nil,1);
    v2 := mat.new(v2v0,v2v1);
#   v14:bat[:void,:int]  := sql.bind("sys","s","j",0); 
    v14v0 := bat.new(:void,:int);
    bat.insert(v14v0,nil,0);
    v14v1 := bat.new(:void,:int);
    bat.insert(v14v1,nil,1);
    v14 := mat.new(v14v0,v14v1);
#   v8:bat[:void,:oid]  := sql.bindvdbat("sys","t",0); 
    v8 := bat.new(:void,:oid);
    v10 := bat.reverse(v8);
    _54 := algebra.kdifference(v2v0,v10);
    _55 := algebra.kdifference(v2v1,v10);
    v12 := mat.new(_54,_55);
#   v18:bat[:void,:oid]  := sql.bindvdbat("sys","s",0); 
    v18 := bat.new(:void,:oid);
    v20 := bat.reverse(v18);
    _56 := algebra.kdifference(v14v0,v20);
    _57 := algebra.kdifference(v14v1,v20);
    v22 := mat.new(_56,_57);
    _58 := bat.reverse(_56);
    _59 := bat.reverse(_57);
    v24 := mat.new(_58,_59);
    v12 := mat.pack(_54,_55);
    _60 := algebra.join(v12,_58);
    _61 := algebra.join(v12,_59);
    v26 := mat.new(_60,_61);
    _62 := algebra.markT(_60,0@0);
    _63 := algebra.markT(_61,0@0);
    v31 := mat.new(_62,_63);
    _64 := bat.reverse(_62);
    _65 := bat.reverse(_63);
    v33 := mat.new(_64,_65);
    v33 := mat.pack(_64,_65);
    _66 := algebra.join(v33,v2v0);
    _67 := algebra.join(v33,v2v1);
    v35 := mat.new(_66,_67);
    _68 := bat.reverse(_60);
    _69 := bat.reverse(_61);
    v37 := mat.new(_68,_69);
    _70 := algebra.markT(_68,0@0);
    _71 := algebra.markT(_69,0@0);
    v41 := mat.new(_70,_71);
    _72 := bat.reverse(_70);
    _73 := bat.reverse(_71);
    v43 := mat.new(_72,_73);
    v43 := mat.pack(_72,_73);
    _74 := algebra.join(v43,v14v0);
    _75 := algebra.join(v43,v14v1);
    v45 := mat.new(_74,_75);
#   v47 := sql.resultSet(2,3,v35); 
#   sql.rsColumn(v47,"t","i","int",32,0,v35); 
#   sql.rsColumn(v47,"s","j","int",32,0,v45); 
#   sql.exportResult(v47); 
    v35 := mat.pack(_66,_67);
    v45 := mat.pack(_74,_75);
    io.print(v35,v45);
end main;
#-------------------------#
# h	t	t	  # name
# void	int	int	  # type
#-------------------------#

# 22:52:23 >  
# 22:52:23 >  Done.
# 22:52:23 >  

