stdout of test 'remote00` in directory 'src/optimizer` itself:


# 23:06:19 >  
# 23:06:19 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=30126 --set monet_prompt= --trace --dbname=mTests_src_optimizer  remote00.mal < /dev/null
# 23:06:19 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information
#mid:= mserver.reconnect("s0_0","localhost",50000,"monetdb","monetdb","mal");
#mserver.rpc(mid,"rb:= bat.new(:int,:int); bat.setName(rb,\"rbat\"); bat.insert(rb,1,1);");
#
#b:bat[:int,:int] := mserver.bind(mid,"rbat");
#c:=algebra.select(b,0,12);
#io.print(c);
#d:=algebra.select(b,5,10);
#low:= 5+1;
#e:=algebra.select(d,low,7);
#i:=aggr.count(e);
#io.printf(" count %d\n",i);
#io.print(d);
#optimizer.remoteQueries();
#
function user.main():void;	# 0  (main:void)
    mid := mserver.reconnect("s0_0","localhost",50000,"monetdb","monetdb","mal");	# 1 SERVERreconnectAlias (mid:int)<-(_2:str)(_3:str)(_4:int)(_5:str)(_5:str)(_6:str)
    mserver.rpc(mid,"rb:= bat.new(:int,:int); bat.setName(rb,\"rbat\"); bat.insert(rb,1,1);bat.insert(rb,2,7);");	# 2 SERVERquery (_7:void)<-(mid:int)(_8:str)
    b:bat[:int,:int]  := mserver.bind(mid,"rbat");	# 3 SERVERbindBAT (b:bat[:int,:int])<-(mid:int)(_10:str)
    _30 := mserver.put("X12",0);	# 4 SERVERputLocal (_30:str)<-(_31:str)(_12:int)
    _34 := mserver.put("X13",12);	# 5 SERVERputLocal (_34:str)<-(_35:str)(_13:int)
    mserver.rpc(mid,_30,_34,"    c := algebra.select(b,X12,X13);");	# 6 SERVERmapi_rpc_single_row (_27:void)<-(mid:int)(_30:str)(_34:str)(_36:str)
    c := mserver.rpc(mid,"io.print(c);");	# 7 SERVERmapi_rpc_bat (c:bat[:int,:int])<-(mid:int)(_39:str)
    io.print(c);	# 8 IOprint_val (_14:int)<-(c:bat[:int,:int])
    _43 := mserver.put("X16",5);	# 9 SERVERputLocal (_43:str)<-(_44:str)(_16:int)
    _47 := mserver.put("X17",10);	# 10 SERVERputLocal (_47:str)<-(_48:str)(_17:int)
    mserver.rpc(mid,_43,_47,"    d := algebra.select(b,X16,X17);");	# 11 SERVERmapi_rpc_single_row (_40:void)<-(mid:int)(_43:str)(_47:str)(_49:str)
    low := calc.+(5,1);	# 12 CALCbinaryADDintint (low:int)<-(_16:int)(_19:int)
    _53 := mserver.put("low",low);	# 13 SERVERputLocal (_53:str)<-(_54:str)(low:int)
    _57 := mserver.put("X21",7);	# 14 SERVERputLocal (_57:str)<-(_58:str)(_21:int)
    mserver.rpc(mid,_53,_57,"    e := algebra.select(d,low,X21);");	# 15 SERVERmapi_rpc_single_row (_50:void)<-(mid:int)(_53:str)(_57:str)(_59:str)
    mserver.rpc(mid,"    i := aggr.count(e);");	# 16 SERVERquery (_60:void)<-(mid:int)(_61:str)
    i := mserver.rpc(mid,"io.print(i);");	# 17 SERVERmapi_rpc_single_row (i:int)<-(mid:int)(_64:str)
    io.printf(" count %d\n",i);	# 18 IOprint_formatted_int (_23:int)<-(_24:str)(i:int)
    d := mserver.rpc(mid,"io.print(d);");	# 19 SERVERmapi_rpc_bat (d:bat[:int,:int])<-(mid:int)(_67:str)
    io.print(d);	# 20 IOprint_val (_25:int)<-(d:bat[:int,:int])
end main;	# 21  
!ERROR: MALException: Could not connect: Setup connection failed
!ERROR:     at mserver.connect(mserver.mx:1204)

# 23:06:19 >  
# 23:06:19 >  Done.
# 23:06:19 >  

