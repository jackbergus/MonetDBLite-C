stdout of test 'qep01` in directory 'src/optimizer` itself:


# 18:42:45 >  
# 18:42:45 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=32834 --set sql_port=44108 --set xquery_port=52561 --set monet_prompt= --trace --dbname=mTests_src_optimizer  qep01.mal </dev/null
# 18:42:45 >  

# Monet Database Server V4.99.19
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 32bit OIDs; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_optimizer
# Visit http://monetdb.cwi.nl/ for further information.
#T1:= bbp.new(:int,:int);
#T2:= bbp.new(:int,:int);
#T3:= bbp.new(:int,:int);
#T4:= bbp.new(:int,:int);
#a:= algebra.select(T1,1,3);
#b:= algebra.select(T2,1,3);
#c:= algebra.select(T3,0,5);
#d:= algebra.select(T4,0,5);
#e:= algebra.join(a,c);
#f:= algebra.join(b,d);
#h:= algebra.join(e,f);
#optimizer.dumpQEP();
#
    h := algebra.join(e,f);
        e := algebra.join(a,c);
            a := algebra.select(T1,1,3);
                T1 := bat.new(:int,:int);
            c := algebra.select(T3,0,5);
                T3 := bat.new(:int,:int);
        f := algebra.join(b,d);
            b := algebra.select(T2,1,3);
                T2 := bat.new(:int,:int);
            d := algebra.select(T4,0,5);
                T4 := bat.new(:int,:int);
function user.main():void;              #  0 main:void := user.main() {G}
    T1 := bat.new(:int,:int);           #  1 T1:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    T2 := bat.new(:int,:int);           #  2 T2:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    T3 := bat.new(:int,:int);           #  3 T3:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    T4 := bat.new(:int,:int);           #  4 T4:bat[:int,:int] := CMDBATnew(_2:int, _2:int) {G}
    a := algebra.select(T1,1,3);        #  5 a:bat[:int,:int] := ALGselect(T1:bat[:int,:int], _7:int, _8:int) {G}
    b := algebra.select(T2,1,3);        #  6 b:bat[:int,:int] := ALGselect(T2:bat[:int,:int], _7:int, _8:int) {G}
    c := algebra.select(T3,0,5);        #  7 c:bat[:int,:int] := ALGselect(T3:bat[:int,:int], _11:int, _12:int) {G}
    d := algebra.select(T4,0,5);        #  8 d:bat[:int,:int] := ALGselect(T4:bat[:int,:int], _11:int, _12:int) {G}
    e := algebra.join(a,c);             #  9 e:bat[:int,:int] := ALGjoin(a:bat[:int,:int], c:bat[:int,:int]) {G}
    f := algebra.join(b,d);             # 10 f:bat[:int,:int] := ALGjoin(b:bat[:int,:int], d:bat[:int,:int]) {G}
    h := algebra.join(e,f);             # 11 h:bat[:int,:int] := ALGjoin(e:bat[:int,:int], f:bat[:int,:int]) {G}
end main;	# 12  

# 18:42:45 >  
# 18:42:45 >  Done.
# 18:42:45 >  

