@' The contents of this file are subject to the MonetDB Public
@' License Version 1.0 (the "License"); you may not use this file
@' except in compliance with the License. You may obtain a copy of
@' the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.0.html
@'
@' Software distributed under the License is distributed on an "AS
@' IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
@' implied. See the License for the specific language governing
@' rights and limitations under the License.
@'
@' The Original Code is the Monet Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2006 CWI.
@' All Rights Reserved.

@f mal_prelude
@a M. Kersten
These definitions are handy to have around in the optimizer
@h
#ifndef MAL_PRELUDE
#define MAL_PRELUDE
#include "mal_optimizer.h"

opt_export  str aggrRef;
opt_export  str algebraRef;
opt_export  str appendRef;
opt_export  str avgRef;
opt_export  str batRef;
opt_export  str bbpRef;
opt_export  str bindRef;
opt_export  str binddbatRef;
opt_export  str calcRef;
opt_export  str countRef;
opt_export  str crossRef;
opt_export  str deleteRef;
opt_export  str depositRef;
opt_export  str expandRef;
opt_export  str finishRef;
opt_export  str generatorRef;
opt_export  str groupRef;
opt_export  str ioRef;
opt_export  str insertRef;
opt_export  str joinRef;
opt_export  str kdifferenceRef;
opt_export  str kunionRef;
opt_export  str likeselectRef;
opt_export  str markTRef;
opt_export  str matRef;
opt_export  str maxRef;
opt_export  str minRef;
opt_export  str mirrorRef;
opt_export  str newRef;
opt_export  str packRef;
opt_export  str pbmRef;
opt_export  str plusRef;
opt_export  str printRef;
opt_export  str reverseRef;
opt_export  str selectRef;
opt_export  str semijoinRef;
opt_export  str setAccessRef;
opt_export  str setWriteModeRef;
opt_export  str sortRef;
opt_export  str sumRef;
opt_export  str uselectRef;
opt_export  str unpackRef;
opt_export  str unsafeRef;

opt_export void optInit();
#endif
@c
#include "mal_prelude.h"

str aggrRef;
str algebraRef;
str appendRef;
str avgRef;
str batRef;
str bbpRef;
str bindRef;
str binddbatRef;
str calcRef;
str countRef;
str crossRef;
str deleteRef;
str depositRef;
str expandRef;
str finishRef;
str generatorRef;
str groupRef;
str insertRef;
str ioRef;
str joinRef;
str kdifferenceRef;
str kunionRef;
str likeselectRef;
str markTRef;
str matRef;
str maxRef;
str minRef;
str mirrorRef;
str newRef;
str packRef;
str pbmRef;
str plusRef;
str printRef;
str reverseRef;
str selectRef;
str semijoinRef;
str setAccessRef;
str setWriteModeRef;
str sortRef;
str sumRef;
str uselectRef;
str unpackRef;
str unsafeRef;


void optInit(){
	if(batRef == NULL){
		aggrRef = putName("aggr",4);
		algebraRef = putName("algebra",7);
		appendRef = putName("append",6);
		avgRef = putName("avg",3);
		batRef = putName("bat",3);
		bbpRef = putName("bbp",3);
		bindRef = putName("bind",4);
		binddbatRef = putName("bind_dbat",9);
		calcRef = putName("calc",4);
		countRef = putName("count",5);
		crossRef = putName("cross",5);
		deleteRef = putName("delete",6);
		depositRef = putName("deposit",7);
		finishRef = putName("finish",6);
		expandRef = putName("expand",6);
		groupRef = putName("group",5);
		generatorRef = putName("generator",9);
		insertRef = putName("insert",6);
		ioRef = putName("io",2);
		joinRef = putName("join",4);
		kdifferenceRef= putName("kdifference",11);
		kunionRef= putName("kunion",6);
		likeselectRef = putName("likeselect",10);
		markTRef = putName("markT",5);
		matRef = putName("mat",3);
		maxRef = putName("max",3);
		minRef = putName("min",3);
		mirrorRef = putName("mirror",6);
		newRef = putName("new",3);
		packRef = putName("pack",4);
		pbmRef = putName("pbm",3);
		plusRef = putName("+",1);
		printRef = putName("print",5);
		reverseRef = putName("reverse",7);
		selectRef = putName("select",6);
		semijoinRef = putName("semijoin",8);
		setAccessRef = putName("setAccess",9);
		setWriteModeRef= putName("setWriteMode",12);
		sortRef = putName("sort",4);
		sumRef = putName("sum",3);
		uselectRef = putName("uselect",7);
		unpackRef = putName("unpack",6);
		unsafeRef = putName("unsafe",6);
	}
}
