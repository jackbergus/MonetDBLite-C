@' The contents of this file are subject to the MonetDB Public License
@' Version 1.1 (the "License"); you may not use this file except in
@' compliance with the License. You may obtain a copy of the License at
@' http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html
@'
@' Software distributed under the License is distributed on an "AS IS"
@' basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
@' License for the specific language governing rights and limitations
@' under the License.
@'
@' The Original Code is the MonetDB Database System.
@'
@' The Initial Developer of the Original Code is CWI.
@' Portions created by CWI are Copyright (C) 1997-2007 CWI.
@' All Rights Reserved.

@f opt_prelude
@a M. Kersten
These definitions are handy to have around in the optimizer
@h
#ifndef MAL_PRELUDE
#define MAL_PRELUDE
#include "opt_support.h"

opt_export  str aggrRef;
opt_export  str alarmRef;
opt_export  str algebraRef;
opt_export  str appendidxRef;
opt_export  str appendRef;
opt_export  str assertRef;
opt_export  str avgRef;
opt_export  str batcalcRef;
opt_export  str batRef;
opt_export  str batstrRef;
opt_export  str bbpRef;
opt_export  str binddbatRef;
opt_export  str bindidxRef;
opt_export  str bindRef;
opt_export  str bpmRef;
opt_export  str bstreamRef;
opt_export  str calcRef;
opt_export  str columnRef;
opt_export  str constraintsRef;
opt_export  str countRef;
opt_export  str crossRef;
opt_export  str dblRef;
opt_export  str deleteRef;
opt_export  str depositRef;
opt_export  str deriveRef;
opt_export  str differenceRef;
opt_export  str divRef;
opt_export  str disconnectRef;
opt_export  str evalRef;
opt_export  str expandRef;
opt_export  str finishRef;
opt_export  str getRef;
opt_export  str groupRef;
opt_export  str groupbyRef;
opt_export  str hashRef;
opt_export  str identityRef;
opt_export  str inplaceRef;
opt_export  str insertRef;
opt_export  str intRef;
opt_export  str ioRef;
opt_export  str joinRef;
opt_export  str bandjoinRef;
opt_export  str kdifferenceRef;
opt_export  str kunionRef;
opt_export  str languageRef;
opt_export  str likeselectRef;
opt_export  str listRef;
opt_export  str lockRef;
opt_export  str lookupRef;
opt_export  str malRef;
opt_export  str markHRef;
opt_export  str markTRef;
opt_export  str materializeRef;
opt_export  str matRef;
opt_export  str maxRef;
opt_export  str mdbRef;
opt_export  str minRef;
opt_export  str mirrorRef;
opt_export  str mkeyRef;
opt_export  str mmathRef;
opt_export  str mserverRef;
opt_export  str multiplexRef;
opt_export  str newRef;
opt_export  str oidRef;
opt_export  str optimizerRef;
opt_export  str packRef;
opt_export  str plusRef;
opt_export  str printRef;
opt_export  str projectRef;
opt_export  str putRef;
opt_export  str queryRef;
opt_export  str reconnectRef;
opt_export  str remapRef;
opt_export  str replaceRef;
opt_export  str resultSetRef;
opt_export  str reuseRef;
opt_export  str reverseRef;
opt_export  str rpcRef;
opt_export  str rsColumnRef;
opt_export  str selectNotNilRef;
opt_export  str selectRef;
opt_export  str semaRef;
opt_export  str semijoinRef;
opt_export  str setAccessRef;
opt_export  str setWriteModeRef;
opt_export  str sortHRef;
opt_export  str sortHTRef;
opt_export  str sortRef;
opt_export  str sortReverseTailRef;
opt_export  str sortTailRef;
opt_export  str sortTHRef;
opt_export  str sqlRef;
opt_export  str streamsRef;
opt_export  str strRef;
opt_export  str sumRef;
opt_export  str sunionRef;
opt_export  str takeRef;
opt_export  str tuniqueRef;
opt_export  str unionRef;
opt_export  str unpackRef;
opt_export  str updateRef;
opt_export  str uselectRef;

opt_export int canBeCrackedProp;	/* binary */
opt_export int inlineProp;		/* binary */
opt_export int keepProp;		/* binary */
opt_export int notnilProp;		/* binary */
opt_export int rowsProp;		/* long */
opt_export int runonceProp;		/* binary */
opt_export int singletonProp;		/* binary */
opt_export int unsafeProp;		/* binary */

opt_export int stableProp;		/* binary */
opt_export int insertionsProp;		/* binary */
opt_export int updatesProp;		/* binary */
opt_export int deletesProp;		/* binary */

opt_export int hlbProp;			/* any (head lower bound) */
opt_export int hubProp;			/* any (head upper bound) */
opt_export int tlbProp;			/* any (tail lower bound) */
opt_export int tubProp;			/* any (tail upper bound) */

opt_export void optimizerInit(void);
#endif
@c
#include "mal_config.h"
#include "opt_prelude.h"

str aggrRef;
str alarmRef;
str algebraRef;
str appendidxRef;
str appendRef;
str assertRef;
str avgRef;
str batcalcRef;
str batRef;
str batstrRef;
str bbpRef;
str binddbatRef;
str bindidxRef;
str bindRef;
str bpmRef;
str bstreamRef;
str calcRef;
str columnRef;
str constraintsRef;
str countRef;
str crossRef;
str dblRef;
str deleteRef;
str depositRef;
str deriveRef;
str differenceRef;
str divRef;
str disconnectRef;
str evalRef;
str expandRef;
str finishRef;
str getRef;
str groupRef;
str groupbyRef;
str hashRef;
str identityRef;
str inplaceRef;
str insertRef;
str intRef;
str ioRef;
str joinRef;
str bandjoinRef;
str kdifferenceRef;
str kunionRef;
str languageRef;
str likeselectRef;
str listRef;
str lockRef;
str lookupRef;
str malRef;
str markHRef;
str markTRef;
str materializeRef;
str matRef;
str maxRef;
str mdbRef;
str minRef;
str mirrorRef;
str mkeyRef;
str mmathRef;
str mserverRef;
str multiplexRef;
str newRef;
str oidRef;
str optimizerRef;
str packRef;
str plusRef;
str printRef;
str projectRef;
str putRef;
str queryRef;
str reconnectRef;
str remapRef;
str replaceRef;
str resultSetRef;
str reuseRef;
str reverseRef;
str rpcRef;
str rsColumnRef;
str selectNotNilRef;
str selectRef;
str semaRef;
str semijoinRef;
str setAccessRef;
str setWriteModeRef;
str sortHRef;
str sortHTRef;
str sortRef;
str sortReverseTailRef;
str sortTailRef;
str sortTHRef;
str sqlRef;
str streamsRef;
str strRef;
str sumRef;
str sunionRef;
str takeRef;
str tuniqueRef;
str unionRef;
str unpackRef;
str updateRef;
str uselectRef;

int canBeCrackedProp;
int inlineProp;
int keepProp;
int notnilProp;
int rowsProp;
int runonceProp;
int singletonProp;
int unsafeProp;

int stableProp;	
int insertionsProp;
int updatesProp;
int deletesProp;

int hlbProp;
int hubProp;
int tlbProp;
int tubProp;

void optimizerInit(){
	if(batRef == NULL){
		aggrRef = putName("aggr",4);
		alarmRef = putName("alarm",5);
		algebraRef = putName("algebra",7);
		appendidxRef = putName("append_idxbat",13);
		appendRef = putName("append",6);
		assertRef = putName("assert",6);
		avgRef = putName("avg",3);
		batcalcRef = putName("batcalc",7);
		batRef = putName("bat",3);
		batstrRef = putName("batstr",6);
		bbpRef = putName("bbp",3);
		binddbatRef = putName("bind_dbat",9);
		bindidxRef = putName("bind_idxbat",11);
		bindRef = putName("bind",4);
		bpmRef = putName("bpm",3);
		bstreamRef = putName("bstream",7);
		calcRef = putName("calc",4);
		columnRef = putName("column",6);
		constraintsRef = putName("constraints",11);
		countRef = putName("count",5);
		crossRef = putName("cross",5);
		dblRef = putName("dbl",3);
		deleteRef = putName("delete",6);
		depositRef = putName("deposit",7);
		deriveRef = putName("derive",6);
		differenceRef= putName("difference",10);
		divRef = putName("/",1);
		disconnectRef= putName("disconnect",10);
		evalRef = putName("eval",4);
		expandRef = putName("expand",6);
		finishRef = putName("finish",6);
		getRef = putName("get",3);
		groupRef = putName("group",5);
		groupbyRef = putName("groupby",7);
		hashRef = putName("hash",4);
		identityRef = putName("identity",8);
		inplaceRef = putName("inplace",7);
		insertRef = putName("insert",6);
		intRef = putName("int",3);
		ioRef = putName("io",2);
		joinRef = putName("join",4);
		bandjoinRef = putName("bandjoin",8);
		kdifferenceRef= putName("kdifference",11);
		kunionRef= putName("kunion",6);
		languageRef= putName("language",8);
		likeselectRef = putName("likeselect",10);
		listRef = putName("list",4);
		lockRef = putName("lock",4);
		lookupRef = putName("lookup",6);
		malRef = putName("mal",3);
		markHRef = putName("markH",5);
		markTRef = putName("markT",5);
		materializeRef = putName("materialize",11);
		matRef = putName("mat",3);
		maxRef = putName("max",3);
		mdbRef = putName("mdb",3);
		minRef = putName("min",3);
		mirrorRef = putName("mirror",6);
		mkeyRef = putName("mkey",4);
		mmathRef = putName("mmath",5);
		mserverRef = putName("mserver",7);
		multiplexRef = putName("multiplex",9);
		newRef = putName("new",3);
		oidRef = putName("oid",3);
		optimizerRef = putName("optimizer",9);
		packRef = putName("pack",4);
		plusRef = putName("+",1);
		printRef = putName("print",5);
		projectRef = putName("project",7);
		putRef = putName("put",3);
		queryRef = putName("query",5);
		reconnectRef = putName("reconnect",9);
		remapRef = putName("remap",5);
		replaceRef = putName("replace",7);
		resultSetRef = putName("resultSet",9);
		reuseRef = putName("reuse",5);
		reverseRef = putName("reverse",7);
		rpcRef = putName("rpc",3);
		rsColumnRef = putName("rsColumn",8);
		selectNotNilRef = putName("selectNotNil",12);
		selectRef = putName("select",6);
		semaRef = putName("sema",4);
		semijoinRef = putName("semijoin",8);
		setAccessRef = putName("setAccess",9);
		setWriteModeRef= putName("setWriteMode",12);
		sortHTRef = putName("sortHT",6);
		sortRef = putName("sort",4);
		sortReverseTailRef = putName("sortReverseTail",15);
		sortTailRef = putName("sortTail",8);
		sortTHRef = putName("sortTH",6);
		sqlRef = putName("sql",3);
		streamsRef = putName("streams",7);
		strRef = putName("str",3);
		sumRef = putName("sum",3);
		sunionRef= putName("sunion",6);
		takeRef= putName("take",5);
		tuniqueRef = putName("tunique",7);
		unionRef= putName("union",5);
		unpackRef = putName("unpack",6);
		updateRef = putName("update",6);
		uselectRef = putName("uselect",7);

		canBeCrackedProp = PropertyIndex("canBeCracked");
		inlineProp = PropertyIndex("inline");
		keepProp = PropertyIndex("keep");
		notnilProp = PropertyIndex("notnil");
		rowsProp = PropertyIndex("rows");
		runonceProp = PropertyIndex("runonce");
		singletonProp = PropertyIndex("singleton");
		unsafeProp = PropertyIndex("unsafe");

		stableProp = PropertyIndex("stableProp");
		insertionsProp = PropertyIndex("insertionsProp");
		updatesProp = PropertyIndex("updatesProp");
		deletesProp = PropertyIndex("deletesProp");

		hlbProp = PropertyIndex("hlb");
		hubProp = PropertyIndex("hub");
		tlbProp = PropertyIndex("tlb");
		tubProp = PropertyIndex("tub");
	}
}
