@/
The contents of this file are subject to the MonetDB Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://monetdb.cwi.nl/Legal/MonetDBLicense-1.1.html

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations
under the License.

The Original Code is the MonetDB Database System.

The Initial Developer of the Original Code is CWI.
Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
Copyright August 2008-2010 MonetDB B.V.
All Rights Reserved.
@

@f opt_prelude
@a M. Kersten
These definitions are handy to have around in the optimizer
@h
#ifndef MAL_PRELUDE
#define MAL_PRELUDE
#include "opt_support.h"

/* cf., MonetDB/src/gdk/gdk.mx */
#define DEBUGoptimizers		if (GDKdebug & GRPoptimizers && actions)

opt_export  str affectedRowsRef;
opt_export  str aggrRef;
opt_export  str alarmRef;
opt_export  str algebraRef;
opt_export  str appendidxRef;
opt_export  str appendRef;
opt_export  str assertRef;
opt_export  str avgRef;
opt_export  str basketRef;
opt_export  str batcalcRef;
opt_export  str batRef;
opt_export  str batstrRef;
opt_export  str batmtimeRef;
opt_export  str batmmathRef;
opt_export  str bbpRef;
opt_export  str binddbatRef;
opt_export  str bindidxRef;
opt_export  str bindRef;
opt_export  str bpmRef;
opt_export  str bstreamRef;
opt_export  str calcRef;
opt_export  str catalogRef;
opt_export  str clear_tableRef;
opt_export  str closeRef;
opt_export  str compressRef;
opt_export  str columnRef;
opt_export  str columnBindRef;
opt_export  str connectRef;
opt_export  str constraintsRef;
opt_export  str countRef;
opt_export  str copyRef;
opt_export  str copy_fromRef;
opt_export  str count_no_nilRef;
opt_export  str crossRef;
opt_export  str createRef;
opt_export  str datacellRef;
opt_export  str dataflowRef;
opt_export  str datacyclotronRef;
opt_export  str decompressRef;
opt_export  str dblRef;
opt_export  str deleteRef;
opt_export  str depositRef;
opt_export  str deriveRef;
opt_export  str derivePathRef;
opt_export  str differenceRef;
opt_export  str divRef;
opt_export  str disconnectRef;
opt_export  str doneRef;
opt_export  str evalRef;
opt_export  str execRef;
opt_export  str expandRef;
opt_export	str exportOperationRef;
opt_export  str finishRef;
opt_export  str getRef;
opt_export  str groupRef;
opt_export  str groupbyRef;
opt_export  str hashRef;
opt_export	str histogramRef;
opt_export  str identityRef;
opt_export  str inplaceRef;
opt_export  str insertRef;
opt_export  str intRef;
opt_export  str ioRef;
opt_export  str joinRef;
opt_export  str bandjoinRef;
opt_export  str thetajoinRef;
opt_export  str thetauselectRef;
opt_export  str thetaselectRef;
opt_export  str kdifferenceRef;
opt_export  str kunionRef;
opt_export  str kuniqueRef;
opt_export  str languageRef;
opt_export  str leftjoinRef;
opt_export  str likeselectRef;
opt_export  str ilikeselectRef;
opt_export  str likeuselectRef;
opt_export  str ilikeuselectRef;
opt_export  str listRef;
opt_export  str lockRef;
opt_export  str lookupRef;
opt_export  str malRef;
opt_export  str mapiRef;
opt_export  str markHRef;
opt_export  str markTRef;
opt_export  str mark_grpRef;
opt_export  str materializeRef;
opt_export  str matRef;
opt_export  str max_no_nilRef;
opt_export  str maxRef;
opt_export  str mdbRef;
opt_export  str min_no_nilRef;
opt_export  str minRef;
opt_export  str mirrorRef;
opt_export  str mkeyRef;
opt_export  str mmathRef;
opt_export  str multiplexRef;
opt_export  str mvcRef;
opt_export  str newRef;
opt_export  str oidRef;
opt_export  str octopusRef;
opt_export  str openRef;
opt_export  str optimizerRef;
opt_export  str packRef;
opt_export  str pack2Ref;
opt_export  str partitionRef;
opt_export  str pcreRef;
opt_export  str pinRef;
opt_export  str plusRef;
opt_export  str sqlplusRef;
opt_export  str printRef;
opt_export  str preludeRef;
opt_export  str prodRef;
opt_export  str postludeRef;
opt_export  str pqueueRef;
opt_export  str profilerRef;
opt_export  str projectRef;
opt_export  str putRef;
opt_export  str queryRef;
opt_export  str rank_grpRef;
opt_export  str reconnectRef;
opt_export  str recycleRef;
opt_export  str refineRef;
opt_export  str refine_reverseRef;
opt_export  str registerRef;
opt_export  str remapRef;
opt_export  str remoteRef;
opt_export  str replaceRef;
opt_export  str replicatorRef;
opt_export  str resultSetRef;
opt_export  str reuseRef;
opt_export  str reverseRef;
opt_export  str rpcRef;
opt_export  str rsColumnRef;
opt_export  str schedulerRef;
opt_export  str selectNotNilRef;
opt_export  str selectRef;
opt_export  str semaRef;
opt_export  str semijoinRef;
opt_export  str setAccessRef;
opt_export  str setWriteModeRef;
opt_export  str sliceRef;
opt_export  str sortHRef;
opt_export  str sortHTRef;
opt_export  str sortRef;
opt_export  str sortReverseTailRef;
opt_export  str sortTailRef;
opt_export  str sortTHRef;
opt_export  str sqlRef;
opt_export  str streamsRef;
opt_export  str startRef;
opt_export  str stopRef;
opt_export  str strRef;
opt_export  str sumRef;
opt_export  str sunionRef;
opt_export  str takeRef;
opt_export  str topn_minRef;
opt_export  str topn_maxRef;
opt_export  str utopn_minRef;
opt_export  str utopn_maxRef;
opt_export  str tuniqueRef;
opt_export  str not_uniqueRef;
opt_export  str unionRef;
opt_export  str unpackRef;
opt_export  str unpinRef;
opt_export  str updateRef;
opt_export  str uselectRef;
opt_export  str userRef;
opt_export  str antiuselectRef;
opt_export  str antijoinRef;

opt_export int canBeCrackedProp;	/* binary */
opt_export int canBeJoinselectProp;	/* binary */
opt_export int sidewaysSelectProp;	/* int */
opt_export int headProp;		/* int */
opt_export int pivotProp;		/* int */
opt_export int pivotDisjunctiveProp;	/* int */
opt_export int removeProp;		/* int */
opt_export int tableProp;	        /* str */
opt_export int sqlfunctionProp;

opt_export int inlineProp;		/* binary */
opt_export int keepProp;		/* binary */
opt_export int notnilProp;		/* binary */
opt_export int rowsProp;		/* long */
opt_export int bidProp;			/* int */
opt_export int runonceProp;		/* binary */
opt_export int singletonProp;		/* binary */
opt_export int unsafeProp;		/* binary */

opt_export int stableProp;		/* binary */
opt_export int insertionsProp;		/* binary */
opt_export int updatesProp;		/* binary */
opt_export int deletesProp;		/* binary */

opt_export int hlbProp;			/* any (head lower bound) */
opt_export int hubProp;			/* any (head upper bound) */
opt_export int tlbProp;			/* any (tail lower bound) */
opt_export int tubProp;			/* any (tail upper bound) */

opt_export void optimizerInit(void);
#endif
@c
#include "mal_config.h"
#include "opt_prelude.h"

str affectedRowsRef;
str aggrRef;
str alarmRef;
str algebraRef;
str appendidxRef;
str appendRef;
str assertRef;
str avgRef;
str basketRef;
str batcalcRef;
str batRef;
str batstrRef;
str batmtimeRef;
str batmmathRef;
str bbpRef;
str binddbatRef;
str bindidxRef;
str bindRef;
str bpmRef;
str bstreamRef;
str calcRef;
str catalogRef;
str clear_tableRef;
str closeRef;
str compressRef;
str columnRef;
str columnBindRef;
str connectRef;
str constraintsRef;
str countRef;
str copyRef;
str copy_fromRef;
str count_no_nilRef;
str crossRef;
str createRef;
str datacellRef;
str dataflowRef;
str datacyclotronRef;
str dblRef;
str decompressRef;
str deleteRef;
str depositRef;
str deriveRef;
str derivePathRef;
str differenceRef;
str divRef;
str disconnectRef;
str doneRef;
str evalRef;
str execRef;
str expandRef;
str exportOperationRef;
str finishRef;
str getRef;
str groupRef;
str groupbyRef;
str hashRef;
str histogramRef;
str identityRef;
str inplaceRef;
str insertRef;
str intRef;
str ioRef;
str joinRef;
str bandjoinRef;
str thetajoinRef;
str thetauselectRef;
str thetaselectRef;
str kdifferenceRef;
str kunionRef;
str kuniqueRef;
str languageRef;
str leftjoinRef;
str likeselectRef;
str ilikeselectRef;
str likeuselectRef;
str ilikeuselectRef;
str listRef;
str lockRef;
str lookupRef;
str malRef;
str mapiRef;
str markHRef;
str markTRef;
str mark_grpRef;
str materializeRef;
str matRef;
str max_no_nilRef;
str maxRef;
str mdbRef;
str min_no_nilRef;
str minRef;
str mirrorRef;
str mkeyRef;
str mmathRef;
str multiplexRef;
str mvcRef;
str newRef;
str oidRef;
str octopusRef;
str openRef;
str optimizerRef;
str packRef;
str pack2Ref;
str partitionRef;
str pcreRef;
str pinRef;
str plusRef;
str sqlplusRef;
str printRef;
str preludeRef;
str prodRef;
str postludeRef;
str pqueueRef;
str profilerRef;
str projectRef;
str putRef;
str queryRef;
str rank_grpRef;
str reconnectRef;
str recycleRef;
str refineRef;
str refine_reverseRef;
str registerRef;
str remapRef;
str remoteRef;
str replaceRef;
str replicatorRef;
str resultSetRef;
str reuseRef;
str reverseRef;
str rpcRef;
str rsColumnRef;
str schedulerRef;
str selectNotNilRef;
str selectRef;
str semaRef;
str semijoinRef;
str setAccessRef;
str setWriteModeRef;
str sliceRef;
str sortHRef;
str sortHTRef;
str sortRef;
str sortReverseTailRef;
str sortTailRef;
str sortTHRef;
str sqlRef;
str streamsRef;
str startRef;
str stopRef;
str strRef;
str sumRef;
str sunionRef;
str takeRef;
str topn_minRef;
str topn_maxRef;
str utopn_minRef;
str utopn_maxRef;
str tuniqueRef;
str not_uniqueRef;
str unionRef;
str unpackRef;
str unpinRef;
str updateRef;
str uselectRef;
str userRef;
str antiuselectRef;
str antijoinRef;

int canBeCrackedProp;
int canBeJoinselectProp;
int sidewaysSelectProp;
int headProp;
int pivotProp;
int pivotDisjunctiveProp;
int removeProp;
int tableProp;
int sqlfunctionProp;

int inlineProp;
int keepProp;
int notnilProp;
int rowsProp;
int bidProp;
int runonceProp;
int singletonProp;
int unsafeProp;

int stableProp;	
int insertionsProp;
int updatesProp;
int deletesProp;

int hlbProp;
int hubProp;
int tlbProp;
int tubProp;

void optimizerInit(){
	if(batRef == NULL){
		affectedRowsRef = putName("affectedRows",12);
		aggrRef = putName("aggr",4);
		alarmRef = putName("alarm",5);
		algebraRef = putName("algebra",7);
		appendidxRef = putName("append_idxbat",13);
		appendRef = putName("append",6);
		assertRef = putName("assert",6);
		avgRef = putName("avg",3);
		batcalcRef = putName("batcalc",7);
		basketRef = putName("basket",6);
		batRef = putName("bat",3);
		batstrRef = putName("batstr",6);
		batmtimeRef = putName("batmtime",8);
		batmmathRef = putName("batmmath",7);
		bbpRef = putName("bbp",3);
		binddbatRef = putName("bind_dbat",9);
		bindidxRef = putName("bind_idxbat",11);
		bindRef = putName("bind",4);
		bpmRef = putName("bpm",3);
		bstreamRef = putName("bstream",7);
		calcRef = putName("calc",4);
		catalogRef = putName("catalog",7);
		clear_tableRef = putName("clear_table",11);
		closeRef = putName("close",5);
		compressRef = putName("compress",8);
		columnRef = putName("column",6);
		columnBindRef = putName("columnBind",10);
		connectRef = putName("connect",7);
		constraintsRef = putName("constraints",11);
		countRef = putName("count",5);
		copyRef = putName("copy",4);
		copy_fromRef = putName("copy_from",9);
		count_no_nilRef = putName("count_no_nil",12);
		crossRef = putName("cross",5);
		createRef = putName("create",6);
		datacellRef = putName("datacell",8);
		dataflowRef = putName("dataflow",8);
		datacyclotronRef = putName("datacyclotron",13);
		dblRef = putName("dbl",3);
		decompressRef = putName("decompress",10);
		deleteRef = putName("delete",6);
		depositRef = putName("deposit",7);
		deriveRef = putName("derive",6);
		derivePathRef = putName("derivePath",10);
		differenceRef= putName("difference",10);
		divRef = putName("/",1);
		disconnectRef= putName("disconnect",10);
		doneRef= putName("done",4);
		evalRef = putName("eval",4);
		execRef = putName("exec",4);
		expandRef = putName("expand",6);
		exportOperationRef = putName("exportOperation",15);
		finishRef = putName("finish",6);
		getRef = putName("get",3);
		groupRef = putName("group",5);
		groupbyRef = putName("groupby",7);
		hashRef = putName("hash",4);
		histogramRef = putName("histogram",9);
		identityRef = putName("identity",8);
		inplaceRef = putName("inplace",7);
		insertRef = putName("insert",6);
		intRef = putName("int",3);
		ioRef = putName("io",2);
		joinRef = putName("join",4);
		bandjoinRef = putName("bandjoin",8);
		thetajoinRef = putName("thetajoin",9);
		thetauselectRef = putName("thetauselect",12);
		thetaselectRef = putName("thetaselect",11);
		kdifferenceRef= putName("kdifference",11);
		kunionRef= putName("kunion",6);
		kuniqueRef= putName("kunique",7);
		languageRef= putName("language",8);
		leftjoinRef = putName("leftjoin",8);
		likeselectRef = putName("like_select",11);
		ilikeselectRef = putName("ilike_select",12);
		likeuselectRef = putName("like_uselect",12);
		ilikeuselectRef = putName("ilike_uselect",13);
		listRef = putName("list",4);
		lockRef = putName("lock",4);
		lookupRef = putName("lookup",6);
		malRef = putName("mal", 3);
		mapiRef = putName("mapi", 4);
		markHRef = putName("markH", 5);
		markTRef = putName("markT", 5);
		mark_grpRef = putName("mark_grp", 8);
		materializeRef = putName("materialize", 11);
		matRef = putName("mat", 3);
		max_no_nilRef = putName("max_no_nil", 10);
		maxRef = putName("max", 3);
		mdbRef = putName("mdb", 3);
		min_no_nilRef = putName("min_no_nil", 10);
		minRef = putName("min", 3);
		mirrorRef = putName("mirror", 6);
		mkeyRef = putName("mkey", 4);
		mmathRef = putName("mmath", 5);
		multiplexRef = putName("multiplex", 9);
		mvcRef = putName("mvc", 3);
		newRef = putName("new",3);
		oidRef = putName("oid",3);
		octopusRef = putName("octopus",7);
		optimizerRef = putName("optimizer",9);
		openRef = putName("open",4);
		packRef = putName("pack",4);
		pack2Ref = putName("pack2",5);
		partitionRef = putName("partition",9);
		pcreRef = putName("pcre",4);
		pinRef = putName("pin",3);
		plusRef = putName("+",1);
		sqlplusRef = putName("sqladd",6);
		printRef = putName("print",5);
		preludeRef = putName("prelude",7);
		prodRef = putName("product",7);
		profilerRef = putName("profiler",8);
		postludeRef = putName("postlude",8);
		pqueueRef = putName("pqueue",6);
		projectRef = putName("project",7);
		putRef = putName("put",3);
		queryRef = putName("query",5);
		rank_grpRef = putName("rank_grp", 8);
		reconnectRef = putName("reconnect",9);
		recycleRef = putName("recycle",7);
		refineRef = putName("refine",6);
		refine_reverseRef = putName("refine_reverse",14);
		registerRef = putName("register",8);
		remapRef = putName("remap",5);
		remoteRef = putName("remote",6);
		replaceRef = putName("replace",7);
		replicatorRef = putName("replicator",10);
		resultSetRef = putName("resultSet",9);
		reuseRef = putName("reuse",5);
		reverseRef = putName("reverse",7);
		rpcRef = putName("rpc",3);
		rsColumnRef = putName("rsColumn",8);
		schedulerRef = putName("scheduler",9);
		selectNotNilRef = putName("selectNotNil",12);
		selectRef = putName("select",6);
		semaRef = putName("sema",4);
		semijoinRef = putName("semijoin",8);
		setAccessRef = putName("setAccess",9);
		setWriteModeRef= putName("setWriteMode",12);
		sliceRef = putName("slice",5);
		sortHRef = putName("sortH",5);
		sortHTRef = putName("sortHT",6);
		sortRef = putName("sort",4);
		sortReverseTailRef = putName("sortReverseTail",15);
		sortTailRef = putName("sortTail",8);
		sortTHRef = putName("sortTH",6);
		sqlRef = putName("sql",3);
		streamsRef = putName("streams",7);
		startRef = putName("start",5);
		stopRef = putName("stop",4);
		strRef = putName("str",3);
		sumRef = putName("sum",3);
		sunionRef= putName("sunion",6);
		takeRef= putName("take",5);
		topn_minRef= putName("topn_min",8);
		topn_maxRef= putName("topn_max",8);
		utopn_minRef= putName("utopn_min",9);
		utopn_maxRef= putName("utopn_max",9);
		tuniqueRef = putName("tunique",7);
		not_uniqueRef= putName("not_unique",10);
		unionRef= putName("union",5);
		unpackRef = putName("unpack",6);
		unpinRef = putName("unpin",5);
		updateRef = putName("update",6);
		uselectRef = putName("uselect",7);
		antiuselectRef = putName("antiuselect",11);
		antijoinRef = putName("antijoin",8);
		userRef = putName("user",4);

		canBeCrackedProp = PropertyIndex("canBeCracked");
		canBeJoinselectProp = PropertyIndex("canBeJoinselect");
		sidewaysSelectProp = PropertyIndex("sidewaysSelect");
		headProp = PropertyIndex("head");
		pivotProp = PropertyIndex("pivot");
		pivotDisjunctiveProp = PropertyIndex("pivotDisjunctive");
		removeProp = PropertyIndex("remove");
		tableProp = PropertyIndex("table");

		inlineProp = PropertyIndex("inline");
		keepProp = PropertyIndex("keep");
		notnilProp = PropertyIndex("notnil");
		rowsProp = PropertyIndex("rows");
		bidProp = PropertyIndex("bid");
		runonceProp = PropertyIndex("runonce");
		singletonProp = PropertyIndex("singleton");
		unsafeProp = PropertyIndex("unsafe");
		sqlfunctionProp = PropertyIndex("sqlfunction");

		stableProp = PropertyIndex("stableProp");
		insertionsProp = PropertyIndex("insertionsProp");
		updatesProp = PropertyIndex("updatesProp");
		deletesProp = PropertyIndex("deletesProp");

		hlbProp = PropertyIndex("hlb");
		hubProp = PropertyIndex("hub");
		tlbProp = PropertyIndex("tlb");
		tubProp = PropertyIndex("tub");
@-
Set the optimizer debugging flag
@c
		{
			int ret;
			str ref= GDKgetenv("opt_debug");
			if ( ref)
				OPTsetDebugStr(&ret,&ref);
		}
	}
}
