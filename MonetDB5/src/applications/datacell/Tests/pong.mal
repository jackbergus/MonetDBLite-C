#The simpliest throughput experiment consists of pingpong
#This part tests the pong side, where events should be delivered

include sql;
include datacell;

datacell.open();

datacell.receptor("ping","localhost", 6000);
datacell.define("ping","event",:int);
datacell.putPicture("ping","http://www.cwi.nl/~mk/datacell/images/ball.jpg");

datacell.emitter("pong","localhost", 6001);
datacell.define("pong","event",:int);
datacell.putPicture("pong","http://www.cwi.nl/~mk/datacell/images/ball.jpg");

datacell.dump();

datacell.pump("bat","sql","insert into pong select * from ping;");
datacell.putPicture("bat","http://www.cwi.nl/~mk/datacell/images/bat.jpg");

#manually fill the private emitter buffer with a single element
(pub:bat[:void,:timestamp], priv:bat[:void,:timestamp]) := datacell.bindEmitter("pong","stamp");
z := mtime.current_timestamp();
bat.insert(priv,nil,z);
(public:bat[:void,:int], private:bat[:void,:int]) := datacell.bindEmitter("pong","event");
bat.insert(private,nil,3);

tablet.page(priv,private);

datacell.setTimeWindow("pong",1000,10);
datacell.startPump("pong");
#perform a single schedule run to find the output queue
#datacell.startScheduler(100);


mapi.listen();
#datacell.close();
