# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#	io.print("#problem: Monet -prelude fatal sometimes leaves a monet thread behind.\n");
	b := new(nil:int,nil:str,0);
#	io.print("var bn:= fragment(b,1,5,str(nil),str(nil));");
	ca_a := str(nil);
	da_a := str(nil);
	bn := fragment(b,1,5,ca_a,da_a);
#	io.print("print(bn);");
	ea_a := print(bn);
#	io.print("quit();");
	fa_a := quit();
print("test dropped: it uses 4.4. catalogues");
