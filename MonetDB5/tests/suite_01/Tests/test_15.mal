# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	io.print("commit(); printf(\"#~BeginVariableOutput~#\\n\"); ioStatistics().print(); printf(\"#~EndVariableOutput~#\\n\");");
	ca_a := transaction.commit();
	da_a := io.printf("#~BeginVariableOutput~#\n");
	(ea_a,ea_b) := status.ioStatistics();
	fa_a := io.print(ea_a, ea_b);
	ga_a := io.printf("#~EndVariableOutput~#\n");
#	io.print("commit(); commit(); commit(); commit(); commit(); commit(); commit(); commit();");
	ha_a := transaction.commit();
	ia_a := transaction.commit();
	ja_a := transaction.commit();
	ka_a := transaction.commit();
	la_a := transaction.commit();
	ma_a := transaction.commit();
	na_a := transaction.commit();
	oa_a := transaction.commit();
#	io.print("transaction.commit(); commit(); commit(); commit(); commit(); commit(); commit(); commit();");
	pa_a := transaction.commit();
	qa_a := transaction.commit();
	ra_a := transaction.commit();
	sa_a := transaction.commit();
	ta_a := transaction.commit();
	ua_a := transaction.commit();
	va_a := transaction.commit();
	wa_a := transaction.commit();
#	io.print("transaction.commit(); commit(); commit(); commit(); ");
	xa_a := transaction.commit();
	ya_a := transaction.commit();
	ab_a := transaction.commit();
	bb_a := transaction.commit();
#	io.print("printf(\"#~BeginVariableOutput~#\\n\"); ioStatistics().print(); printf(\"#~EndVariableOutput~#\\n\");");
	cb_a := io.printf("#~BeginVariableOutput~#\n");
	(db_a,db_b) := status.ioStatistics();
	eb_a := io.print(db_a, db_b);
	fb_a := io.printf("#~EndVariableOutput~#\n");
#	io.print("quit();");
	gb_a := clients.quit();
