# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("setoid(oid(20000000));");
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#	io.print("# definition and use of Monet procs and variables\n");
#	io.print("# Note that complex procs should normally be prepared in block mode.\n");
#	io.print("unknown(\"hello\");");
	ca_a := unknown("hello");
#	io.print("#simple procedure with withdrawal\n");
function c():void;
!ERROR: "proc c() : void { "clock".print();}"
!                                   ^
! syntax error, unexpected '.', expecting TOK_ITERATION or TOK_ITERATION_PAR or ';'.
print("test dropped: it uses 4.4. catalogues");
