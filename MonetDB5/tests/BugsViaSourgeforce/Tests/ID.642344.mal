# Monet Mil to Mal compiler
include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# Date:\t\t2002-11-22 16:58\n");
	mil.line("# Category: \tNone\n");
	mil.line("# Group: \tNone\n");
	mil.line("# Status: \tOpen\n");
	mil.line("# Resolution: \tNone\n");
	mil.line("# Priority: \t5\n");
	mil.line("# Submitted By: Maurice van Keulen (mvankeulen)\n");
	mil.line("# Assigned to: \tNobody/Anonymous (nobody)\n");
	mil.line("# Summary: \tRefcount warnings in \"varval\"\n");
	mil.line("#\n");
	mil.line("# Initial Comment:\n");
	mil.line("# The \"varval\"-function apparently contains a bug\n");
	mil.line("# regarding reference counting. See example below:\n");
	mil.line("");
	bar := bat.new(nil:int,nil:int);
	mil.line("var bar:=new(int,int);");
	aa_a := user.varval("bar");
	ba_a := io.print(aa_a);
