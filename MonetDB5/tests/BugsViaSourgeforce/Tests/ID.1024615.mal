# Monet Mil to Mal compiler
include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("var b1 := bat(oid,str);");
	b1 := bat.new(nil:oid,nil:str);
	mil.line("b1.reverse().sort().reverse().print();");
	aa_a := bat.reverse(b1);
	ba_a := algebra.sort(aa_a);
	ca_a := bat.reverse(ba_a);
	da_a := io.print(ca_a);
	mil.line("b1.access(BAT_WRITE);");
	BAT_WRITE:= mil.take("BAT_WRITE");
	ea_a := bat.setWriteMode(b1);
	mil.line("b1.reverse().sort().reverse().print();");
	fa_a := bat.reverse(b1);
	ga_a := algebra.sort(fa_a);
	ha_a := bat.reverse(ga_a);
	ia_a := io.print(ha_a);
	mil.line("var b2 := bat(void,str);");
	b2 := bat.new(nil:void,nil:str);
	mil.line("b2.seqbase(oid(10));");
	ja_a := calc.oid(10);
	ka_a := bat.setSequenceBase(b2,ja_a);
	mil.line("b2.reverse().sort().reverse().print();");
	la_a := bat.reverse(b2);
	ma_a := algebra.sort(la_a);
	na_a := bat.reverse(ma_a);
	oa_a := io.print(na_a);
	mil.line("b2.access(BAT_WRITE);");
	pa_a := bat.setWriteMode(b2);
	mil.line("b2.reverse().sort().reverse().print();");
	qa_a := bat.reverse(b2);
	ra_a := algebra.sort(qa_a);
	sa_a := bat.reverse(ra_a);
	ta_a := io.print(sa_a);
	mil.line("var b3 := mirror(b2);");
	b3 := bat.mirror(b2);
	mil.line("b3.print();");
	ua_a := io.print(b3);
	mil.line("var b4 := b3.reverse().join(b2);");
	va_a := bat.reverse(b3);
	b4 := algebra.join(va_a,b2);
	mil.line("b4.print();");
	wa_a := io.print(b4);
	mil.line("# next line produced an incorrect error \n");
	mil.line("# ERROR: CMDsort: returned BAT has unexpected head.\n");
	xa_a := bat.reverse(b4);
	ya_a := algebra.sort(xa_a);
	ab_a := bat.reverse(ya_a);
	bb_a := io.print(ab_a);
	mil.line("#mini mil example\n");
	mil.line("var b2 := bat(void,str);");
	b2 := bat.new(nil:void,nil:str);
	mil.line("b2.seqbase(oid(10));");
	cb_a := calc.oid(10);
	db_a := bat.setSequenceBase(b2,cb_a);
	mil.line("var b3 := mirror(b2);");
	b3 := bat.mirror(b2);
	mil.line("var b4 := b3.reverse().join(b2);");
	eb_a := bat.reverse(b3);
	b4 := algebra.join(eb_a,b2);
	mil.line("# next line produced an incorrect error \n");
	mil.line("# ERROR: CMDsort: returned BAT has unexpected head.\n");
	fb_a := bat.reverse(b4);
	gb_a := algebra.sort(fb_a);
	hb_a := bat.reverse(gb_a);
	ib_a := io.print(hb_a);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
