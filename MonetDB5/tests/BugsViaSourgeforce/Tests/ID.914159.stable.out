stdout of test 'ID.914159` in directory 'tests/BugsViaSourgeforce` itself:


# 22:18:31 >  
# 22:18:31 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/etc/monet.conf" --debug=10 --set "monet_mod_path=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/lib/MonetDB" --set "gdk_dbfarm=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/var/MonetDB/dbfarm" --set "sql_logdir=/var/tmp/_4.3.16_PREFIX_MONET_GNU_32_d__/var/MonetDB/log" --set mapi_port=46316 --set sql_port=58861 --set monet_prompt= --trace --dbname=mTests_tests_BugsViaSourgeforce  < ID.914159.milS
# 22:18:31 >  

# Monet Database Server V4.3.16_rc05
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit; dynamically linked.
# config:/home/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/home/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugsViaSourgeforce
# Visit http://monetdb.cwi.nl for further information.
## Monet Mil to Mal compiler
#include mil;
## Copyright (c) 2001-2004, CWI. All rights reserved.
#
##Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##use the "mil_schema" for additional support routines
#	mil.line("PROC crash() : void");
#function crash():void;
#
##ERROR: no iterator 'T' on stack
#
##ERROR: no iterator 'T' on stack
#	mil.line("\tprint($t);");
#	unknown:= mil.take("unknown");
#	aa_a := print(unknown);
#end crash;
function user.crash():void;	# 0  (crash:void)
    mil.line("\\tprint($t);\n");	# 1 MILline (_1:void)<-(_2:str)
    unknown := mil.take("unknown");	# 2 MILtake (unknown:any)<-(_4:str)
    aa_a := io.print(unknown);	# 3 IOprint_val (aa_a:int)<-(unknown:any)
end crash;	# 4  
#	mil.line("crash();");
#	ba_a := crash();
#
function user.main():void;	# 0  (main:void)
# Copyright (c) 2001-2004, CWI. All rights reserved. 	# 1  (_31:str)
#Predefined code segment 	# 2  (_32:str)
#The compiler can not guarantee an accurate compilation, 	# 3  (_33:str)
#because MIL unlike MAL is a dynamically typed language. 	# 4  (_34:str)
#A few guidelines to maximize usefullness. 	# 5  (_35:str)
#- make the type of variables explicit, in particular 'nil' 	# 6  (_36:str)
#- upon advice of M2m to remap identifiers, change it in your program directly 	# 7  (_37:str)
#use the "mil_schema" for additional support routines 	# 8  (_38:str)
    mil.line("PROC crash() : void");	# 9 MILline (_39:void)<-(_40:str)
    mil.line("crash();");	# 10 MILline (_41:void)<-(_42:str)
    ba_a := user.crash();	# 11  (ba_a:void)
end main;	# 12  
#PROC crash() : void
#crash();
#\tprint($t);
!ERROR: MALexception:mil.take:failed to take 'unknown' from box
#

# 22:47:53 >  
# 22:47:53 >  Done.
# 22:47:53 >  

