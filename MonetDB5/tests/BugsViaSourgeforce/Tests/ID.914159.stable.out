stdout of test 'ID.914159` in directory 'tests/BugsViaSourgeforce` itself:


# 20:48:35 >  
# 20:48:35 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=4 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=32130 --set xrpc_port=41692 --set monet_prompt= --trace  --dbname=mTests_tests_BugsViaSourgeforce  ID.914159.mal
# 20:48:35 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_tests_BugsViaSourgeforce', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32130/
!TypeException:user.crash[2]:'mil.take' undefined in: unknown:any := mil.take(_3:str)
function user.crash():void;             #  0 crash:void := user.crash() 
#	io.print("\tprint($t);\n"); 
    unknown := mil.take("unknown");     #  2 unknown:any := mil.take(_3:str) {U}
    aa_a := io.print(unknown);          #  3 aa_a:void := IOprint_val(unknown:any) 
end crash;                              #  4  
!TypeException:user.main[12]:'user.crash' undefined in: ba_a:void := user.crash()
function user.main():void;              #  0 main:void := user.main() 
# Monet Mil to Mal compiler 
# Copyright (c) 2001-2004, CWI. All rights reserved. 
#Predefined code segment 
#The compiler can not guarantee an accurate compilation, 
#because MIL unlike MAL is a dynamically typed language. 
#A few guidelines to maximize usefullness. 
#- make the type of variables explicit, in particular 'nil' 
#- upon advice of M2m to remap identifiers, change it in your program directly 
#use the "mil_schema" for additional support routines 
#	io.print("PROC crash() : void"); 
#	io.print("crash();"); 
    ba_a := user.crash();               # 12 ba_a:void := user.crash() {U}
end main;                               # 13  

# 20:48:35 >  
# 20:48:35 >  Done.
# 20:48:35 >  

