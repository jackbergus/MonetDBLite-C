stdout of test 'ID.605953` in directory 'monetdb5/tests/BugsViaSourgeforce` itself:


# 07:27:17 >  
# 07:27:17 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=35545 --set monet_prompt= --trace --dbname=mTests_tests_BugsViaSourgeforce  ID.605953.mal < /dev/null
# 07:27:17 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_tests_BugsViaSourgeforce', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.main():void;
# Monet Mil to Mal compiler 
# Copyright (c) 2001-2004, CWI. All rights reserved. 
#Predefined code segment 
#The compiler can not guarantee an accurate compilation, 
#because MIL unlike MAL is a dynamically typed language. 
#A few guidelines to maximize usefullness. 
#- make the type of variables explicit, in particular 'nil' 
#- upon advice of M2m to remap identifiers, change it in your program directly 
#use the "mil_schema" for additional support routines 
    t := bat.new(nil:oid,nil:str);
    aa_a := calc.oid(0);
    ba_a := bat.insert(t,aa_a,"a");
    ca_a := calc.oid(1);
    da_a := bat.insert(t,ca_a,"b");
    ea_a := calc.oid(2);
    fa_a := bat.insert(t,ea_a,"c");
    ga_a := calc.oid(3);
    ha_a := bat.insert(t,ga_a,"d");
    ia_a := calc.oid(4);
    ja_a := bat.insert(t,ia_a,"e");
    ka_a := calc.oid(5);
    la_a := bat.insert(t,ka_a,"f");
    ma_a := calc.oid(6);
    na_a := bat.insert(t,ma_a,"g");
    oa_a := calc.oid(7);
    pa_a := bat.insert(t,oa_a,"h");
    qa_a := algebra.markT(t,nil:oid);
    ra_a := io.print(t);
    t2 := bat.new(nil:oid,nil:str);
    va_a := bat.append(t2,"a");
    xa_a := bat.append(t2,"b");
    mb_a := io.print(xa_a);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase' 
end main;
#-----------------#
# h	t	  # name
# oid	str	  # type
#-----------------#
[ 0@0,	  "a"	  ]
[ 1@0,	  "b"	  ]
[ 2@0,	  "c"	  ]
[ 3@0,	  "d"	  ]
[ 4@0,	  "e"	  ]
[ 5@0,	  "f"	  ]
[ 6@0,	  "g"	  ]
[ 7@0,	  "h"	  ]
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 0@0,	  "a"	  ]
[ 1@0,	  "b"	  ]

# 07:27:17 >  
# 07:27:17 >  Done.
# 07:27:17 >  

