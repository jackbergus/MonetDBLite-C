stdout of test 'ID.642344` in directory 'tests/BugsViaSourgeforce` itself:


# 07:27:17 >  
# 07:27:17 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=35545 --set monet_prompt= --trace --dbname=mTests_tests_BugsViaSourgeforce  ID.642344.mal < /dev/null
# 07:27:17 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugsViaSourgeforce
# Visit http://monetdb.cwi.nl/ for further information
## Monet Mil to Mal compiler
##include mil;
## Copyright (c) 2001-2004, CWI. All rights reserved.
#
##Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##use the "mil_schema" for additional support routines
##	mil.line("# Date:\t\t2002-11-22 16:58\n");
##	mil.line("# Category: \tNone\n");
##	mil.line("# Group: \tNone\n");
##	mil.line("# Status: \tOpen\n");
##	mil.line("# Resolution: \tNone\n");
##	mil.line("# Priority: \t5\n");
##	mil.line("# Submitted By: Maurice van Keulen (mvankeulen)\n");
##	mil.line("# Assigned to: \tNobody/Anonymous (nobody)\n");
##	mil.line("# Summary: \tRefcount warnings in \"varval\"\n");
##	mil.line("#\n");
##	mil.line("# Initial Comment:\n");
##	mil.line("# The \"varval\"-function apparently contains a bug\n");
##	mil.line("# regarding reference counting. See example below:\n");
##	mil.line("");
#	bar := bat.new(nil:int,nil:int);
##	mil.line("var bar:=new(int,int);");
#	aa_a := user.varval("bar");
#	ba_a := io.print(aa_a);
#
!ERROR: 'user.varval' undefined in user.main[27] aa_a:any := user.varval(_29:str)
function user.main():void;	# 0  (main:void)
# Monet Mil to Mal compiler 	# 1  (_1:str)
#include mil; 	# 2  (_2:str)
# Copyright (c) 2001-2004, CWI. All rights reserved. 	# 3  (_3:str)
#Predefined code segment 	# 4  (_4:str)
#The compiler can not guarantee an accurate compilation, 	# 5  (_5:str)
#because MIL unlike MAL is a dynamically typed language. 	# 6  (_6:str)
#A few guidelines to maximize usefullness. 	# 7  (_7:str)
#- make the type of variables explicit, in particular 'nil' 	# 8  (_8:str)
#- upon advice of M2m to remap identifiers, change it in your program directly 	# 9  (_9:str)
#use the "mil_schema" for additional support routines 	# 10  (_10:str)
#	mil.line("# Date:\t\t2002-11-22 16:58\n"); 	# 11  (_11:str)
#	mil.line("# Category: \tNone\n"); 	# 12  (_12:str)
#	mil.line("# Group: \tNone\n"); 	# 13  (_13:str)
#	mil.line("# Status: \tOpen\n"); 	# 14  (_14:str)
#	mil.line("# Resolution: \tNone\n"); 	# 15  (_15:str)
#	mil.line("# Priority: \t5\n"); 	# 16  (_16:str)
#	mil.line("# Submitted By: Maurice van Keulen (mvankeulen)\n"); 	# 17  (_17:str)
#	mil.line("# Assigned to: \tNobody/Anonymous (nobody)\n"); 	# 18  (_18:str)
#	mil.line("# Summary: \tRefcount warnings in \"varval\"\n"); 	# 19  (_19:str)
#	mil.line("#\n"); 	# 20  (_20:str)
#	mil.line("# Initial Comment:\n"); 	# 21  (_21:str)
#	mil.line("# The \"varval\"-function apparently contains a bug\n"); 	# 22  (_22:str)
#	mil.line("# regarding reference counting. See example below:\n"); 	# 23  (_23:str)
#	mil.line(""); 	# 24  (_24:str)
    bar := bat.new(nil:int,nil:int);	# 25 CMDBATnew (bar:bat[:int,:int])<-(_26:int)(_26:int)
#	mil.line("var bar:=new(int,int);"); 	# 26  (_27:str)
    aa_a := user.varval("bar");	# 27  unknown (aa_a:any)<-(_29:str)
    ba_a := io.print(aa_a);	# 28 IOprint_val (ba_a:int)<-(aa_a:any)
end main;	# 29  

# 07:27:17 >  
# 07:27:17 >  Done.
# 07:27:17 >  

