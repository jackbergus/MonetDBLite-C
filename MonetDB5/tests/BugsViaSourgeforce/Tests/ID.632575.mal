# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("# Date:\t\t2002-11-02 14:41\n");
#	mil.line("# Priority:\t5\n");
#	mil.line("# Submitted By:\tStefan Manegold (stmane)\n");
#	mil.line("# Assigned To:\tNone\n");
#	mil.line("# Category:\tNone\n");
#	mil.line("# Status:\tOpen\n");
#	mil.line("# Summary: kunique fails with empty strings\n");
#	mil.line("# \n");
#	mil.line("# Initial Comment:\n");
#	mil.line("# In some cases, kunique fails on a str column that contains >1 empty\n");
#	mil.line("# strings (\"\"). See example below, and/or the respective test script and\n");
#	mil.line("# stable output in tests/BugsViaSourgeforce[/Tests]; the files are named\n");
#	mil.line("# using the ID of this bugreport.\n");
#	mil.line("# \n");
#	mil.line("# The problem also occurs with test/Availability[/Tests]/01_Modules_static,\n");
#	mil.line("# most probably since Peter Boncz added the unicode support on Oct 9 2002. \n");
#	mil.line("# I have no idea, where the problem might come from.\n");
#	mil.line("# Note also, that the problem seems to occur \"non-deterministically\"...\n");
#	mil.line("");
	aa_a := new(nil:void,nil:str);
	v1 := bat.setSequenceBase(aa_a,0@0);
#	mil.line("");
	ba_a := insert(v1,nil,"");
#	mil.line("v1.insert(nil,\"\");");
	ca_a := insert(v1,nil,"b");
#	mil.line("v1.insert(nil,\"b\");");
	da_a := insert(v1,nil,"");
#	mil.line("v1.insert(nil,\"\");");
	ea_a := insert(v1,nil,"c");
#	mil.line("v1.insert(nil,\"c\");");
	fa_a := insert(v1,nil,"");
#	mil.line("v1.insert(nil,\"\");");
	ga_a := insert(v1,nil,"a");
#	mil.line("v1.insert(nil,\"a\");");
	ha_a := insert(v1,nil,"");
#	mil.line("v1.insert(nil,\"\");");
	ia_a := print(v1);
#	mil.line("");
	ja_a := reverse(v1);
	ka_a := kunique(ja_a);
	v2 := reverse(ka_a);
#	mil.line("var v2 := v1.reverse().kunique().reverse();");
	la_a := reverse(v2);
	ma_a := sort(la_a);
	v3 := reverse(ma_a);
#	mil.line("var v3 := v2.reverse().sort().reverse();");
	na_a := print(v3);
#	mil.line("");
	v4 := new(nil:void,nil:str);
#	mil.line("");
	oa_a := insert(v4,nil,"");
#	mil.line("v4.insert(nil,\"\");");
	pa_a := insert(v4,nil,"b");
#	mil.line("v4.insert(nil,\"b\");");
	qa_a := insert(v4,nil,"");
#	mil.line("v4.insert(nil,\"\");");
	ra_a := insert(v4,nil,"c");
#	mil.line("v4.insert(nil,\"c\");");
	sa_a := insert(v4,nil,"");
#	mil.line("v4.insert(nil,\"\");");
	ta_a := insert(v4,nil,"a");
#	mil.line("v4.insert(nil,\"a\");");
	ua_a := insert(v4,nil,"");
#	mil.line("v4.insert(nil,\"\");");
	va_a := print(v4);
#	mil.line("");
	wa_a := reverse(v4);
	xa_a := kunique(wa_a);
	v5 := reverse(xa_a);
#	mil.line("var v5 := v4.reverse().kunique().reverse();");
	ya_a := reverse(v5);
	ab_a := sort(ya_a);
	v6 := reverse(ab_a);
#	mil.line("var v6 := v5.reverse().sort().reverse();");
	bb_a := print(v6);
#	mil.line("");
	cb_a := reverse(v4);
	db_a := mark(cb_a,0@0);
	v7 := reverse(db_a);
#	mil.line("var v7 := v4.reverse().mark(0@0).reverse();");
	eb_a := print(v7);
#	mil.line("");
	fb_a := reverse(v7);
	gb_a := kunique(fb_a);
	v8 := reverse(gb_a);
#	mil.line("var v8 := v7.reverse().kunique().reverse();");
	hb_a := reverse(v8);
	ib_a := sort(hb_a);
	v9 := reverse(ib_a);
#	mil.line("var v9 := v8.reverse().sort().reverse();");
	jb_a := print(v9);
#	mil.line("");
	kb_a := quit();
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
