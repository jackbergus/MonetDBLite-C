# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("## integers from -25 to 24\n");
	aa_a := new(nil:oid,nil:int,50);
#	io.print("var i := -25;");
	i := -25;
#	io.print("while(i < 25) a.insert(nil, (i :+= 1));");
barrier	ba_a := true;
barrier	ca_a := <(i,25);
!ERROR: "while(i < 25) a.insert(nil, (i :+= 1));"
!                        ^
! syntax error, unexpected TOK_IDENT, expecting '{'.
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
