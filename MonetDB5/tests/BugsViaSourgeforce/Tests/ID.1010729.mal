# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("var b := new(void, int).seqbase(0@0);");
	aa_a := new(nil:void,nil:int);
	b := bat.setSequenceBase(aa_a,0@0);
#	mil.line("b.insert(nil,1).insert(nil, 2).insert(nil, 3);");
	ba_a := insert(b,nil,1);
	ca_a := insert(ba_a,nil,2);
	da_a := insert(ca_a,nil,3);
#	mil.line("# 11 is the type_identifier of 'str'\n");
	ea_a := multiplex.tactics("cast",b,11);
	fa_a := print(ea_a);
#	mil.line("[cast](b, str).print();");
	ga_a := multiplex.tactics("cast",b,nil:str);
	ha_a := print(ga_a);
#	mil.line("[cast](b, dbl).print();");
	ia_a := multiplex.tactics("cast",b,nil:dbl);
	ja_a := print(ia_a);
#	mil.line("[cast](b.[+](48), chr).print();");
	ka_a := multiplex.tactics("+",b,48);
	la_a := multiplex.tactics("cast",ka_a,nil:chr);
	ma_a := print(la_a);
#Identifer 'seqbase' mapped to 'bat.setSequenceBase'
