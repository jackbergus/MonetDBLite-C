stdout of test 'find_nil_in_void.SF-921814` in directory 'tests/BugDay_2005-10-06_4.9.3` itself:


# 13:57:07 >  
# 13:57:07 >  Mtimeout -timeout 60 Mserver "--config=/home/manegold/Monet/Testing/Current/.GNU.32.32.d.--enable-debug.PREFIX./etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/home/manegold/Monet/Testing/Current/.GNU.32.32.d.--enable-debug.PREFIX./lib/MonetDB:/home/manegold/Monet/Testing/Current/.GNU.32.32.d.--enable-debug.PREFIX./lib/bin" --set "gdk_dbfarm=/home/manegold/Monet/Testing/Current/.GNU.32.32.d.--enable-debug.PREFIX./var/MonetDB/dbfarm" --set "sql_logdir=/home/manegold/Monet/Testing/Current/.GNU.32.32.d.--enable-debug.PREFIX./var/MonetDB/log" --set mapi_port=32481 --set sql_port=42936 --set xquery_port=53149 --set monet_prompt= --trace --dbname=mTests_tests_BugDay_2005-10-06_4.9.3  < find_nil_in_void.SF-921814.milS
# 13:57:07 >  

# Monet Database Server V4.9.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit with 32bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
#b := bat.new(:void,:str);
#bat.setSequenceBase(b,nil);
#bat.insert(b,nil,"zero");
#io.print(b);
#z:= algebra.find(b,0:oid);
#zs:=str.str(z);
#catch MALException;
#	zs:= nil:str;
#exit MALException;
#io.printf("oid(0) -> %s\n",zs);
#
#z:= algebra.find(b,nil:oid);
#zs:= str.str(z);
#io.printf("oid(nil) -> %s\n",zs);
#
#bat.setSequenceBase(b,0@0);
#bat.insert(b,nil,"zero");
#io.print(b);
#z:= algebra.find(b,0:oid);
#zs:=str.str(z);
#catch MALException;
#	zs:= nil:str;
#exit MALException;
#io.printf("oid(0) -> %s\n",zs);
#
#z:= algebra.find(b,nil:oid);
#zs:= str.str(z);
#catch MALException;
#	zs:= nil:str;
#exit MALException;
#io.printf("oid(nil) -> %s\n",zs);
#
function user.main():void;	# 0  (main:void)
    b := bat.new(:void,:str);	# 1 CMDBATnew (b:bat[:void,:str])<-(_2:void)(_3:str)
    bat.setSequenceBase(b,nil:void);	# 2 BKCsetSequenceBaseNil (_4:bat[:void,:str])<-(b:bat[:void,:str])(_5:void)
    bat.append(b,"zero");	# 3 BKCappend_val_wrap (_6:void)<-(b:bat[:void,:str])(_7:str)
    io.print(b);	# 4 IOprint_val (_8:void)<-(b:bat[:void,:str])
    z := algebra.find(b,0@0:oid);	# 5 ALGfind (z:str)<-(b:bat[:void,:str])(_10:oid)
    zs := str.str(z);	# 6 STRtostr (zs:str)<-(z:str)
catch MALException:str ;	# 7  (MALException:str) jump 9
    zs := nil:str;	# 8  (zs:str)<-(_13:str)
exit MALException:str ;	# 9  (MALException:str)
    io.printf("oid(0) -> %s\n",zs);	# 10 IOprint_formatted_str (_14:void)<-(_15:str)(zs:str)
    z := algebra.find(b,nil:oid);	# 11 ALGfind (z:str)<-(b:bat[:void,:str])(_16:oid)
    zs := str.str(z);	# 12 STRtostr (zs:str)<-(z:str)
    io.printf("oid(nil) -> %s\n",zs);	# 13 IOprint_formatted_str (_17:void)<-(_18:str)(zs:str)
    bat.setSequenceBase(b,0@0:oid);	# 14 BKCsetSequenceBase (_19:bat[:void,:str])<-(b:bat[:void,:str])(_10:oid)
    bat.append(b,"zero");	# 15 BKCappend_val_wrap (_20:void)<-(b:bat[:void,:str])(_7:str)
    io.print(b);	# 16 IOprint_val (_21:void)<-(b:bat[:void,:str])
    z := algebra.find(b,0@0:oid);	# 17 ALGfind (z:str)<-(b:bat[:void,:str])(_10:oid)
    zs := str.str(z);	# 18 STRtostr (zs:str)<-(z:str)
catch MALException:str ;	# 19  (MALException:str) jump 21
    zs := nil:str;	# 20  (zs:str)<-(_13:str)
exit MALException:str ;	# 21  (MALException:str)
    io.printf("oid(0) -> %s\n",zs);	# 22 IOprint_formatted_str (_22:void)<-(_15:str)(zs:str)
    z := algebra.find(b,nil:oid);	# 23 ALGfind (z:str)<-(b:bat[:void,:str])(_16:oid)
    zs := str.str(z);	# 24 STRtostr (zs:str)<-(z:str)
catch MALException:str ;	# 25  (MALException:str) jump 27
    zs := nil:str;	# 26  (zs:str)<-(_13:str)
exit MALException:str ;	# 27  (MALException:str)
    io.printf("oid(nil) -> %s\n",zs);	# 28 IOprint_formatted_str (_23:void)<-(_18:str)(zs:str)
end main;	# 29  
#-----------------#
# h	t	  # name
# void	str	  # type
#-----------------#
[ nil,	  "zero"  ]
oid(0) -> nil
oid(nil) -> zero
#-----------------#
# h	t	  # name
# void	str	  # type
#-----------------#
[ 0@0,	  "zero"  ]
[ 1@0,	  "zero"  ]
oid(0) -> zero
oid(nil) -> nil

# 13:57:07 >  
# 13:57:07 >  Done.
# 13:57:07 >  

