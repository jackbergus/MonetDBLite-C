stdout of test 'BATpropcheck_after_outerjoin.SF-936469` in directory 'tests/BugDay_2005-10-06_4.9.3` itself:


# 17:38:57 >  
# 17:38:57 >  Mtimeout -timeout 60 Mserver "--config=/ufs/roberto/servers/MonetDB/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/roberto/servers/MonetDB/lib/MonetDB:/ufs/roberto/servers/MonetDB/lib/bin" --set "gdk_dbfarm=/ufs/roberto/servers/MonetDB/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/roberto/servers/MonetDB/var/MonetDB/log" --set mapi_port=37594 --set sql_port=44892 --set xquery_port=59473 --set monet_prompt= --trace --dbname=mTests_tests_BugDay_2005-10-06_4.9.3  < BATpropcheck_after_outerjoin.SF-936469.milS
# 17:38:57 >  

# Monet Database Server V4.9.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
#x:=bat.new(:void,:int);
#bat.insert(x,nil,1);
#bat.insert(x,nil,2);
#bat.insert(x,nil,3);
#bat.setSequenceBase(x,1@0);
#
#y:=bat.new(:oid,:int);
#bat.insert(y,1@0,14);
#bat.insert(y,3@0,34);
#
##error here
#x1:= bat.mirror(x);
#x2:= algebra.outerjoin(x1,y);
#
##and here as well
#x3:= bat.reverse(x);
#x4:= algebra.outerjoin(x3,y);
#
function user.main():void;              #  0 main:void := user.main() {G}
    x := bat.new(:oid,:int);            #  1 x:bat[:oid,:int] := CMDBATnew(_2:oid, _3:int) {G}
    bat.insert(x,nil:oid,1);            #  2 _4:bat[:oid,:int] := BKCinsert_bun(x:bat[:oid,:int], _5:oid, _6:int) {G}
    bat.insert(x,nil:oid,2);            #  3 _7:bat[:oid,:int] := BKCinsert_bun(x:bat[:oid,:int], _5:oid, _8:int) {G}
    bat.insert(x,nil:oid,3);            #  4 _9:bat[:oid,:int] := BKCinsert_bun(x:bat[:oid,:int], _5:oid, _10:int) {G}
    y := bat.new(:oid,:int);            #  5 y:bat[:oid,:int] := CMDBATnew(_2:oid, _3:int) {G}
    bat.insert(y,1@0,14);               #  6 _12:bat[:oid,:int] := BKCinsert_bun(y:bat[:oid,:int], _13:oid, _14:int) {G}
    bat.insert(y,3@0,34);               #  7 _15:bat[:oid,:int] := BKCinsert_bun(y:bat[:oid,:int], _16:oid, _17:int) {G}
#error here 
    x1 := bat.mirror(x);                #  9 x1:bat[:oid,:oid] := BKCmirror(x:bat[:oid,:int]) {G}
    x2 := algebra.outerjoin(x1,y);      # 10 x2:bat[:oid,:int] := ALGouterjoin(x1:bat[:oid,:oid], y:bat[:oid,:int]) {G}
#and here as well 
    x3 := bat.reverse(x);               # 12 x3:bat[:int,:oid] := BKCreverse(x:bat[:oid,:int]) {G}
    x4 := algebra.outerjoin(x3,y);      # 13 x4:bat[:int,:int] := ALGouterjoin(x3:bat[:int,:oid], y:bat[:oid,:int]) {G}
end main;	# 14  

# 12:55:47 >  
# 12:55:47 >  Done.
# 12:55:47 >  

