stdout of test 'leftfetchjoin_void_oid.990857` in directory 'tests/BugDay_2005-10-06_4.9.3` itself:


# 15:55:08 >  
# 15:55:08 >  Mtimeout -timeout 60 Mserver "--config=/ufs/alink/local/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/alink/local/lib/MonetDB:/ufs/alink/local/lib/bin" --set "gdk_dbfarm=/ufs/alink/local/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/alink/local/var/MonetDB/log" --set mapi_port=34590 --set sql_port=40834 --set xquery_port=58151 --set monet_prompt= --trace --dbname=mTests_tests_BugDay_2005-10-06_4.9.3  < leftfetchjoin_void_oid.990857.milS
# 15:55:08 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugDay_2005-10-06_4.9.3
# Visit http://monetdb.cwi.nl/ for further information
#a := bat.new(:void,:oid);
#a0:= bat.reverse(a);
#a1:= algebra.markT(a0,0@0);
#a := bat.reverse(a1);
#
#b0 := bat.reverse(a);
#algebra.markT(b0,0@0);
#b1:= bat.reverse(b0);
#b:= batcalc.int(b1);
#z:= algebra.leftfetchjoin(a,b);
#i:= bat.info(z);
#io.print(i);
#
function user.main():void;	# 0  (main:void)
    a := bat.new(:void,:oid);	# 1 CMDBATnew (a:bat[:void,:oid])<-(_2:void)(_3:oid)
    a0 := bat.reverse(a);	# 2 BKCreverse (a0:bat[:oid,:void])<-(a:bat[:void,:oid])
    a1 := algebra.markT(a0,0@0);	# 3 ALGtmark (a1:bat[:oid,:void])<-(a0:bat[:oid,:void])(_6:oid)
    a := bat.reverse(a1);	# 4 BKCreverse (a:bat[:void,:oid])<-(a1:bat[:oid,:void])
    b0 := bat.reverse(a);	# 5 BKCreverse (b0:bat[:oid,:void])<-(a:bat[:void,:oid])
    algebra.markT(b0,0@0);	# 6 ALGtmark (_8:bat[:oid,:void])<-(b0:bat[:oid,:void])(_6:oid)
    b1 := bat.reverse(b0);	# 7 BKCreverse (b1:bat[:void,:oid])<-(b0:bat[:oid,:void])
    b := batcalc.int(b1);	# 8 CMDconvert_void_oid_int (b:bat[:void,:int])<-(b1:bat[:void,:oid])
    z := algebra.leftfetchjoin(a,b);	# 9 ALGleftfetchjoin (z:bat[:void,:int])<-(a:bat[:void,:oid])(b:bat[:void,:int])
    i := bat.info(z);	# 10 BKCinfo (i:bat[:str,:str])<-(z:bat[:void,:int])
    io.print(i);	# 11 IOprint_val (_13:void)<-(i:bat[:str,:str])
end main;	# 12  
#-----------------------------------------#
# h			t		  # name
# str			str		  # type
#-----------------------------------------#
[ "version",		  "25105"	  ]
[ "batId",		  "tmp_13"	  ]
[ "batCacheid",		  "11"		  ]
[ "batParentid",	  "0"		  ]
[ "batSharecnt",	  "0"		  ]
[ "head",		  "void"	  ]
[ "tail",		  "int"		  ]
[ "batPersistence",	  "transient"	  ]
[ "batRestricted",	  "read-only"	  ]
[ "batRefcnt",		  "1"		  ]
[ "batLRefcnt",		  "1"		  ]
[ "batDirty",		  "dirty"	  ]
[ "batSet",		  "0"		  ]
[ "void_tid",		  "-1"		  ]
[ "void_cnt",		  "0"		  ]
[ "hsorted",		  "65"		  ]
[ "hident",		  "h"		  ]
[ "hdense",		  "1"		  ]
[ "hseqbase",		  "0@0"		  ]
[ "hkey",		  "1"		  ]
[ "hloc",		  "0"		  ]
[ "hvarsized",		  "1"		  ]
[ "halign",		  "0"		  ]
[ "hnosorted",		  "0"		  ]
[ "hnosorted_rev",	  "0"		  ]
[ "hnodense",		  "0"		  ]
[ "hnokey[0]",		  "0"		  ]
[ "hnokey[1]",		  "0"		  ]
[ "tident",		  "t"		  ]
[ "tdense",		  "0"		  ]
[ "tseqbase",		  "0@0"		  ]
[ "tsorted",		  "65"		  ]
[ "tkey",		  "1"		  ]
[ "tloc",		  "0"		  ]
[ "tvarsized",		  "0"		  ]
[ "talign",		  "1000166"	  ]
[ "tnosorted",		  "0"		  ]
[ "tnosorted_rev",	  "0"		  ]
[ "tnodense",		  "0"		  ]
[ "tnokey[0]",		  "0"		  ]
[ "tnokey[1]",		  "0"		  ]
[ "batInserted",	  "0"		  ]
[ "batDeleted",		  "0"		  ]
[ "batFirst",		  "0"		  ]
[ "top",		  "0"		  ]
[ "batStamp",		  "9"		  ]
[ "lastUsed",		  "172"		  ]
[ "curStamp",		  "10"		  ]
[ "batCopiedtodisk",	  "0"		  ]
[ "batDirtydesc",	  "dirty"	  ]
[ "batDirtybuns",	  "clean"	  ]
[ "batBuns.free",	  "0"		  ]
[ "batBuns.size",	  "1024"	  ]
[ "batBuns.maxsize",	  "1024"	  ]
[ "batBuns.storage",	  "malloced"	  ]
[ "batBuns.filename",	  "13.buns"	  ]
[ "hheapdirty",		  "clean"	  ]
[ "theapdirty",		  "clean"	  ]

# 16:07:16 >  
# 16:07:16 >  Done.
# 16:07:16 >  

