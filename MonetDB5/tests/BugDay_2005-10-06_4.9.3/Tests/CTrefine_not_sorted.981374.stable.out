stdout of test 'CTrefine_not_sorted.981374` in directory 'tests/BugDay_2005-10-06_4.9.3` itself:


# 12:30:48 >  
# 12:30:48 >  Mtimeout -timeout 60 Mserver "--config=/ufs/fabian/scratch/monetdb/current/program/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program/lib/MonetDB:/ufs/fabian/scratch/monetdb/current/program/lib/bin" --set "gdk_dbfarm=/ufs/fabian/scratch/monetdb/current/program/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/fabian/scratch/monetdb/current/program/var/MonetDB/log" --set mapi_port=31532 --set sql_port=48185 --set xquery_port=52411 --set monet_prompt= --trace --dbname=mTests_tests_BugDay_2005-10-06_4.9.3  < radix_normal_segfault.SF-1120748.milS
# 12:30:48 >  

# Monet Database Server V4.9.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
#var_usage := bat.new(:oid,:oid);
#bat.insert(var_usage,0@0,1@0);
#bat.insert(var_usage,1@0,1@0);
## without the next line it doesn't crash
#var_usage0 := algebra.unique(var_usage);
#var_usage := bat.reverse(var_usage0);
#vu_vid0 := bat.reverse(var_usage);
#vu_vid1 := algebra.markT(vu_vid0,1000@0);
#vu_vid := bat.reverse(vu_vid1);
#
#vu_fid0 := algebra.markT(var_usage,1000@0);
#vu_fid := bat.reverse(vu_fid0);
#sorting := group.refine(vu_fid,vu_vid);
#io.print(sorting);
#
function user.main():void;              #  0 main:void := user.main() {G}
    var_usage := bat.new(:oid,:oid);    #  1 var_usage:bat[:oid,:oid] := CMDBATnew(_2:oid, _2:oid) {G}
    bat.insert(var_usage,0@0,1@0);      #  2 _3:bat[:oid,:oid] := BKCinsert_bun(var_usage:bat[:oid,:oid], _4:oid, _5:oid) {G}
    bat.insert(var_usage,1@0,1@0);      #  3 _6:bat[:oid,:oid] := BKCinsert_bun(var_usage:bat[:oid,:oid], _5:oid, _5:oid) {G}
# without the next line it doesn't crash 
    var_usage0 := algebra.unique(var_usage);#  5 var_usage0:bat[:oid,:oid] := ALGsunique(var_usage:bat[:oid,:oid]) {G}
    var_usage := bat.reverse(var_usage0);#  6 var_usage:bat[:oid,:oid] := BKCreverse(var_usage0:bat[:oid,:oid]) {G}
    vu_vid0 := bat.reverse(var_usage);  #  7 vu_vid0:bat[:oid,:oid] := BKCreverse(var_usage:bat[:oid,:oid]) {G}
    vu_vid1 := algebra.markT(vu_vid0,1000@0);#  8 vu_vid1:bat[:oid,:oid] := ALGtmark(vu_vid0:bat[:oid,:oid], _11:oid) {G}
    vu_vid := bat.reverse(vu_vid1);     #  9 vu_vid:bat[:oid,:oid] := BKCreverse(vu_vid1:bat[:oid,:oid]) {G}
    vu_fid0 := algebra.markT(var_usage,1000@0);# 10 vu_fid0:bat[:oid,:oid] := ALGtmark(var_usage:bat[:oid,:oid], _11:oid) {G}
    vu_fid := bat.reverse(vu_fid0);     # 11 vu_fid:bat[:oid,:oid] := BKCreverse(vu_fid0:bat[:oid,:oid]) {G}
    sorting := group.refine(vu_fid,vu_vid);# 12 sorting:bat[:oid,:oid] := GRPrefine(vu_fid:bat[:oid,:oid], vu_vid:bat[:oid,:oid]) {G}
    io.print(sorting);                  # 13 _16:void := IOprint_val(sorting:bat[:oid,:oid]) 
end main;	# 14  
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 1000@0, 1@0	  ]
[ 1001@0, 2@0	  ]

# 14:06:58 >  
# 14:06:58 >  Done.
# 14:06:58 >  

