# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

# Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#setoid(oid(20000000));
	aa_a := oid(20000000);
	ba_a := setoid(aa_a);
#view_bbp_name().print();
	ca_a := bbp.getNames();
	da_a := print(ca_a,);
#view_bbp_refcnt().print();
	ea_a := bbp.getRefCount();
	fa_a := print(ea_a,);
#view_bbp_location().print();
	ga_a := bbp.getLocation();
	ha_a := print(ga_a,);
#view_bbp_heat().print();
	ia_a := bbp.getHeat();
	ja_a := print(ia_a,);
#view_bbp_dirty().print();
	ka_a := bbp.getDirty();
	la_a := print(ka_a,);
#view_bbp_status().print();
	ma_a := bbp.getStatus();
	na_a := print(ma_a,);
#view_bbp_kind().print();
	oa_a := bbp.getKind();
	pa_a := print(oa_a,);
#view_atom_name().print();
	qa_a := view_atom_name();
	ra_a := print(qa_a,);
#"view_gdk_env".print();
	sa_a := print("view_gdk_env",);
#printf("#~BeginVariableOutput~#\n"); view_gdk_env().print(); printf("#~EndVariableOutput~#\n");
	ta_a := printf("#~BeginVariableOutput~#\n");
	ua_a := view_gdk_env();
	va_a := print(ua_a,);
	wa_a := printf("#~EndVariableOutput~#\n");
#"view_gdk_thread".print();
	xa_a := print("view_gdk_thread",);
#printf("#~BeginVariableOutput~#\n"); view_gdk_thread().print(); printf("#~EndVariableOutput~#\n");
	ya_a := printf("#~BeginVariableOutput~#\n");
	ab_a := view_gdk_thread();
	bb_a := print(ab_a,);
	cb_a := printf("#~EndVariableOutput~#\n");
#view_client_name().print();
	db_a := view_client_name();
	eb_a := print(db_a,);
#printf("#~BeginVariableOutput~#\n"); view_client_login().print(); printf("#~EndVariableOutput~#\n");
	fb_a := printf("#~BeginVariableOutput~#\n");
	gb_a := view_client_login();
	hb_a := print(gb_a,);
	ib_a := printf("#~EndVariableOutput~#\n");
#view_client_tree().print();
	jb_a := view_client_tree();
	kb_a := print(jb_a,);
#view_var_type() = view_var_type(); 
	lb_a := view_var_type();
	mb_a := view_var_type();
	nb_a := =(lb_a,mb_a);
#view_var_kind() = view_var_kind(); 
	ob_a := view_var_kind();
	pb_a := view_var_kind();
	qb_a := =(ob_a,pb_a);
#view_var_constant() = view_var_constant(); 
	rb_a := view_var_constant();
	sb_a := view_var_constant();
	tb_a := =(rb_a,sb_a);
#quit();
	ub_a := quit();
#Identifer 'view_bbp_name' mapped to 'bbp.getNames'
#Identifer 'view_bbp_refcnt' mapped to 'bbp.getRefCount'
#Identifer 'view_bbp_location' mapped to 'bbp.getLocation'
#Identifer 'view_bbp_heat' mapped to 'bbp.getHeat'
#Identifer 'view_bbp_dirty' mapped to 'bbp.getDirty'
#Identifer 'view_bbp_status' mapped to 'bbp.getStatus'
#Identifer 'view_bbp_kind' mapped to 'bbp.getKind'
