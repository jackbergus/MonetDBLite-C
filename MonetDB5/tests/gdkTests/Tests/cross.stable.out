stdout of test 'cross` in directory 'monetdb5/tests/gdkTests` itself:


# 09:01:02 >  
# 09:01:02 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31140 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  cross.mal < /dev/null
# 09:01:02 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.main():void;
    a := bat.new(:oid,:oid);
    ar := bat.reverse(a);
    io.print(ar);
    b := bat.new(:oid,:oid);
    io.print(b);
    ar := bat.reverse(a);
    c := algebra.crossproduct(ar,ar);
    io.print(c);
    bb := algebra.crossproduct(b,b);
    io.print(bb);
    ab := algebra.crossproduct(ar,b);
    io.print(ab);
    ba := algebra.crossproduct(b,ar);
    io.print(ba);
    bat.append(a,1@0);
    ar := bat.reverse(a);
    io.print(ar);
    bat.append(a,2@0);
    ar := bat.reverse(a);
    c := algebra.crossproduct(ar,ar);
    io.print(c);
    bb := algebra.crossproduct(b,b);
    io.print(bb);
    ab := algebra.crossproduct(ar,b);
    io.print(ab);
    ba := algebra.crossproduct(b,ar);
    io.print(ba);
    bat.append(b,11@0);
    io.print(b);
    ar := bat.reverse(a);
    c := algebra.crossproduct(ar,ar);
    io.print(c);
    bb := algebra.crossproduct(b,b);
    io.print(bb);
    ab := algebra.crossproduct(ar,b);
    io.print(ab);
    ba := algebra.crossproduct(b,ar);
    io.print(ba);
    ar := bat.reverse(a);
    c := algebra.crossproduct(ar,ar);
    io.print(c);
    bb := algebra.crossproduct(b,b);
    io.print(bb);
    ab := algebra.crossproduct(ar,b);
    io.print(ab);
    ba := algebra.crossproduct(b,ar);
    io.print(ba);
    bat.append(b,22@0);
    io.print(b);
    ar := bat.reverse(a);
    c := algebra.crossproduct(ar,ar);
    io.print(c);
    bb := algebra.crossproduct(b,b);
    io.print(bb);
    ab := algebra.crossproduct(ar,b);
    io.print(ab);
    ba := algebra.crossproduct(b,ar);
    io.print(ba);
end main;
#-----------------#
# t	h	  # name
# int	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
#-----------------#
# t	h	  # name
# int	void	  # type
#-----------------#
[ 1@0,	  0@0	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 1@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  0@0	  ]
[ 2@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  11@0	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 1@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  0@0	  ]
[ 2@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  11@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1@0,	  11@0	  ]
[ 2@0,	  11@0	  ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 0@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 1@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  0@0	  ]
[ 2@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  11@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1@0,	  11@0	  ]
[ 2@0,	  11@0	  ]
#-----------------#
# t	h	  # name
# oid	void	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 0@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  11@0	  ]
[ 1@0,	  22@0	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 1@0,	  0@0	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  0@0	  ]
[ 2@0,	  1@0	  ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  11@0	  ]
[ 0@0,	  22@0	  ]
[ 1@0,	  11@0	  ]
[ 1@0,	  22@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1@0,	  11@0	  ]
[ 1@0,	  22@0	  ]
[ 2@0,	  11@0	  ]
[ 2@0,	  22@0	  ]
#-----------------#
# h	t	  # name
# oid	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 0@0,	  1@0	  ]
[ 1@0,	  0@0	  ]
[ 1@0,	  1@0	  ]

# 09:01:02 >  
# 09:01:02 >  Done.
# 09:01:02 >  

