stdout of test 'casts` in directory 'tests/gdkTests` itself:


# 23:39:53 >  
# 23:39:53 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=38963 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  casts.mal < /dev/null
# 23:39:53 >  

!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
#io.printf("# casting to int\n");
#
#io.print(0);
#io.print(1);
#io.print(32767);
#io.print(32768);
#io.print(32769);
#io.print(2147483647);
#io.print(2147483648);
#io.print(2147483649);
#io.print(-2147483647);
#io.print(-2147483648);
#io.print(-2147483649);
#
#io.printf("# from bit\n");
#bi:= true:int; io.print(bi);
#bi:= false:int; io.print(bi);
#
#io.printf("# from chr\n");
#io.print('a':int);
#
#io.printf("# from sht\n");
#sh:= 1:sht; si:= calc.int(sh); io.print(si);
#sh:= 32767:sht; si:= calc.int(sh); io.print(si);
#
#io.printf("# from int\n");
#io.print(1:int);
#io.print(32767:int);
#io.print(32768:int);
#io.print(2147483647:int);
#io.print(-2147483647:int);
#i:= 2147483647:int+1:int;
#io.print(i);
#
#z:= -2147483647:int - 1:int;
#io.print(z);
#io.printf("# should this produce nil (overflow)?\n");
#z:= 2147483647:int + 2:int;
#io.print(z);
#io.printf("# should this produce nil (overflow)?\n");
#z:= -2147483647:int - 2:int;
#io.print(z);
#
#io.printf("# from lng\n");
#io.print(1LL:int);
#io.print(2147483647LL:int);
#io.print(2147483648LL:int);
#io.print(2147483649LL:int);
#io.print(-2147483647LL:int);
#io.print(-2147483648LL:int);
#io.print(-2147483649LL:int);
#
#io.printf("# from flt\n");
#io.print(0.0:int);
#io.print(0.1:int);
#io.print(0.5:int);
#io.print(0.9:int);
#io.print(1.0:int);
#io.print(-0.1:int);
#io.print(-0.5:int);
#io.print(-0.9:int);
#io.print(-1.0:int);
#io.print(2147483647.0:int);
#io.print(2147483648.0:int);
#io.print(2147483649.0:int);
#io.print(-2147483647.0:int);
#io.print(-2147483648.0:int);
#io.print(-2147483649.0:int);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:int);
#io.print(0.1LL:int);
#io.print(0.5LL:int);
#io.print(0.9LL:int);
#io.print(1.0LL:int);
#io.print(-0.1LL:int);
#io.print(-0.5LL:int);
#io.print(-0.9LL:int);
#io.print(-1.0LL:int);
#io.print(2147483647.0LL:int);
#io.print(2147483648.0LL:int);
#io.print(2147483649.0LL:int);
#io.print(-2147483647.0LL:int);
#io.print(-2147483648.0LL:int);
#io.print(-2147483649.0LL:int);
#
#io.printf("# from oid\n");
#io.print(2@0:int);
#io.print(2@1:int);
#io.print(2147483647@0:int);
#io.print(2147483648@0:int);
#io.print(2147483649@0:int);
#
#io.printf("# from str\n");
#io.print("0":int);
#io.print("32767":int);
#io.print("2147483647":int);
#io.print("2147483648":int);
#io.print("2147483649":int);
#io.print("-2147483647":int);
#io.print("-2147483648":int);
#io.print("-2147483649":int);
#io.print("":int);
#io.print("random string":int);
#
#io.printf("# to bit\n");
#
#io.printf("# from bit\n");
#io.print(true:bit);
#io.print(false:bit);
#
#io.printf("# from chr\n");
#io.print('a':bit);
#c:= 0:chr;
#b:= calc.bit(c);
#io.print(b);
#
#io.printf("# from sht\n");
#j:= 0:sht; b:= calc.bit(j); io.print(b);
#j:= 1:sht; b:= calc.bit(j); io.print(b);
#j:= -1:sht; b:= calc.bit(j); io.print(b);
#j:= 4096:sht; b:= calc.bit(j); io.print(b);
#
#io.printf("# from int\n");
#io.print(0:bit);
#io.print(1:bit);
#io.print(-1:bit);
#io.print(4096:bit);
#
#io.printf("# from lng\n");
#io.print(0LL:bit);
#io.print(1LL:bit);
#io.print(-1LL:bit);
#io.print(4096LL:bit);
#
#io.printf("# from flt\n");
#io.print(0.0:bit);
#io.print(0.1:bit);
#io.print(1.0:bit);
#io.print(-0.1:bit);
#io.print(-1.0:bit);
#io.print(4096.0:bit);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:bit);
#io.print(0.1LL:bit);
#io.print(1.0LL:bit);
#io.print(-0.1LL:bit);
#io.print(-1.0LL:bit);
#io.print(4096.0LL:bit);
#
#io.printf("# from oid\n");
#io.print(0@0:bit);
#io.print(1@0:bit);
#io.print(4096@0:bit);
#io.print(1073741824@0:bit);
#io.print(2147483647@0:bit);
#
#io.printf("# from str\n");
#io.print("true":bit);
#io.print("false":bit);
#io.print("0":bit);
#io.print("1":bit);
#io.print("random string":bit);
#io.print("":bit);
#
#io.printf("# to sht\n");
#
#io.printf("# from bit\n");
#io.print(true:sht);
#io.print(false:sht);
#
#io.printf("# from chr\n");
#io.print('a':sht);
#c:= 0:chr; cs:= calc.sht(c); io.print(cs);
#
#io.printf("# from int\n");
#io.print(0:sht);
#io.print(32767:sht);
#io.print(32768:sht);
#io.print(32769:sht);
#io.print(-32767:sht);
#io.print(-32768:sht);
#io.print(-32769:sht);
#io.print(2147483647:sht);
#
#io.printf("# from lng\n");
#io.print(0LL:sht);
#io.print(32767LL:sht);
#io.print(32768LL:sht);
#io.print(32769LL:sht);
#io.print(-32767LL:sht);
#io.print(-32768LL:sht);
#io.print(-32769LL:sht);
#io.print(2147483647LL:sht);
#
#io.printf("# from flt\n");
#io.print(0.0:sht);
#io.print(0.1:sht);
#io.print(0.5:sht);
#io.print(0.9:sht);
#io.print(1.0:sht);
#io.print(-0.1:sht);
#io.print(-0.5:sht);
#io.print(-0.9:sht);
#io.print(-1.0:sht);
#io.print(32767.0:sht);
#io.print(32768.0:sht);
#io.print(32769.0:sht);
#io.print(-32767.0:sht);
#io.print(-32768.0:sht);
#io.print(-32769.0:sht);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:sht);
#io.print(0.1LL:sht);
#io.print(0.5LL:sht);
#io.print(0.9LL:sht);
#io.print(1.0LL:sht);
#io.print(-0.1LL:sht);
#io.print(-0.5LL:sht);
#io.print(-0.9LL:sht);
#io.print(-1.0LL:sht);
#io.print(32767.0LL:sht);
#io.print(32768.0LL:sht);
#io.print(32769.0LL:sht);
#io.print(-32767.0LL:sht);
#io.print(-32768.0LL:sht);
#io.print(-32769.0LL:sht);
#
#io.printf("# from oid\n");
#io.print(0@0:sht);
#io.print(1@0:sht);
#io.print(4096@0:sht);
#io.print(1073741824@0:sht);
#io.print(2147483647@0:sht);
#
#io.printf("# from str\n");
#io.print("0":sht);
#io.print("32767":sht);
#io.print("32768":sht);
#io.print("32769":sht);
#io.print("-32767":sht);
#io.print("-32768":sht);
#io.print("-32769":sht);
#io.print("":sht);
#io.print("random string":sht);
#
#io.printf("# to long\n");
#
#io.print(0LL);
#io.print(1LL);
#io.print(32767LL);
#io.print(32768LL);
#io.print(32769LL);
#io.print(2147483647LL);
#io.print(2147483648LL);
#io.print(2147483649LL);
#io.print(-2147483647LL);
#io.print(-2147483648LL);
#io.print(-2147483649LL);
#io.print(9223372036854775807LL);
#io.print(9223372036854775808LL);
#io.print(9223372036854775809LL);
#io.print(-9223372036854775807LL);
#io.print(-9223372036854775808LL);
#io.print(-9223372036854775809LL);
#
#io.printf("# from bit\n");
#io.print(true:lng);
#io.print(false:lng);
#
#io.printf("# from chr\n");
#io.print('a':lng);
#
#io.printf("# from sht\n");
#ls:= 1:sht; ll:= calc.lng(ls); io.print(ll);
#lk:= 32767:sht; ll:= calc.lng(lk); io.print(ll);
#
#io.printf("# from int\n");
#io.print(1:lng);
#io.print(32767:lng);
#io.print(32768:lng);
#io.print(2147483647:lng);
#io.print(-2147483647:lng);
#lz:= 2147483647 +1;
#l:= calc.lng(lz);
#io.print(l);
#lu:= -2147483647 -1;
#l:= calc.lng(lu);
#io.print(l);
#io.printf("# should this produce nil (overflow)?\n");
#la:= 2147483647 +2;
#io.print(la);
#io.printf("# should this produce nil (overflow)?\n");
#lb:= -2147483647 -2;
#io.print(lb);
#
#io.printf("# from lng\n");
#io.printf("# from flt\n");
#io.print(0.0:lng);
#io.print(0.1:lng);
#io.print(0.5:lng);
#io.print(0.9:lng);
#io.print(1.0:lng);
#io.print(-0.1:lng);
#io.print(-0.5:lng);
#io.print(-0.9:lng);
#io.print(-1.0:lng);
#io.print(2147483647.0:lng);
#io.print(2147483648.0:lng);
#io.print(2147483649.0:lng);
#io.print(-2147483647.0:lng);
#io.print(-2147483648.0:lng);
#io.print(-2147483649.0:lng);
#io.print(9223372036854775807.0:lng);
#io.print(9223372036854775808.0:lng);
#io.print(9223372036854775809.0:lng);
#io.print(-9223372036854775807.0:lng);
#io.print(-9223372036854775808.0:lng);
#io.print(-9223372036854775809.0:lng);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:lng);
#io.print(0.1LL:lng);
#io.print(0.5LL:lng);
#io.print(0.9LL:lng);
#io.print(1.0LL:lng);
#io.print(-0.1LL:lng);
#io.print(-0.5LL:lng);
#io.print(-0.9LL:lng);
#io.print(-1.0LL:lng);
#io.print(2147483647.0LL:lng);
#io.print(2147483648.0LL:lng);
#io.print(2147483649.0LL:lng);
#io.print(-2147483647.0LL:lng);
#io.print(-2147483648.0LL:lng);
#io.print(-2147483649.0LL:lng);
#io.print(9223372036854775807.0LL:lng);
#io.print(9223372036854775808.0LL:lng);
#io.print(9223372036854775809.0LL:lng);
#io.print(-9223372036854775807.0LL:lng);
#io.print(-9223372036854775808.0LL:lng);
#io.print(-9223372036854775809.0LL:lng);
#
#io.printf("# from oid\n");
#io.print(2@0:lng);
#io.print(2@1:lng);
#io.print(2147483647@0:lng);
#io.print(2147483648@0:lng);
#io.print(2147483649@0:lng);
#io.print(9223372036854775807@0:lng);
#io.print(9223372036854775808@0:lng);
#io.print(9223372036854775809@0:lng);
#
#io.printf("# from str\n");
#io.print("0":lng);
#io.print("32767":lng);
#io.print("2147483647":lng);
#io.print("2147483648":lng);
#io.print("2147483649":lng);
#io.print("-2147483647":lng);
#io.print("-2147483648":lng);
#io.print("-2147483649":lng);
#io.print("":lng);
#io.print("random string":lng);
#io.print("9223372036854775807":lng);
#io.print("9223372036854775808":lng);
#io.print("9223372036854775809":lng);
#io.print("-9223372036854775807":lng);
#io.print("-9223372036854775808":lng);
#io.print("-9223372036854775809":lng);
#
#io.printf("# to flt\n");
#
#io.printf("# from bit\n");
#io.print(true:flt);
#io.print(false:flt);
#
#io.printf("# from chr\n");
#io.print('a':flt);
#
#io.printf("# from sht\n");
#s1:= 1:sht; f1:= calc.flt(s1); io.print(f1);
#s1:= 32767:sht; f1:= calc.flt(s1); io.print(f1);
#
#io.printf("# from int\n");
#io.print(1:flt);
#io.print(32767:flt);
#io.print(32768:flt);
#io.print(2147483647:flt);
#io.print(-2147483647:flt);
#fl:= 2147483647+1;
#f:= calc.flt(fl);
#io.print(f);
#fi:= -2147483647-1;
#f:= calc.flt(fi);
#io.print(f);
#io.printf("# should this produce nil (overflow)?\n");
#ff:= 2147483647+1;
#f:= calc.flt(ff);
#io.print(f);
#io.printf("# should this produce nil (overflow)?\n");
#fg:= -2147483647 -2;
#f:= calc.flt(fg);
#io.print(f);
#
#io.printf("# from lng\n");
#io.print(1LL:flt);
#io.print(2147483647LL:flt);
#io.print(2147483648LL:flt);
#io.print(2147483649LL:flt);
#io.print(-2147483647LL:flt);
#io.print(-2147483648LL:flt);
#io.print(-2147483649LL:flt);
#io.print(9223372036854775807LL:flt);
#io.print(9223372036854775808LL:flt);
#io.print(9223372036854775809LL:flt);
#io.print(-9223372036854775807LL:flt);
#io.print(-9223372036854775808LL:flt);
#io.print(-9223372036854775809LL:flt);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:flt);
#io.print(0.1LL:flt);
#io.print(0.5LL:flt);
#io.print(0.9LL:flt);
#io.print(1.0LL:flt);
#io.print(-0.1LL:flt);
#io.print(-0.5LL:flt);
#io.print(-0.9LL:flt);
#io.print(-1.0LL:flt);
#io.print(2147483647.0LL:flt);
#io.print(2147483648.0LL:flt);
#io.print(2147483649.0LL:flt);
#io.print(-2147483647.0LL:flt);
#io.print(-2147483648.0LL:flt);
#io.print(-2147483649.0LL:flt);
#
#io.printf("# from oid\n");
#io.print(2@0:flt);
#io.print(2@1:flt);
#io.print(2147483647@0:flt);
#io.print(2147483648@0:flt);
#io.print(2147483649@0:flt);
#
#io.printf("# from str\n");
#io.print("0":flt);
#io.print("32767":flt);
#io.print("2147483647":flt);
#io.print("2147483648":flt);
#io.print("2147483649":flt);
#io.print("-2147483647":flt);
#io.print("-2147483648":flt);
#io.print("-2147483649":flt);
#io.print("0.0":flt);
#io.print("0.1":flt);
#io.print("1.0":flt);
#io.print("1e0":flt);
#io.print("1e1":flt);
#io.print("1e10":flt);
#io.print("1e+10":flt);
#io.print("1e-10":flt);
#io.print("1.e0":flt);
#io.print("1.e1":flt);
#io.print("1.e10":flt);
#io.print("1.e+10":flt);
#io.print("1.e-10":flt);
#io.print("1.0e0":flt);
#io.print("1.0e1":flt);
#io.print("1.0e10":flt);
#io.print("1.0e+10":flt);
#io.print("1.0e-10":flt);
#io.print("-0.0":flt);
#io.print("-0.1":flt);
#io.print("-1.0":flt);
#io.print("-1e0":flt);
#io.print("-1e1":flt);
#io.print("-1e10":flt);
#io.print("-1e+10":flt);
#io.print("-1e-10":flt);
#io.print("-1.e0":flt);
#io.print("-1.e1":flt);
#io.print("-1.e10":flt);
#io.print("-1.e+10":flt);
#io.print("-1.e-10":flt);
#io.print("-1.0e0":flt);
#io.print("-1.0e1":flt);
#io.print("-1.0e10":flt);
#io.print("-1.0e+10":flt);
#io.print("-1.0e-10":flt);
#io.print("1E0":flt);
#io.print("1E1":flt);
#io.print("1E10":flt);
#io.print("1E+10":flt);
#io.print("1E-10":flt);
#io.print("1.E0":flt);
#io.print("1.E1":flt);
#io.print("1.E10":flt);
#io.print("1.E+10":flt);
#io.print("1.E-10":flt);
#io.print("1.0E0":flt);
#io.print("1.0E1":flt);
#io.print("1.0E10":flt);
#io.print("1.0E+10":flt);
#io.print("1.0E-10":flt);
#io.print("-1E0":flt);
#io.print("-1E1":flt);
#io.print("-1E10":flt);
#io.print("-1E+10":flt);
#io.print("-1E-10":flt);
#io.print("-1.E0":flt);
#io.print("-1.E1":flt);
#io.print("-1.E10":flt);
#io.print("-1.E+10":flt);
#io.print("-1.E-10":flt);
#io.print("-1.0E0":flt);
#io.print("-1.0E1":flt);
#io.print("-1.0E10":flt);
#io.print("-1.0E+10":flt);
#io.print("-1.0E-10":flt);
#io.printf("# flt range is -3.402823466E+38F to 3.402823466E+38F which is\n");
#io.printf("# -3.4028234663852886e+38 to 3.4028234663852886e+38 in double\n");
#io.printf("# precission\n");
#io.print("340282347000000000000000000000000000000":flt);
#io.print("340282346600000000000000000000000000000":flt);
#io.print("340282346700000000000000000000000000000":flt);
#io.print("-340282346600000000000000000000000000000":flt);
#io.print("-340282346700000000000000000000000000000":flt);
#io.print("3.402823466E+38":flt);
#io.print("3.402823467E+38":flt);
#io.print("0.3402823466E+39":flt);
#io.print("34.02823466E+37":flt);
#io.print("-3.402823466E+38":flt);
#io.print("-3.402823467E+38":flt);
#io.print("-0.3402823466E+39":flt);
#io.print("-34.02823466E+37":flt);
#io.print("":flt);
#io.print("random string":flt);
#
#io.printf("# to dbl\n");
#
#io.printf("# from bit\n");
#io.print(true:dbl);
#io.print(false:dbl);
#
#io.printf("# from chr\n");
#io.print('a':dbl);
#
#io.printf("# from sht\n");
#a:= 1:sht;
#d1:= calc.dbl(a);
#io.print(d1);
#a:= 32767:sht;
#d1:= calc.dbl(a);
#io.print(d1);
#
#io.printf("# from int\n");
#io.print(1:dbl);
#io.print(32767:dbl);
#io.print(32768:dbl);
#io.print(2147483647:dbl);
#io.print(-2147483647:dbl);
#zd:= 2147483647 + 1;
#ze:= calc.dbl(zd);
#io.print(zd);
#zj:= -2147483647 - 1;
#d:= calc.dbl(zj);
#io.print(d);
#io.printf("# should this produce nil (overflow)?\n");
#zn:= 2147483647 + 2;
#d:= calc.dbl(zn);
#io.print(d);
#io.printf("# should this produce nil (overflow)?\n");
#zk:= -2147483647 - 2l;
#d:= calc.dbl(zk);
#io.print(d);
#
#io.printf("# from lng\n");
#io.print(1LL:dbl);
#io.print(2147483647LL:dbl);
#io.print(2147483648LL:dbl);
#io.print(2147483649LL:dbl);
#io.print(-2147483647LL:dbl);
#io.print(-2147483648LL:dbl);
#io.print(-2147483649LL:dbl);
#io.print(9223372036854775807LL:dbl);
#io.print(9223372036854775808LL:dbl);
#io.print(9223372036854775809LL:dbl);
#io.print(-9223372036854775807LL:dbl);
#io.print(-9223372036854775808LL:dbl);
#io.print(-9223372036854775809LL:dbl);
#
#io.printf("# from flt\n");
#io.print(0.0:dbl);
#io.print(0.1:dbl);
#io.print(0.5:dbl);
#io.print(0.9:dbl);
#io.print(1.0:dbl);
#io.print(-0.1:dbl);
#io.print(-0.5:dbl);
#io.print(-0.9:dbl);
#io.print(-1.0:dbl);
#io.print(2147483647.0:dbl);
#io.print(2147483648.0:dbl);
#io.print(2147483649.0:dbl);
#io.print(-2147483647.0:dbl);
#io.print(-2147483648.0:dbl);
#io.print(-2147483649.0:dbl);
#
#io.printf("# from oid\n");
#io.print(2@0:dbl);
#io.print(2@1:dbl);
#io.print(2147483647@0:dbl);
#io.print(2147483648@0:dbl);
#io.print(2147483649@0:dbl);
#
#io.printf("# from str\n");
#io.print("0":dbl);
#io.print("32767":dbl);
#io.print("2147483647":dbl);
#io.print("2147483648":dbl);
#io.print("2147483649":dbl);
#io.print("-2147483647":dbl);
#io.print("-2147483648":dbl);
#io.print("-2147483649":dbl);
#io.print("0.0":dbl);
#io.print("0.1":dbl);
#io.print("1.0":dbl);
#io.print("1e0":dbl);
#io.print("1e1":dbl);
#io.print("1e10":dbl);
#io.print("1e+10":dbl);
#io.print("1e-10":dbl);
#io.print("1.e0":dbl);
#io.print("1.e1":dbl);
#io.print("1.e10":dbl);
#io.print("1.e+10":dbl);
#io.print("1.e-10":dbl);
#io.print("1.0e0":dbl);
#io.print("1.0e1":dbl);
#io.print("1.0e10":dbl);
#io.print("1.0e+10":dbl);
#io.print("1.0e-10":dbl);
#io.print("-0.0":dbl);
#io.print("-0.1":dbl);
#io.print("-1.0":dbl);
#io.print("-1e0":dbl);
#io.print("-1e1":dbl);
#io.print("-1e10":dbl);
#io.print("-1e+10":dbl);
#io.print("-1e-10":dbl);
#io.print("-1.e0":dbl);
#io.print("-1.e1":dbl);
#io.print("-1.e10":dbl);
#io.print("-1.e+10":dbl);
#io.print("-1.e-10":dbl);
#io.print("-1.0e0":dbl);
#io.print("-1.0e1":dbl);
#io.print("-1.0e10":dbl);
#io.print("-1.0e+10":dbl);
#io.print("-1.0e-10":dbl);
#io.print("1E0":dbl);
#io.print("1E1":dbl);
#io.print("1E10":dbl);
#io.print("1E+10":dbl);
#io.print("1E-10":dbl);
#io.print("1.E0":dbl);
#io.print("1.E1":dbl);
#io.print("1.E10":dbl);
#io.print("1.E+10":dbl);
#io.print("1.E-10":dbl);
#io.print("1.0E0":dbl);
#io.print("1.0E1":dbl);
#io.print("1.0E10":dbl);
#io.print("1.0E+10":dbl);
#io.print("1.0E-10":dbl);
#io.print("-1E0":dbl);
#io.print("-1E1":dbl);
#io.print("-1E10":dbl);
#io.print("-1E+10":dbl);
#io.print("-1E-10":dbl);
#io.print("-1.E0":dbl);
#io.print("-1.E1":dbl);
#io.print("-1.E10":dbl);
#io.print("-1.E+10":dbl);
#io.print("-1.E-10":dbl);
#io.print("-1.0E0":dbl);
#io.print("-1.0E1":dbl);
#io.print("-1.0E10":dbl);
#io.print("-1.0E+10":dbl);
#io.print("-1.0E-10":dbl);
#io.print("340282346600000000000000000000000000000":dbl);
#io.print("340282346700000000000000000000000000000":dbl);
#io.print("-340282346600000000000000000000000000000":dbl);
#io.print("-340282346700000000000000000000000000000":dbl);
#io.print("3.402823466E+38":dbl);
#io.print("3.402823467E+38":dbl);
#io.print("0.3402823466E+39":dbl);
#io.print("34.02823466E+37":dbl);
#io.print("-3.402823466E+38":dbl);
#io.print("-3.402823467E+38":dbl);
#io.print("-0.3402823466E+39":dbl);
#io.print("-34.02823466E+37":dbl);
#io.printf("# dbl range is -1.7976931348623157E+308 to 1.7976931348623157E+308.\n");
#io.print("179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000":dbl);
#io.print("179769313486231580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000":dbl);
#io.print("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000":dbl);
#io.print("-179769313486231580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000":dbl);
#io.print("1.7976931348623157E+308":dbl);
#io.print("1.7976931348623158E+308":dbl);
#io.print("0.17976931348623157E+309":dbl);
#io.print("17.976931348623157E+307":dbl);
#io.print("-1.7976931348623157E+308":dbl);
#io.print("-1.7976931348623158E+308":dbl);
#io.print("-0.17976931348623157E+309":dbl);
#io.print("-17.976931348623157E+307":dbl);
#io.print("":dbl);
#io.print("random string":dbl);
#
#io.printf("# to oid\n");
#
#io.printf("# from bit\n");
#io.print(true:oid);
#io.print(false:oid);
#
#io.printf("# from chr\n");
#io.print('a':oid);
#
#io.printf("# from sht\n");
#o1:= 1:sht; o2:= calc.oid(o1); io.print(o2);
#o1:= 32767:sht; o2:= calc.oid(o1); io.print(o2);
#
#io.printf("# from int\n");
#io.print(1:oid);
#io.print(32767:oid);
#io.print(32768:oid);
#io.print(2147483647:oid);
#o9:= -2147483647; o:= calc.oid(o9); io.print(o);
#o3:= 2147483647 +1; o:= calc.oid(o3); io.print(o);
#o4:= -2147483647 -1; o:= calc.oid(o4); io.print(o);
#io.printf("# should this produce nil (overflow)?\n");
#o5:= 2147483647 +2; o:=calc.oid(o5); io.print(o);
#io.printf("# should this produce nil (overflow)?\n");
#o6:= -2147483647 -2; o:=calc.oid(o6); io.print(o);
#
#io.printf("# from lng\n");
#io.print(1LL:oid);
#io.print(2147483647LL:oid);
#io.print(2147483648LL:oid);
#io.print(2147483649LL:oid);
#io.print(-2147483647LL:oid);
#io.print(-2147483648LL:oid);
#io.print(-2147483649LL:oid);
#
#io.printf("# from flt\n");
#io.print(0.0:oid);
#io.print(0.1:oid);
#io.print(0.5:oid);
#io.print(0.9:oid);
#io.print(1.0:oid);
#io.print(-0.1:oid);
#io.print(-0.5:oid);
#io.print(-0.9:oid);
#io.print(-1.0:oid);
#io.print(2147483647.0:oid);
#io.print(2147483648.0:oid);
#io.print(2147483649.0:oid);
#io.print(-2147483647.0:oid);
#io.print(-2147483648.0:oid);
#io.print(-2147483649.0:oid);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:oid);
#io.print(0.1LL:oid);
#io.print(0.5LL:oid);
#io.print(0.9LL:oid);
#io.print(1.0LL:oid);
#io.print(-0.1LL:oid);
#io.print(-0.5LL:oid);
#io.print(-0.9LL:oid);
#io.print(-1.0LL:oid);
#io.print(2147483647.0LL:oid);
#io.print(2147483648.0LL:oid);
#io.print(2147483649.0LL:oid);
#io.print(-2147483647.0LL:oid);
#io.print(-2147483648.0LL:oid);
#io.print(-2147483649.0LL:oid);
#
#io.printf("# from oid\n");
#io.print(2@0:oid);
#io.print(2@1:oid);
#io.print(2147483647@0:oid);
#io.print(2147483648@0:oid);
#io.print(2147483649@0:oid);
#
#io.printf("# from str\n");
#io.print("0":oid);
#io.print("32767":oid);
#io.print("2147483647":oid);
#io.print("2147483648":oid);
#io.print("2147483649":oid);
#io.print("-2147483647":oid);
#io.print("-2147483648":oid);
#io.print("-2147483649":oid);
#io.print("":oid);
#io.print("random string":oid);
#
#
#io.printf("# to str\n");
#
#io.printf("# from bit\n");
#io.print(true:str);
#io.print(false:str);
#
#io.printf("# from chr\n");
#io.print('a':str);
#
#io.printf("# from sht\n");
#s4:= 1:sht; s5:= calc.str(s4); io.print(s5);
#s4:= 32767:sht; s5:= calc.str(s4); io.print(s5);
#
#io.printf("# from int\n");
#io.print(1:str);
#io.print(32767:str);
#io.print(32768:str);
#io.print(2147483647:str);
#io.print(-2147483647:str);
#wd:= 2147483647:int +1; sv:= calc.str(wd); io.print(sv);
#wc:= -2147483647 -1; sv:= calc.str(wc); io.print(sv);
#io.printf("# should this produce nil (overflow)?\n");
#we:= 2147483647:int +2; sv:= calc.str(we); io.print(sv);
#io.printf("# should this produce nil (overflow)?\n");
#wb:= -2147483647 -2; sv:= calc.str(wb); io.print(sv);
#
#io.printf("# from lng\n");
#io.print(1LL:str);
#io.print(2147483647LL:str);
#io.print(2147483648LL:str);
#io.print(2147483649LL:str);
#io.print(-2147483647LL:str);
#io.print(-2147483648LL:str);
#io.print(-2147483649LL:str);
#
#io.printf("# from flt\n");
#io.print(0.0:str);
#io.print(0.1:str);
#io.print(0.5:str);
#io.print(0.9:str);
#io.print(1.0:str);
#io.print(-0.1:str);
#io.print(-0.5:str);
#io.print(-0.9:str);
#io.print(-1.0:str);
#io.print(2147483647.0:str);
#io.print(2147483648.0:str);
#io.print(2147483649.0:str);
#io.print(-2147483647.0:str);
#io.print(-2147483648.0:str);
#io.print(-2147483649.0:str);
#
#io.printf("# from dbl\n");
#io.print(0.0LL:str);
#io.print(0.1LL:str);
#io.print(0.5LL:str);
#io.print(0.9LL:str);
#io.print(1.0LL:str);
#io.print(-0.1LL:str);
#io.print(-0.5LL:str);
#io.print(-0.9LL:str);
#io.print(-1.0LL:str);
#io.print(2147483647.0LL:str);
#io.print(2147483648.0LL:str);
#io.print(2147483649.0LL:str);
#io.print(-2147483647.0LL:str);
#io.print(-2147483648.0LL:str);
#io.print(-2147483649.0LL:str);
#
#io.printf("# from oid\n");
#io.print(2@0:str);
#io.print(2@1:str);
#io.print(2147483647@0:str);
#io.print(2147483648@0:str);
#io.print(2147483649@0:str);
#
#io.printf("# from str\n");
#io.print("0":str);
#io.print("32767":str);
#io.print("2147483647":str);
#io.print("2147483648":str);
#io.print("2147483649":str);
#io.print("-2147483647":str);
#io.print("-2147483648":str);
#io.print("-2147483649":str);
#io.print("":str);
#io.print("random string":str);
#
function user.main():void;	# 0  (main:void)
    io.printf("# casting to int\n");	# 1 IOprint_str (_1:int)<-(_2:str)
    io.print(0:int);	# 2 IOprint_val (_3:int)<-(_4:int)
    io.print(1:int);	# 3 IOprint_val (_5:int)<-(_6:int)
    io.print(32767);	# 4 IOprint_val (_7:int)<-(_8:int)
    io.print(32768);	# 5 IOprint_val (_9:int)<-(_10:int)
    io.print(32769);	# 6 IOprint_val (_11:int)<-(_12:int)
    io.print(2147483647);	# 7 IOprint_val (_13:int)<-(_14:int)
    io.print(2147483648);	# 8 IOprint_val (_15:int)<-(_16:lng)
    io.print(2147483649);	# 9 IOprint_val (_17:int)<-(_18:lng)
    io.print(-2147483647:int);	# 10 IOprint_val (_19:int)<-(_20:int)
    io.print(-2147483648);	# 11 IOprint_val (_21:int)<-(_22:lng)
    io.print(-2147483649);	# 12 IOprint_val (_23:int)<-(_24:lng)
    io.printf("# from bit\n");	# 13 IOprint_str (_25:int)<-(_26:str)
    bi := 1:int;	# 14  (bi:int)<-(_6:int)
    io.print(bi);	# 15 IOprint_val (_28:int)<-(bi:int)
    bi := 0:int;	# 16  (bi:int)<-(_4:int)
    io.print(bi);	# 17 IOprint_val (_29:int)<-(bi:int)
    io.printf("# from chr\n");	# 18 IOprint_str (_30:int)<-(_31:str)
    io.print(97:int);	# 19 IOprint_val (_32:int)<-(_33:int)
    io.printf("# from sht\n");	# 20 IOprint_str (_34:int)<-(_35:str)
    sh := 1:sht;	# 21  (sh:sht)<-(_37:sht)
    si := calc.int(sh);	# 22 CALCsht2int (si:int)<-(sh:sht)
    io.print(si);	# 23 IOprint_val (_39:int)<-(si:int)
    sh := 32767:sht;	# 24  (sh:sht)<-(_40:sht)
    si := calc.int(sh);	# 25 CALCsht2int (si:int)<-(sh:sht)
    io.print(si);	# 26 IOprint_val (_41:int)<-(si:int)
    io.printf("# from int\n");	# 27 IOprint_str (_42:int)<-(_43:str)
    io.print(1:int);	# 28 IOprint_val (_44:int)<-(_45:int)
    io.print(32767:int);	# 29 IOprint_val (_46:int)<-(_47:int)
    io.print(32768:int);	# 30 IOprint_val (_48:int)<-(_49:int)
    io.print(2147483647:int);	# 31 IOprint_val (_50:int)<-(_51:int)
    io.print(-2147483647:int);	# 32 IOprint_val (_52:int)<-(_20:int)
    i := calc.+(2147483647:int,1:int);	# 33 CALCbinaryADDintint (i:int)<-(_51:int)(_45:int)
    io.print(i);	# 34 IOprint_val (_54:int)<-(i:int)
    z := calc.-(-2147483647:int,1:int);	# 35 CALCbinarySUBintint (z:int)<-(_20:int)(_45:int)
    io.print(z);	# 36 IOprint_val (_56:int)<-(z:int)
    io.printf("# should this produce nil (overflow)?\n");	# 37 IOprint_str (_57:int)<-(_58:str)
    z := calc.+(2147483647:int,2:int);	# 38 CALCbinaryADDintint (z:int)<-(_51:int)(_59:int)
    io.print(z);	# 39 IOprint_val (_60:int)<-(z:int)
    io.printf("# should this produce nil (overflow)?\n");	# 40 IOprint_str (_61:int)<-(_58:str)
    z := calc.-(-2147483647:int,2:int);	# 41 CALCbinarySUBintint (z:int)<-(_62:int)(_59:int)
    io.print(z);	# 42 IOprint_val (_63:int)<-(z:int)
    io.printf("# from lng\n");	# 43 IOprint_str (_64:int)<-(_65:str)
    io.print(1:int);	# 44 IOprint_val (_66:int)<-(_45:int)
    io.print(2147483647:int);	# 45 IOprint_val (_67:int)<-(_51:int)
    io.print(nil:int);	# 46 IOprint_val (_68:int)<-(_69:int)
    io.print(nil:int);	# 47 IOprint_val (_70:int)<-(_69:int)
    io.print(-2147483647:int);	# 48 IOprint_val (_71:int)<-(_62:int)
    io.print(nil:int);	# 49 IOprint_val (_72:int)<-(_69:int)
    io.print(nil:int);	# 50 IOprint_val (_73:int)<-(_69:int)
    io.printf("# from flt\n");	# 51 IOprint_str (_74:int)<-(_75:str)
    io.print(0:int);	# 52 IOprint_val (_76:int)<-(_77:int)
    io.print(0:int);	# 53 IOprint_val (_78:int)<-(_77:int)
    io.print(0:int);	# 54 IOprint_val (_79:int)<-(_77:int)
    io.print(0:int);	# 55 IOprint_val (_80:int)<-(_77:int)
    io.print(1:int);	# 56 IOprint_val (_81:int)<-(_82:int)
    io.print(0:int);	# 57 IOprint_val (_83:int)<-(_77:int)
    io.print(0:int);	# 58 IOprint_val (_84:int)<-(_77:int)
    io.print(0:int);	# 59 IOprint_val (_85:int)<-(_77:int)
    io.print(-1:int);	# 60 IOprint_val (_86:int)<-(_87:int)
    io.print(nil:int);	# 61 IOprint_val (_88:int)<-(_69:int)
    io.print(nil:int);	# 62 IOprint_val (_89:int)<-(_69:int)
    io.print(nil:int);	# 63 IOprint_val (_90:int)<-(_69:int)
    io.print(nil:int);	# 64 IOprint_val (_91:int)<-(_69:int)
    io.print(nil:int);	# 65 IOprint_val (_92:int)<-(_69:int)
    io.print(nil:int);	# 66 IOprint_val (_93:int)<-(_69:int)
    io.printf("# from dbl\n");	# 67 IOprint_str (_94:int)<-(_95:str)
    io.print(0:int);	# 68 IOprint_val (_96:int)<-(_77:int)
    io.print(0:int);	# 69 IOprint_val (_97:int)<-(_77:int)
    io.print(0:int);	# 70 IOprint_val (_98:int)<-(_77:int)
    io.print(0:int);	# 71 IOprint_val (_99:int)<-(_77:int)
    io.print(1:int);	# 72 IOprint_val (_100:int)<-(_82:int)
    io.print(0:int);	# 73 IOprint_val (_101:int)<-(_77:int)
    io.print(0:int);	# 74 IOprint_val (_102:int)<-(_77:int)
    io.print(0:int);	# 75 IOprint_val (_103:int)<-(_77:int)
    io.print(-1:int);	# 76 IOprint_val (_104:int)<-(_87:int)
    io.print(2147483647:int);	# 77 IOprint_val (_105:int)<-(_106:int)
    io.print(nil:int);	# 78 IOprint_val (_107:int)<-(_108:int)
    io.print(nil:int);	# 79 IOprint_val (_109:int)<-(_108:int)
    io.print(-2147483647:int);	# 80 IOprint_val (_110:int)<-(_111:int)
    io.print(nil:int);	# 81 IOprint_val (_112:int)<-(_108:int)
    io.print(nil:int);	# 82 IOprint_val (_113:int)<-(_108:int)
    io.printf("# from oid\n");	# 83 IOprint_str (_114:int)<-(_115:str)
    io.print(2:int);	# 84 IOprint_val (_116:int)<-(_117:int)
    io.print(2:int);	# 85 IOprint_val (_118:int)<-(_117:int)
    io.print(2147483647:int);	# 86 IOprint_val (_119:int)<-(_106:int)
    io.print(nil:int);	# 87 IOprint_val (_120:int)<-(_108:int)
    io.print(nil:int);	# 88 IOprint_val (_121:int)<-(_108:int)
    io.printf("# from str\n");	# 89 IOprint_str (_122:int)<-(_123:str)
    io.print(0:int);	# 90 IOprint_val (_124:int)<-(_125:int)
    io.print(32767:int);	# 91 IOprint_val (_126:int)<-(_127:int)
    io.print(2147483647:int);	# 92 IOprint_val (_128:int)<-(_129:int)
    io.print(nil:int);	# 93 IOprint_val (_130:int)<-(_131:int)
    io.print(nil:int);	# 94 IOprint_val (_132:int)<-(_133:int)
    io.print(-2147483647:int);	# 95 IOprint_val (_134:int)<-(_135:int)
    io.print(nil:int);	# 96 IOprint_val (_136:int)<-(_137:int)
    io.print(nil:int);	# 97 IOprint_val (_138:int)<-(_139:int)
    io.print(0:int);	# 98 IOprint_val (_140:int)<-(_125:int)
    io.print(nil:int);	# 99 IOprint_val (_141:int)<-(_142:int)
    io.printf("# to bit\n");	# 100 IOprint_str (_143:int)<-(_144:str)
    io.printf("# from bit\n");	# 101 IOprint_str (_145:int)<-(_146:str)
    io.print(true:bit);	# 102 IOprint_val (_147:int)<-(_148:bit)
    io.print(false:bit);	# 103 IOprint_val (_149:int)<-(_150:bit)
    io.printf("# from chr\n");	# 104 IOprint_str (_151:int)<-(_152:str)
    io.print(true:bit);	# 105 IOprint_val (_153:int)<-(_148:bit)
    c := '\000':chr;	# 106  (c:chr)<-(_155:chr)
    b := calc.bit(c);	# 107 CALCchr2bit (b:bit)<-(c:chr)
    io.print(b);	# 108 IOprint_val (_157:int)<-(b:bit)
    io.printf("# from sht\n");	# 109 IOprint_str (_158:int)<-(_159:str)
    j := 0:sht;	# 110  (j:sht)<-(_161:sht)
    b := calc.bit(j);	# 111 CALCsht2bit (b:bit)<-(j:sht)
    io.print(b);	# 112 IOprint_val (_162:int)<-(b:bit)
    j := 1:sht;	# 113  (j:sht)<-(_163:sht)
    b := calc.bit(j);	# 114 CALCsht2bit (b:bit)<-(j:sht)
    io.print(b);	# 115 IOprint_val (_164:int)<-(b:bit)
    j := -1:sht;	# 116  (j:sht)<-(_165:sht)
    b := calc.bit(j);	# 117 CALCsht2bit (b:bit)<-(j:sht)
    io.print(b);	# 118 IOprint_val (_166:int)<-(b:bit)
    j := 4096:sht;	# 119  (j:sht)<-(_167:sht)
    b := calc.bit(j);	# 120 CALCsht2bit (b:bit)<-(j:sht)
    io.print(b);	# 121 IOprint_val (_168:int)<-(b:bit)
    io.printf("# from int\n");	# 122 IOprint_str (_169:int)<-(_170:str)
    io.print(false:bit);	# 123 IOprint_val (_171:int)<-(_150:bit)
    io.print(true:bit);	# 124 IOprint_val (_172:int)<-(_148:bit)
    io.print(true:bit);	# 125 IOprint_val (_173:int)<-(_148:bit)
    io.print(true:bit);	# 126 IOprint_val (_174:int)<-(_148:bit)
    io.printf("# from lng\n");	# 127 IOprint_str (_175:int)<-(_176:str)
    io.print(false:bit);	# 128 IOprint_val (_177:int)<-(_150:bit)
    io.print(true:bit);	# 129 IOprint_val (_178:int)<-(_148:bit)
    io.print(true:bit);	# 130 IOprint_val (_179:int)<-(_148:bit)
    io.print(true:bit);	# 131 IOprint_val (_180:int)<-(_148:bit)
    io.printf("# from flt\n");	# 132 IOprint_str (_181:int)<-(_182:str)
    io.print(false:bit);	# 133 IOprint_val (_183:int)<-(_150:bit)
    io.print(true:bit);	# 134 IOprint_val (_184:int)<-(_185:bit)
    io.print(true:bit);	# 135 IOprint_val (_186:int)<-(_185:bit)
    io.print(true:bit);	# 136 IOprint_val (_187:int)<-(_185:bit)
    io.print(true:bit);	# 137 IOprint_val (_188:int)<-(_185:bit)
    io.print(true:bit);	# 138 IOprint_val (_189:int)<-(_185:bit)
    io.printf("# from dbl\n");	# 139 IOprint_str (_190:int)<-(_191:str)
    io.print(false:bit);	# 140 IOprint_val (_192:int)<-(_193:bit)
    io.print(true:bit);	# 141 IOprint_val (_194:int)<-(_185:bit)
    io.print(true:bit);	# 142 IOprint_val (_195:int)<-(_185:bit)
    io.print(true:bit);	# 143 IOprint_val (_196:int)<-(_185:bit)
    io.print(true:bit);	# 144 IOprint_val (_197:int)<-(_185:bit)
    io.print(true:bit);	# 145 IOprint_val (_198:int)<-(_185:bit)
    io.printf("# from oid\n");	# 146 IOprint_str (_199:int)<-(_200:str)
    io.print(false:bit);	# 147 IOprint_val (_201:int)<-(_193:bit)
    io.print(true:bit);	# 148 IOprint_val (_202:int)<-(_185:bit)
    io.print(true:bit);	# 149 IOprint_val (_203:int)<-(_185:bit)
    io.print(true:bit);	# 150 IOprint_val (_204:int)<-(_185:bit)
    io.print(true:bit);	# 151 IOprint_val (_205:int)<-(_185:bit)
    io.printf("# from str\n");	# 152 IOprint_str (_206:int)<-(_207:str)
    io.print(true:bit);	# 153 IOprint_val (_208:int)<-(_209:bit)
    io.print(false:bit);	# 154 IOprint_val (_210:int)<-(_211:bit)
    io.print(false:bit);	# 155 IOprint_val (_212:int)<-(_213:bit)
    io.print(true:bit);	# 156 IOprint_val (_214:int)<-(_215:bit)
    io.print(nil:bit);	# 157 IOprint_val (_216:int)<-(_217:bit)
    io.print(false:bit);	# 158 IOprint_val (_218:int)<-(_213:bit)
    io.printf("# to sht\n");	# 159 IOprint_str (_219:int)<-(_220:str)
    io.printf("# from bit\n");	# 160 IOprint_str (_221:int)<-(_222:str)
    io.print(1:sht);	# 161 IOprint_val (_223:int)<-(_224:sht)
    io.print(0:sht);	# 162 IOprint_val (_225:int)<-(_226:sht)
    io.printf("# from chr\n");	# 163 IOprint_str (_227:int)<-(_228:str)
    io.print(97:sht);	# 164 IOprint_val (_229:int)<-(_230:sht)
    c := '\000':chr;	# 165  (c:chr)<-(_231:chr)
    cs := calc.sht(c);	# 166 CALCchr2sht (cs:sht)<-(c:chr)
    io.print(cs);	# 167 IOprint_val (_233:int)<-(cs:sht)
    io.printf("# from int\n");	# 168 IOprint_str (_234:int)<-(_235:str)
    io.print(0:sht);	# 169 IOprint_val (_236:int)<-(_226:sht)
    io.print(32767:sht);	# 170 IOprint_val (_237:int)<-(_238:sht)
    io.print(nil:sht);	# 171 IOprint_val (_239:int)<-(_240:sht)
    io.print(nil:sht);	# 172 IOprint_val (_241:int)<-(_240:sht)
    io.print(-32767:sht);	# 173 IOprint_val (_242:int)<-(_243:sht)
    io.print(nil:sht);	# 174 IOprint_val (_244:int)<-(_240:sht)
    io.print(nil:sht);	# 175 IOprint_val (_245:int)<-(_240:sht)
    io.print(nil:sht);	# 176 IOprint_val (_246:int)<-(_240:sht)
    io.printf("# from lng\n");	# 177 IOprint_str (_247:int)<-(_248:str)
    io.print(0:sht);	# 178 IOprint_val (_249:int)<-(_226:sht)
    io.print(32767:sht);	# 179 IOprint_val (_250:int)<-(_238:sht)
    io.print(nil:sht);	# 180 IOprint_val (_251:int)<-(_240:sht)
    io.print(nil:sht);	# 181 IOprint_val (_252:int)<-(_240:sht)
    io.print(-32767:sht);	# 182 IOprint_val (_253:int)<-(_243:sht)
    io.print(nil:sht);	# 183 IOprint_val (_254:int)<-(_240:sht)
    io.print(nil:sht);	# 184 IOprint_val (_255:int)<-(_240:sht)
    io.print(nil:sht);	# 185 IOprint_val (_256:int)<-(_240:sht)
    io.printf("# from flt\n");	# 186 IOprint_str (_257:int)<-(_258:str)
    io.print(0:sht);	# 187 IOprint_val (_259:int)<-(_226:sht)
    io.print(0:sht);	# 188 IOprint_val (_260:int)<-(_226:sht)
    io.print(0:sht);	# 189 IOprint_val (_261:int)<-(_226:sht)
    io.print(0:sht);	# 190 IOprint_val (_262:int)<-(_263:sht)
    io.print(1:sht);	# 191 IOprint_val (_264:int)<-(_265:sht)
    io.print(0:sht);	# 192 IOprint_val (_266:int)<-(_263:sht)
    io.print(0:sht);	# 193 IOprint_val (_267:int)<-(_263:sht)
    io.print(0:sht);	# 194 IOprint_val (_268:int)<-(_263:sht)
    io.print(-1:sht);	# 195 IOprint_val (_269:int)<-(_270:sht)
    io.print(32767:sht);	# 196 IOprint_val (_271:int)<-(_238:sht)
    io.print(nil:sht);	# 197 IOprint_val (_272:int)<-(_240:sht)
    io.print(nil:sht);	# 198 IOprint_val (_273:int)<-(_240:sht)
    io.print(-32767:sht);	# 199 IOprint_val (_274:int)<-(_243:sht)
    io.print(nil:sht);	# 200 IOprint_val (_275:int)<-(_240:sht)
    io.print(nil:sht);	# 201 IOprint_val (_276:int)<-(_277:sht)
    io.printf("# from dbl\n");	# 202 IOprint_str (_278:int)<-(_279:str)
    io.print(0:sht);	# 203 IOprint_val (_280:int)<-(_263:sht)
    io.print(0:sht);	# 204 IOprint_val (_281:int)<-(_263:sht)
    io.print(0:sht);	# 205 IOprint_val (_282:int)<-(_263:sht)
    io.print(0:sht);	# 206 IOprint_val (_283:int)<-(_263:sht)
    io.print(1:sht);	# 207 IOprint_val (_284:int)<-(_265:sht)
    io.print(0:sht);	# 208 IOprint_val (_285:int)<-(_263:sht)
    io.print(0:sht);	# 209 IOprint_val (_286:int)<-(_263:sht)
    io.print(0:sht);	# 210 IOprint_val (_287:int)<-(_263:sht)
    io.print(-1:sht);	# 211 IOprint_val (_288:int)<-(_270:sht)
    io.print(32767:sht);	# 212 IOprint_val (_289:int)<-(_290:sht)
    io.print(nil:sht);	# 213 IOprint_val (_291:int)<-(_277:sht)
    io.print(nil:sht);	# 214 IOprint_val (_292:int)<-(_277:sht)
    io.print(-32767:sht);	# 215 IOprint_val (_293:int)<-(_294:sht)
    io.print(nil:sht);	# 216 IOprint_val (_295:int)<-(_277:sht)
    io.print(nil:sht);	# 217 IOprint_val (_296:int)<-(_277:sht)
    io.printf("# from oid\n");	# 218 IOprint_str (_297:int)<-(_298:str)
    io.print(0:sht);	# 219 IOprint_val (_299:int)<-(_300:sht)
    io.print(1:sht);	# 220 IOprint_val (_301:int)<-(_302:sht)
    io.print(4096:sht);	# 221 IOprint_val (_303:int)<-(_304:sht)
    io.print(nil:sht);	# 222 IOprint_val (_305:int)<-(_277:sht)
    io.print(nil:sht);	# 223 IOprint_val (_306:int)<-(_277:sht)
    io.printf("# from str\n");	# 224 IOprint_str (_307:int)<-(_308:str)
    io.print(0:sht);	# 225 IOprint_val (_309:int)<-(_310:sht)
    io.print(32767:sht);	# 226 IOprint_val (_311:int)<-(_312:sht)
    io.print(nil:sht);	# 227 IOprint_val (_313:int)<-(_314:sht)
    io.print(nil:sht);	# 228 IOprint_val (_315:int)<-(_316:sht)
    io.print(-32767:sht);	# 229 IOprint_val (_317:int)<-(_318:sht)
    io.print(nil:sht);	# 230 IOprint_val (_319:int)<-(_320:sht)
    io.print(nil:sht);	# 231 IOprint_val (_321:int)<-(_322:sht)
    io.print(0:sht);	# 232 IOprint_val (_323:int)<-(_310:sht)
    io.print(nil:sht);	# 233 IOprint_val (_324:int)<-(_325:sht)
    io.printf("# to long\n");	# 234 IOprint_str (_326:int)<-(_327:str)
    io.print(0:lng);	# 235 IOprint_val (_328:int)<-(_329:lng)
    io.print(1:lng);	# 236 IOprint_val (_330:int)<-(_331:lng)
    io.print(32767);	# 237 IOprint_val (_332:int)<-(_333:lng)
    io.print(32768);	# 238 IOprint_val (_334:int)<-(_335:lng)
    io.print(32769);	# 239 IOprint_val (_336:int)<-(_337:lng)
    io.print(2147483647);	# 240 IOprint_val (_338:int)<-(_339:lng)
    io.print(2147483648);	# 241 IOprint_val (_340:int)<-(_341:lng)
    io.print(2147483649);	# 242 IOprint_val (_342:int)<-(_343:lng)
    io.print(-2147483647);	# 243 IOprint_val (_344:int)<-(_345:lng)
    io.print(-2147483648);	# 244 IOprint_val (_346:int)<-(_347:lng)
    io.print(-2147483649);	# 245 IOprint_val (_348:int)<-(_349:lng)
    io.print(9223372036854775807);	# 246 IOprint_val (_350:int)<-(_351:lng)
    io.print(nil:lng);	# 247 IOprint_val (_352:int)<-(_353:lng)
    io.print(nil:lng);	# 248 IOprint_val (_354:int)<-(_353:lng)
    io.print(-9223372036854775807);	# 249 IOprint_val (_355:int)<-(_356:lng)
    io.print(nil:lng);	# 250 IOprint_val (_357:int)<-(_353:lng)
    io.print(nil:lng);	# 251 IOprint_val (_358:int)<-(_353:lng)
    io.printf("# from bit\n");	# 252 IOprint_str (_359:int)<-(_360:str)
    io.print(1:lng);	# 253 IOprint_val (_361:int)<-(_331:lng)
    io.print(0:lng);	# 254 IOprint_val (_362:int)<-(_329:lng)
    io.printf("# from chr\n");	# 255 IOprint_str (_363:int)<-(_364:str)
    io.print(97:lng);	# 256 IOprint_val (_365:int)<-(_366:lng)
    io.printf("# from sht\n");	# 257 IOprint_str (_367:int)<-(_368:str)
    ls := 1:sht;	# 258  (ls:sht)<-(_370:sht)
    ll := calc.lng(ls);	# 259 CALCsht2lng (ll:lng)<-(ls:sht)
    io.print(ll);	# 260 IOprint_val (_372:int)<-(ll:lng)
    lk := 32767:sht;	# 261  (lk:sht)<-(_374:sht)
    ll := calc.lng(lk);	# 262 CALCsht2lng (ll:lng)<-(lk:sht)
    io.print(ll);	# 263 IOprint_val (_375:int)<-(ll:lng)
    io.printf("# from int\n");	# 264 IOprint_str (_376:int)<-(_377:str)
    io.print(1:lng);	# 265 IOprint_val (_378:int)<-(_379:lng)
    io.print(32767:lng);	# 266 IOprint_val (_380:int)<-(_381:lng)
    io.print(32768:lng);	# 267 IOprint_val (_382:int)<-(_383:lng)
    io.print(2147483647:lng);	# 268 IOprint_val (_384:int)<-(_385:lng)
    io.print(-2147483647:lng);	# 269 IOprint_val (_386:int)<-(_387:lng)
    lz := calc.+(2147483647,1);	# 270 CALCbinaryADDintint (lz:int)<-(_389:int)(_390:int)
    l := calc.lng(lz);	# 271 CALCint2lng (l:lng)<-(lz:int)
    io.print(l);	# 272 IOprint_val (_392:int)<-(l:lng)
    lu := calc.-(-2147483647,1);	# 273 CALCbinarySUBintint (lu:int)<-(_394:int)(_390:int)
    l := calc.lng(lu);	# 274 CALCint2lng (l:lng)<-(lu:int)
    io.print(l);	# 275 IOprint_val (_395:int)<-(l:lng)
    io.printf("# should this produce nil (overflow)?\n");	# 276 IOprint_str (_396:int)<-(_397:str)
    la := calc.+(2147483647,2);	# 277 CALCbinaryADDintint (la:int)<-(_389:int)(_399:int)
    io.print(la);	# 278 IOprint_val (_400:int)<-(la:int)
    io.printf("# should this produce nil (overflow)?\n");	# 279 IOprint_str (_401:int)<-(_397:str)
    lb := calc.-(-2147483647,2);	# 280 CALCbinarySUBintint (lb:int)<-(_394:int)(_399:int)
    io.print(lb);	# 281 IOprint_val (_403:int)<-(lb:int)
    io.printf("# from lng\n");	# 282 IOprint_str (_404:int)<-(_405:str)
    io.printf("# from flt\n");	# 283 IOprint_str (_406:int)<-(_407:str)
    io.print(0:lng);	# 284 IOprint_val (_408:int)<-(_409:lng)
    io.print(0:lng);	# 285 IOprint_val (_410:int)<-(_409:lng)
    io.print(0:lng);	# 286 IOprint_val (_411:int)<-(_409:lng)
    io.print(0:lng);	# 287 IOprint_val (_412:int)<-(_409:lng)
    io.print(1:lng);	# 288 IOprint_val (_413:int)<-(_379:lng)
    io.print(0:lng);	# 289 IOprint_val (_414:int)<-(_409:lng)
    io.print(0:lng);	# 290 IOprint_val (_415:int)<-(_409:lng)
    io.print(0:lng);	# 291 IOprint_val (_416:int)<-(_409:lng)
    io.print(-1:lng);	# 292 IOprint_val (_417:int)<-(_418:lng)
    io.print(2147483648:lng);	# 293 IOprint_val (_419:int)<-(_420:lng)
    io.print(2147483648:lng);	# 294 IOprint_val (_421:int)<-(_420:lng)
    io.print(2147483648:lng);	# 295 IOprint_val (_422:int)<-(_420:lng)
    io.print(-2147483648:lng);	# 296 IOprint_val (_423:int)<-(_424:lng)
    io.print(-2147483648:lng);	# 297 IOprint_val (_425:int)<-(_424:lng)
    io.print(-2147483648:lng);	# 298 IOprint_val (_426:int)<-(_424:lng)
    io.print(nil:lng);	# 299 IOprint_val (_427:int)<-(_428:lng)
    io.print(nil:lng);	# 300 IOprint_val (_429:int)<-(_428:lng)
    io.print(nil:lng);	# 301 IOprint_val (_430:int)<-(_428:lng)
    io.print(nil:lng);	# 302 IOprint_val (_431:int)<-(_428:lng)
    io.print(nil:lng);	# 303 IOprint_val (_432:int)<-(_428:lng)
    io.print(nil:lng);	# 304 IOprint_val (_433:int)<-(_428:lng)
    io.printf("# from dbl\n");	# 305 IOprint_str (_434:int)<-(_435:str)
    io.print(0:lng);	# 306 IOprint_val (_436:int)<-(_409:lng)
    io.print(0:lng);	# 307 IOprint_val (_437:int)<-(_409:lng)
    io.print(0:lng);	# 308 IOprint_val (_438:int)<-(_409:lng)
    io.print(0:lng);	# 309 IOprint_val (_439:int)<-(_409:lng)
    io.print(1:lng);	# 310 IOprint_val (_440:int)<-(_441:lng)
    io.print(0:lng);	# 311 IOprint_val (_442:int)<-(_409:lng)
    io.print(0:lng);	# 312 IOprint_val (_443:int)<-(_409:lng)
    io.print(0:lng);	# 313 IOprint_val (_444:int)<-(_409:lng)
    io.print(-1:lng);	# 314 IOprint_val (_445:int)<-(_418:lng)
    io.print(2147483647:lng);	# 315 IOprint_val (_446:int)<-(_447:lng)
    io.print(2147483648:lng);	# 316 IOprint_val (_448:int)<-(_420:lng)
    io.print(2147483649:lng);	# 317 IOprint_val (_449:int)<-(_450:lng)
    io.print(-2147483647:lng);	# 318 IOprint_val (_451:int)<-(_452:lng)
    io.print(-2147483648:lng);	# 319 IOprint_val (_453:int)<-(_424:lng)
    io.print(-2147483649:lng);	# 320 IOprint_val (_454:int)<-(_455:lng)
    io.print(nil:lng);	# 321 IOprint_val (_456:int)<-(_428:lng)
    io.print(nil:lng);	# 322 IOprint_val (_457:int)<-(_428:lng)
    io.print(nil:lng);	# 323 IOprint_val (_458:int)<-(_428:lng)
    io.print(nil:lng);	# 324 IOprint_val (_459:int)<-(_428:lng)
    io.print(nil:lng);	# 325 IOprint_val (_460:int)<-(_428:lng)
    io.print(nil:lng);	# 326 IOprint_val (_461:int)<-(_428:lng)
    io.printf("# from oid\n");	# 327 IOprint_str (_462:int)<-(_463:str)
    io.print(2:lng);	# 328 IOprint_val (_464:int)<-(_465:lng)
    io.print(2:lng);	# 329 IOprint_val (_466:int)<-(_465:lng)
    io.print(2147483647:lng);	# 330 IOprint_val (_467:int)<-(_447:lng)
    io.print(2147483648:lng);	# 331 IOprint_val (_468:int)<-(_469:lng)
    io.print(2147483649:lng);	# 332 IOprint_val (_470:int)<-(_450:lng)
    io.print(9223372036854775807:lng);	# 333 IOprint_val (_471:int)<-(_472:lng)
    io.print(nil:lng);	# 334 IOprint_val (_473:int)<-(_474:lng)
    io.print(nil:lng);	# 335 IOprint_val (_475:int)<-(_474:lng)
    io.printf("# from str\n");	# 336 IOprint_str (_476:int)<-(_477:str)
    io.print(0:lng);	# 337 IOprint_val (_478:int)<-(_479:lng)
    io.print(32767:lng);	# 338 IOprint_val (_480:int)<-(_481:lng)
    io.print(2147483647:lng);	# 339 IOprint_val (_482:int)<-(_483:lng)
    io.print(2147483648:lng);	# 340 IOprint_val (_484:int)<-(_485:lng)
    io.print(2147483649:lng);	# 341 IOprint_val (_486:int)<-(_487:lng)
    io.print(-2147483647:lng);	# 342 IOprint_val (_488:int)<-(_489:lng)
    io.print(-2147483648:lng);	# 343 IOprint_val (_490:int)<-(_491:lng)
    io.print(-2147483649:lng);	# 344 IOprint_val (_492:int)<-(_493:lng)
    io.print(0:lng);	# 345 IOprint_val (_494:int)<-(_479:lng)
    io.print(nil:lng);	# 346 IOprint_val (_495:int)<-(_496:lng)
    io.print(9223372036854775807:lng);	# 347 IOprint_val (_497:int)<-(_498:lng)
    io.print(nil:lng);	# 348 IOprint_val (_499:int)<-(_500:lng)
    io.print(nil:lng);	# 349 IOprint_val (_501:int)<-(_502:lng)
    io.print(-9223372036854775807:lng);	# 350 IOprint_val (_503:int)<-(_504:lng)
    io.print(nil:lng);	# 351 IOprint_val (_505:int)<-(_506:lng)
    io.print(nil:lng);	# 352 IOprint_val (_507:int)<-(_508:lng)
    io.printf("# to flt\n");	# 353 IOprint_str (_509:int)<-(_510:str)
    io.printf("# from bit\n");	# 354 IOprint_str (_511:int)<-(_512:str)
    io.print(1:flt);	# 355 IOprint_val (_513:int)<-(_514:flt)
    io.print(0:flt);	# 356 IOprint_val (_515:int)<-(_516:flt)
    io.printf("# from chr\n");	# 357 IOprint_str (_517:int)<-(_518:str)
    io.print(97:flt);	# 358 IOprint_val (_519:int)<-(_520:flt)
    io.printf("# from sht\n");	# 359 IOprint_str (_521:int)<-(_522:str)
    s1 := 1:sht;	# 360  (s1:sht)<-(_524:sht)
    f1 := calc.flt(s1);	# 361 CALCsht2flt (f1:flt)<-(s1:sht)
    io.print(f1);	# 362 IOprint_val (_526:int)<-(f1:flt)
    s1 := 32767:sht;	# 363  (s1:sht)<-(_527:sht)
    f1 := calc.flt(s1);	# 364 CALCsht2flt (f1:flt)<-(s1:sht)
    io.print(f1);	# 365 IOprint_val (_528:int)<-(f1:flt)
    io.printf("# from int\n");	# 366 IOprint_str (_529:int)<-(_530:str)
    io.print(1:flt);	# 367 IOprint_val (_531:int)<-(_514:flt)
    io.print(32767:flt);	# 368 IOprint_val (_532:int)<-(_533:flt)
    io.print(32768:flt);	# 369 IOprint_val (_534:int)<-(_535:flt)
    io.print(2.14748365e+09:flt);	# 370 IOprint_val (_536:int)<-(_537:flt)
    io.print(-2.14748365e+09:flt);	# 371 IOprint_val (_538:int)<-(_539:flt)
    fl := calc.+(2147483647,1);	# 372 CALCbinaryADDintint (fl:int)<-(_541:int)(_542:int)
    f := calc.flt(fl);	# 373 CALCint2flt (f:flt)<-(fl:int)
    io.print(f);	# 374 IOprint_val (_544:int)<-(f:flt)
    fi := calc.-(-2147483647,1);	# 375 CALCbinarySUBintint (fi:int)<-(_546:int)(_542:int)
    f := calc.flt(fi);	# 376 CALCint2flt (f:flt)<-(fi:int)
    io.print(f);	# 377 IOprint_val (_547:int)<-(f:flt)
    io.printf("# should this produce nil (overflow)?\n");	# 378 IOprint_str (_548:int)<-(_549:str)
    ff := calc.+(2147483647,1);	# 379 CALCbinaryADDintint (ff:int)<-(_541:int)(_542:int)
    f := calc.flt(ff);	# 380 CALCint2flt (f:flt)<-(ff:int)
    io.print(f);	# 381 IOprint_val (_551:int)<-(f:flt)
    io.printf("# should this produce nil (overflow)?\n");	# 382 IOprint_str (_552:int)<-(_549:str)
    fg := calc.-(-2147483647,2);	# 383 CALCbinarySUBintint (fg:int)<-(_546:int)(_554:int)
    f := calc.flt(fg);	# 384 CALCint2flt (f:flt)<-(fg:int)
    io.print(f);	# 385 IOprint_val (_555:int)<-(f:flt)
    io.printf("# from lng\n");	# 386 IOprint_str (_556:int)<-(_557:str)
    io.print(1:flt);	# 387 IOprint_val (_558:int)<-(_559:flt)
    io.print(2.14748365e+09:flt);	# 388 IOprint_val (_560:int)<-(_537:flt)
    io.print(2.14748365e+09:flt);	# 389 IOprint_val (_561:int)<-(_537:flt)
    io.print(2.14748365e+09:flt);	# 390 IOprint_val (_562:int)<-(_537:flt)
    io.print(-2.14748365e+09:flt);	# 391 IOprint_val (_563:int)<-(_539:flt)
    io.print(-2.14748365e+09:flt);	# 392 IOprint_val (_564:int)<-(_539:flt)
    io.print(-2.14748365e+09:flt);	# 393 IOprint_val (_565:int)<-(_539:flt)
    io.print(9.22337204e+18:flt);	# 394 IOprint_val (_566:int)<-(_567:flt)
    io.print(nil:flt);	# 395 IOprint_val (_568:int)<-(_569:flt)
    io.print(nil:flt);	# 396 IOprint_val (_570:int)<-(_569:flt)
    io.print(-9.22337204e+18:flt);	# 397 IOprint_val (_571:int)<-(_572:flt)
    io.print(nil:flt);	# 398 IOprint_val (_573:int)<-(_569:flt)
    io.print(nil:flt);	# 399 IOprint_val (_574:int)<-(_569:flt)
    io.printf("# from dbl\n");	# 400 IOprint_str (_575:int)<-(_576:str)
    io.print(0:flt);	# 401 IOprint_val (_577:int)<-(_578:flt)
    io.print(0.100000001:flt);	# 402 IOprint_val (_579:int)<-(_580:flt)
    io.print(0.5:flt);	# 403 IOprint_val (_581:int)<-(_582:flt)
    io.print(0.899999976:flt);	# 404 IOprint_val (_583:int)<-(_584:flt)
    io.print(1:flt);	# 405 IOprint_val (_585:int)<-(_559:flt)
    io.print(-0.100000001:flt);	# 406 IOprint_val (_586:int)<-(_587:flt)
    io.print(-0.5:flt);	# 407 IOprint_val (_588:int)<-(_589:flt)
    io.print(-0.899999976:flt);	# 408 IOprint_val (_590:int)<-(_591:flt)
    io.print(-1:flt);	# 409 IOprint_val (_592:int)<-(_593:flt)
    io.print(2.14748365e+09:flt);	# 410 IOprint_val (_594:int)<-(_595:flt)
    io.print(2.14748365e+09:flt);	# 411 IOprint_val (_596:int)<-(_595:flt)
    io.print(2.14748365e+09:flt);	# 412 IOprint_val (_597:int)<-(_595:flt)
    io.print(-2.14748365e+09:flt);	# 413 IOprint_val (_598:int)<-(_599:flt)
    io.print(-2.14748365e+09:flt);	# 414 IOprint_val (_600:int)<-(_599:flt)
    io.print(-2.14748365e+09:flt);	# 415 IOprint_val (_601:int)<-(_599:flt)
    io.printf("# from oid\n");	# 416 IOprint_str (_602:int)<-(_603:str)
    io.print(2:flt);	# 417 IOprint_val (_604:int)<-(_605:flt)
    io.print(2:flt);	# 418 IOprint_val (_606:int)<-(_605:flt)
    io.print(2.14748365e+09:flt);	# 419 IOprint_val (_607:int)<-(_595:flt)
    io.print(2.14748365e+09:flt);	# 420 IOprint_val (_608:int)<-(_595:flt)
    io.print(2.14748365e+09:flt);	# 421 IOprint_val (_609:int)<-(_595:flt)
    io.printf("# from str\n");	# 422 IOprint_str (_610:int)<-(_611:str)
    io.print(0:flt);	# 423 IOprint_val (_612:int)<-(_613:flt)
    io.print(32767:flt);	# 424 IOprint_val (_614:int)<-(_615:flt)
    io.print(2.14748365e+09:flt);	# 425 IOprint_val (_616:int)<-(_617:flt)
    io.print(2.14748365e+09:flt);	# 426 IOprint_val (_618:int)<-(_619:flt)
    io.print(2.14748365e+09:flt);	# 427 IOprint_val (_620:int)<-(_621:flt)
    io.print(-2.14748365e+09:flt);	# 428 IOprint_val (_622:int)<-(_623:flt)
    io.print(-2.14748365e+09:flt);	# 429 IOprint_val (_624:int)<-(_625:flt)
    io.print(-2.14748365e+09:flt);	# 430 IOprint_val (_626:int)<-(_627:flt)
    io.print(0:flt);	# 431 IOprint_val (_628:int)<-(_629:flt)
    io.print(0.100000001:flt);	# 432 IOprint_val (_630:int)<-(_631:flt)
    io.print(1:flt);	# 433 IOprint_val (_632:int)<-(_633:flt)
    io.print(1:flt);	# 434 IOprint_val (_634:int)<-(_635:flt)
    io.print(10:flt);	# 435 IOprint_val (_636:int)<-(_637:flt)
    io.print(1e+10:flt);	# 436 IOprint_val (_638:int)<-(_639:flt)
    io.print(1e+10:flt);	# 437 IOprint_val (_640:int)<-(_641:flt)
    io.print(1.00000001e-10:flt);	# 438 IOprint_val (_642:int)<-(_643:flt)
    io.print(1:flt);	# 439 IOprint_val (_644:int)<-(_645:flt)
    io.print(10:flt);	# 440 IOprint_val (_646:int)<-(_647:flt)
    io.print(1e+10:flt);	# 441 IOprint_val (_648:int)<-(_649:flt)
    io.print(1e+10:flt);	# 442 IOprint_val (_650:int)<-(_651:flt)
    io.print(1.00000001e-10:flt);	# 443 IOprint_val (_652:int)<-(_653:flt)
    io.print(1:flt);	# 444 IOprint_val (_654:int)<-(_655:flt)
    io.print(10:flt);	# 445 IOprint_val (_656:int)<-(_657:flt)
    io.print(1e+10:flt);	# 446 IOprint_val (_658:int)<-(_659:flt)
    io.print(1e+10:flt);	# 447 IOprint_val (_660:int)<-(_661:flt)
    io.print(1.00000001e-10:flt);	# 448 IOprint_val (_662:int)<-(_663:flt)
    io.print(-0:flt);	# 449 IOprint_val (_664:int)<-(_665:flt)
    io.print(-0.100000001:flt);	# 450 IOprint_val (_666:int)<-(_667:flt)
    io.print(-1:flt);	# 451 IOprint_val (_668:int)<-(_669:flt)
    io.print(-1:flt);	# 452 IOprint_val (_670:int)<-(_671:flt)
    io.print(-10:flt);	# 453 IOprint_val (_672:int)<-(_673:flt)
    io.print(-1e+10:flt);	# 454 IOprint_val (_674:int)<-(_675:flt)
    io.print(-1e+10:flt);	# 455 IOprint_val (_676:int)<-(_677:flt)
    io.print(-1.00000001e-10:flt);	# 456 IOprint_val (_678:int)<-(_679:flt)
    io.print(-1:flt);	# 457 IOprint_val (_680:int)<-(_681:flt)
    io.print(-10:flt);	# 458 IOprint_val (_682:int)<-(_683:flt)
    io.print(-1e+10:flt);	# 459 IOprint_val (_684:int)<-(_685:flt)
    io.print(-1e+10:flt);	# 460 IOprint_val (_686:int)<-(_687:flt)
    io.print(-1.00000001e-10:flt);	# 461 IOprint_val (_688:int)<-(_689:flt)
    io.print(-1:flt);	# 462 IOprint_val (_690:int)<-(_691:flt)
    io.print(-10:flt);	# 463 IOprint_val (_692:int)<-(_693:flt)
    io.print(-1e+10:flt);	# 464 IOprint_val (_694:int)<-(_695:flt)
    io.print(-1e+10:flt);	# 465 IOprint_val (_696:int)<-(_697:flt)
    io.print(-1.00000001e-10:flt);	# 466 IOprint_val (_698:int)<-(_699:flt)
    io.print(1:flt);	# 467 IOprint_val (_700:int)<-(_701:flt)
    io.print(10:flt);	# 468 IOprint_val (_702:int)<-(_703:flt)
    io.print(1e+10:flt);	# 469 IOprint_val (_704:int)<-(_705:flt)
    io.print(1e+10:flt);	# 470 IOprint_val (_706:int)<-(_707:flt)
    io.print(1.00000001e-10:flt);	# 471 IOprint_val (_708:int)<-(_709:flt)
    io.print(1:flt);	# 472 IOprint_val (_710:int)<-(_711:flt)
    io.print(10:flt);	# 473 IOprint_val (_712:int)<-(_713:flt)
    io.print(1e+10:flt);	# 474 IOprint_val (_714:int)<-(_715:flt)
    io.print(1e+10:flt);	# 475 IOprint_val (_716:int)<-(_717:flt)
    io.print(1.00000001e-10:flt);	# 476 IOprint_val (_718:int)<-(_719:flt)
    io.print(1:flt);	# 477 IOprint_val (_720:int)<-(_721:flt)
    io.print(10:flt);	# 478 IOprint_val (_722:int)<-(_723:flt)
    io.print(1e+10:flt);	# 479 IOprint_val (_724:int)<-(_725:flt)
    io.print(1e+10:flt);	# 480 IOprint_val (_726:int)<-(_727:flt)
    io.print(1.00000001e-10:flt);	# 481 IOprint_val (_728:int)<-(_729:flt)
    io.print(-1:flt);	# 482 IOprint_val (_730:int)<-(_731:flt)
    io.print(-10:flt);	# 483 IOprint_val (_732:int)<-(_733:flt)
    io.print(-1e+10:flt);	# 484 IOprint_val (_734:int)<-(_735:flt)
    io.print(-1e+10:flt);	# 485 IOprint_val (_736:int)<-(_737:flt)
    io.print(-1.00000001e-10:flt);	# 486 IOprint_val (_738:int)<-(_739:flt)
    io.print(-1:flt);	# 487 IOprint_val (_740:int)<-(_741:flt)
    io.print(-10:flt);	# 488 IOprint_val (_742:int)<-(_743:flt)
    io.print(-1e+10:flt);	# 489 IOprint_val (_744:int)<-(_745:flt)
    io.print(-1e+10:flt);	# 490 IOprint_val (_746:int)<-(_747:flt)
    io.print(-1.00000001e-10:flt);	# 491 IOprint_val (_748:int)<-(_749:flt)
    io.print(-1:flt);	# 492 IOprint_val (_750:int)<-(_751:flt)
    io.print(-10:flt);	# 493 IOprint_val (_752:int)<-(_753:flt)
    io.print(-1e+10:flt);	# 494 IOprint_val (_754:int)<-(_755:flt)
    io.print(-1e+10:flt);	# 495 IOprint_val (_756:int)<-(_757:flt)
    io.print(-1.00000001e-10:flt);	# 496 IOprint_val (_758:int)<-(_759:flt)
    io.printf("# flt range is -3.402823466E+38F to 3.402823466E+38F which is\n");	# 497 IOprint_str (_760:int)<-(_761:str)
    io.printf("# -3.4028234663852886e+38 to 3.4028234663852886e+38 in double\n");	# 498 IOprint_str (_762:int)<-(_763:str)
    io.printf("# precission\n");	# 499 IOprint_str (_764:int)<-(_765:str)
    io.print(3.40282347e+38:flt);	# 500 IOprint_val (_766:int)<-(_767:flt)
    io.print(3.40282347e+38:flt);	# 501 IOprint_val (_768:int)<-(_769:flt)
    io.print(3.40282347e+38:flt);	# 502 IOprint_val (_770:int)<-(_771:flt)
    io.print(nil:flt);	# 503 IOprint_val (_772:int)<-(_773:flt)
    io.print(nil:flt);	# 504 IOprint_val (_774:int)<-(_775:flt)
    io.print(3.40282347e+38:flt);	# 505 IOprint_val (_776:int)<-(_777:flt)
    io.print(3.40282347e+38:flt);	# 506 IOprint_val (_778:int)<-(_779:flt)
    io.print(3.40282347e+38:flt);	# 507 IOprint_val (_780:int)<-(_781:flt)
    io.print(3.40282347e+38:flt);	# 508 IOprint_val (_782:int)<-(_783:flt)
    io.print(nil:flt);	# 509 IOprint_val (_784:int)<-(_785:flt)
    io.print(nil:flt);	# 510 IOprint_val (_786:int)<-(_787:flt)
    io.print(nil:flt);	# 511 IOprint_val (_788:int)<-(_789:flt)
    io.print(nil:flt);	# 512 IOprint_val (_790:int)<-(_791:flt)
    io.print(nil:flt);	# 513 IOprint_val (_792:int)<-(_793:flt)
    io.print(nil:flt);	# 514 IOprint_val (_794:int)<-(_795:flt)
    io.printf("# to dbl\n");	# 515 IOprint_str (_796:int)<-(_797:str)
    io.printf("# from bit\n");	# 516 IOprint_str (_798:int)<-(_799:str)
    io.print(1:dbl);	# 517 IOprint_val (_800:int)<-(_801:dbl)
    io.print(0:dbl);	# 518 IOprint_val (_802:int)<-(_803:dbl)
    io.printf("# from chr\n");	# 519 IOprint_str (_804:int)<-(_805:str)
    io.print(97:dbl);	# 520 IOprint_val (_806:int)<-(_807:dbl)
    io.printf("# from sht\n");	# 521 IOprint_str (_808:int)<-(_809:str)
    a := 1:sht;	# 522  (a:sht)<-(_811:sht)
    d1 := calc.dbl(a);	# 523 CALCsht2dbl (d1:dbl)<-(a:sht)
    io.print(d1);	# 524 IOprint_val (_813:int)<-(d1:dbl)
    a := 32767:sht;	# 525  (a:sht)<-(_814:sht)
    d1 := calc.dbl(a);	# 526 CALCsht2dbl (d1:dbl)<-(a:sht)
    io.print(d1);	# 527 IOprint_val (_815:int)<-(d1:dbl)
    io.printf("# from int\n");	# 528 IOprint_str (_816:int)<-(_817:str)
    io.print(1:dbl);	# 529 IOprint_val (_818:int)<-(_801:dbl)
    io.print(32767:dbl);	# 530 IOprint_val (_819:int)<-(_820:dbl)
    io.print(32768:dbl);	# 531 IOprint_val (_821:int)<-(_822:dbl)
    io.print(2147483647:dbl);	# 532 IOprint_val (_823:int)<-(_824:dbl)
    io.print(-2147483647:dbl);	# 533 IOprint_val (_825:int)<-(_826:dbl)
    zd := calc.+(2147483647,1);	# 534 CALCbinaryADDintint (zd:int)<-(_828:int)(_829:int)
    ze := calc.dbl(zd);	# 535 CALCint2dbl (ze:dbl)<-(zd:int)
    io.print(zd);	# 536 IOprint_val (_831:int)<-(zd:int)
    zj := calc.-(-2147483647,1);	# 537 CALCbinarySUBintint (zj:int)<-(_833:int)(_829:int)
    d := calc.dbl(zj);	# 538 CALCint2dbl (d:dbl)<-(zj:int)
    io.print(d);	# 539 IOprint_val (_835:int)<-(d:dbl)
    io.printf("# should this produce nil (overflow)?\n");	# 540 IOprint_str (_836:int)<-(_837:str)
    zn := calc.+(2147483647,2);	# 541 CALCbinaryADDintint (zn:int)<-(_828:int)(_839:int)
    d := calc.dbl(zn);	# 542 CALCint2dbl (d:dbl)<-(zn:int)
    io.print(d);	# 543 IOprint_val (_840:int)<-(d:dbl)
    io.printf("# should this produce nil (overflow)?\n");	# 544 IOprint_str (_841:int)<-(_837:str)
    zk := calc.-(-2147483647,2);	# 545 CALCbinarySUBintint (zk:int)<-(_833:int)(_839:int)
    d := calc.dbl(zk);	# 546 CALCint2dbl (d:dbl)<-(zk:int)
    io.print(d);	# 547 IOprint_val (_843:int)<-(d:dbl)
    io.printf("# from lng\n");	# 548 IOprint_str (_844:int)<-(_845:str)
    io.print(1:dbl);	# 549 IOprint_val (_846:int)<-(_847:dbl)
    io.print(2147483647:dbl);	# 550 IOprint_val (_848:int)<-(_824:dbl)
    io.print(2147483648:dbl);	# 551 IOprint_val (_849:int)<-(_850:dbl)
    io.print(2147483649:dbl);	# 552 IOprint_val (_851:int)<-(_852:dbl)
    io.print(-2147483647:dbl);	# 553 IOprint_val (_853:int)<-(_826:dbl)
    io.print(-2147483648:dbl);	# 554 IOprint_val (_854:int)<-(_855:dbl)
    io.print(-2147483649:dbl);	# 555 IOprint_val (_856:int)<-(_857:dbl)
    io.print(9.2233720368547758e+18:dbl);	# 556 IOprint_val (_858:int)<-(_859:dbl)
    io.print(nil:dbl);	# 557 IOprint_val (_860:int)<-(_861:dbl)
    io.print(nil:dbl);	# 558 IOprint_val (_862:int)<-(_861:dbl)
    io.print(-9.2233720368547758e+18:dbl);	# 559 IOprint_val (_863:int)<-(_864:dbl)
    io.print(nil:dbl);	# 560 IOprint_val (_865:int)<-(_861:dbl)
    io.print(nil:dbl);	# 561 IOprint_val (_866:int)<-(_861:dbl)
    io.printf("# from flt\n");	# 562 IOprint_str (_867:int)<-(_868:str)
    io.print(0:dbl);	# 563 IOprint_val (_869:int)<-(_870:dbl)
    io.print(0.10000000149011612:dbl);	# 564 IOprint_val (_871:int)<-(_872:dbl)
    io.print(0.5:dbl);	# 565 IOprint_val (_873:int)<-(_874:dbl)
    io.print(0.89999997615814209:dbl);	# 566 IOprint_val (_875:int)<-(_876:dbl)
    io.print(1:dbl);	# 567 IOprint_val (_877:int)<-(_847:dbl)
    io.print(-0.10000000149011612:dbl);	# 568 IOprint_val (_878:int)<-(_879:dbl)
    io.print(-0.5:dbl);	# 569 IOprint_val (_880:int)<-(_881:dbl)
    io.print(-0.89999997615814209:dbl);	# 570 IOprint_val (_882:int)<-(_883:dbl)
    io.print(-1:dbl);	# 571 IOprint_val (_884:int)<-(_885:dbl)
    io.print(2147483648:dbl);	# 572 IOprint_val (_886:int)<-(_887:dbl)
    io.print(2147483648:dbl);	# 573 IOprint_val (_888:int)<-(_887:dbl)
    io.print(2147483648:dbl);	# 574 IOprint_val (_889:int)<-(_887:dbl)
    io.print(-2147483648:dbl);	# 575 IOprint_val (_890:int)<-(_855:dbl)
    io.print(-2147483648:dbl);	# 576 IOprint_val (_891:int)<-(_892:dbl)
    io.print(-2147483648:dbl);	# 577 IOprint_val (_893:int)<-(_892:dbl)
    io.printf("# from oid\n");	# 578 IOprint_str (_894:int)<-(_895:str)
    io.print(2:dbl);	# 579 IOprint_val (_896:int)<-(_897:dbl)
    io.print(2:dbl);	# 580 IOprint_val (_898:int)<-(_897:dbl)
    io.print(2147483647:dbl);	# 581 IOprint_val (_899:int)<-(_900:dbl)
    io.print(2147483648:dbl);	# 582 IOprint_val (_901:int)<-(_887:dbl)
    io.print(2147483649:dbl);	# 583 IOprint_val (_902:int)<-(_903:dbl)
    io.printf("# from str\n");	# 584 IOprint_str (_904:int)<-(_905:str)
    io.print(0:dbl);	# 585 IOprint_val (_906:int)<-(_907:dbl)
    io.print(32767:dbl);	# 586 IOprint_val (_908:int)<-(_909:dbl)
    io.print(2147483647:dbl);	# 587 IOprint_val (_910:int)<-(_911:dbl)
    io.print(2147483648:dbl);	# 588 IOprint_val (_912:int)<-(_913:dbl)
    io.print(2147483649:dbl);	# 589 IOprint_val (_914:int)<-(_915:dbl)
    io.print(-2147483647:dbl);	# 590 IOprint_val (_916:int)<-(_917:dbl)
    io.print(-2147483648:dbl);	# 591 IOprint_val (_918:int)<-(_919:dbl)
    io.print(-2147483649:dbl);	# 592 IOprint_val (_920:int)<-(_921:dbl)
    io.print(0:dbl);	# 593 IOprint_val (_922:int)<-(_923:dbl)
    io.print(0.10000000000000001:dbl);	# 594 IOprint_val (_924:int)<-(_925:dbl)
    io.print(1:dbl);	# 595 IOprint_val (_926:int)<-(_927:dbl)
    io.print(1:dbl);	# 596 IOprint_val (_928:int)<-(_929:dbl)
    io.print(10:dbl);	# 597 IOprint_val (_930:int)<-(_931:dbl)
    io.print(10000000000:dbl);	# 598 IOprint_val (_932:int)<-(_933:dbl)
    io.print(10000000000:dbl);	# 599 IOprint_val (_934:int)<-(_935:dbl)
    io.print(1e-10:dbl);	# 600 IOprint_val (_936:int)<-(_937:dbl)
    io.print(1:dbl);	# 601 IOprint_val (_938:int)<-(_939:dbl)
    io.print(10:dbl);	# 602 IOprint_val (_940:int)<-(_941:dbl)
    io.print(10000000000:dbl);	# 603 IOprint_val (_942:int)<-(_943:dbl)
    io.print(10000000000:dbl);	# 604 IOprint_val (_944:int)<-(_945:dbl)
    io.print(1e-10:dbl);	# 605 IOprint_val (_946:int)<-(_947:dbl)
    io.print(1:dbl);	# 606 IOprint_val (_948:int)<-(_949:dbl)
    io.print(10:dbl);	# 607 IOprint_val (_950:int)<-(_951:dbl)
    io.print(10000000000:dbl);	# 608 IOprint_val (_952:int)<-(_953:dbl)
    io.print(10000000000:dbl);	# 609 IOprint_val (_954:int)<-(_955:dbl)
    io.print(1e-10:dbl);	# 610 IOprint_val (_956:int)<-(_957:dbl)
    io.print(-0:dbl);	# 611 IOprint_val (_958:int)<-(_959:dbl)
    io.print(-0.10000000000000001:dbl);	# 612 IOprint_val (_960:int)<-(_961:dbl)
    io.print(-1:dbl);	# 613 IOprint_val (_962:int)<-(_963:dbl)
    io.print(-1:dbl);	# 614 IOprint_val (_964:int)<-(_965:dbl)
    io.print(-10:dbl);	# 615 IOprint_val (_966:int)<-(_967:dbl)
    io.print(-10000000000:dbl);	# 616 IOprint_val (_968:int)<-(_969:dbl)
    io.print(-10000000000:dbl);	# 617 IOprint_val (_970:int)<-(_971:dbl)
    io.print(-1e-10:dbl);	# 618 IOprint_val (_972:int)<-(_973:dbl)
    io.print(-1:dbl);	# 619 IOprint_val (_974:int)<-(_975:dbl)
    io.print(-10:dbl);	# 620 IOprint_val (_976:int)<-(_977:dbl)
    io.print(-10000000000:dbl);	# 621 IOprint_val (_978:int)<-(_979:dbl)
    io.print(-10000000000:dbl);	# 622 IOprint_val (_980:int)<-(_981:dbl)
    io.print(-1e-10:dbl);	# 623 IOprint_val (_982:int)<-(_983:dbl)
    io.print(-1:dbl);	# 624 IOprint_val (_984:int)<-(_985:dbl)
    io.print(-10:dbl);	# 625 IOprint_val (_986:int)<-(_987:dbl)
    io.print(-10000000000:dbl);	# 626 IOprint_val (_988:int)<-(_989:dbl)
    io.print(-10000000000:dbl);	# 627 IOprint_val (_990:int)<-(_991:dbl)
    io.print(-1e-10:dbl);	# 628 IOprint_val (_992:int)<-(_993:dbl)
    io.print(1:dbl);	# 629 IOprint_val (_994:int)<-(_995:dbl)
    io.print(10:dbl);	# 630 IOprint_val (_996:int)<-(_997:dbl)
    io.print(10000000000:dbl);	# 631 IOprint_val (_998:int)<-(_999:dbl)
    io.print(10000000000:dbl);	# 632 IOprint_val (_1000:int)<-(_1001:dbl)
    io.print(1e-10:dbl);	# 633 IOprint_val (_1002:int)<-(_1003:dbl)
    io.print(1:dbl);	# 634 IOprint_val (_1004:int)<-(_1005:dbl)
    io.print(10:dbl);	# 635 IOprint_val (_1006:int)<-(_1007:dbl)
    io.print(10000000000:dbl);	# 636 IOprint_val (_1008:int)<-(_1009:dbl)
    io.print(10000000000:dbl);	# 637 IOprint_val (_1010:int)<-(_1011:dbl)
    io.print(1e-10:dbl);	# 638 IOprint_val (_1012:int)<-(_1013:dbl)
    io.print(1:dbl);	# 639 IOprint_val (_1014:int)<-(_1015:dbl)
    io.print(10:dbl);	# 640 IOprint_val (_1016:int)<-(_1017:dbl)
    io.print(10000000000:dbl);	# 641 IOprint_val (_1018:int)<-(_1019:dbl)
    io.print(10000000000:dbl);	# 642 IOprint_val (_1020:int)<-(_1021:dbl)
    io.print(1e-10:dbl);	# 643 IOprint_val (_1022:int)<-(_1023:dbl)
    io.print(-1:dbl);	# 644 IOprint_val (_1024:int)<-(_1025:dbl)
    io.print(-10:dbl);	# 645 IOprint_val (_1026:int)<-(_1027:dbl)
    io.print(-10000000000:dbl);	# 646 IOprint_val (_1028:int)<-(_1029:dbl)
    io.print(-10000000000:dbl);	# 647 IOprint_val (_1030:int)<-(_1031:dbl)
    io.print(-1e-10:dbl);	# 648 IOprint_val (_1032:int)<-(_1033:dbl)
    io.print(-1:dbl);	# 649 IOprint_val (_1034:int)<-(_1035:dbl)
    io.print(-10:dbl);	# 650 IOprint_val (_1036:int)<-(_1037:dbl)
    io.print(-10000000000:dbl);	# 651 IOprint_val (_1038:int)<-(_1039:dbl)
    io.print(-10000000000:dbl);	# 652 IOprint_val (_1040:int)<-(_1041:dbl)
    io.print(-1e-10:dbl);	# 653 IOprint_val (_1042:int)<-(_1043:dbl)
    io.print(-1:dbl);	# 654 IOprint_val (_1044:int)<-(_1045:dbl)
    io.print(-10:dbl);	# 655 IOprint_val (_1046:int)<-(_1047:dbl)
    io.print(-10000000000:dbl);	# 656 IOprint_val (_1048:int)<-(_1049:dbl)
    io.print(-10000000000:dbl);	# 657 IOprint_val (_1050:int)<-(_1051:dbl)
    io.print(-1e-10:dbl);	# 658 IOprint_val (_1052:int)<-(_1053:dbl)
    io.print(3.4028234660000002e+38:dbl);	# 659 IOprint_val (_1054:int)<-(_1055:dbl)
    io.print(3.4028234670000002e+38:dbl);	# 660 IOprint_val (_1056:int)<-(_1057:dbl)
    io.print(-3.4028234660000002e+38:dbl);	# 661 IOprint_val (_1058:int)<-(_1059:dbl)
    io.print(-3.4028234670000002e+38:dbl);	# 662 IOprint_val (_1060:int)<-(_1061:dbl)
    io.print(3.4028234660000002e+38:dbl);	# 663 IOprint_val (_1062:int)<-(_1063:dbl)
    io.print(3.4028234670000002e+38:dbl);	# 664 IOprint_val (_1064:int)<-(_1065:dbl)
    io.print(3.4028234660000002e+38:dbl);	# 665 IOprint_val (_1066:int)<-(_1067:dbl)
    io.print(3.4028234660000002e+38:dbl);	# 666 IOprint_val (_1068:int)<-(_1069:dbl)
    io.print(-3.4028234660000002e+38:dbl);	# 667 IOprint_val (_1070:int)<-(_1071:dbl)
    io.print(-3.4028234670000002e+38:dbl);	# 668 IOprint_val (_1072:int)<-(_1073:dbl)
    io.print(-3.4028234660000002e+38:dbl);	# 669 IOprint_val (_1074:int)<-(_1075:dbl)
    io.print(-3.4028234660000002e+38:dbl);	# 670 IOprint_val (_1076:int)<-(_1077:dbl)
    io.printf("# dbl range is -1.7976931348623157E+308 to 1.7976931348623157E+308.\n");	# 671 IOprint_str (_1078:int)<-(_1079:str)
    io.print(1.7976931348623157e+308:dbl);	# 672 IOprint_val (_1080:int)<-(_1081:dbl)
    io.print(1.7976931348623157e+308:dbl);	# 673 IOprint_val (_1082:int)<-(_1083:dbl)
    io.print(nil:dbl);	# 674 IOprint_val (_1084:int)<-(_1085:dbl)
    io.print(nil:dbl);	# 675 IOprint_val (_1086:int)<-(_1087:dbl)
    io.print(1.7976931348623157e+308:dbl);	# 676 IOprint_val (_1088:int)<-(_1089:dbl)
    io.print(1.7976931348623157e+308:dbl);	# 677 IOprint_val (_1090:int)<-(_1091:dbl)
    io.print(1.7976931348623157e+308:dbl);	# 678 IOprint_val (_1092:int)<-(_1093:dbl)
    io.print(1.7976931348623157e+308:dbl);	# 679 IOprint_val (_1094:int)<-(_1095:dbl)
    io.print(nil:dbl);	# 680 IOprint_val (_1096:int)<-(_1097:dbl)
    io.print(nil:dbl);	# 681 IOprint_val (_1098:int)<-(_1099:dbl)
    io.print(nil:dbl);	# 682 IOprint_val (_1100:int)<-(_1101:dbl)
    io.print(nil:dbl);	# 683 IOprint_val (_1102:int)<-(_1103:dbl)
    io.print(nil:dbl);	# 684 IOprint_val (_1104:int)<-(_1105:dbl)
    io.print(nil:dbl);	# 685 IOprint_val (_1106:int)<-(_1107:dbl)
    io.printf("# to oid\n");	# 686 IOprint_str (_1108:int)<-(_1109:str)
    io.printf("# from bit\n");	# 687 IOprint_str (_1110:int)<-(_1111:str)
    io.print(1@0:oid);	# 688 IOprint_val (_1112:int)<-(_1113:oid)
    io.print(0@0:oid);	# 689 IOprint_val (_1114:int)<-(_1115:oid)
    io.printf("# from chr\n");	# 690 IOprint_str (_1116:int)<-(_1117:str)
    io.print(97@0:oid);	# 691 IOprint_val (_1118:int)<-(_1119:oid)
    io.printf("# from sht\n");	# 692 IOprint_str (_1120:int)<-(_1121:str)
    o1 := 1:sht;	# 693  (o1:sht)<-(_1123:sht)
    o2 := calc.oid(o1);	# 694 CALCsht2oid (o2:oid)<-(o1:sht)
    io.print(o2);	# 695 IOprint_val (_1125:int)<-(o2:oid)
    o1 := 32767:sht;	# 696  (o1:sht)<-(_1126:sht)
    o2 := calc.oid(o1);	# 697 CALCsht2oid (o2:oid)<-(o1:sht)
    io.print(o2);	# 698 IOprint_val (_1127:int)<-(o2:oid)
    io.printf("# from int\n");	# 699 IOprint_str (_1128:int)<-(_1129:str)
    io.print(1@0:oid);	# 700 IOprint_val (_1130:int)<-(_1113:oid)
    io.print(32767@0:oid);	# 701 IOprint_val (_1131:int)<-(_1132:oid)
    io.print(32768@0:oid);	# 702 IOprint_val (_1133:int)<-(_1134:oid)
    io.print(2147483647@0:oid);	# 703 IOprint_val (_1135:int)<-(_1136:oid)
    o9 := -2147483647;	# 704  (o9:int)<-(_1138:int)
    o := calc.oid(o9);	# 705 CALCint2oid (o:oid)<-(o9:int)
    io.print(o);	# 706 IOprint_val (_1140:int)<-(o:oid)
    o3 := calc.+(2147483647,1);	# 707 CALCbinaryADDintint (o3:int)<-(_1142:int)(_1143:int)
    o := calc.oid(o3);	# 708 CALCint2oid (o:oid)<-(o3:int)
    io.print(o);	# 709 IOprint_val (_1144:int)<-(o:oid)
    o4 := calc.-(-2147483647,1);	# 710 CALCbinarySUBintint (o4:int)<-(_1138:int)(_1143:int)
    o := calc.oid(o4);	# 711 CALCint2oid (o:oid)<-(o4:int)
    io.print(o);	# 712 IOprint_val (_1146:int)<-(o:oid)
    io.printf("# should this produce nil (overflow)?\n");	# 713 IOprint_str (_1147:int)<-(_1148:str)
    o5 := calc.+(2147483647,2);	# 714 CALCbinaryADDintint (o5:int)<-(_1142:int)(_1150:int)
    o := calc.oid(o5);	# 715 CALCint2oid (o:oid)<-(o5:int)
    io.print(o);	# 716 IOprint_val (_1151:int)<-(o:oid)
    io.printf("# should this produce nil (overflow)?\n");	# 717 IOprint_str (_1152:int)<-(_1148:str)
    o6 := calc.-(-2147483647,2);	# 718 CALCbinarySUBintint (o6:int)<-(_1138:int)(_1150:int)
    o := calc.oid(o6);	# 719 CALCint2oid (o:oid)<-(o6:int)
    io.print(o);	# 720 IOprint_val (_1154:int)<-(o:oid)
    io.printf("# from lng\n");	# 721 IOprint_str (_1155:int)<-(_1156:str)
    io.print(1@0:oid);	# 722 IOprint_val (_1157:int)<-(_1158:oid)
    io.print(2147483647@0:oid);	# 723 IOprint_val (_1159:int)<-(_1136:oid)
    io.print(2147483648@0:oid);	# 724 IOprint_val (_1160:int)<-(_1161:oid)
    io.print(2147483649@0:oid);	# 725 IOprint_val (_1162:int)<-(_1163:oid)
    io.print(nil:oid);	# 726 IOprint_val (_1164:int)<-(_1165:oid)
    io.print(nil:oid);	# 727 IOprint_val (_1166:int)<-(_1165:oid)
    io.print(nil:oid);	# 728 IOprint_val (_1167:int)<-(_1165:oid)
    io.printf("# from flt\n");	# 729 IOprint_str (_1168:int)<-(_1169:str)
    io.print(0@0:oid);	# 730 IOprint_val (_1170:int)<-(_1171:oid)
    io.print(0@0:oid);	# 731 IOprint_val (_1172:int)<-(_1171:oid)
    io.print(0@0:oid);	# 732 IOprint_val (_1173:int)<-(_1171:oid)
    io.print(0@0:oid);	# 733 IOprint_val (_1174:int)<-(_1171:oid)
    io.print(1@0:oid);	# 734 IOprint_val (_1175:int)<-(_1158:oid)
    io.print(nil:oid);	# 735 IOprint_val (_1176:int)<-(_1165:oid)
    io.print(nil:oid);	# 736 IOprint_val (_1177:int)<-(_1165:oid)
    io.print(nil:oid);	# 737 IOprint_val (_1178:int)<-(_1165:oid)
    io.print(nil:oid);	# 738 IOprint_val (_1179:int)<-(_1165:oid)
    io.print(2147483648@0:oid);	# 739 IOprint_val (_1180:int)<-(_1161:oid)
    io.print(2147483648@0:oid);	# 740 IOprint_val (_1181:int)<-(_1161:oid)
    io.print(2147483648@0:oid);	# 741 IOprint_val (_1182:int)<-(_1161:oid)
    io.print(nil:oid);	# 742 IOprint_val (_1183:int)<-(_1165:oid)
    io.print(nil:oid);	# 743 IOprint_val (_1184:int)<-(_1165:oid)
    io.print(nil:oid);	# 744 IOprint_val (_1185:int)<-(_1165:oid)
    io.printf("# from dbl\n");	# 745 IOprint_str (_1186:int)<-(_1187:str)
    io.print(0@0:oid);	# 746 IOprint_val (_1188:int)<-(_1171:oid)
    io.print(0@0:oid);	# 747 IOprint_val (_1189:int)<-(_1171:oid)
    io.print(0@0:oid);	# 748 IOprint_val (_1190:int)<-(_1171:oid)
    io.print(0@0:oid);	# 749 IOprint_val (_1191:int)<-(_1171:oid)
    io.print(1@0:oid);	# 750 IOprint_val (_1192:int)<-(_1158:oid)
    io.print(nil:oid);	# 751 IOprint_val (_1193:int)<-(_1165:oid)
    io.print(nil:oid);	# 752 IOprint_val (_1194:int)<-(_1165:oid)
    io.print(nil:oid);	# 753 IOprint_val (_1195:int)<-(_1165:oid)
    io.print(nil:oid);	# 754 IOprint_val (_1196:int)<-(_1165:oid)
    io.print(2147483647@0:oid);	# 755 IOprint_val (_1197:int)<-(_1198:oid)
    io.print(2147483648@0:oid);	# 756 IOprint_val (_1199:int)<-(_1200:oid)
    io.print(2147483649@0:oid);	# 757 IOprint_val (_1201:int)<-(_1202:oid)
    io.print(nil:oid);	# 758 IOprint_val (_1203:int)<-(_1204:oid)
    io.print(nil:oid);	# 759 IOprint_val (_1205:int)<-(_1204:oid)
    io.print(nil:oid);	# 760 IOprint_val (_1206:int)<-(_1204:oid)
    io.printf("# from oid\n");	# 761 IOprint_str (_1207:int)<-(_1208:str)
    io.print(2@0:oid);	# 762 IOprint_val (_1209:int)<-(_1210:oid)
    io.print(2@0:oid);	# 763 IOprint_val (_1211:int)<-(_1210:oid)
    io.print(2147483647@0:oid);	# 764 IOprint_val (_1212:int)<-(_1198:oid)
    io.print(2147483648@0:oid);	# 765 IOprint_val (_1213:int)<-(_1200:oid)
    io.print(2147483649@0:oid);	# 766 IOprint_val (_1214:int)<-(_1202:oid)
    io.printf("# from str\n");	# 767 IOprint_str (_1215:int)<-(_1216:str)
    io.print(0@0:oid);	# 768 IOprint_val (_1217:int)<-(_1218:oid)
    io.print(32767@0:oid);	# 769 IOprint_val (_1219:int)<-(_1220:oid)
    io.print(2147483647@0:oid);	# 770 IOprint_val (_1221:int)<-(_1222:oid)
    io.print(2147483648@0:oid);	# 771 IOprint_val (_1223:int)<-(_1224:oid)
    io.print(2147483649@0:oid);	# 772 IOprint_val (_1225:int)<-(_1226:oid)
    io.print(nil:oid);	# 773 IOprint_val (_1227:int)<-(_1228:oid)
    io.print(nil:oid);	# 774 IOprint_val (_1229:int)<-(_1230:oid)
    io.print(nil:oid);	# 775 IOprint_val (_1231:int)<-(_1232:oid)
    io.print(0@0:oid);	# 776 IOprint_val (_1233:int)<-(_1218:oid)
    io.print(nil:oid);	# 777 IOprint_val (_1234:int)<-(_1235:oid)
    io.printf("# to str\n");	# 778 IOprint_str (_1236:int)<-(_1237:str)
    io.printf("# from bit\n");	# 779 IOprint_str (_1238:int)<-(_1239:str)
    io.print("true":str);	# 780 IOprint_val (_1240:int)<-(_1241:str)
    io.print("false":str);	# 781 IOprint_val (_1242:int)<-(_1243:str)
    io.printf("# from chr\n");	# 782 IOprint_str (_1244:int)<-(_1245:str)
    io.print("a":str);	# 783 IOprint_val (_1246:int)<-(_1247:str)
    io.printf("# from sht\n");	# 784 IOprint_str (_1248:int)<-(_1249:str)
    s4 := 1:sht;	# 785  (s4:sht)<-(_1251:sht)
    s5 := calc.str(s4);	# 786 CALCsht2str (s5:str)<-(s4:sht)
    io.print(s5);	# 787 IOprint_val (_1253:int)<-(s5:str)
    s4 := 32767:sht;	# 788  (s4:sht)<-(_1254:sht)
    s5 := calc.str(s4);	# 789 CALCsht2str (s5:str)<-(s4:sht)
    io.print(s5);	# 790 IOprint_val (_1255:int)<-(s5:str)
    io.printf("# from int\n");	# 791 IOprint_str (_1256:int)<-(_1257:str)
    io.print("1":str);	# 792 IOprint_val (_1258:int)<-(_1259:str)
    io.print("32767":str);	# 793 IOprint_val (_1260:int)<-(_1261:str)
    io.print("32768":str);	# 794 IOprint_val (_1262:int)<-(_1263:str)
    io.print("2147483647":str);	# 795 IOprint_val (_1264:int)<-(_1265:str)
    io.print("-2147483647":str);	# 796 IOprint_val (_1266:int)<-(_1267:str)
    wd := calc.+(2147483647:int,1);	# 797 CALCbinaryADDintint (wd:int)<-(_1269:int)(_1270:int)
    sv := calc.str(wd);	# 798 CALCint2str (sv:str)<-(wd:int)
    io.print(sv);	# 799 IOprint_val (_1272:int)<-(sv:str)
    wc := calc.-(-2147483647,1);	# 800 CALCbinarySUBintint (wc:int)<-(_1274:int)(_1270:int)
    sv := calc.str(wc);	# 801 CALCint2str (sv:str)<-(wc:int)
    io.print(sv);	# 802 IOprint_val (_1275:int)<-(sv:str)
    io.printf("# should this produce nil (overflow)?\n");	# 803 IOprint_str (_1276:int)<-(_1277:str)
    we := calc.+(2147483647:int,2);	# 804 CALCbinaryADDintint (we:int)<-(_1269:int)(_1279:int)
    sv := calc.str(we);	# 805 CALCint2str (sv:str)<-(we:int)
    io.print(sv);	# 806 IOprint_val (_1280:int)<-(sv:str)
    io.printf("# should this produce nil (overflow)?\n");	# 807 IOprint_str (_1281:int)<-(_1277:str)
    wb := calc.-(-2147483647,2);	# 808 CALCbinarySUBintint (wb:int)<-(_1274:int)(_1279:int)
    sv := calc.str(wb);	# 809 CALCint2str (sv:str)<-(wb:int)
    io.print(sv);	# 810 IOprint_val (_1283:int)<-(sv:str)
    io.printf("# from lng\n");	# 811 IOprint_str (_1284:int)<-(_1285:str)
    io.print("1":str);	# 812 IOprint_val (_1286:int)<-(_1287:str)
    io.print("2147483647":str);	# 813 IOprint_val (_1288:int)<-(_1289:str)
    io.print("2147483648":str);	# 814 IOprint_val (_1290:int)<-(_1291:str)
    io.print("2147483649":str);	# 815 IOprint_val (_1292:int)<-(_1293:str)
    io.print("-2147483647":str);	# 816 IOprint_val (_1294:int)<-(_1295:str)
    io.print("-2147483648":str);	# 817 IOprint_val (_1296:int)<-(_1297:str)
    io.print("-2147483649":str);	# 818 IOprint_val (_1298:int)<-(_1299:str)
    io.printf("# from flt\n");	# 819 IOprint_str (_1300:int)<-(_1301:str)
    io.print("0":str);	# 820 IOprint_val (_1302:int)<-(_1303:str)
    io.print("0.100000001":str);	# 821 IOprint_val (_1304:int)<-(_1305:str)
    io.print("0.5":str);	# 822 IOprint_val (_1306:int)<-(_1307:str)
    io.print("0.899999976":str);	# 823 IOprint_val (_1308:int)<-(_1309:str)
    io.print("1":str);	# 824 IOprint_val (_1310:int)<-(_1311:str)
    io.print("-0.100000001":str);	# 825 IOprint_val (_1312:int)<-(_1313:str)
    io.print("-0.5":str);	# 826 IOprint_val (_1314:int)<-(_1315:str)
    io.print("-0.899999976":str);	# 827 IOprint_val (_1316:int)<-(_1317:str)
    io.print("-1":str);	# 828 IOprint_val (_1318:int)<-(_1319:str)
    io.print("2.14748365e+09":str);	# 829 IOprint_val (_1320:int)<-(_1321:str)
    io.print("2.14748365e+09":str);	# 830 IOprint_val (_1322:int)<-(_1323:str)
    io.print("2.14748365e+09":str);	# 831 IOprint_val (_1324:int)<-(_1325:str)
    io.print("-2.14748365e+09":str);	# 832 IOprint_val (_1326:int)<-(_1327:str)
    io.print("-2.14748365e+09":str);	# 833 IOprint_val (_1328:int)<-(_1329:str)
    io.print("-2.14748365e+09":str);	# 834 IOprint_val (_1330:int)<-(_1331:str)
    io.printf("# from dbl\n");	# 835 IOprint_str (_1332:int)<-(_1333:str)
    io.print("0":str);	# 836 IOprint_val (_1334:int)<-(_1335:str)
    io.print("0.10000000000000001":str);	# 837 IOprint_val (_1336:int)<-(_1337:str)
    io.print("0.5":str);	# 838 IOprint_val (_1338:int)<-(_1339:str)
    io.print("0.90000000000000002":str);	# 839 IOprint_val (_1340:int)<-(_1341:str)
    io.print("1":str);	# 840 IOprint_val (_1342:int)<-(_1343:str)
    io.print("-0.10000000000000001":str);	# 841 IOprint_val (_1344:int)<-(_1345:str)
    io.print("-0.5":str);	# 842 IOprint_val (_1346:int)<-(_1347:str)
    io.print("-0.90000000000000002":str);	# 843 IOprint_val (_1348:int)<-(_1349:str)
    io.print("-1":str);	# 844 IOprint_val (_1350:int)<-(_1351:str)
    io.print("2147483647":str);	# 845 IOprint_val (_1352:int)<-(_1353:str)
    io.print("2147483648":str);	# 846 IOprint_val (_1354:int)<-(_1355:str)
    io.print("2147483649":str);	# 847 IOprint_val (_1356:int)<-(_1357:str)
    io.print("-2147483647":str);	# 848 IOprint_val (_1358:int)<-(_1359:str)
    io.print("-2147483648":str);	# 849 IOprint_val (_1360:int)<-(_1361:str)
    io.print("-2147483649":str);	# 850 IOprint_val (_1362:int)<-(_1363:str)
    io.printf("# from oid\n");	# 851 IOprint_str (_1364:int)<-(_1365:str)
    io.print("2@0":str);	# 852 IOprint_val (_1366:int)<-(_1367:str)
    io.print("2@0":str);	# 853 IOprint_val (_1368:int)<-(_1369:str)
    io.print("2147483647@0":str);	# 854 IOprint_val (_1370:int)<-(_1371:str)
    io.print("2147483648@0":str);	# 855 IOprint_val (_1372:int)<-(_1373:str)
    io.print("2147483649@0":str);	# 856 IOprint_val (_1374:int)<-(_1375:str)
    io.printf("# from str\n");	# 857 IOprint_str (_1376:int)<-(_1377:str)
    io.print("0":str);	# 858 IOprint_val (_1378:int)<-(_1379:str)
    io.print("32767":str);	# 859 IOprint_val (_1380:int)<-(_1381:str)
    io.print("2147483647":str);	# 860 IOprint_val (_1382:int)<-(_1353:str)
    io.print("2147483648":str);	# 861 IOprint_val (_1383:int)<-(_1355:str)
    io.print("2147483649":str);	# 862 IOprint_val (_1384:int)<-(_1357:str)
    io.print("-2147483647":str);	# 863 IOprint_val (_1385:int)<-(_1359:str)
    io.print("-2147483648":str);	# 864 IOprint_val (_1386:int)<-(_1361:str)
    io.print("-2147483649":str);	# 865 IOprint_val (_1387:int)<-(_1363:str)
    io.print("":str);	# 866 IOprint_val (_1388:int)<-(_1389:str)
    io.print("random string":str);	# 867 IOprint_val (_1390:int)<-(_1391:str)
end main;	# 868  
# casting to int

[ 0 ]
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 32769 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]

# from bit
[ 1 ]
[ 0 ]

# from chr
[ 97 ]

# from sht
[ 1 ]
[ 32767 ]

# from int
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 2147483647 ]
[ -2147483647 ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ -2147483647 ]
# should this produce nil (overflow)?
[ 2147483647 ]

# from lng
[ 1 ]
[ 2147483647 ]
[ nil ]
[ nil ]
[ -2147483647 ]
[ nil ]
[ nil ]

# from flt
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]

# from dbl
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ 2147483647 ]
[ nil ]
[ nil ]
[ -2147483647 ]
[ nil ]
[ nil ]

# from oid
[ 2 ]
[ 2 ]
[ 2147483647 ]
[ nil ]
[ nil ]

# from str
[ 0 ]
[ 32767 ]
[ 2147483647 ]
[ nil ]
[ nil ]
[ -2147483647 ]
[ nil ]
[ nil ]
[ 0 ]
[ nil ]
# to bit

# from bit
[ true ]
[ false ]

# from chr
[ true ]
[ false ]

# from sht
[ false ]
[ true ]
[ true ]
[ true ]

# from int
[ false ]
[ true ]
[ true ]
[ true ]

# from lng
[ false ]
[ true ]
[ true ]
[ true ]

# from flt
[ false ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]

# from dbl
[ false ]
[ true ]
[ true ]
[ true ]
[ true ]
[ true ]

# from oid
[ false ]
[ true ]
[ true ]
[ true ]
[ true ]

# from str
[ true ]
[ false ]
[ false ]
[ true ]
[ nil ]
[ false ]
# to sht

# from bit
[ 1 ]
[ 0 ]

# from chr
[ 97 ]
[ 0 ]

# from int
[ 0 ]
[ 32767 ]
[ nil ]
[ nil ]
[ -32767 ]
[ nil ]
[ nil ]
[ nil ]

# from lng
[ 0 ]
[ 32767 ]
[ nil ]
[ nil ]
[ -32767 ]
[ nil ]
[ nil ]
[ nil ]

# from flt
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ 32767 ]
[ nil ]
[ nil ]
[ -32767 ]
[ nil ]
[ nil ]

# from dbl
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ 32767 ]
[ nil ]
[ nil ]
[ -32767 ]
[ nil ]
[ nil ]

# from oid
[ 0 ]
[ 1 ]
[ 4096 ]
[ nil ]
[ nil ]

# from str
[ 0 ]
[ 32767 ]
[ nil ]
[ nil ]
[ -32767 ]
[ nil ]
[ nil ]
[ 0 ]
[ nil ]
# to long

[ 0 ]
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 32769 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]
[ 9223372036854775807 ]
[ nil ]
[ nil ]
[ -9223372036854775807 ]
[ nil ]
[ nil ]

# from bit
[ 1 ]
[ 0 ]

# from chr
[ 97 ]

# from sht
[ 1 ]
[ 32767 ]

# from int
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 2147483647 ]
[ -2147483647 ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ -2147483647 ]
# should this produce nil (overflow)?
[ 2147483647 ]

# from lng
# from flt
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ 2147483648 ]
[ 2147483648 ]
[ 2147483648 ]
[ -2147483648 ]
[ -2147483648 ]
[ -2147483648 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]

# from dbl
[ 0 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ 1 ]
[ 0 ]
[ 0 ]
[ 0 ]
[ -1 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]

# from oid
[ 2 ]
[ 2 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ 9223372036854775807 ]
[ nil ]
[ nil ]

# from str
[ 0 ]
[ 32767 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]
[ 0 ]
[ nil ]
[ 9223372036854775807 ]
[ nil ]
[ nil ]
[ -9223372036854775807 ]
[ nil ]
[ nil ]

# to flt

# from bit
[ 1 ]
[ 0 ]

# from chr
[ 97 ]

# from sht
[ 1 ]
[ 32767 ]

# from int
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 2.14748365e+09 ]
[ -2.14748365e+09 ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ nil ]
# should this produce nil (overflow)?
[ 2.14748365e+09 ]

# from lng
[ 1 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]
[ 9.22337204e+18 ]
[ nil ]
[ nil ]
[ -9.22337204e+18 ]
[ nil ]
[ nil ]

# from dbl
[ 0 ]
[ 0.100000001 ]
[ 0.5 ]
[ 0.899999976 ]
[ 1 ]
[ -0.100000001 ]
[ -0.5 ]
[ -0.899999976 ]
[ -1 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]

# from oid
[ 2 ]
[ 2 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]

# from str
[ 0 ]
[ 32767 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ 2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]
[ -2.14748365e+09 ]
[ 0 ]
[ 0.100000001 ]
[ 1 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ -0 ]
[ -0.100000001 ]
[ -1 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ 1 ]
[ 10 ]
[ 1e+10 ]
[ 1e+10 ]
[ 1.00000001e-10 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
[ -1 ]
[ -10 ]
[ -1e+10 ]
[ -1e+10 ]
[ -1.00000001e-10 ]
# flt range is -3.402823466E+38F to 3.402823466E+38F which is
# -3.4028234663852886e+38 to 3.4028234663852886e+38 in double
# precission
[ 3.40282347e+38 ]
[ 3.40282347e+38 ]
[ 3.40282347e+38 ]
[ nil ]
[ nil ]
[ 3.40282347e+38 ]
[ 3.40282347e+38 ]
[ 3.40282347e+38 ]
[ 3.40282347e+38 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]

# to dbl

# from bit
[ 1 ]
[ 0 ]

# from chr
[ 97 ]

# from sht
[ 1 ]
[ 32767 ]

# from int
[ 1 ]
[ 32767 ]
[ 32768 ]
[ 2147483647 ]
[ -2147483647 ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ -2147483647 ]
# should this produce nil (overflow)?
[ 2147483647 ]

# from lng
[ 1 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]
[ 9.2233720368547758e+18 ]
[ nil ]
[ nil ]
[ -9.2233720368547758e+18 ]
[ nil ]
[ nil ]

# from flt
[ 0 ]
[ 0.10000000149011612 ]
[ 0.5 ]
[ 0.89999997615814209 ]
[ 1 ]
[ -0.10000000149011612 ]
[ -0.5 ]
[ -0.89999997615814209 ]
[ -1 ]
[ 2147483648 ]
[ 2147483648 ]
[ 2147483648 ]
[ -2147483648 ]
[ -2147483648 ]
[ -2147483648 ]

# from oid
[ 2 ]
[ 2 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]

# from str
[ 0 ]
[ 32767 ]
[ 2147483647 ]
[ 2147483648 ]
[ 2147483649 ]
[ -2147483647 ]
[ -2147483648 ]
[ -2147483649 ]
[ 0 ]
[ 0.10000000000000001 ]
[ 1 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ -0 ]
[ -0.10000000000000001 ]
[ -1 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ 1 ]
[ 10 ]
[ 10000000000 ]
[ 10000000000 ]
[ 1e-10 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ -1 ]
[ -10 ]
[ -10000000000 ]
[ -10000000000 ]
[ -1e-10 ]
[ 3.4028234660000002e+38 ]
[ 3.4028234670000002e+38 ]
[ -3.4028234660000002e+38 ]
[ -3.4028234670000002e+38 ]
[ 3.4028234660000002e+38 ]
[ 3.4028234670000002e+38 ]
[ 3.4028234660000002e+38 ]
[ 3.4028234660000002e+38 ]
[ -3.4028234660000002e+38 ]
[ -3.4028234670000002e+38 ]
[ -3.4028234660000002e+38 ]
[ -3.4028234660000002e+38 ]
# dbl range is -1.7976931348623157E+308 to 1.7976931348623157E+308.
[ 1.7976931348623157e+308 ]
[ 1.7976931348623157e+308 ]
[ nil ]
[ nil ]
[ 1.7976931348623157e+308 ]
[ 1.7976931348623157e+308 ]
[ 1.7976931348623157e+308 ]
[ 1.7976931348623157e+308 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]

# to oid

# from bit
[ 1@0 ]
[ 0@0 ]

# from chr
[ 97@0 ]

# from sht
[ 1@0 ]
[ 32767@0 ]

# from int
[ 1@0 ]
[ 32767@0 ]
[ 32768@0 ]
[ 2147483647@0 ]
[ nil ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ nil ]
# should this produce nil (overflow)?
[ 2147483647@0 ]

# from lng
[ 1@0 ]
[ 2147483647@0 ]
[ 2147483648@0 ]
[ 2147483649@0 ]
[ nil ]
[ nil ]
[ nil ]

# from flt
[ 0@0 ]
[ 0@0 ]
[ 0@0 ]
[ 0@0 ]
[ 1@0 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ 2147483648@0 ]
[ 2147483648@0 ]
[ 2147483648@0 ]
[ nil ]
[ nil ]
[ nil ]

# from dbl
[ 0@0 ]
[ 0@0 ]
[ 0@0 ]
[ 0@0 ]
[ 1@0 ]
[ nil ]
[ nil ]
[ nil ]
[ nil ]
[ 2147483647@0 ]
[ 2147483648@0 ]
[ 2147483649@0 ]
[ nil ]
[ nil ]
[ nil ]

# from oid
[ 2@0 ]
[ 2@0 ]
[ 2147483647@0 ]
[ 2147483648@0 ]
[ 2147483649@0 ]

# from str
[ 0@0 ]
[ 32767@0 ]
[ 2147483647@0 ]
[ 2147483648@0 ]
[ 2147483649@0 ]
[ nil ]
[ nil ]
[ nil ]
[ 0@0 ]
[ nil ]
# to str

# from bit
[ "true" ]
[ "false" ]

# from chr
[ "a" ]

# from sht
[ "1" ]
[ "32767" ]

# from int
[ "1" ]
[ "32767" ]
[ "32768" ]
[ "2147483647" ]
[ "-2147483647" ]
[ nil ]
[ nil ]
# should this produce nil (overflow)?
[ "-2147483647" ]
# should this produce nil (overflow)?
[ "2147483647" ]

# from lng
[ "1" ]
[ "2147483647" ]
[ "2147483648" ]
[ "2147483649" ]
[ "-2147483647" ]
[ "-2147483648" ]
[ "-2147483649" ]

# from flt
[ "0" ]
[ "0.100000001" ]
[ "0.5" ]
[ "0.899999976" ]
[ "1" ]
[ "-0.100000001" ]
[ "-0.5" ]
[ "-0.899999976" ]
[ "-1" ]
[ "2.14748365e+09" ]
[ "2.14748365e+09" ]
[ "2.14748365e+09" ]
[ "-2.14748365e+09" ]
[ "-2.14748365e+09" ]
[ "-2.14748365e+09" ]

# from dbl
[ "0" ]
[ "0.10000000000000001" ]
[ "0.5" ]
[ "0.90000000000000002" ]
[ "1" ]
[ "-0.10000000000000001" ]
[ "-0.5" ]
[ "-0.90000000000000002" ]
[ "-1" ]
[ "2147483647" ]
[ "2147483648" ]
[ "2147483649" ]
[ "-2147483647" ]
[ "-2147483648" ]
[ "-2147483649" ]

# from oid
[ "2@0" ]
[ "2@0" ]
[ "2147483647@0" ]
[ "2147483648@0" ]
[ "2147483649@0" ]

# from str
[ "0" ]
[ "32767" ]
[ "2147483647" ]
[ "2147483648" ]
[ "2147483649" ]
[ "-2147483647" ]
[ "-2147483648" ]
[ "-2147483649" ]
[ "" ]
[ "random string" ]

# 14:56:01 >  
# 14:56:01 >  Done.
# 14:56:01 >  

