# prepare a group
g := bat.new(:oid,:oid);
g := bat.append(g,4@0);
g := bat.append(g,3@0);
g := bat.append(g,1@0);
g := bat.append(g,0@0);
g := bat.append(g,3@0);
g := bat.append(g,4@0);
g := bat.append(g,3@0);
g := bat.append(g,2@0);
g := bat.append(g,0@0);
g := bat.append(g,4@0);
g := bat.append(g,0@0);
g := bat.append(g,1@0);
g := bat.append(g,0@0);
g := bat.append(g,3@0);
g := bat.append(g,2@0);
g := bat.append(g,2@0);
g := bat.append(g,2@0);
g := bat.append(g,1@0);
g := bat.append(g,1@0);
g := bat.append(g,4@0);
g := algebra.markH(g, 60@0);
e := bat.new(:oid,:oid);
e := bat.append(e,63@0);
e := bat.append(e,62@0);
e := bat.append(e,67@0);
e := bat.append(e,61@0);
e := bat.append(e,60@0);
h := bat.new(:oid,:wrd);
h := bat.append(h,4:wrd);
h := bat.append(h,4:wrd);
h := bat.append(h,4:wrd);
h := bat.append(h,4:wrd);
h := bat.append(h,4:wrd);

# group unique values
a1 := bat.new(:oid,:int);
a1 := bat.append(a1,536624655);
a1 := bat.append(a1,1693392427);
a1 := bat.append(a1,-2037140631);
a1 := bat.append(a1,-355661357);
a1 := bat.append(a1,-1722087643);
a1 := bat.append(a1,-780608638);
a1 := bat.append(a1,-419582233);
a1 := bat.append(a1,1786227270);
a1 := bat.append(a1,31954372);
a1 := bat.append(a1,1273518971);
a1 := bat.append(a1,24136356);
a1 := bat.append(a1,449102795);
a1 := bat.append(a1,1963326860);
a1 := bat.append(a1,1520950234);
a1 := bat.append(a1,16781888);
a1 := bat.append(a1,771174490);
a1 := bat.append(a1,-729352063);
a1 := bat.append(a1,1209220787);
a1 := bat.append(a1,-1516718182);
a1 := bat.append(a1,1801595461);
a1 := algebra.tunique(a1);
a1 := algebra.markH(a1, 60@0);
(g1,e1,h1) := group.subgroup(a1);
io.print(a1,g1);
io.print(e1,h1);
(g1,e1,h1) := group.subgroup(a1,g);
io.print(a1,g,g1);
io.print(e1,h1);
(g1,e1,h1) := group.subgroup(a1,g,e,h);
io.print(a1,g,g1);
io.print(e1,h1);

# group constant values
a2 := bat.new(:oid,:int);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := bat.append(a2,0);
a2 := algebra.markH(a2, 60@0);
(g2,e2,h2) := group.subgroup(a2);
io.print(a2,g2);
io.print(e2,h2);
(g2,e2,h2) := group.subgroup(a2,g);
io.print(a2,g,g2);
io.print(e2,h2);
(g2,e2,h2) := group.subgroup(a2,g,e,h);
io.print(a2,g,g2);
io.print(e2,h2);

# group ordered values
a3 := bat.new(:oid,:int);
a3 := bat.append(a3,1786227270);
a3 := bat.append(a3,1786227270);
a3 := bat.append(a3,1693392427);
a3 := bat.append(a3,1693392427);
a3 := bat.append(a3,1273518971);
a3 := bat.append(a3,1273518971);
a3 := bat.append(a3,536624655);
a3 := bat.append(a3,536624655);
a3 := bat.append(a3,31954372);
a3 := bat.append(a3,31954372);
a3 := bat.append(a3,-355661357);
a3 := bat.append(a3,-355661357);
a3 := bat.append(a3,-419582233);
a3 := bat.append(a3,-419582233);
a3 := bat.append(a3,-780608638);
a3 := bat.append(a3,-780608638);
a3 := bat.append(a3,-1722087643);
a3 := bat.append(a3,-1722087643);
a3 := bat.append(a3,-2037140631);
a3 := bat.append(a3,-2037140631);
a3 := algebra.subsort(a3,true,true);
a3 := algebra.markH(a3, 60@0);
(g3,e3,h3) := group.subgroup(a3);
io.print(a3,g3);
io.print(e3,h3);
(g3,e3,h3) := group.subgroup(a3,g);
io.print(a3,g,g3);
io.print(e3,h3);
(g3,e3,h3) := group.subgroup(a3,g,e,h);
io.print(a3,g,g3);
io.print(e3,h3);

# group random non-unique values
a4 := bat.new(:oid,:int);
a4 := bat.append(a4,536624655);
a4 := bat.append(a4,1693392427);
a4 := bat.append(a4,-2037140631);
a4 := bat.append(a4,-355661357);
a4 := bat.append(a4,-1722087643);
a4 := bat.append(a4,-780608638);
a4 := bat.append(a4,-419582233);
a4 := bat.append(a4,1786227270);
a4 := bat.append(a4,31954372);
a4 := bat.append(a4,1273518971);
a4 := bat.append(a4,536624655);
a4 := bat.append(a4,1693392427);
a4 := bat.append(a4,-2037140631);
a4 := bat.append(a4,-355661357);
a4 := bat.append(a4,-1722087643);
a4 := bat.append(a4,-780608638);
a4 := bat.append(a4,-419582233);
a4 := bat.append(a4,1786227270);
a4 := bat.append(a4,31954372);
a4 := bat.append(a4,1273518971);
a4 := algebra.markH(a4, 60@0);
(g4,e4,h4) := group.subgroup(a4);
io.print(a4,g4);
io.print(e4,h4);
(g4,e4,h4) := group.subgroup(a4,g);
io.print(a4,g,g4);
io.print(e4,h4);
(g4,e4,h4) := group.subgroup(a4,g,e,h);
io.print(a4,g,g4);
io.print(e4,h4);

# group random values with preexisting hash
a4m := bat.reverse(a4);
bat.setHash(a4m,true);
(g4,e4,h4) := group.subgroup(a4);
io.print(a4,g4);
io.print(e4,h4);
(g4,e4,h4) := group.subgroup(a4,g);
io.print(a4,g,g4);
io.print(e4,h4);
(g4,e4,h4) := group.subgroup(a4,g,e,h);
io.print(a4,g,g4);
io.print(e4,h4);

# group ordered values with ordered group
g := algebra.subsort(g,false,true);
e := bat.new(:oid,:oid);
e := bat.append(e,60@0);
e := bat.append(e,64@0);
e := bat.append(e,68@0);
e := bat.append(e,72@0);
e := bat.append(e,76@0);
(g3,e3,h3) := group.subgroup(a3,g);
io.print(a3,g,g3);
io.print(e3,h3);
(g3,e3,h3) := group.subgroup(a3,g,e,h);
io.print(a3,g,g3);
io.print(e3,h3);
