stdout of test 'TMsubcommit` in directory 'tests/gdkTests` itself:


# 22:05:38 >  
# 22:05:38 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=30897 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  TMsubcommit.mal < /dev/null
# 22:05:38 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
#mdb.setDebug(19);
#
#b:=bat.new(:int,:int);
#bat.insert(b,1,2);
#bat.setName(b,"b");
#bat.setPersistent(b,true);
#transaction.commit();
#
#c:=bat.new(:int,:int);
#bat.insert(c,3,4);
#bat.setName(c,"a");
#bat.setPersistent(c,true);
#d:= bat.new(:int,:str);
#bat.insert(d,0,"a");
#transaction.subcommit(d);
#
#tmp := bat.new(:int,:str);
#bat.insert(tmp,0,"a");
#da:= bbp.bind("a");
#bat.setPersistent(da,false);
#transaction.subcommit(tmp);
#
#bat.setPersistent(b,false);
#transaction.commit();
#
function user.main():void;              #  0 main:void {G}
#turn the debugger on to see details 
#mdb.setDebug(19); 
    b := bat.new(:int,:int);            #  3 b:bat[:int,:int] := CMDBATnew(_4:int, _4:int) {G}
    bat.insert(b,1,2);                  #  4 _5:void := BKCinsert_bun(b:bat[:int,:int], _6:int, _7:int) 
    bat.setName(b,"b");                 #  5 _8:void := BKCsetName(b:bat[:int,:int], _9:str) 
    bat.setPersistent(b,true);          #  6 _10:void := BKCpersists(b:bat[:int,:int], _11:bit) 
    transaction.commit();               #  7 _12:bit 
    c := bat.new(:int,:int);            #  8 c:bat[:int,:int] := CMDBATnew(_4:int, _4:int) {G}
    bat.insert(c,3,4);                  #  9 _14:void := BKCinsert_bun(c:bat[:int,:int], _15:int, _16:int) 
    bat.setName(c,"a");                 # 10 _17:void := BKCsetName(c:bat[:int,:int], _18:str) 
    bat.setPersistent(c,true);          # 11 _19:void := BKCpersists(c:bat[:int,:int], _11:bit) 
    d := bat.new(:int,:str);            # 12 d:bat[:int,:str] := CMDBATnew(_4:int, _21:str) {G}
    bat.insert(d,0,"a");                # 13 _22:void := BKCinsert_bun(d:bat[:int,:str], _23:int, _18:str) 
    transaction.subcommit(d);           # 14 _24:bit := TRNsubcommit(d:bat[:int,:str]) 
    tmp := bat.new(:int,:str);          # 15 tmp:bat[:int,:str] := CMDBATnew(_4:int, _26:str) {G}
    bat.insert(tmp,0,"a");              # 16 _27:void := BKCinsert_bun(tmp:bat[:int,:str], _23:int, _18:str) 
    da:bat[:int,:int]  := bbp.bind("a");# 17 da:bat[:int,:int] := CMDbbpbind(_18:str) {G}
    bat.setPersistent(da,false);        # 18 _29:void := BKCpersists(da:bat[:int,:int], _30:bit) 
    transaction.subcommit(tmp);         # 19 _31:bit := TRNsubcommit(tmp:bat[:int,:str]) 
    bat.setPersistent(b,false);         # 20 _32:void := BKCpersists(b:bat[:int,:int], _30:bit) 
    transaction.commit();               # 21 _33:bit 
end main;	# 22  

# 22:05:38 >  
# 22:05:38 >  Done.
# 22:05:38 >  

