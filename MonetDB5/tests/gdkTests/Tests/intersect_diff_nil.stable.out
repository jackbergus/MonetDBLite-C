stdout of test 'intersect_diff_nil` in directory 'tests/gdkTests` itself:


# 15:27:41 >  
# 15:27:41 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=35206 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  intersect_diff_nil.mal < /dev/null
# 15:27:41 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
#a:=bat.new(:int,:int);
#b:=bat.new(:int,:int);
#n:=nil:int;
#bat.insert(a, 1, 1);
#bat.insert(a, n, 2);
#bat.insert(a, 3, 3);
#bat.insert(a, n, n);
#bat.insert(a, 5, 5);
#bat.insert(a, 6, n);
#bat.insert(a, 7, 7);
#bat.insert(b,-1,-1);
#bat.insert(b, n, 2);
#bat.insert(b,-3,-3);
#bat.insert(b, n, n);
#bat.insert(b,-5,-5);
#bat.insert(b, 6, n);
#bat.insert(b,-7,-7);
#
#ka:= algebra.kintersect(a,b);
#io.print(ka);
#ka:= algebra.kintersect(b,a);
#io.print(ka);
#
#ka:= algebra.sintersect(a,b);
#io.print(ka);
#ka:= algebra.sintersect(b,a);
#io.print(ka);
#
#ka:= algebra.kdifference(a,b);
#io.print(ka);
#ka:= algebra.kdifference(b,a);
#io.print(ka);
#
#ka:= algebra.sdifference(a,b);
#io.print(ka);
#ka:= algebra.sdifference(b,a);
#io.print(ka);
#
function user.main():void;	# 0  (main:void)
    a := bat.new(:int,:int);	# 1 CMDBATnew (a:bat[:int,:int])<-(_2:int)(_2:int)
    b := bat.new(:int,:int);	# 2 CMDBATnew (b:bat[:int,:int])<-(_2:int)(_2:int)
    n := nil:int;	# 3  (n:int)<-(_5:int)
    bat.insert(a,1,1);	# 4 BKCinsert_bun (_6:void)<-(a:bat[:int,:int])(_7:int)(_7:int)
    bat.insert(a,n,2);	# 5 BKCinsert_bun (_8:void)<-(a:bat[:int,:int])(n:int)(_9:int)
    bat.insert(a,3,3);	# 6 BKCinsert_bun (_10:void)<-(a:bat[:int,:int])(_11:int)(_11:int)
    bat.insert(a,n,n);	# 7 BKCinsert_bun (_12:void)<-(a:bat[:int,:int])(n:int)(n:int)
    bat.insert(a,5,5);	# 8 BKCinsert_bun (_13:void)<-(a:bat[:int,:int])(_14:int)(_14:int)
    bat.insert(a,6,n);	# 9 BKCinsert_bun (_15:void)<-(a:bat[:int,:int])(_16:int)(n:int)
    bat.insert(a,7,7);	# 10 BKCinsert_bun (_17:void)<-(a:bat[:int,:int])(_18:int)(_18:int)
    bat.insert(b,-1,-1);	# 11 BKCinsert_bun (_19:void)<-(b:bat[:int,:int])(_20:int)(_20:int)
    bat.insert(b,n,2);	# 12 BKCinsert_bun (_21:void)<-(b:bat[:int,:int])(n:int)(_9:int)
    bat.insert(b,-3,-3);	# 13 BKCinsert_bun (_22:void)<-(b:bat[:int,:int])(_23:int)(_23:int)
    bat.insert(b,n,n);	# 14 BKCinsert_bun (_24:void)<-(b:bat[:int,:int])(n:int)(n:int)
    bat.insert(b,-5,-5);	# 15 BKCinsert_bun (_25:void)<-(b:bat[:int,:int])(_26:int)(_26:int)
    bat.insert(b,6,n);	# 16 BKCinsert_bun (_27:void)<-(b:bat[:int,:int])(_16:int)(n:int)
    bat.insert(b,-7,-7);	# 17 BKCinsert_bun (_28:void)<-(b:bat[:int,:int])(_29:int)(_29:int)
    ka := algebra.kintersect(a,b);	# 18 ALGsemijoin (ka:bat[:int,:int])<-(a:bat[:int,:int])(b:bat[:int,:int])
    io.print(ka);	# 19 IOprint_val (_31:void)<-(ka:bat[:int,:int])
    ka := algebra.kintersect(b,a);	# 20 ALGsemijoin (ka:bat[:int,:int])<-(b:bat[:int,:int])(a:bat[:int,:int])
    io.print(ka);	# 21 IOprint_val (_32:void)<-(ka:bat[:int,:int])
    ka := algebra.sintersect(a,b);	# 22 ALGsintersect (ka:bat[:int,:int])<-(a:bat[:int,:int])(b:bat[:int,:int])
    io.print(ka);	# 23 IOprint_val (_33:void)<-(ka:bat[:int,:int])
    ka := algebra.sintersect(b,a);	# 24 ALGsintersect (ka:bat[:int,:int])<-(b:bat[:int,:int])(a:bat[:int,:int])
    io.print(ka);	# 25 IOprint_val (_34:void)<-(ka:bat[:int,:int])
    ka := algebra.kdifference(a,b);	# 26 ALGkdiff (ka:bat[:int,:int])<-(a:bat[:int,:int])(b:bat[:int,:int])
    io.print(ka);	# 27 IOprint_val (_35:void)<-(ka:bat[:int,:int])
    ka := algebra.kdifference(b,a);	# 28 ALGkdiff (ka:bat[:int,:int])<-(b:bat[:int,:int])(a:bat[:int,:int])
    io.print(ka);	# 29 IOprint_val (_36:void)<-(ka:bat[:int,:int])
    ka := algebra.sdifference(a,b);	# 30 ALGsdiff (ka:bat[:int,:int])<-(a:bat[:int,:int])(b:bat[:int,:int])
    io.print(ka);	# 31 IOprint_val (_37:void)<-(ka:bat[:int,:int])
    ka := algebra.sdifference(b,a);	# 32 ALGsdiff (ka:bat[:int,:int])<-(b:bat[:int,:int])(a:bat[:int,:int])
    io.print(ka);	# 33 IOprint_val (_38:void)<-(ka:bat[:int,:int])
end main;	# 34  
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 6,	  nil	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 6,	  nil	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ nil,	  2	  ]
[ 3,	  3	  ]
[ nil,	  nil	  ]
[ 5,	  5	  ]
[ 7,	  7	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ -1,	  -1	  ]
[ nil,	  2	  ]
[ -3,	  -3	  ]
[ nil,	  nil	  ]
[ -5,	  -5	  ]
[ -7,	  -7	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 1,	  1	  ]
[ nil,	  2	  ]
[ 3,	  3	  ]
[ nil,	  nil	  ]
[ 5,	  5	  ]
[ 6,	  nil	  ]
[ 7,	  7	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ -1,	  -1	  ]
[ nil,	  2	  ]
[ -3,	  -3	  ]
[ nil,	  nil	  ]
[ -5,	  -5	  ]
[ 6,	  nil	  ]
[ -7,	  -7	  ]

# 15:27:41 >  
# 15:27:41 >  Done.
# 15:27:41 >  

