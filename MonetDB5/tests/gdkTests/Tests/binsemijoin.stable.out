stdout of test 'binsemijoin` in directory 'tests/gdkTests` itself:


# 09:01:02 >  
# 09:01:02 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31140 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  binsemijoin.mal < /dev/null
# 09:01:02 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
#a:=bat.new(:void,:int);
#bat.setSequenceBase(a,0@0);
#bat.append(a,0);
#bat.append(a,1);
#
#b:=bat.new(:int,:int);
#bat.insert(b,0,0);
#bat.insert(b,0,1);
#bat.insert(b,0,2);
#bat.insert(b,0,3);
#bat.insert(b,0,4);
#bat.insert(b,0,5);
#bat.insert(b,0,6);
#bat.insert(b,0,7);
#bat.insert(b,0,8);
#bat.insert(b,0,9);
#bat.insert(b,1,0);
#bat.insert(b,1,1);
#bat.insert(b,1,2);
#bat.insert(b,1,3);
#bat.insert(b,1,4);
#bat.insert(b,1,5);
#bat.insert(b,1,6);
#bat.insert(b,1,7);
#bat.insert(b,1,8);
#bat.insert(b,1,9);
#
#cr:=bat.reverse(b);
#co:=batcalc.oid(cr);
#c:= bat.reverse(co);
#d:=bat.reverse(a);
#
#io.print(a);
#io.print(d);
#io.print(b);
#io.print(c);
#
#v:=algebra.semijoin(b,d);
#io.print(v);
#w:=algebra.semijoin(d,b);
#io.print(w);
#
#e:= algebra.semijoin(c,a);
#io.print(e);
#f:= algebra.semijoin(a,c);
#io.print(f);
#
function user.main():void;	# 0  (main:void)
    a := bat.new(:void,:int);	# 1 CMDBATnew (a:bat[:void,:int])<-(_2:void)(_3:int)
    bat.setSequenceBase(a,0@0);	# 2 BKCsetSequenceBase (_4:bat[:void,:int])<-(a:bat[:void,:int])(_5:oid)
    bat.append(a,0);	# 3 BKCappend_val_wrap (_6:void)<-(a:bat[:void,:int])(_7:int)
    bat.append(a,1);	# 4 BKCappend_val_wrap (_8:void)<-(a:bat[:void,:int])(_9:int)
    b := bat.new(:int,:int);	# 5 CMDBATnew (b:bat[:int,:int])<-(_3:int)(_3:int)
    bat.insert(b,0,0);	# 6 BKCinsert_bun (_11:void)<-(b:bat[:int,:int])(_7:int)(_7:int)
    bat.insert(b,0,1);	# 7 BKCinsert_bun (_12:void)<-(b:bat[:int,:int])(_7:int)(_9:int)
    bat.insert(b,0,2);	# 8 BKCinsert_bun (_13:void)<-(b:bat[:int,:int])(_7:int)(_14:int)
    bat.insert(b,0,3);	# 9 BKCinsert_bun (_15:void)<-(b:bat[:int,:int])(_7:int)(_16:int)
    bat.insert(b,0,4);	# 10 BKCinsert_bun (_17:void)<-(b:bat[:int,:int])(_7:int)(_18:int)
    bat.insert(b,0,5);	# 11 BKCinsert_bun (_19:void)<-(b:bat[:int,:int])(_7:int)(_20:int)
    bat.insert(b,0,6);	# 12 BKCinsert_bun (_21:void)<-(b:bat[:int,:int])(_7:int)(_22:int)
    bat.insert(b,0,7);	# 13 BKCinsert_bun (_23:void)<-(b:bat[:int,:int])(_7:int)(_24:int)
    bat.insert(b,0,8);	# 14 BKCinsert_bun (_25:void)<-(b:bat[:int,:int])(_7:int)(_26:int)
    bat.insert(b,0,9);	# 15 BKCinsert_bun (_27:void)<-(b:bat[:int,:int])(_7:int)(_28:int)
    bat.insert(b,1,0);	# 16 BKCinsert_bun (_29:void)<-(b:bat[:int,:int])(_9:int)(_7:int)
    bat.insert(b,1,1);	# 17 BKCinsert_bun (_30:void)<-(b:bat[:int,:int])(_9:int)(_9:int)
    bat.insert(b,1,2);	# 18 BKCinsert_bun (_31:void)<-(b:bat[:int,:int])(_9:int)(_14:int)
    bat.insert(b,1,3);	# 19 BKCinsert_bun (_32:void)<-(b:bat[:int,:int])(_9:int)(_16:int)
    bat.insert(b,1,4);	# 20 BKCinsert_bun (_33:void)<-(b:bat[:int,:int])(_9:int)(_18:int)
    bat.insert(b,1,5);	# 21 BKCinsert_bun (_34:void)<-(b:bat[:int,:int])(_9:int)(_20:int)
    bat.insert(b,1,6);	# 22 BKCinsert_bun (_35:void)<-(b:bat[:int,:int])(_9:int)(_22:int)
    bat.insert(b,1,7);	# 23 BKCinsert_bun (_36:void)<-(b:bat[:int,:int])(_9:int)(_24:int)
    bat.insert(b,1,8);	# 24 BKCinsert_bun (_37:void)<-(b:bat[:int,:int])(_9:int)(_26:int)
    bat.insert(b,1,9);	# 25 BKCinsert_bun (_38:void)<-(b:bat[:int,:int])(_9:int)(_28:int)
    cr := bat.reverse(b);	# 26 BKCreverse (cr:bat[:int,:int])<-(b:bat[:int,:int])
    co := batcalc.oid(cr);	# 27 CMDconvertint_oid (co:bat[:int,:oid])<-(cr:bat[:int,:int])
    c := bat.reverse(co);	# 28 BKCreverse (c:bat[:oid,:int])<-(co:bat[:int,:oid])
    d := bat.reverse(a);	# 29 BKCreverse (d:bat[:int,:void])<-(a:bat[:void,:int])
    io.print(a);	# 30 IOprint_val (_43:int)<-(a:bat[:void,:int])
    io.print(d);	# 31 IOprint_val (_44:int)<-(d:bat[:int,:void])
    io.print(b);	# 32 IOprint_val (_45:int)<-(b:bat[:int,:int])
    io.print(c);	# 33 IOprint_val (_46:int)<-(c:bat[:oid,:int])
    v := algebra.semijoin(b,d);	# 34 ALGsemijoin (v:bat[:int,:int])<-(b:bat[:int,:int])(d:bat[:int,:void])
    io.print(v);	# 35 IOprint_val (_48:int)<-(v:bat[:int,:int])
    w := algebra.semijoin(d,b);	# 36 ALGsemijoin (w:bat[:int,:void])<-(d:bat[:int,:void])(b:bat[:int,:int])
    io.print(w);	# 37 IOprint_val (_50:int)<-(w:bat[:int,:void])
    e := algebra.semijoin(c,a);	# 38 ALGsemijoin (e:bat[:oid,:int])<-(c:bat[:oid,:int])(a:bat[:void,:int])
    io.print(e);	# 39 IOprint_val (_52:int)<-(e:bat[:oid,:int])
    f := algebra.semijoin(a,c);	# 40 ALGsemijoin (f:bat[:oid,:int])<-(a:bat[:void,:int])(c:bat[:oid,:int])
    io.print(f);	# 41 IOprint_val (_54:int)<-(f:bat[:oid,:int])
end main;	# 42  
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
#-----------------#
# t	h	  # name
# int	void	  # type
#-----------------#
[ 0,	  0@0	  ]
[ 1,	  1@0	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 0,	  1	  ]
[ 0,	  2	  ]
[ 0,	  3	  ]
[ 0,	  4	  ]
[ 0,	  5	  ]
[ 0,	  6	  ]
[ 0,	  7	  ]
[ 0,	  8	  ]
[ 0,	  9	  ]
[ 1,	  0	  ]
[ 1,	  1	  ]
[ 1,	  2	  ]
[ 1,	  3	  ]
[ 1,	  4	  ]
[ 1,	  5	  ]
[ 1,	  6	  ]
[ 1,	  7	  ]
[ 1,	  8	  ]
[ 1,	  9	  ]
#-----------------#
# t	h	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 0@0,	  1	  ]
[ 0@0,	  2	  ]
[ 0@0,	  3	  ]
[ 0@0,	  4	  ]
[ 0@0,	  5	  ]
[ 0@0,	  6	  ]
[ 0@0,	  7	  ]
[ 0@0,	  8	  ]
[ 0@0,	  9	  ]
[ 1@0,	  0	  ]
[ 1@0,	  1	  ]
[ 1@0,	  2	  ]
[ 1@0,	  3	  ]
[ 1@0,	  4	  ]
[ 1@0,	  5	  ]
[ 1@0,	  6	  ]
[ 1@0,	  7	  ]
[ 1@0,	  8	  ]
[ 1@0,	  9	  ]
#-----------------#
# h	t	  # name
# int	int	  # type
#-----------------#
[ 0,	  0	  ]
[ 0,	  1	  ]
[ 0,	  2	  ]
[ 0,	  3	  ]
[ 0,	  4	  ]
[ 0,	  5	  ]
[ 0,	  6	  ]
[ 0,	  7	  ]
[ 0,	  8	  ]
[ 0,	  9	  ]
[ 1,	  0	  ]
[ 1,	  1	  ]
[ 1,	  2	  ]
[ 1,	  3	  ]
[ 1,	  4	  ]
[ 1,	  5	  ]
[ 1,	  6	  ]
[ 1,	  7	  ]
[ 1,	  8	  ]
[ 1,	  9	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 0,	  0@0	  ]
[ 1,	  1@0	  ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 0@0,	  1	  ]
[ 0@0,	  2	  ]
[ 0@0,	  3	  ]
[ 0@0,	  4	  ]
[ 0@0,	  5	  ]
[ 0@0,	  6	  ]
[ 0@0,	  7	  ]
[ 0@0,	  8	  ]
[ 0@0,	  9	  ]
[ 1@0,	  0	  ]
[ 1@0,	  1	  ]
[ 1@0,	  2	  ]
[ 1@0,	  3	  ]
[ 1@0,	  4	  ]
[ 1@0,	  5	  ]
[ 1@0,	  6	  ]
[ 1@0,	  7	  ]
[ 1@0,	  8	  ]
[ 1@0,	  9	  ]
#-----------------#
# h	t	  # name
# oid	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]

# 09:01:02 >  
# 09:01:02 >  Done.
# 09:01:02 >  

