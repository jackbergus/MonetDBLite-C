stdout of test 'semijoin` in directory 'monetdb5/tests/gdkTests` itself:


# 22:53:06 >  
# 22:53:06 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=36170 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  semijoin.mal < /dev/null
# 22:53:06 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.main():void;
    a := bat.new(:oid,:int);
    bat.append(a,0);
    bat.append(a,1);
    bat.append(a,nil:int);
    b := bat.new(:oid,:int);
    bat.append(b,0);
    bat.append(b,1);
    bat.append(b,2);
    bat.append(b,3);
    bat.append(b,4);
    bat.append(b,5);
    bat.append(b,6);
    bat.append(b,7);
    bat.append(b,8);
    bat.append(b,9);
    bat.append(b,nil:int);
    c := bat.reverse(b);
    d := bat.reverse(a);
    io.print(b);
    io.print(c);
    io.print("semijoin tests b,d");
    z1 := algebra.semijoin(b,b);
    io.print(z1);
    z3 := algebra.semijoin(a,a);
    io.print(z3);
# (try to) force different semijoin implementations 
    a1 := bat.new(:oid,:oid);
    bat.append(a1,1@0);
    bat.append(a1,2@0);
    bat.append(a1,nil:oid);
    a1s := algebra.sort(a1);
    c1 := bat.new(:oid,:oid);
    bat.append(c1,nil:oid);
barrier i := 1;
    oi := calc.oid(i);
    bat.append(c1,oi);
    redo i := iterator.next(1,100);
exit i;
    c1s := algebra.sort(c1);
    io.print("slices");
    io.print(a1s);
    sl := algebra.slice(c1s,0,1);
    io.print(sl);
    io.print("semijoin tests a1,c1");
# binsemijoin 
    e := algebra.semijoin(a1s,c1s);
    io.print(e);
    f := algebra.semijoin(c1s,a1s);
    io.print(f);
end main;
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 4@0,	  4	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 9@0,	  9	  ]
[ 10@0,	  nil	  ]
#-----------------#
# t	h	  # name
# int	void	  # type
#-----------------#
[ 0,	  0@0	  ]
[ 1,	  1@0	  ]
[ 2,	  2@0	  ]
[ 3,	  3@0	  ]
[ 4,	  4@0	  ]
[ 5,	  5@0	  ]
[ 6,	  6@0	  ]
[ 7,	  7@0	  ]
[ 8,	  8@0	  ]
[ 9,	  9@0	  ]
[ nil,	  10@0	  ]
[ "semijoin tests b,d" ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
[ 4@0,	  4	  ]
[ 5@0,	  5	  ]
[ 6@0,	  6	  ]
[ 7@0,	  7	  ]
[ 8@0,	  8	  ]
[ 9@0,	  9	  ]
[ 10@0,	  nil	  ]
#-----------------#
# h	t	  # name
# void	int	  # type
#-----------------#
[ 0@0,	  0	  ]
[ 1@0,	  1	  ]
[ 2@0,	  nil	  ]
[ "slices" ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 0@0,	  1@0	  ]
[ 1@0,	  2@0	  ]
[ 2@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  1@0	  ]
[ "semijoin tests a1,c1" ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 0@0,	  1@0	  ]
[ 1@0,	  2@0	  ]
[ 2@0,	  nil	  ]
#-----------------#
# h	t	  # name
# int	oid	  # type
#-----------------#
[ 0@0,	  nil	  ]
[ 1@0,	  1@0	  ]
[ 2@0,	  2@0	  ]

# 22:53:06 >  
# 22:53:06 >  Done.
# 22:53:06 >  

