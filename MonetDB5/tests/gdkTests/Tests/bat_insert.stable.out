stdout of test 'bat_insert` in directory 'monetdb5/tests/gdkTests` itself:


# 20:34:11 >  
# 20:34:11 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=38345 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  bat_insert.mal < /dev/null
# 20:34:11 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.check_cap(b:bat[:any_1,:any_2]):void;
    inserted := aggr.count(b);
    d := bat.getDelta(b);
    d1 := aggr.count(d);
    deleted := calc.lng(d1);
    cap := bat.getCapacity(b);
    overflow := calc.+(inserted,deleted);
    overflow := calc.-(overflow,cap);
barrier errors := calc.>(overflow,0:lng);
    io.printf("!ERROR: wrote %d BUNs beyond capacity\n",overflow);
exit errors;
end check_cap;
function user.main():void;
    o := nil:oid;
    b := bat.new(:oid,:oid);
    bat.setName(b,"b");
    bat.setPersistent(b,true);
    cap := bat.getCapacity(b);
    cap := calc./(cap,4);
    ci := calc.int(cap);
    ci := calc.+(ci,1);
    i := calc.*(ci,3);
barrier go := calc.>(i,0);
    o := calc.oid(i);
    bat.insert(b,o,o);
    i := calc.-(i,1);
    redo go := calc.>(i,0);
exit go;
    transaction.commit();
    i := calc.*(ci,2);
barrier go := calc.>(i,0);
    o := calc.oid(i);
    bat.delete(b,o);
    i := calc.-(i,1);
    redo go := calc.>(i,0);
exit go;
    c := bat.new(:oid,:oid);
    i := calc.*(ci,2);
barrier go := calc.>(i,0);
    o := calc.oid(i);
    bat.insert(c,o,o);
    i := calc.-(i,1);
    redo go := calc.>(i,0);
exit go;
    bat.insert(b,c);
    user.check_cap(b);
    bat.setPersistent(b,false);
    transaction.commit();
    clients.quit();
end main;

# 20:34:11 >  
# 20:34:11 >  Done.
# 20:34:11 >  

