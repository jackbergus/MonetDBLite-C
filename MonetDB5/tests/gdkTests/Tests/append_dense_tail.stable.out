stdout of test 'append_dense_tail` in directory 'tests/gdkTests` itself:


# 09:01:01 >  
# 09:01:01 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=31140 --set monet_prompt= --trace --dbname=mTests_tests_gdkTests  append_dense_tail.mal < /dev/null
# 09:01:01 >  





!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_gdkTests
# Visit http://monetdb.cwi.nl/ for further information
## create an empty [void,oid] BAT with dense tail
#a := bat.new(:void,:oid);
#bat.setSequenceBase(a,0@0);
#bat.append(a,1@0);
#bat.delete(a,0@0);
## create a non-empty [void,oid] BAT with non-dense tail
#b := bat.new(:void,:oid);
#bat.setSequenceBase(b,0@0);
#bat.append(b,0@0);
#bat.append(b,0@0);
#bat.append(b,0@0);
## append the latter to the former
# bat.append(a,b);
#io.print(a);
## check important properties
#f:= bat.new(:void,:str);
#bat.append(f,"hseqbase");
#bat.append(f,"hdense");
#bat.append(f,"tseqbase");
#bat.append(f,"tdense");
#fr:= bat.reverse(f);
#fm:= bat.mirror(fr);
#i:= bat.info(a);
#j:= algebra.join(fm,i);
#io.print(j);
#
function user.main():void;              #  0 main:void {G}
# create an empty [void,oid] BAT with dense tail 
    a := bat.new(:oid,:oid);            #  2 a:bat[:oid,:oid] := CMDBATnew(_3:oid, _3:oid) {G}
    bat.append(a,1@0);                  #  3 _4:void := BKCappend_val_wrap(a:bat[:oid,:oid], _5:oid) 
    bat.delete(a,0@0);                  #  4 _6:void := BKCdelete(a:bat[:oid,:oid], _7:oid) 
# create a non-empty [void,oid] BAT with non-dense tail 
    b := bat.new(:oid,:oid);            #  6 b:bat[:oid,:oid] := CMDBATnew(_3:oid, _3:oid) {G}
    bat.append(b,0@0);                  #  7 _10:void := BKCappend_val_wrap(b:bat[:oid,:oid], _7:oid) 
    bat.append(b,0@0);                  #  8 _11:void := BKCappend_val_wrap(b:bat[:oid,:oid], _7:oid) 
    bat.append(b,0@0);                  #  9 _12:void := BKCappend_val_wrap(b:bat[:oid,:oid], _7:oid) 
# append the latter to the former 
    bat.append(a,b);                    # 11 _14:void := BKCappend_wrap(a:bat[:oid,:oid], b:bat[:oid,:oid]) 
    io.print(a);                        # 12 _15:void := IOprint_val(a:bat[:oid,:oid]) 
# check important properties 
    f := bat.new(:void,:str);           # 14 f:bat[:void,:str] := CMDBATnew(_18:void, _19:str) {G}
    bat.append(f,"hseqbase");           # 15 _20:void := BKCappend_val_wrap(f:bat[:void,:str], _21:str) 
    bat.append(f,"hdense");             # 16 _22:void := BKCappend_val_wrap(f:bat[:void,:str], _23:str) 
    bat.append(f,"tseqbase");           # 17 _24:void := BKCappend_val_wrap(f:bat[:void,:str], _25:str) 
    bat.append(f,"tdense");             # 18 _26:void := BKCappend_val_wrap(f:bat[:void,:str], _27:str) 
    fr := bat.reverse(f);               # 19 fr:bat[:str,:void] := BKCreverse(f:bat[:void,:str]) {G}
    fm := bat.mirror(fr);               # 20 fm:bat[:str,:str] := BKCmirror(fr:bat[:str,:void]) {G}
    i := bat.info(a);                   # 21 i:bat[:str,:str] := BKCinfo(a:bat[:oid,:oid]) {G}
    j := algebra.join(fm,i);            # 22 j:bat[:str,:str] := ALGjoin(fm:bat[:str,:str], i:bat[:str,:str]) {G}
    io.print(j);                        # 23 _32:void := IOprint_val(j:bat[:str,:str]) 
end main;	# 24  
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  0@0	  ]
[ 1@0,	  0@0	  ]
[ 2@0,	  0@0	  ]
#-------------------------#
# h		t	  # name
# str		str	  # type
#-------------------------#
[ "hseqbase",	  "0@0"	  ]
[ "hdense",	  "1"	  ]
[ "tseqbase",	  "0@0"	  ]
[ "tdense",	  "0"	  ]

# 09:01:01 >  
# 09:01:01 >  Done.
# 09:01:01 >  

