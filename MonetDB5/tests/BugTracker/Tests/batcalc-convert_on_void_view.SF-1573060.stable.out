stdout of test 'batcalc-convert_on_void_view.SF-1573060` in directory 'tests/BugTracker` itself:


# 14:01:54 >  
# 14:01:54 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/monet5/Linux/lib64/MonetDB5/lib:/ufs/mk/monet5/Linux/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/xquery_logs" --set mapi_port=32772 --set monet_prompt= --trace --dbname=mTests_tests_BugTracker  batcalc-convert_on_void_view.SF-1573060.mal < /dev/null
# 14:01:54 >  

!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_tests_BugTracker
# Visit http://monetdb.cwi.nl/ for further information
#include microbenchmark;
## head: oid
## a:=microbenchmark.uniform(0:oid,9,9); platform dependent
#
#a:= bat.new(:oid,:int);
#bat.insert(a, 3@0,  0  );
#bat.insert(a, 0@0,  1  );
#bat.insert(a, 2@0,  2  );
#bat.insert(a, 5@0,  3  );
#bat.insert(a, 7@0,  4  );
#bat.insert(a, 8@0,  5  );
#bat.insert(a, 1@0,  6  );
#bat.insert(a, 6@0,  7  );
#bat.insert(a, 4@0,  8  );
#
#as:= algebra.sortTail(a);
#io.print(as);
#
#b:=batcalc.sht(a);
#bs:= algebra.sortTail(b);
#io.print(bs);
#c:=batcalc.lng(a);
#cs:= algebra.sortTail(c);
#io.print(cs);
#
## head: void view on oid
#d:=algebra.markH(a,10:oid);
#ds:= algebra.sortTail(d);
#io.print(ds);
#e:=batcalc.sht(d);
#es:= algebra.sortTail(e);
#io.print(es);
#f:=batcalc.lng(d);
#fs:= algebra.sortTail(f);
#io.print(fs);
#
## head: physically void
#g:=algebra.markH(a,20:oid);
#g:=algebra.copy(g);
#gs:= algebra.sortTail(g);
#io.print(gs);
#h:=batcalc.sht(g);
#hs:= algebra.sortTail(h);
#io.print(hs);
#i:=batcalc.lng(g);
#is:= algebra.sortTail(i);
#io.print(is);
#
function user.main():void;	# 0  (main:void)
# head: oid 	# 1  (_1:str)
# a:=microbenchmark.uniform(0:oid,9,9); platform dependent 	# 2  (_2:str)
    a := bat.new(:oid,:int);	# 3 CMDBATnew (a:bat[:oid,:int])<-(_4:oid)(_5:int)
    bat.insert(a,3@0,0);	# 4 BKCinsert_bun (_6:void)<-(a:bat[:oid,:int])(_7:oid)(_8:int)
    bat.insert(a,0@0,1);	# 5 BKCinsert_bun (_9:void)<-(a:bat[:oid,:int])(_10:oid)(_11:int)
    bat.insert(a,2@0,2);	# 6 BKCinsert_bun (_12:void)<-(a:bat[:oid,:int])(_13:oid)(_14:int)
    bat.insert(a,5@0,3);	# 7 BKCinsert_bun (_15:void)<-(a:bat[:oid,:int])(_16:oid)(_17:int)
    bat.insert(a,7@0,4);	# 8 BKCinsert_bun (_18:void)<-(a:bat[:oid,:int])(_19:oid)(_20:int)
    bat.insert(a,8@0,5);	# 9 BKCinsert_bun (_21:void)<-(a:bat[:oid,:int])(_22:oid)(_23:int)
    bat.insert(a,1@0,6);	# 10 BKCinsert_bun (_24:void)<-(a:bat[:oid,:int])(_25:oid)(_26:int)
    bat.insert(a,6@0,7);	# 11 BKCinsert_bun (_27:void)<-(a:bat[:oid,:int])(_28:oid)(_29:int)
    bat.insert(a,4@0,8);	# 12 BKCinsert_bun (_30:void)<-(a:bat[:oid,:int])(_31:oid)(_32:int)
    as := algebra.sortTail(a);	# 13 ALGtsort (as:bat[:oid,:int])<-(a:bat[:oid,:int])
    io.print(as);	# 14 IOprint_val (_34:void)<-(as:bat[:oid,:int])
    b := batcalc.sht(a);	# 15 CMDconvert_int_sht (b:bat[:oid,:sht])<-(a:bat[:oid,:int])
    bs := algebra.sortTail(b);	# 16 ALGtsort (bs:bat[:oid,:sht])<-(b:bat[:oid,:sht])
    io.print(bs);	# 17 IOprint_val (_37:void)<-(bs:bat[:oid,:sht])
    c := batcalc.lng(a);	# 18 CMDconvert_int_lng (c:bat[:oid,:lng])<-(a:bat[:oid,:int])
    cs := algebra.sortTail(c);	# 19 ALGtsort (cs:bat[:oid,:lng])<-(c:bat[:oid,:lng])
    io.print(cs);	# 20 IOprint_val (_40:void)<-(cs:bat[:oid,:lng])
# head: void view on oid 	# 21  (_41:str)
    d := algebra.markH(a,10@0:oid);	# 22 ALGmarkHead (d:bat[:oid,:int])<-(a:bat[:oid,:int])(_43:oid)
    ds := algebra.sortTail(d);	# 23 ALGtsort (ds:bat[:oid,:int])<-(d:bat[:oid,:int])
    io.print(ds);	# 24 IOprint_val (_45:void)<-(ds:bat[:oid,:int])
    e := batcalc.sht(d);	# 25 CMDconvert_int_sht (e:bat[:oid,:sht])<-(d:bat[:oid,:int])
    es := algebra.sortTail(e);	# 26 ALGtsort (es:bat[:oid,:sht])<-(e:bat[:oid,:sht])
    io.print(es);	# 27 IOprint_val (_48:void)<-(es:bat[:oid,:sht])
    f := batcalc.lng(d);	# 28 CMDconvert_int_lng (f:bat[:oid,:lng])<-(d:bat[:oid,:int])
    fs := algebra.sortTail(f);	# 29 ALGtsort (fs:bat[:oid,:lng])<-(f:bat[:oid,:lng])
    io.print(fs);	# 30 IOprint_val (_51:void)<-(fs:bat[:oid,:lng])
# head: physically void 	# 31  (_52:str)
    g := algebra.markH(a,20@0:oid);	# 32 ALGmarkHead (g:bat[:oid,:int])<-(a:bat[:oid,:int])(_54:oid)
    g := algebra.copy(g);	# 33 ALGcopy (g:bat[:oid,:int])<-(g:bat[:oid,:int])
    gs := algebra.sortTail(g);	# 34 ALGtsort (gs:bat[:oid,:int])<-(g:bat[:oid,:int])
    io.print(gs);	# 35 IOprint_val (_56:void)<-(gs:bat[:oid,:int])
    h := batcalc.sht(g);	# 36 CMDconvert_int_sht (h:bat[:oid,:sht])<-(g:bat[:oid,:int])
    hs := algebra.sortTail(h);	# 37 ALGtsort (hs:bat[:oid,:sht])<-(h:bat[:oid,:sht])
    io.print(hs);	# 38 IOprint_val (_59:void)<-(hs:bat[:oid,:sht])
    i := batcalc.lng(g);	# 39 CMDconvert_int_lng (i:bat[:oid,:lng])<-(g:bat[:oid,:int])
    is := algebra.sortTail(i);	# 40 ALGtsort (is:bat[:oid,:lng])<-(i:bat[:oid,:lng])
    io.print(is);	# 41 IOprint_val (_62:void)<-(is:bat[:oid,:lng])
end main;	# 42  
#-----------------#
# t	h	  # name
# oid	int	  # type
#-----------------#
[ 3@0,	  0	  ]
[ 0@0,	  1	  ]
[ 2@0,	  2	  ]
[ 5@0,	  3	  ]
[ 7@0,	  4	  ]
[ 8@0,	  5	  ]
[ 1@0,	  6	  ]
[ 6@0,	  7	  ]
[ 4@0,	  8	  ]
#-----------------#
# t	h	  # name
# oid	sht	  # type
#-----------------#
[ 3@0,	  0	  ]
[ 0@0,	  1	  ]
[ 2@0,	  2	  ]
[ 5@0,	  3	  ]
[ 7@0,	  4	  ]
[ 8@0,	  5	  ]
[ 1@0,	  6	  ]
[ 6@0,	  7	  ]
[ 4@0,	  8	  ]
#-----------------#
# t	h	  # name
# oid	lng	  # type
#-----------------#
[ 3@0,	  0	  ]
[ 0@0,	  1	  ]
[ 2@0,	  2	  ]
[ 5@0,	  3	  ]
[ 7@0,	  4	  ]
[ 8@0,	  5	  ]
[ 1@0,	  6	  ]
[ 6@0,	  7	  ]
[ 4@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	int	  # type
#-----------------#
[ 10@0,	  0	  ]
[ 11@0,	  1	  ]
[ 12@0,	  2	  ]
[ 13@0,	  3	  ]
[ 14@0,	  4	  ]
[ 15@0,	  5	  ]
[ 16@0,	  6	  ]
[ 17@0,	  7	  ]
[ 18@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	sht	  # type
#-----------------#
[ 10@0,	  0	  ]
[ 11@0,	  1	  ]
[ 12@0,	  2	  ]
[ 13@0,	  3	  ]
[ 14@0,	  4	  ]
[ 15@0,	  5	  ]
[ 16@0,	  6	  ]
[ 17@0,	  7	  ]
[ 18@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	lng	  # type
#-----------------#
[ 10@0,	  0	  ]
[ 11@0,	  1	  ]
[ 12@0,	  2	  ]
[ 13@0,	  3	  ]
[ 14@0,	  4	  ]
[ 15@0,	  5	  ]
[ 16@0,	  6	  ]
[ 17@0,	  7	  ]
[ 18@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	int	  # type
#-----------------#
[ 20@0,	  0	  ]
[ 21@0,	  1	  ]
[ 22@0,	  2	  ]
[ 23@0,	  3	  ]
[ 24@0,	  4	  ]
[ 25@0,	  5	  ]
[ 26@0,	  6	  ]
[ 27@0,	  7	  ]
[ 28@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	sht	  # type
#-----------------#
[ 20@0,	  0	  ]
[ 21@0,	  1	  ]
[ 22@0,	  2	  ]
[ 23@0,	  3	  ]
[ 24@0,	  4	  ]
[ 25@0,	  5	  ]
[ 26@0,	  6	  ]
[ 27@0,	  7	  ]
[ 28@0,	  8	  ]
#-----------------#
# t	h	  # name
# void	lng	  # type
#-----------------#
[ 20@0,	  0	  ]
[ 21@0,	  1	  ]
[ 22@0,	  2	  ]
[ 23@0,	  3	  ]
[ 24@0,	  4	  ]
[ 25@0,	  5	  ]
[ 26@0,	  6	  ]
[ 27@0,	  7	  ]
[ 28@0,	  8	  ]

# 14:01:54 >  
# 14:01:54 >  Done.
# 14:01:54 >  

