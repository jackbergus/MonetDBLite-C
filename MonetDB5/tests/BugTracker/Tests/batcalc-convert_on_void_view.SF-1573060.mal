include microbenchmark;
# head: oid
# a:=microbenchmark.uniform(0:oid,9,9); platform dependent

a:= bat.new(:oid,:int);
bat.insert(a, 3@0,  0  );
bat.insert(a, 0@0,  1  );
bat.insert(a, 2@0,  2  );
bat.insert(a, 5@0,  3  );
bat.insert(a, 7@0,  4  );
bat.insert(a, 8@0,  5  );
bat.insert(a, 1@0,  6  );
bat.insert(a, 6@0,  7  );
bat.insert(a, 4@0,  8  );

as:= algebra.sortTail(a);
io.print(as);

b:=batcalc.sht(a);
bs:= algebra.sortTail(b);
io.print(bs);
c:=batcalc.lng(a);
cs:= algebra.sortTail(c);
io.print(cs);

# head: void view on oid
d:=algebra.markH(a,10:oid);
ds:= algebra.sortTail(d);
io.print(ds);
e:=batcalc.sht(d);
es:= algebra.sortTail(e);
io.print(es);
f:=batcalc.lng(d);
fs:= algebra.sortTail(f);
io.print(fs);

# head: physically void
g:=algebra.markH(a,20:oid);
g:=algebra.copy(g);
gs:= algebra.sortTail(g);
io.print(gs);
h:=batcalc.sht(g);
hs:= algebra.sortTail(h);
io.print(hs);
i:=batcalc.lng(g);
is:= algebra.sortTail(i);
io.print(is);
