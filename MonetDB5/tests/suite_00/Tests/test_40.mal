# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	io.print("# Some applications may wish to directly access the buns\n");
#	io.print("# i.e. they use a BAT like an array.\n");
	b := bat.new(nil:int,nil:int);
#	io.print("b.rename(\"b\");");
	ca_a := bat.setName(b,"b");
#	io.print("b.insert(1,15);");
	da_a := bat.insert(b,1,15);
#	io.print("b.insert(2,4);");
	ea_a := bat.insert(b,2,4);
#	io.print("b.insert(3,int(nil));");
	fa_a := calc.int(nil);
	ga_a := bat.insert(b,3,fa_a);
#	io.print("b.insert(4,16);");
	ha_a := bat.insert(b,4,16);
#	io.print("b.insert(5,25);");
	ia_a := bat.insert(b,5,25);
#	io.print("b.insert(6,36);");
	ja_a := bat.insert(b,6,36);
#	io.print("b.insert(7,49);");
	ka_a := bat.insert(b,7,49);
#	io.print("b.insert(8,64);");
	la_a := bat.insert(b,8,64);
#	io.print("b.insert(9,int(nil));");
	ma_a := calc.int(nil);
	na_a := bat.insert(b,9,ma_a);
#	io.print("b.insert(int(nil),int(nil));");
	oa_a := calc.int(nil);
	pa_a := calc.int(nil);
	qa_a := bat.insert(b,oa_a,pa_a);
#	io.print("b.insert(int(nil),81);");
	ra_a := calc.int(nil);
	sa_a := bat.insert(b,ra_a,81);
#	io.print("#b.rename(\"b\");\n");
#	io.print("b.save();");
	ta_a := bat.save(b);
#	io.print("load(\"b\");");
	ua_a := bat.load("b");
#	io.print("b.position(4).print();");
	va_a := algebra.position(b,4);
	wa_a := io.print(va_a);
#	io.print("b.fetch(5).print();");
	xa_a := algebra.fetch(b,5);
	ya_a := io.print(xa_a);
#	io.print("b.fetch(8).print();");
	ab_a := algebra.fetch(b,8);
	bb_a := io.print(ab_a);
#	io.print("b.slice(5,8).print();");
	cb_a := algebra.slice(b,5,8);
	db_a := io.print(cb_a);
#	io.print("# errors\n");
	eb_a := algebra.position(b,111);
	fb_a := io.print(eb_a);
#	io.print("b.fetch(-1).print();");
	gb_a := algebra.fetch(b,-1);
	hb_a := io.print(gb_a);
#	io.print("b.slice(8,5).print();");
	ib_a := algebra.slice(b,8,5);
	jb_a := io.print(ib_a);
#	io.print("quit();");
	kb_a := clients.quit();
#Identifer 'rename' mapped to 'bat.setName'
