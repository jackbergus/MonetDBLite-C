stdout of test 'test_90` in directory 'tests/suite_00` itself:


# 00:12:29 >  
# 00:12:29 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=34380 --set sql_port=46008 --set xquery_port=58634 --set monet_prompt= --trace --dbname=mTests_tests_suite_00  test_90.mal </dev/null
# 00:12:29 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_tests_suite_00', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.main():void;
# Monet Mil to Mal compiler 
# Copyright (c) 2001-2004, CWI. All rights reserved. 
#Predefined code segment 
#The compiler can not guarantee an accurate compilation, 
#because MIL unlike MAL is a dynamically typed language. 
#A few guidelines to maximize usefullness. 
#- make the type of variables explicit, in particular 'nil' 
#- upon advice of M2m to remap identifiers, change it in your program directly 
#use the "mil_schema" for additional support routines 
#	io.print("setoid(oid(20000000));"); 
    aa_a := calc.oid(20000000);
    ba_a := calc.setoid(aa_a);
#	io.print("#test mark and number primitives\n"); 
#	io.print("var b:= bat.new(str,int);"); 
    b := bat.new(nil:str,nil:int);
#	io.print("b.insert(\"the\",1);"); 
    ca_a := bat.insert(b,"the",1);
#	io.print("b.insert(\"quick\",20);"); 
    da_a := bat.insert(b,"quick",20);
#	io.print("b.insert(\"brown\",30);"); 
    ea_a := bat.insert(b,"brown",30);
#	io.print("b.insert(\"fox\",40);"); 
    fa_a := bat.insert(b,"fox",40);
#	io.print("b.insert(\"jumps\",50);"); 
    ga_a := bat.insert(b,"jumps",50);
#	io.print("b.insert(\"over\",60);"); 
    ha_a := bat.insert(b,"over",60);
#	io.print("b.insert(\"lazy\",70);"); 
    ia_a := bat.insert(b,"lazy",70);
#	io.print("b.insert(\"dog\",80);"); 
    ja_a := bat.insert(b,"dog",80);
#	io.print("b.insert(str(nil),90);"); 
    ka_a := calc.str(nil);
    la_a := bat.insert(b,ka_a,90);
#	io.print("b.insert(\".\",100);"); 
    ma_a := bat.insert(b,".",100);
#	io.print("b.insert(\"\",int(nil));"); 
    na_a := calc.int(nil);
    oa_a := bat.insert(b,"",na_a);
#	io.print("b.insert(str(nil),int(nil));"); 
    pa_a := calc.str(nil);
    qa_a := calc.int(nil);
    ra_a := bat.insert(b,pa_a,qa_a);
#	io.print("b.print();"); 
    sa_a := io.print(b);
#	io.print("var c:= mark(b,oid(20000050));"); 
    ta_a := calc.oid(20000050);
    c := algebra.markT(b,ta_a);
#	io.print("print(c);"); 
    ua_a := io.print(c);
#	io.print("var d:=number(b);"); 
    d := algebra.number(b);
#	io.print("print(d);"); 
    va_a := io.print(d);
#	io.print("quit();"); 
    wa_a := clients.quit();
end main;
#-------------------------#
# h		t	  # name
# str		int	  # type
#-------------------------#
[ "the",	  1	  ]
[ "quick",	  20	  ]
[ "brown",	  30	  ]
[ "fox",	  40	  ]
[ "jumps",	  50	  ]
[ "over",	  60	  ]
[ "lazy",	  70	  ]
[ "dog",	  80	  ]
[ nil,		  90	  ]
[ ".",		  100	  ]
[ "",		  nil	  ]
[ nil,		  nil	  ]
#var c:= mark(b,oid(20000050));
#print(c);
#---------------------------------#
# h		t		  # name
# str		void		  # type
#---------------------------------#
[ "the",	  20000050@0	  ]
[ "quick",	  20000051@0	  ]
[ "brown",	  20000052@0	  ]
[ "fox",	  20000053@0	  ]
[ "jumps",	  20000054@0	  ]
[ "over",	  20000055@0	  ]
[ "lazy",	  20000056@0	  ]
[ "dog",	  20000057@0	  ]
[ nil,		  20000058@0	  ]
[ ".",		  20000059@0	  ]
[ "",		  20000060@0	  ]
[ nil,		  20000061@0	  ]
#var d:=number(b);
#print(d);
#-------------------------#
# h		t	  # name
# str		int	  # type
#-------------------------#
[ "the",	  0	  ]
[ "quick",	  1	  ]
[ "brown",	  2	  ]
[ "fox",	  3	  ]
[ "jumps",	  4	  ]
[ "over",	  5	  ]
[ "lazy",	  6	  ]
[ "dog",	  7	  ]
[ nil,		  8	  ]
[ ".",		  9	  ]
[ "",		  10	  ]
[ nil,		  11	  ]
#quit();

# 00:12:29 >  
# 00:12:29 >  Done.
# 00:12:29 >  

