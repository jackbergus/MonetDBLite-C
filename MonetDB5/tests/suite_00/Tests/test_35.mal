# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	mil.line("# testing merge semijoin\n");
	c := bat.new(nil:int,nil:int);
#	mil.line("insert(c,1,1);");
	ca_a := bat.insert(c,1,1);
#	mil.line("insert(c,2,2);");
	da_a := bat.insert(c,2,2);
#	mil.line("insert(c,3,4);");
	ea_a := bat.insert(c,3,4);
#	mil.line("insert(c,4,4);");
	fa_a := bat.insert(c,4,4);
#	mil.line("insert(c,4,9);");
	ga_a := bat.insert(c,4,9);
#	mil.line("insert(c,5,int(nil));");
	ha_a := calc.int(nil);
	ia_a := bat.insert(c,5,ha_a);
#	mil.line("c.print();");
	ja_a := io.print(c);
#	mil.line("var d:= bat.new(int,int);");
	d := bat.new(nil:int,nil:int);
#	mil.line("insert(d,1,1);");
	ka_a := bat.insert(d,1,1);
#	mil.line("insert(d,2,2);");
	la_a := bat.insert(d,2,2);
#	mil.line("insert(d,4,3);");
	ma_a := bat.insert(d,4,3);
#	mil.line("insert(d,4,4);");
	na_a := bat.insert(d,4,4);
#	mil.line("insert(d,9,4);");
	oa_a := bat.insert(d,9,4);
#	mil.line("insert(d,int(nil),5);");
	pa_a := calc.int(nil);
	qa_a := bat.insert(d,pa_a,5);
#	mil.line("d.print();");
	ra_a := io.print(d);
#	mil.line("var z:=c.semijoin(d);");
	z := algebra.semijoin(c,d);
#	mil.line("z.print();");
	sa_a := io.print(z);
#	mil.line("z:=c.reverse().semijoin(d);");
	ta_a := bat.reverse(c);
	z := algebra.semijoin(ta_a,d);
#	mil.line("z.print();");
	ua_a := io.print(z);
#	mil.line("z:=d.semijoin(c);");
	z := algebra.semijoin(d,c);
#	mil.line("z.print();");
	va_a := io.print(z);
#	mil.line("# String management\n");
	b := bat.new(nil:oid,nil:str);
#	mil.line("b.insert(oid(1),\"hello\");");
	wa_a := calc.oid(1);
	xa_a := bat.insert(b,wa_a,"hello");
#	mil.line("b.insert(oid(2),\"world\");");
	ya_a := calc.oid(2);
	ab_a := bat.insert(b,ya_a,"world");
#	mil.line("b.insert(oid(3),\"..\");");
	bb_a := calc.oid(3);
	cb_a := bat.insert(b,bb_a,"..");
#	mil.line("var z1:= b.semijoin(b);");
	z1 := algebra.semijoin(b,b);
#	mil.line("z1.print();");
	db_a := io.print(z1);
#	mil.line("quit();");
	eb_a := clients.quit();
