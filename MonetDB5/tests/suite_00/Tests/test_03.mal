# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	mil.line("#test basic functionality of the BAT library.\n");
#	mil.line("#focussed on temporary reversal of roles.\n");
#	mil.line("var b:= bat.new(int,str);");
	b := bat.new(nil:int,nil:str);
#	mil.line("b.insert(1,\"15\");");
	ca_a := bat.insert(b,1,"15");
#	mil.line("b.print();");
	da_a := io.print(b);
#	mil.line("b.reverse().print();");
	ea_a := bat.reverse(b);
	fa_a := io.print(ea_a);
#	mil.line("b.print();");
	ga_a := io.print(b);
#	mil.line("quit();");
	ha_a := clients.quit();
