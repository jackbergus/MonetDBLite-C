stdout of test 'test_10` in directory 'monetdb5/tests/suite_00` itself:


# 07:27:19 >  
# 07:27:19 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=35545 --set monet_prompt= --trace --dbname=mTests_tests_suite_00  test_10.mal < /dev/null
# 07:27:19 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_tests_suite_00', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:33407/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-21327/.s.monetdb.33407
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

function user.main():void;
    s := bat.new(nil:oid,nil:int);
    ca_a := bat.append(s,5);
    da_a := bat.append(s,3);
    ea_a := bat.append(s,2);
    fa_a := bat.append(s,1);
    ga_a := bat.append(s,1);
    ha_a := bat.append(s,2);
    ia_a := bat.append(s,3);
    ja_a := io.printf("#~BeginVariableOutput~#\n");
#	io.print("sort(s).print();"); 
    ka_a := algebra.sort(s);
    la_a := io.print(ka_a);
#	io.print("printf(\"#~EndVariableOutput~#\\n\");"); 
    ma_a := io.printf("#~EndVariableOutput~#\n");
    oa_a := io.print(na);
    s := bat.new(nil:oid,nil:int);
    pa_a := bat.append(s,1);
    qa_a := bat.append(s,1);
    ra_a := bat.append(s,1);
    sa_a := bat.append(s,1);
    ta_a := bat.append(s,1);
    ua_a := bat.append(s,2);
    va_a := bat.append(s,1);
    wa_a := io.printf("#~BeginVariableOutput~#\n");
#	io.print("sort(s).print();"); 
    xa_a := algebra.sort(s);
    ya_a := io.print(xa_a);
#	io.print("printf(\"#~EndVariableOutput~#\\n\");"); 
    ab_a := io.printf("#~EndVariableOutput~#\n");
end main;

# 07:27:19 >  
# 07:27:19 >  Done.
# 07:27:19 >  

