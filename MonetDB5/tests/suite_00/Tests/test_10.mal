# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	io.print("# Sorting activities\n");
#	io.print("# left->right shift + left boundary;\n");
	s := bat.new(nil:int,nil:int);
#	io.print("insert(s,5,5);insert(s,3,3);insert(s,4,2);insert(s,2,1);");
	ca_a := bat.insert(s,5,5);
	da_a := bat.insert(s,3,3);
	ea_a := bat.insert(s,4,2);
	fa_a := bat.insert(s,2,1);
#	io.print("insert(s,1,1);insert(s,4,2); bat.insert(s,4,3);");
	ga_a := bat.insert(s,1,1);
	ha_a := bat.insert(s,4,2);
	ia_a := bat.insert(s,4,3);
#	io.print("printf(\"#~BeginVariableOutput~#\\n\");");
	ja_a := io.printf("#~BeginVariableOutput~#\n");
#	io.print("sort(s).print();");
	ka_a := algebra.sort(s);
	la_a := io.print(ka_a);
#	io.print("printf(\"#~EndVariableOutput~#\\n\");");
	ma_a := io.printf("#~EndVariableOutput~#\n");
#	io.print("sortHT(s).print();");
	na_a := algebra.sortHT(s);
	oa_a := io.print(na_a);
#	io.print("sortHT(s).print();");
	na := algebra.sortHT(s);
	oa_a := io.print(na);
#	io.print("# right->left shift + right boundary;\n");
	s := bat.new(nil:int,nil:int);
#	io.print("insert(s,2,1);insert(s,4,1); bat.insert(s,3,1); insert(s,5,1);");
	pa_a := bat.insert(s,2,1);
	qa_a := bat.insert(s,4,1);
	ra_a := bat.insert(s,3,1);
	sa_a := bat.insert(s,5,1);
#	io.print("insert(s,6,1);insert(s,4,2);insert(s,1,1);");
	ta_a := bat.insert(s,6,1);
	ua_a := bat.insert(s,4,2);
	va_a := bat.insert(s,1,1);
#	io.print("printf(\"#~BeginVariableOutput~#\\n\");");
	wa_a := io.printf("#~BeginVariableOutput~#\n");
#	io.print("sort(s).print();");
	xa_a := algebra.sort(s);
	ya_a := io.print(xa_a);
#	io.print("printf(\"#~EndVariableOutput~#\\n\");");
	ab_a := io.printf("#~EndVariableOutput~#\n");
#	io.print("sortHT(s).print();");
	bb_a := algebra.sortHT(s);
	cb_a := io.print(bb_a);
#	io.print("quit();");
	db_a := clients.quit();
