# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("# >Number:         160\n");
#	io.print("# >Category:       MIL\n");
#	io.print("# >Synopsis:       end of string not prpperly set in MIL error message\n");
#	io.print("# >Confidential:   no\n");
#	io.print("# >Severity:       critical\n");
#	io.print("# >Priority:       high\n");
#	io.print("# >Responsible:    boncz (Peter Boncz)\n");
#	io.print("# >State:          open\n");
#	io.print("# >Class:          sw-bug\n");
#	io.print("# >Submitter-Id:   unknown\n");
#	io.print("# >Arrival-Date:   Wed Jul  1 10:52:44 1998\n");
#	io.print("# >Originator:     manegold@cwi.nl\n");
#	io.print("# >Organization:\n");
#	io.print("# CWI\n");
#	io.print("# >Release:        980101\n");
#	io.print("# >Environment:\n");
#	io.print("# IRIX, SunOS\n");
#	io.print("# >Description:\n");
#	io.print("# whenever a shorter a shorter \"no matching MIL operator\" message\n");
#	io.print("# follows a longer one, the remaining part of the previous message\n");
#	io.print("# is also printed (see '^^^' below):\n");
#	io.print("# ======================================================\n");
#	io.print("# # Monet Database Server V4.0 (IRIX5.3/32bit) of Fri Jun 26 21:12:28 MET DST 1998\n");
#	io.print("# # Copyright (c) 1993-1998, CWI & SION. All rights reserved.\n");
#	io.print("# \n");
#	io.print("# [...]\n");
#	io.print("# \n");
#	io.print("# >loaded(1);\n");
#	io.print("# !ERROR: interpret: no matching MIL operator to 'loaded(int)'.\n");
#	io.print("# !MAYBE YOU MEAN:\n");
#	io.print("# !       \n");
#	io.print("# >dir(1);\n");
#	io.print("# !ERROR: interpret: no matching MIL operator to 'dir(int)nt)'.\n");
#	io.print("# !MAYBE YOU MEAN:                                        ^^^\n");
#	io.print("# !       \n");
#	io.print("# >format_fcn_sig(1);\n");
#	io.print("# !ERROR: interpret: no matching MIL operator to 'format_fcn_sig(int)'.\n");
#	io.print("# !MAYBE YOU MEAN:\n");
#	io.print("# !       format_fcn_sig(oid) : str\n");
#	io.print("# >env(1);\n");
#	io.print("# !ERROR: interpret: no matching MIL operator to 'env(int)cn_sig(int)'.\n");
#	io.print("# !MAYBE YOU MEAN:                                        ^^^^^^^^^^^\n");
#	io.print("# !       \n");
#	io.print("# >\n");
#	io.print("# ======================================================\n");
#	io.print("# \n");
#	io.print("# \tstefan\n");
#	io.print("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := setoid(aa_a);
#	io.print("loaded(1);");
	ca_a := loaded(1);
#	io.print("dir(1);");
	da_a := dir(1);
#	io.print("format_fcn_sig(1);");
	ea_a := format_fcn_sig(1);
#	io.print("env(1);");
	fa_a := env(1);
#	io.print("quit();");
	ga_a := clients.quit();
