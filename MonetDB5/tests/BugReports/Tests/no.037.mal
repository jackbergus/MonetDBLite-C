# Monet Mil to Mal compiler
#include mil;
#include mil_system_procs;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("# >Number:         37\n");
#	mil.line("# >Category:       Mserver\n");
#	mil.line("# >Synopsis:       built-in bats\n");
#	mil.line("# >Confidential:   no\n");
#	mil.line("# >Severity:       serious\n");
#	mil.line("# >Priority:       high\n");
#	mil.line("# >Responsible:    mk\n");
#	mil.line("# >State:          feedback\n");
#	mil.line("# >Class:          sw-bug\n");
#	mil.line("# >Submitter-Id:   unknown\n");
#	mil.line("# >Arrival-Date:   Tue Oct  7 17:45:11 1997\n");
#	mil.line("# >Originator:     mk\n");
#	mil.line("# >Organization:\n");
#	mil.line("# >Release:        970101\n");
#	mil.line("# >Environment:\n");
#	mil.line("# \n");
#	mil.line("# >Description:\n");
#	mil.line("# \"mem\" is not properly handled (like  \"cpu\")\n");
#	mil.line("# \n");
#	mil.line("# >ls;\n");
#	mil.line("# #---------------------------------------------------------#\n");
#	mil.line("# # name          | heat  | status| group | role            #\n");
#	mil.line("# #---------------------------------------------------------#\n");
#	mil.line("# [ \"car_age\",      0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"car_gender\",   0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"car_price\",    0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"car_category\", 0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"car_city\",     0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"car_damage\",   0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"a_b\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"telephone\",    0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"p_name\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"p_gender\",     0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"p_age\",        0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"p_city\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"p_kind\",       0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"mem\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"io\",           0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# [ \"cpu\",          0,      \"disk\", \"h\",    \"t\"             ]\n");
#	mil.line("# >mem.print;\n");
#	mil.line("# !ERROR: atom 'monet_Mallinfo' unknown, in BAT 'mem'.!ERROR: BATprintf: BAT expected\n");
#	mil.line("ls();");
	aa_a := mil_sys_procs.ls();
#	mil.line("mem.print();");
#	mil.line("printf(\"#~BeginVariableOutput~#\\n\"); memory().print(); bat.printf(\"#~EndVariableOutput~#\\n\");");
	ca_a := io.printf("#~BeginVariableOutput~#\n");
	da_a := status.memStatistics();
	ea_a := io.print(da_a);
	fa_a := io.printf("#~EndVariableOutput~#\n");
#	mil.line("quit();");
	ga_a := clients.quit();
#Identifer 'memory' mapped to 'status.memStatistics'
