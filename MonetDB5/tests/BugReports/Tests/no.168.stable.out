stdout of test 'no.168` in directory 'monetdb5/tests/BugReports` itself:

#> Mtest:	milS no.168 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.168.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.168.milS


# Monet Database Server V4.7.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugReports
# Visit http://monetdb.cwi.nl/ for further information.
## Monet Mil to Mal compiler
#include mil;
#include mil_scenario;
#include mil_system_procs;
## Copyright (c) 2001-2004, CWI. All rights reserved.
# 
# >Number:         168
# >Category:       Module_url
# >Synopsis:       cast url(str) returns nil
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    mk (Martin Kersten)
# >State:          open
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Thu Aug 13 22:21:00 1998
# >Originator:     manegold@cwi.nl
# >Organization:
# CWI
# >Release:        980101
# >Environment:
# any
# >Description:
# cast url(str) returns nil.
# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.
# so, it's no bug in module url, but somewhere else.
# 
!ERROR: 	u := url("http://www.cwi.nl/~mk/Acoi/index.html");
!	               ^module name missing
!ERROR: 	mil.line("u.print();");
!	                        	  ^<identifier> expected
!ERROR: 	da_a := getHost(u);
!	                    	 ^module name missing
!ERROR: 	fa_a := getPort(u);
!	                    	 ^module name missing
!ERROR: 	ha_a := getDomain(u);
!	                      	 ^module name missing
!ERROR: 	ja_a := getFile(u);
!	                    	 ^module name missing
!ERROR: 	la_a := getAnchor(u);
!	                      	 ^module name missing
!ERROR: 	na_a := getBasename(u);
!	                        	 ^module name missing
!ERROR: 	pa_a := getProtocol(u);
!	                        	 ^module name missing
!ERROR: 	ra_a := getUser(u);
!	                    	 ^module name missing
!ERROR: 	ta_a := getDirectory(u);
!	                         	 ^module name missing
function user.main():int;	# 0  (main:int)
# Copyright (c) 2001-2004, CWI. All rights reserved. 	# 1  unknown (_32:str)
#Predefined code segment 	# 2  unknown (_34:str)
#The compiler can not guarantee an accurate compilation, 	# 3  unknown (_36:str)
#because MIL unlike MAL is a dynamically typed language. 	# 4  unknown (_38:str)
#A few guidelines to maximize usefullness. 	# 5  unknown (_40:str)
#- make the type of variables explicit, in particular 'nil' 	# 6  unknown (_42:str)
#- upon advice of M2m to remap identifiers, change it in your program directly 	# 7  unknown (_44:str)
#use the "mil_schema" for additional support routines 	# 8  unknown (_46:str)
    mil.line("# \n");	# 9  unknown (_47:any)<-(_48:str)
    mil.line("# >Number:         168\n");	# 10  unknown (_49:any)<-(_50:str)
    mil.line("# >Category:       Module_url\n");	# 11  unknown (_51:any)<-(_52:str)
    mil.line("# >Synopsis:       cast url(str) returns nil\n");	# 12  unknown (_53:any)<-(_54:str)
    mil.line("# >Confidential:   no\n");	# 13  unknown (_55:any)<-(_56:str)
    mil.line("# >Severity:       serious\n");	# 14  unknown (_57:any)<-(_58:str)
    mil.line("# >Priority:       medium\n");	# 15  unknown (_59:any)<-(_60:str)
    mil.line("# >Responsible:    mk (Martin Kersten)\n");	# 16  unknown (_61:any)<-(_62:str)
    mil.line("# >State:          open\n");	# 17  unknown (_63:any)<-(_64:str)
    mil.line("# >Class:          sw-bug\n");	# 18  unknown (_65:any)<-(_66:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 19  unknown (_67:any)<-(_68:str)
    mil.line("# >Arrival-Date:   Thu Aug 13 22:21:00 1998\n");	# 20  unknown (_69:any)<-(_70:str)
    mil.line("# >Originator:     manegold@cwi.nl\n");	# 21  unknown (_71:any)<-(_72:str)
    mil.line("# >Organization:\n");	# 22  unknown (_73:any)<-(_74:str)
    mil.line("# CWI\n");	# 23  unknown (_75:any)<-(_76:str)
    mil.line("# >Release:        980101\n");	# 24  unknown (_77:any)<-(_78:str)
    mil.line("# >Environment:\n");	# 25  unknown (_79:any)<-(_80:str)
    mil.line("# any\n");	# 26  unknown (_81:any)<-(_82:str)
    mil.line("# >Description:\n");	# 27  unknown (_83:any)<-(_84:str)
    mil.line("# cast url(str) returns nil.\n");	# 28  unknown (_85:any)<-(_86:str)
    mil.line("# this bug occurs only today, i.e. after the recent checkins by Menzo & Peter.\n");	# 29  unknown (_87:any)<-(_88:str)
    mil.line("# so, it's no bug in module url, but somewhere else.\n");	# 30  unknown (_89:any)<-(_90:str)
    mil.line("# \n");	# 31  unknown (_91:any)<-(_92:str)
    mil.line("# ========\n");	# 32  unknown (_93:any)<-(_94:str)
    mil.line("# test script\n");	# 33  unknown (_95:any)<-(_96:str)
    mil.line("# --------\n");	# 34  unknown (_97:any)<-(_98:str)
    mil.line("# module(url);\n");	# 35  unknown (_99:any)<-(_100:str)
    mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");	# 36  unknown (_101:any)<-(_102:str)
    mil.line("# u.print();\n");	# 37  unknown (_103:any)<-(_104:str)
    mil.line("# u.getHost.print();\n");	# 38  unknown (_105:any)<-(_106:str)
    mil.line("# u.getPort.print();\n");	# 39  unknown (_107:any)<-(_108:str)
    mil.line("# u.getDomain.print();\n");	# 40  unknown (_109:any)<-(_110:str)
    mil.line("# u.getFile.print();\n");	# 41  unknown (_111:any)<-(_112:str)
    mil.line("# u.getAnchor.print();\n");	# 42  unknown (_113:any)<-(_114:str)
    mil.line("# u.getBasename.print();\n");	# 43  unknown (_115:any)<-(_116:str)
    mil.line("# u.getProtocol.print();\n");	# 44  unknown (_117:any)<-(_118:str)
    mil.line("# u.getUser.print();\n");	# 45  unknown (_119:any)<-(_120:str)
    mil.line("# u.getDirectory.print();\n");	# 46  unknown (_121:any)<-(_122:str)
    mil.line("# quit;\n");	# 47  unknown (_123:any)<-(_124:str)
    mil.line("# ========\n");	# 48  unknown (_125:any)<-(_94:str)
    mil.line("# \n");	# 49  unknown (_126:any)<-(_127:str)
    mil.line("# ========\n");	# 50  unknown (_128:any)<-(_129:str)
    mil.line("# output\n");	# 51  unknown (_130:any)<-(_131:str)
    mil.line("# --------\n");	# 52  unknown (_132:any)<-(_133:str)
    mil.line("# [...]\n");	# 53  unknown (_134:any)<-(_135:str)
    mil.line("# module(url);\n");	# 54  unknown (_136:any)<-(_137:str)
    mil.line("# u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");\n");	# 55  unknown (_138:any)<-(_139:str)
    mil.line("# u.print();\n");	# 56  unknown (_140:any)<-(_141:str)
    mil.line("# [ nil ]\n");	# 57  unknown (_142:any)<-(_143:str)
    mil.line("# u.getHost.print();\n");	# 58  unknown (_144:any)<-(_145:str)
    mil.line("# [ nil ]\n");	# 59  unknown (_146:any)<-(_143:str)
    mil.line("# u.getPort.print();\n");	# 60  unknown (_147:any)<-(_148:str)
    mil.line("# [ nil ]\n");	# 61  unknown (_149:any)<-(_143:str)
    mil.line("# u.getDomain.print();\n");	# 62  unknown (_150:any)<-(_151:str)
    mil.line("# [ nil ]\n");	# 63  unknown (_152:any)<-(_143:str)
    mil.line("# u.getFile.print();\n");	# 64  unknown (_153:any)<-(_154:str)
    mil.line("# [ nil ]\n");	# 65  unknown (_155:any)<-(_143:str)
    mil.line("# u.getAnchor.print();\n");	# 66  unknown (_156:any)<-(_157:str)
    mil.line("# [ nil ]\n");	# 67  unknown (_158:any)<-(_143:str)
    mil.line("# u.getBasename.print();\n");	# 68  unknown (_159:any)<-(_160:str)
    mil.line("# [ nil ]\n");	# 69  unknown (_161:any)<-(_143:str)
    mil.line("# u.getProtocol.print();\n");	# 70  unknown (_162:any)<-(_163:str)
    mil.line("# [ nil ]\n");	# 71  unknown (_164:any)<-(_143:str)
    mil.line("# u.getUser.print();\n");	# 72  unknown (_165:any)<-(_166:str)
    mil.line("# [ nil ]\n");	# 73  unknown (_167:any)<-(_143:str)
    mil.line("# u.getDirectory.print();\n");	# 74  unknown (_168:any)<-(_169:str)
    mil.line("# ========\n");	# 75  unknown (_170:any)<-(_171:str)
    mil.line("setoid(oid(20000000));");	# 76  unknown (_172:any)<-(_173:str)
    aa_a := calc.oid(20000000);	# 77  unknown (aa_a:any)<-(_175:int)
    ba_a := calc.setoid(aa_a);	# 78  unknown (ba_a:any)<-(aa_a:any)
    mil.line("var u:= url(\"http://www.cwi.nl/~mk/Acoi/index.html\");");	# 79  unknown (_177:any)<-(_178:str)
    u := url;	# 80  unknown (u:any)<-(url:any)
    ;	# 81  unknown (_181:any)
    ca_a := bat.print(u);	# 82  unknown (ca_a:any)<-(u:any)
    mil.line("u.getHost().print();");	# 83  unknown (_183:any)<-(_184:str)
    da_a := getHost;	# 84  unknown (da_a:any)<-(getHost:any)
    mil.line("u.getPort().print();");	# 85  unknown (_187:any)<-(_188:str)
    fa_a := getPort;	# 86  unknown (fa_a:any)<-(getPort:any)
    mil.line("u.getDomain().print();");	# 87  unknown (_191:any)<-(_192:str)
    ha_a := getDomain;	# 88  unknown (ha_a:any)<-(getDomain:any)
    mil.line("u.getFile().print();");	# 89  unknown (_195:any)<-(_196:str)
    ja_a := getFile;	# 90  unknown (ja_a:any)<-(getFile:any)
    mil.line("u.getAnchor().print();");	# 91  unknown (_199:any)<-(_200:str)
    la_a := getAnchor;	# 92  unknown (la_a:any)<-(getAnchor:any)
    mil.line("u.getBasename().print();");	# 93  unknown (_203:any)<-(_204:str)
    na_a := getBasename;	# 94  unknown (na_a:any)<-(getBasename:any)
    mil.line("u.getProtocol().print();");	# 95  unknown (_207:any)<-(_208:str)
    pa_a := getProtocol;	# 96  unknown (pa_a:any)<-(getProtocol:any)
    mil.line("u.getUser().print();");	# 97  unknown (_211:any)<-(_212:str)
    ra_a := getUser;	# 98  unknown (ra_a:any)<-(getUser:any)
    mil.line("u.getDirectory().print();");	# 99  unknown (_215:any)<-(_216:str)
    ta_a := getDirectory;	# 100  unknown (ta_a:any)<-(getDirectory:any)
    mil.line("quit();");	# 101  unknown (_219:any)<-(_220:str)
    va_a := clients.quit();	# 102  unknown (va_a:any)
end main;	# 103  unknown 

# 14:17:59 >  
# 14:17:59 >  Done.
# 14:17:59 >  

