stdout of test 'no.098` in directory 'monetdb5/tests/BugReports` itself:


# 07:27:15 >  
# 07:27:15 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=35545 --set monet_prompt= --trace --dbname=mTests_tests_BugReports  no.098.mal < /dev/null
# 07:27:15 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugReports
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:30579/
function user.main():void;
# Monet Mil to Mal compiler 
# Copyright (c) 2001-2004, CWI. All rights reserved. 
#Predefined code segment 
#The compiler can not guarantee an accurate compilation, 
#because MIL unlike MAL is a dynamically typed language. 
#A few guidelines to maximize usefullness. 
#- make the type of variables explicit, in particular 'nil' 
#- upon advice of M2m to remap identifiers, change it in your program directly 
#use the "mil_schema" for additional support routines 
#	io.print("# >Number:         98\n"); 
#	io.print("# >Category:       Mserver\n"); 
#	io.print("# >Synopsis:       wrong select when a BAT contains one BUN\n"); 
#	io.print("# >Confidential:   no\n"); 
#	io.print("# >Severity:       critical\n"); 
#	io.print("# >Priority:       high\n"); 
#	io.print("# >Responsible:    boncz\n"); 
#	io.print("# >State:          open\n"); 
#	io.print("# >Class:          sw-bug\n"); 
#	io.print("# >Submitter-Id:   unknown\n"); 
#	io.print("# >Arrival-Date:   Fri Dec 12 19:56:04 1997\n"); 
#	io.print("# >Originator:     windhouw\n"); 
#	io.print("# >Organization:\n"); 
#	io.print("# UvA\n"); 
#	io.print("# >Release:        971007\n"); 
#	io.print("# >Environment:\n"); 
#	io.print("# \n"); 
#	io.print("# >Description:\n"); 
#	io.print("# When a BAT contains only one BUN a select returns this BUN,\n"); 
#	io.print("# even when it's not in the selection range:\n"); 
#	io.print("# \n"); 
#	io.print("# #You are system administrator (adm)!\n"); 
#	io.print("# >b:=new(oid,oid);\n"); 
#	io.print("# >b.insert(oid(1),oid(2));\n"); 
#	io.print("# >b.select(oid(3)).print;\n"); 
#	io.print("# #-----------------#\n"); 
#	io.print("# # oid   | tmp_25  #\n"); 
#	io.print("# #-----------------#\n"); 
#	io.print("# [ 1@0,    2@0     ]\n"); 
#	io.print("# >b.select(oid(3)).print;\n"); 
#	io.print("# #-----------------#\n"); 
#	io.print("# # oid   | tmp_25  #\n"); 
#	io.print("# #-----------------#\n"); 
#	io.print("setoid(oid(20000000));"); 
    aa_a := calc.oid(20000000);
    ba_a := calc.setoid(aa_a);
#	io.print("var b:=new(oid,oid);"); 
    b := bat.new(nil:oid,nil:oid);
#	io.print("b.insert(oid(1),oid(2));"); 
    ca_a := calc.oid(1);
    da_a := calc.oid(2);
    ea_a := bat.insert(b,ca_a,da_a);
#	io.print("b.select(oid(3)).print();"); 
    fa_a := calc.oid(3);
    ga_a := algebra.select(b,fa_a);
    ha_a := io.print(ga_a);
#	io.print("b.select(oid(3)).print();"); 
    ia_a := calc.oid(3);
    ja_a := algebra.select(b,ia_a);
    ka_a := io.print(ja_a);
#	io.print("quit();"); 
    la_a := clients.quit();
end main;
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#

# 07:27:15 >  
# 07:27:15 >  Done.
# 07:27:15 >  

