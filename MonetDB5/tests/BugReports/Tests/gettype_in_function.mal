# observed 13-08-2008: inspect.getType works fine local, but not in a
# function on an argument with type :any
# SF bug #2051258

function user.typetest(o:any);
	t := inspect.getType(o);
	io.print(t);
end user.typetest;

p := "string";
t := inspect.getType(p);
# here it is still a "str"
io.print(t);
# but now it is a "any", should be "str"
user.typetest(p);

# more fun with a BAT
b := bat.new(:oid, :int);
t := inspect.getType(b);
# here it is what we expect
io.print(t);
# now it is "any" even though the above problem was fixed
user.typetest(b);

# even cooler, now suddenly a string is "any" too
user.typetest(p);

#type tests
i:=1:int;
d:=i;
z1:= inspect.equalType(i,:int);
io.print(z1);
z1:= inspect.equalType(d,:bat[:str,:flt]);
io.print(z1);
z1:= inspect.equalType(d,:int);
io.print(z1);
