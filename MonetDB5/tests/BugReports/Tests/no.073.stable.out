stdout of test 'no.073` in directory 'monetdb5/tests/BugReports` itself:

#> Mtest:	other no.073
#> Mtest:	Mtimeout -timeout 630 ./no.073 no.073
#> Mlog:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports no.073.1.mil
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.073.1.mil


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         73
# >Category:       Mserver
# >Synopsis:       original BAT unknown after renamed reverse BAT
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    boncz
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Wed Nov  5 13:03:07 1997
# >Originator:     windhouw
# >Organization:
# >Release:        971007
# >Environment:
# 
# >Description:
# example:
# - creating a persisten BAT with name ab;
# - naming the reverse to ba;
# - restart the server;
# - trying to access the original ab gives the following error:
#   >!ERROR: GDKload: can not access ab.desc
#   >No such file or directory!ERROR: BATprintf: BAT expected
# - access to the reverse ba succeeds;
# - access to the original ab is now succesfull.
# ======
# OUTPUT
# ======
# (windhouw@mamba 33) Mserver
# # Monet Database Server V4.00
# # Copyright (c) 1993-1997, CWI & SION.All rights reserved.
#  
# loaded;
# #-----------------------------------------#
# # module        | owner | usage_count     #
# #-----------------------------------------#
# [ "kernel",       "adm",  1               ]
# [ "arith",        "adm",  1               ]
# [ "bat",          "adm",  1               ]
# [ "algebra",      "adm",  1               ]
# [ "sys",          "adm",  1               ]
#  
# Try: modules;                - for other modules.
#      ls;                     - for persistent bat listing.
#      sigs("<module>")        - for available commands per module.
#      help("<command>")       - for help one-liner for a command.
#  
# #You are system administrator (adm)!
# >ab := new(int,str);
# >ab.rename("ab");
# >ab.persists(true);
# >ab.commit;
# >ba := ab.reverse;
# >ba.rename("ba");
# >ba.persists(true);
# >ba.commit;
# >ab.insert(1,"een");
# >ba.insert("twee",2);
# >ab.print;
# #-----------------#
# # int   | ba      #
# #-----------------#
# [ 1,      "een"   ]
# [ 2,      "twee"  ]
# >ba.print;
# #-----------------#
# # str   | ba      #
# #-----------------#
# [ "een",  1       ]
# [ "twee", 2       ]
# >commit;
# >quit;
# (windhouw@mamba 34) Mserver
# # Monet Database Server V4.00
# # Copyright (c) 1993-1997, CWI & SION.All rights reserved.
#  
# loaded;
# #-----------------------------------------#
# # module        | owner | usage_count     #
# #-----------------------------------------#
# [ "kernel",       "adm",  1               ]
# [ "arith",        "adm",  1               ]
# [ "bat",          "adm",  1               ]
# [ "algebra",      "adm",  1               ]
# [ "sys",          "adm",  1               ]
#  
# Try: modules;                - for other modules.
#      ls;                     - for persistent bat listing.
#      sigs("<module>")        - for available commands per module.
#      help("<command>")       - for help one-liner for a command.
#  
# #You are system administrator (adm)!
# >ab.print;
# !ERROR: GDKload: can not access ab.desc
# No such file or directory!ERROR: BATprintf: BAT expected>
# >ba.print;
# #-----------------#
# # str   | ba      #
# #-----------------#
# [ "een",  1       ]
# [ "twee", 2       ]
# >ab.print;
# #-----------------#
# # int   | ba      #
# #-----------------#
# [ 1,      "een"   ]
# [ 2,      "twee"  ]

var ab := new(int,str);
ab.rename("ab");
ab.persists(true);
ab.commit();
var ba := ab.reverse();
ba.rename("ba");
ba.persists(true);
ba.commit();
ab.insert(1,"een");
ba.insert("twee",2);
ab.print();
#-----------------#
# BAT:	  ba	  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "een"	  ]
[ 2,	  "twee"  ]
ba.print();
#-----------------#
# BAT:	  ba	  #
# (str)	  (int)	  #
#-----------------#
[ "een",  1	  ]
[ "twee", 2	  ]
commit();

# 09:44:44 >  
# 09:44:44 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/opensource/MonetDB/Linux/etc/monet.conf" --debug=10 --set "monet_mod_path=/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB/log" --set mapi_port=48869 --set sql_port=52397 --set monet_prompt= --trace --dbname=mTests_tests_BugReports  < no.073_s01.milM
# 09:44:44 >  

# Monet Database Server V4.3.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
var ab:=bat("ab");
var ba:=bat("ba");
ab.print();
#-----------------#
# BAT:	  ba	  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "een"	  ]
[ 2,	  "twee"  ]
ba.print();
#-----------------#
# BAT:	  ba	  #
# (str)	  (int)	  #
#-----------------#
[ "een",  1	  ]
[ "twee", 2	  ]
ab.print();
#-----------------#
# BAT:	  ba	  #
# (int)	  (str)	  #
#-----------------#
[ 1,	  "een"	  ]
[ 2,	  "twee"  ]

# 17:06:52 >  
# 17:06:52 >  Done.
# 17:06:52 >  

