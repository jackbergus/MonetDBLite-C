stdout of test 'no.147` in directory 'monetdb5/tests/BugReports` itself:

#> Mtest (20:54:03):	milM no.147 milM
#> Mtest (20:54:03):	Mtimeout -timeout 600 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports no.147.milM
# Monet Database Server V4.2
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
#script:no.147.milM


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         147
# >Category:       Module_sys
# >Synopsis:       view_gdk_thread() crashes
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    mk (Martin Kersten)
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Mon Mar  9 16:10:23 1998
# >Originator:     manegold@cwi.nl
# >Organization:
# >Release:        980101
# >Environment:
# SunOS5.6 (GNU=OFF) & SunOS5.5 (GNU=ON)
# >Description:
# ================
# Test script:
# ----------------
# threads;
# view_gdk_thread.print;
# #1
# threadcnt(1);
# threads;
# view_gdk_thread.print;
# #2
# threadcnt(1);
# threads;
# view_gdk_thread.print;
# #3
# threadcnt(1);
# threads;
# view_gdk_thread.print;
# #4
# threadcnt(1);
# threads;
# view_gdk_thread.print;
# #5
# threadcnt(1);
# threads;
# view_gdk_thread.print;
# quit;
# 
# ================
# output
# ----------------
# [...]#You are system administrator (adm)!
# threads;
# #---------------------------------#
# # int   | thread                  #
# #---------------------------------#
# [ 1,      "Server"                ]
# [ 4,      "Interpreter"           ]
# [ 5,      "InternetServer"        ]
# view_gdk_thread.print;
# #---------------------------------#
# # int   | thread                  #
# #---------------------------------#
# [ 1,      "Server"                ]
# [ 4,      "Interpreter"           ]
# [ 5,      "InternetServer"        ]
# #1
# threadcnt(1);
# threads;
# #---------------------------------#
# # int   | thread                  #
# #---------------------------------#
# [ 1,      "Server"                ]
# [ 4,      "Interpreter"           ]
# [ 5,      "InternetServer"        ]
# view_gdk_thread.print;
# #---------------------------------#
# # int   | thread                  #
# #---------------------------------#
# [ 1,      "Server"                ]
# [ 4,      "Interpreter"           ]
# [ 5,      "InternetServer"        ]
# [ 7,      "Interpreter"           ]
# #2
# threadcnt(1);
# !ERROR: thisRequest: could not find itself
# Segmentation Fault (core dumped)
# 
# ================
# Discription:
# ----------------
# The error does not occur deterministically. Sometimes
# it takes more than 2 'threadcnt(1)` calls, until the
# error occurs. Sometimes the error does not occur at all.
# The error may also occur after a single 'threadcnt(x)`
# call with x>1.
# In general, the error occurs less often on SunS5.5 (GNU=ON)
# than on SunOS5.6 (GNU=OFF).
# 
# 	stefan

setoid(oid(2000000));
module(alarm);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
#~EndVariableOutput~#
#1
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
#~EndVariableOutput~#
#2
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
#~EndVariableOutput~#
#3
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
#~EndVariableOutput~#
#4
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
#~EndVariableOutput~#
#5
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
#~EndVariableOutput~#
#6
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
#~EndVariableOutput~#
#7
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
#~EndVariableOutput~#
#8
threadcnt(1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 2,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#9
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 3,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#8
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 1,	  "Interpreter"	  ]
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#7
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 5,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#6
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 7,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#5
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 4,	  "Interpreter"	  ]
[ 6,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#4
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
[ 8,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#3
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
[ 9,	  "Interpreter"	  ]
#~EndVariableOutput~#
#2
threadcnt(-1);
sleep(1);
printf("#~BeginVariableOutput~#\n");threads();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
#~EndVariableOutput~#
printf("#~BeginVariableOutput~#\n");view_gdk_thread().print();printf("#~EndVariableOutput~#\n");
#~BeginVariableOutput~#
#-------------------------#
# BAT:	  thread	  #
# (int)	  (str)		  #
#-------------------------#
[ 6,	  "Interpreter"	  ]
#~EndVariableOutput~#

# 17:07:17 >  
# 17:07:17 >  Done.
# 17:07:17 >  

