stdout of test 'gettype_in_function` in directory 'tests/BugReports` itself:


# 13:09:36 >  
# 13:09:36 >   mserver5 "--config=/ufs/fabian/scratch/monetdb/current/program-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5/lib:/ufs/fabian/scratch/monetdb/current/program-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/dbfarm" --set "sql_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/sqllog" --set "xquery_logdir=/net/pegasus.ins.cwi.nl/export/scratch0/fabian/vtmp/mtest-current-pegasus.ins.cwi.nl/five/xquerylog" --set mapi_open=true --set xrpc_open=true --set mapi_port=39150 --set xrpc_port=46783 --set monet_prompt= --trace  --dbname=mTests_tests_BugReports  gettype_in_function.mal
# 13:09:36 >  



# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_tests_BugReports', using 2 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://pegasus.ins.cwi.nl:39150/
function user.typetest(o:any):void;     #  0 typetest:void := user.typetest(o:any) {PG}
    t := inspect.getType(o);            #  1 t:str := INSPECTtypeName(o:any) {G}
    io.print(t);                        #  2 _3:void := IOprint_val(t:str) 
end typetest;                           #  3  
function user.main():void;              #  0 main:void := user.main() {G}
# observed 13-08-2008: inspect.getType works fine local, but not in a 
# function on an argument with type :any 
# SF bug #2051258 
    p := "string";                      #  4 p:str := _5:str {G}
    t := inspect.getType(p);            #  5 t:str := INSPECTtypeName(p:str) {G}
# here it is still a "str" 
    io.print(t);                        #  7 _8:void := IOprint_val(t:str) 
# but now it is a "any", should be "str" 
    user.typetest(p);                   #  9 _10:void := user.typetest(p:str) 
end main;                               # 10  
[ "str" ]
[ "str" ]

# 13:09:36 >  
# 13:09:36 >  Done.
# 13:09:36 >  

