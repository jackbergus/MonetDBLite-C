stdout of test 'no.062` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.062 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.062.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 19:36:03 MET 2000.
#script:no.062.milS


# Monet Database Server V4.7.3
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/src/mal/Tests/All.conf
# dbfarm:/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm
# dbname:mTests_tests_BugReports
# Visit http://monetdb.cwi.nl/ for further information.
## Monet Mil to Mal compiler
#include mil;
## Copyright (c) 2001-2004, CWI. All rights reserved.
# 
# >Description:
# Handlin>t:= new(int,int);
# >t.insert(0,0);
# >t.insert(1+1,0);
# >t.insert(-1,-0);
# >print(t);
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# ># alles zover is goed
# >t.insert(-1+1,0);
# >t.insert(-1-1,0);
# !ERROR: in syntax at "t.insert(-1-1,0);"
# !                                      ^
# >t.insert(-1 -1, 0);
# !ERROR: in syntax at "t.insert(-1 -1, 0);"
# !                                        ^
# >#not what is expected from nested expression
# >t.print;
# #-----------------#
# # int   | tmp_32  #
# #-----------------#
# [ 0,      0       ]
# [ 2,      0       ]
# [ -1,     0       ]
# [ 0,      0       ]
# >t.insert(0-1+ -1, 0);
# !ERROR: in syntax at "t.insert(0-1+ -1, 0);"
# 
function user.main():int;	# 0  (main:int)
# Copyright (c) 2001-2004, CWI. All rights reserved. 	# 1  (_32:str)
#Predefined code segment 	# 2  (_34:str)
#The compiler can not guarantee an accurate compilation, 	# 3  (_36:str)
#because MIL unlike MAL is a dynamically typed language. 	# 4  (_38:str)
#A few guidelines to maximize usefullness. 	# 5  (_40:str)
#- make the type of variables explicit, in particular 'nil' 	# 6  (_42:str)
#- upon advice of M2m to remap identifiers, change it in your program directly 	# 7  (_44:str)
#use the "mil_schema" for additional support routines 	# 8  (_46:str)
    mil.line("# >Number:         62\n");	# 9 MILline (_47:void)<-(_48:str)
    mil.line("# >Category:       MIL\n");	# 10 MILline (_49:void)<-(_50:str)
    mil.line("# >Synopsis:       Handling of nested arithmetic expressions is inconsistent\n");	# 11 MILline (_51:void)<-(_52:str)
    mil.line("# >Confidential:   no\n");	# 12 MILline (_53:void)<-(_54:str)
    mil.line("# >Severity:       critical\n");	# 13 MILline (_55:void)<-(_56:str)
    mil.line("# >Priority:       high\n");	# 14 MILline (_57:void)<-(_58:str)
    mil.line("# >Responsible:    mk\n");	# 15 MILline (_59:void)<-(_60:str)
    mil.line("# >State:          feedback\n");	# 16 MILline (_61:void)<-(_62:str)
    mil.line("# >Class:          sw-bug\n");	# 17 MILline (_63:void)<-(_64:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 18 MILline (_65:void)<-(_66:str)
    mil.line("# >Arrival-Date:   Fri Oct 24 14:09:23 1997\n");	# 19 MILline (_67:void)<-(_68:str)
    mil.line("# >Originator:     mk\n");	# 20 MILline (_69:void)<-(_70:str)
    mil.line("# >Organization:\n");	# 21 MILline (_71:void)<-(_72:str)
    mil.line("# >Release:        971007\n");	# 22 MILline (_73:void)<-(_74:str)
    mil.line("# >Environment:\n");	# 23 MILline (_75:void)<-(_76:str)
    mil.line("# \n");	# 24 MILline (_77:void)<-(_78:str)
    mil.line("# >Description:\n");	# 25 MILline (_79:void)<-(_80:str)
    mil.line("# Handlin>t:= bat.new(int,int);\n");	# 26 MILline (_81:void)<-(_82:str)
    mil.line("# >t.insert(0,0);\n");	# 27 MILline (_83:void)<-(_84:str)
    mil.line("# >t.insert(1+1,0);\n");	# 28 MILline (_85:void)<-(_86:str)
    mil.line("# >t.insert(-1,-0);\n");	# 29 MILline (_87:void)<-(_88:str)
    mil.line("# >print(t);\n");	# 30 MILline (_89:void)<-(_90:str)
    mil.line("# #-----------------#\n");	# 31 MILline (_91:void)<-(_92:str)
    mil.line("# # int   | tmp_32  #\n");	# 32 MILline (_93:void)<-(_94:str)
    mil.line("# #-----------------#\n");	# 33 MILline (_95:void)<-(_92:str)
    mil.line("# [ 0,      0       ]\n");	# 34 MILline (_96:void)<-(_97:str)
    mil.line("# [ 2,      0       ]\n");	# 35 MILline (_98:void)<-(_99:str)
    mil.line("# [ -1,     0       ]\n");	# 36 MILline (_100:void)<-(_101:str)
    mil.line("# ># alles zover is goed\n");	# 37 MILline (_102:void)<-(_103:str)
    mil.line("# >t.insert(-1+1,0);\n");	# 38 MILline (_104:void)<-(_105:str)
    mil.line("# >t.insert(-1 - 1,0);\n");	# 39 MILline (_106:void)<-(_107:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 - 1,0);\"\n");	# 40 MILline (_108:void)<-(_109:str)
    mil.line("# !                                      ^\n");	# 41 MILline (_110:void)<-(_111:str)
    mil.line("# >t.insert(-1 -1, 0);\n");	# 42 MILline (_112:void)<-(_113:str)
    mil.line("# !ERROR: in syntax at \"t.insert(-1 -1, 0);\"\n");	# 43 MILline (_114:void)<-(_115:str)
    mil.line("# !                                        ^\n");	# 44 MILline (_116:void)<-(_117:str)
    mil.line("# >#not what is expected from nested expression\n");	# 45 MILline (_118:void)<-(_119:str)
    mil.line("# >t.print;\n");	# 46 MILline (_120:void)<-(_121:str)
    mil.line("# #-----------------#\n");	# 47 MILline (_122:void)<-(_92:str)
    mil.line("# # int   | tmp_32  #\n");	# 48 MILline (_123:void)<-(_94:str)
    mil.line("# #-----------------#\n");	# 49 MILline (_124:void)<-(_125:str)
    mil.line("# [ 0,      0       ]\n");	# 50 MILline (_126:void)<-(_97:str)
    mil.line("# [ 2,      0       ]\n");	# 51 MILline (_127:void)<-(_99:str)
    mil.line("# [ -1,     0       ]\n");	# 52 MILline (_128:void)<-(_101:str)
    mil.line("# [ 0,      0       ]\n");	# 53 MILline (_129:void)<-(_130:str)
    mil.line("# >t.insert(0-1+ -1, 0);\n");	# 54 MILline (_131:void)<-(_132:str)
    mil.line("# !ERROR: in syntax at \"t.insert(0-1+ -1, 0);\"\n");	# 55 MILline (_133:void)<-(_134:str)
    mil.line("# \n");	# 56 MILline (_135:void)<-(_136:str)
    mil.line("# This is not what a user would expect\n");	# 57 MILline (_137:void)<-(_138:str)
    mil.line("setoid(oid(20000000));");	# 58 MILline (_139:void)<-(_140:str)
    aa_a := calc.oid(20000000);	# 59 CALCint2oid (aa_a:oid)<-(_142:int)
    ba_a := calc.setoid(aa_a);	# 60 CALCsetoidInc (ba_a:oid)<-(aa_a:oid)
    mil.line("var t:= bat.new(int,int);");	# 61 MILline (_144:void)<-(_145:str)
    t := bat.new(nil:int,nil:int);	# 62 CMDBATnew (t:bat[:int,:int])<-(_147:int)(_147:int)
    mil.line("t.insert(0,0);");	# 63 MILline (_148:void)<-(_149:str)
    ca_a := bat.insert(t,0,0);	# 64 BKCinsert_bun (ca_a:void)<-(t:bat[:int,:int])(_151:int)(_151:int)
    mil.line("t.insert(1+1,0);");	# 65 MILline (_152:void)<-(_153:str)
    da_a := calc.+(1,1);	# 66 CALCbinaryADDintint (da_a:int)<-(_155:int)(_155:int)
    ea_a := bat.insert(t,da_a,0);	# 67 BKCinsert_bun (ea_a:void)<-(t:bat[:int,:int])(da_a:int)(_151:int)
    mil.line("t.insert(-1,-0);");	# 68 MILline (_157:void)<-(_158:str)
    fa_a := bat.insert(t,-1,-0);	# 69 BKCinsert_bun (fa_a:void)<-(t:bat[:int,:int])(_160:int)(_161:int)
    mil.line("t.insert(0,0);");	# 70 MILline (_162:void)<-(_149:str)
    ga_a := bat.insert(t,0,0);	# 71 BKCinsert_bun (ga_a:void)<-(t:bat[:int,:int])(_151:int)(_151:int)
    mil.line("t.insert(-1+1,0);");	# 72 MILline (_164:void)<-(_165:str)
    ha_a := calc.+(-1,1);	# 73 CALCbinaryADDintint (ha_a:int)<-(_160:int)(_155:int)
    ia_a := bat.insert(t,ha_a,0);	# 74 BKCinsert_bun (ia_a:void)<-(t:bat[:int,:int])(ha_a:int)(_151:int)
    mil.line("print(t);");	# 75 MILline (_168:void)<-(_169:str)
    ja_a := io.print(t);	# 76 IOprint_val (ja_a:int)<-(t:bat[:int,:int])
    mil.line("# alles zover is goed\n");	# 77 MILline (_171:void)<-(_172:str)
end main;	# 78  
## >Number:         62\n
## >Category:       MIL\n
## >Synopsis:       Handling of nested arithmetic expressions is inconsistent\n
## >Confidential:   no\n
## >Severity:       critical\n
## >Priority:       high\n
## >Responsible:    mk\n
## >State:          feedback\n
## >Class:          sw-bug\n
## >Submitter-Id:   unknown\n
## >Arrival-Date:   Fri Oct 24 14:09:23 1997\n
## >Originator:     mk\n
## >Organization:\n
## >Release:        971007\n
## >Environment:\n
## \n
## >Description:\n
## Handlin>t:= bbp.new(int,int);\n
## >t.insert(0,0);\n
## >t.insert(1+1,0);\n
## >t.insert(-1,-0);\n
## >print(t);\n
## #-----------------#\n
## # int   | tmp_32  #\n
## #-----------------#\n
## [ 0,      0       ]\n
## [ 2,      0       ]\n
## [ -1,     0       ]\n
## ># alles zover is goed\n
## >t.insert(-1+1,0);\n
## >t.insert(-1 - 1,0);\n
## !ERROR: in syntax at \"t.insert(-1 - 1,0);\"\n
## !                                      ^\n
## >t.insert(-1 -1, 0);\n
## !ERROR: in syntax at \"t.insert(-1 -1, 0);\"\n
## !                                        ^\n
## >#not what is expected from nested expression\n
## >t.print;\n
## #-----------------#\n
## # int   | tmp_32  #\n
## #-----------------#\n
## [ 0,      0       ]\n
## [ 2,      0       ]\n
## [ -1,     0       ]\n
## [ 0,      0       ]\n
## >t.insert(0-1+ -1, 0);\n
## !ERROR: in syntax at \"t.insert(0-1+ -1, 0);\"\n
## \n
## This is not what a user would expect\n
#setoid(oid(20000000));
#var t:= new(int,int);
#t.insert(0,0);
#t.insert(1+1,0);
#t.insert(-1,-0);
#t.insert(0,0);
#t.insert(-1+1,0);
#print(t);
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (int)	  #
#-----------------#
[ 0,	  0	  ]
[ 2,	  0	  ]
[ -1,	  0	  ]
[ 0,	  0	  ]
[ 0,	  0	  ]
## alles zover is goed

# 22:47:44 >  
# 22:47:44 >  Done.
# 22:47:44 >  

