# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("# >Number:         70\n");
#	mil.line("# >Category:       MIL\n");
#	mil.line("# >Synopsis:       Monet crashes when trying to give a helpful hint to the user.\n");
#	mil.line("# >Confidential:   no\n");
#	mil.line("# >Severity:       serious\n");
#	mil.line("# >Priority:       medium\n");
#	mil.line("# >Responsible:    boncz\n");
#	mil.line("# >State:          closed\n");
#	mil.line("# >Class:          sw-bug\n");
#	mil.line("# >Submitter-Id:   unknown\n");
#	mil.line("# >Arrival-Date:   Thu Oct 30 15:21:02 1997\n");
#	mil.line("# >Originator:     quak\n");
#	mil.line("# >Organization:\n");
#	mil.line("# >Release:        971007\n");
#	mil.line("# >Environment:\n");
#	mil.line("# sun.\n");
#	mil.line("# >Description:\n");
#	mil.line("# Try This:\n");
#	mil.line("# \n");
#	mil.line("# > module(mmath);\n");
#	mil.line("# > a := bbp.new(int,int);\n");
#	mil.line("# > [sqrt](a);\n");
#	mil.line("# !ERROR: interpret: no matching multiplex operator '[sqrt]'. Maybe you mean:! Terminating connection\n");
#	mil.line("# ! Connection broken\n");
#	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := setoid(aa_a);
#	mil.line("var a := bbp.new(int,int);");
	a := bbp.new(nil:int,nil:int);
#	mil.line("[sqrt](a);");
	ca_a := multiplex.tactics("sqrt",a);
#	mil.line("quit();");
	da_a := clients.quit();
