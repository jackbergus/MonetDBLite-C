# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("# >Number:         150\n");
#	mil.line("# >Category:       MIL\n");
#	mil.line("# >Synopsis:       Mserver crashes on non-existing module.\n");
#	mil.line("# >Confidential:   no\n");
#	mil.line("# >Severity:       critical\n");
#	mil.line("# >Priority:       high\n");
#	mil.line("# >Responsible:    boncz (Peter Boncz)\n");
#	mil.line("# >State:          open\n");
#	mil.line("# >Class:          sw-bug\n");
#	mil.line("# >Submitter-Id:   unknown\n");
#	mil.line("# >Arrival-Date:   Wed Apr  8 16:48:12 1998\n");
#	mil.line("# >Originator:     quak@cwi.nl\n");
#	mil.line("# >Organization:\n");
#	mil.line("# UvA\n");
#	mil.line("# >Release:        980101\n");
#	mil.line("# >Environment:\n");
#	mil.line("# solaris\n");
#	mil.line("# >Description:\n");
#	mil.line("# On solaris if you load a module which does not exist,\n");
#	mil.line("# the Mserver crashes. How to repeat:\n");
#	mil.line("# \n");
#	mil.line("# Mclient\n");
#	mil.line("# > module(\"jabberwocky\");\n");
#	mil.line("# \n");
#	mil.line("# (Under the assumption that the module \"jabberwocky\"\n");
#	mil.line("# does not exist\n");
#	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	mil.line("quit();");
	ca_a := clients.quit();
