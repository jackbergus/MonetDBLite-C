stdout of test 'no.016` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.016 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.016.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.016.milS










!WARNING: GDKlockHome: ignoring empty or invalid .gdk_lock.
!WARNING: BBPdir: initializing BBP.
# Monet Database Server V4.99.19
# Copyright (c) 1993-2004, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit; dynamically linked.
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux//var/MonetDB5/dbfarm
# dbname:mTests_tests_BugReports
# Visit http://monetdb.cwi.nl for further information.
## Monet Mil to Mal compiler
## Copyright (c) 2001-2004, CWI. All rights reserved.
#
## Predefined code segment
##The compiler can not guarantee an accurate compilation,
##because MIL unlike MAL is a dynamically typed language.
##A few guidelines to maximize usefullness.
##- make the type of variables explicit, in particular 'nil'
##- upon advice of M2m to remap identifiers, change it in your program directly
##var a := new(int, int);
#	a := new(:int,:int);
##a.sample(1).print();
#	aa_a := sample(a,1);
#	ba_a := print(aa_a,);
##quit();
#	ca_a := quit();
#
function user.main():void;	# 0  (main:void)
# Copyright (c) 2001-2004, CWI. All rights reserved. 	# 1  (_32:str)
#Predefined code segment 	# 2  (_34:str)
#The compiler can not guarantee an accurate compilation, 	# 3  (_36:str)
#because MIL unlike MAL is a dynamically typed language. 	# 4  (_38:str)
#A few guidelines to maximize usefullness. 	# 5  (_40:str)
#- make the type of variables explicit, in particular 'nil' 	# 6  (_42:str)
#- upon advice of M2m to remap identifiers, change it in your program directly 	# 7  (_44:str)
#use the "mil_schema" for additional support routines 	# 8  (_46:str)
    mil.line("# >Number:         16\n");	# 9 MILline (_47:void)<-(_48:str)
    mil.line("# >Category:       MIL\n");	# 10 MILline (_49:void)<-(_50:str)
    mil.line("# >Synopsis:       MIL: sample, does not handle empty BAT\n");	# 11 MILline (_51:void)<-(_52:str)
    mil.line("# >Confidential:   no\n");	# 12 MILline (_53:void)<-(_54:str)
    mil.line("# >Severity:       serious\n");	# 13 MILline (_55:void)<-(_56:str)
    mil.line("# >Priority:       medium\n");	# 14 MILline (_57:void)<-(_58:str)
    mil.line("# >Responsible:    boncz\n");	# 15 MILline (_59:void)<-(_60:str)
    mil.line("# >State:          closed\n");	# 16 MILline (_61:void)<-(_62:str)
    mil.line("# >Class:          sw-bug\n");	# 17 MILline (_63:void)<-(_64:str)
    mil.line("# >Submitter-Id:   unknown\n");	# 18 MILline (_65:void)<-(_66:str)
    mil.line("# >Arrival-Date:   Wed Jul 16 15:00:00 1997\n");	# 19 MILline (_67:void)<-(_68:str)
    mil.line("# >Originator:     jonas\n");	# 20 MILline (_69:void)<-(_70:str)
    mil.line("# >Organization:\n");	# 21 MILline (_71:void)<-(_72:str)
    mil.line("# >Release:        970101\n");	# 22 MILline (_73:void)<-(_74:str)
    mil.line("# >Environment:\n");	# 23 MILline (_75:void)<-(_76:str)
    mil.line("# general/IRIX monet3.0.6\n");	# 24 MILline (_77:void)<-(_78:str)
    mil.line("# >Description:\n");	# 25 MILline (_79:void)<-(_80:str)
    mil.line("# >a := bat.new(int, int);\n");	# 26 MILline (_81:void)<-(_82:str)
    mil.line("# >a.sample(1).print;\n");	# 27 MILline (_83:void)<-(_84:str)
    mil.line("# !FATAL GDKmalloc called with size 0\n");	# 28 MILline (_85:void)<-(_86:str)
    mil.line("var a := bat.new(int, int);");	# 29 MILline (_87:void)<-(_88:str)
    a := bat.new(nil:int,nil:int);	# 30 CMDBATnew (a:bat[:int,:int])<-(_90:int)(_90:int)
    mil.line("a.sample(1).print();");	# 31 MILline (_91:void)<-(_92:str)
    aa_a := algebra.sample(a,1);	# 32 ALGsample (aa_a:bat[:int,:int])<-(a:bat[:int,:int])(_94:int)
    ba_a := io.print(aa_a);	# 33 IOprint_val (ba_a:int)<-(aa_a:bat[:int,:int])
    mil.line("quit();");	# 34 MILline (_96:void)<-(_97:str)
    ca_a := clients.quit();	# 35 CLTquit (ca_a:void)
end main;	# 36  
## >Number:         16\n
## >Category:       MIL\n
## >Synopsis:       MIL: sample, does not handle empty BAT\n
## >Confidential:   no\n
## >Severity:       serious\n
## >Priority:       medium\n
## >Responsible:    boncz\n
## >State:          closed\n
## >Class:          sw-bug\n
## >Submitter-Id:   unknown\n
## >Arrival-Date:   Wed Jul 16 15:00:00 1997\n
## >Originator:     jonas\n
## >Organization:\n
## >Release:        970101\n
## >Environment:\n
## general/IRIX monet3.0.6\n
## >Description:\n
## >a := bbp.new(int, int);\n
## >a.sample(1).print;\n
## !FATAL GDKmalloc called with size 0\n
#var a := bbp.new(int, int);
#a.sample(1).print();
#-----------------#
# BAT:	  tmp_26  #
# (int)	  (int)	  #
#-----------------#

# 17:06:45 >  
# 17:06:45 >  Done.
# 17:06:45 >  

