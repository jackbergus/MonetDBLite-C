# Monet Mil to Mal compiler
include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# >Number:         157\n");
	mil.line("# >Category:       Mserver\n");
	mil.line("# >Synopsis:       long selects\n");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       critical\n");
	mil.line("# >Priority:       high\n");
	mil.line("# >Responsible:    boncz (Peter Boncz)\n");
	mil.line("# >State:          open\n");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Tue Jun 23 13:42:30 1998\n");
	mil.line("# >Originator:     windhouw@cwi.nl\n");
	mil.line("# >Organization:\n");
	mil.line("# CWI\n");
	mil.line("# >Release:        980101\n");
	mil.line("# >Environment:\n");
	mil.line("# \n");
	mil.line("# >Description:\n");
	mil.line("# Selection of longs results in rather strange results:\n");
	mil.line("# \n");
	mil.line("# Test script\n");
	mil.line("# 8<----\n");
	mil.line("# test := bat.new(oid,lng);\n");
	mil.line("# test.insert(oid(53991617),lng(60000401));\n");
	mil.line("# test.insert(oid(53996584),lng(60000400));\n");
	mil.line("# test.insert(oid(55526089),lng(50015637));\n");
	mil.line("# test.print;\n");
	mil.line("# test.select(lng(0)).print;\n");
	mil.line("# test.select(lng(60000401)).print;\n");
	mil.line("# test.select(lng(0),lng(1)).print;\n");
	mil.line("# test.insert(oid(1),lng(1));\n");
	mil.line("# test.select(lng(0)).print;\n");
	mil.line("# test.select(lng(60000401)).print;\n");
	mil.line("# test.select(lng(0),lng(1)).print;\n");
	mil.line("# \n");
	mil.line("# 8<-----\n");
	mil.line("# Test output\n");
	mil.line("# 8<-----\n");
	mil.line("# #You are system administrator (adm)!\n");
	mil.line("# >>>>>#---------------------------------#\n");
	mil.line("# # BAT:            tmp_23          #\n");
	mil.line("# # (oid)           (lng)           #\n");
	mil.line("# #---------------------------------#\n");
	mil.line("# [ 53991617@0,     60000401        ]\n");
	mil.line("# [ 53996584@0,     60000400        ]\n");
	mil.line("# [ 55526089@0,     50015637        ]\n");
	mil.line("# >#-------------------------#\n");
	mil.line("# # BAT:            tmp_24  #\n");
	mil.line("# # (oid)           (lng)   #\n");
	mil.line("# #-------------------------#\n");
	mil.line("# [ 53991617@0,     0       ]\n");
	mil.line("# [ 53996584@0,     0       ]\n");
	mil.line("# [ 55526089@0,     0       ]\n");
	mil.line("# >#---------------------------------#\n");
	mil.line("# # BAT:            tmp_24          #\n");
	mil.line("# # (oid)           (lng)           #\n");
	mil.line("# #---------------------------------#\n");
	mil.line("# [ 53991617@0,     60000401        ]\n");
	mil.line("# [ 53996584@0,     60000401        ]\n");
	mil.line("# [ 55526089@0,     60000401        ]\n");
	mil.line("# >#---------------------------------#\n");
	mil.line("# # BAT:            tmp_24          #\n");
	mil.line("# # (oid)           (lng)           #\n");
	mil.line("# #---------------------------------#\n");
	mil.line("# [ 53991617@0,     60000401        ]\n");
	mil.line("# [ 53996584@0,     60000400        ]\n");
	mil.line("# [ 55526089@0,     50015637        ]\n");
	mil.line("# >>#-------------------------#\n");
	mil.line("# # BAT:            tmp_24  #\n");
	mil.line("# # (oid)           (lng)   #\n");
	mil.line("# #-------------------------#\n");
	mil.line("# [ 53991617@0,     0       ]\n");
	mil.line("# [ 53996584@0,     0       ]\n");
	mil.line("# [ 55526089@0,     0       ]\n");
	mil.line("# [ 1@0,            0       ]\n");
	mil.line("# >#---------------------------------#\n");
	mil.line("# # BAT:            tmp_24          #\n");
	mil.line("# # (oid)           (lng)           #\n");
	mil.line("# #---------------------------------#\n");
	mil.line("# [ 53991617@0,     60000401        ]\n");
	mil.line("# [ 53996584@0,     60000401        ]\n");
	mil.line("# [ 55526089@0,     60000401        ]\n");
	mil.line("# [ 1@0,            60000401        ]\n");
	mil.line("# >#---------------------------------#\n");
	mil.line("# # BAT:            tmp_24          #\n");
	mil.line("# # (oid)           (lng)           #\n");
	mil.line("# #---------------------------------#\n");
	mil.line("# [ 53991617@0,     60000401        ]\n");
	mil.line("# [ 53996584@0,     60000400        ]\n");
	mil.line("# [ 55526089@0,     50015637        ]\n");
	mil.line("# [ 1@0,            1               ]\n");
	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
	mil.line("var test := bat.new(oid,lng);");
	test := bat.new(nil:oid,nil:lng);
	mil.line("test.insert(oid(53991617),lng(60000401));");
	ca_a := calc.oid(53991617);
	da_a := calc.lng(60000401);
	ea_a := bat.insert(test,ca_a,da_a);
	mil.line("test.insert(oid(53996584),lng(60000400));");
	fa_a := calc.oid(53996584);
	ga_a := calc.lng(60000400);
	ha_a := bat.insert(test,fa_a,ga_a);
	mil.line("test.insert(oid(55526089),lng(50015637));");
	ia_a := calc.oid(55526089);
	ja_a := calc.lng(50015637);
	ka_a := bat.insert(test,ia_a,ja_a);
	mil.line("test.print();");
	la_a := io.print(test);
	mil.line("test.select(lng(0)).print();");
	ma_a := calc.lng(0);
	na_a := algebra.select(test,ma_a);
	oa_a := io.print(na_a);
	mil.line("test.select(lng(60000401)).print();");
	pa_a := calc.lng(60000401);
	qa_a := algebra.select(test,pa_a);
	ra_a := io.print(qa_a);
	mil.line("test.select(lng(0),lng(1)).print();");
	sa_a := calc.lng(0);
	ta_a := calc.lng(1);
	ua_a := algebra.select(test,sa_a,ta_a);
	va_a := io.print(ua_a);
	mil.line("test.insert(oid(1),lng(1));");
	wa_a := calc.oid(1);
	xa_a := calc.lng(1);
	ya_a := bat.insert(test,wa_a,xa_a);
	mil.line("test.select(lng(0)).print();");
	ab_a := calc.lng(0);
	bb_a := algebra.select(test,ab_a);
	cb_a := io.print(bb_a);
	mil.line("test.select(lng(60000401)).print();");
	db_a := calc.lng(60000401);
	eb_a := algebra.select(test,db_a);
	fb_a := io.print(eb_a);
	mil.line("test.select(lng(0),lng(1)).print();");
	gb_a := calc.lng(0);
	hb_a := calc.lng(1);
	ib_a := algebra.select(test,gb_a,hb_a);
	jb_a := io.print(ib_a);
	mil.line("quit();");
	kb_a := clients.quit();
