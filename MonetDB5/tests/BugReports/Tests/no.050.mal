# Monet Mil to Mal compiler
include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# >Number:         50\n");
	mil.line("# >Category:       MIL\n");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       critical\n");
	mil.line("# >Priority:       high\n");
	mil.line("# >Responsible:    boncz\n");
	mil.line("# >State:          closed\n");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Wed Oct 15 10:23:33 1997\n");
	mil.line("# >Originator:     niels\n");
	mil.line("# >Organization:\n");
	mil.line("# >Release:        971007\n");
	mil.line("# >Environment:\n");
	mil.line("# SunOS5.5.1\n");
	mil.line("# >Description:\n");
	mil.line("# a := new (oid,int);\n");
	mil.line("# a.insert( calc.oid(1), 100 );\n");
	mil.line("# a.insert( calc.oid(2), 1000 );\n");
	mil.line("# a.insert( calc.oid(4), 10 );\n");
	mil.line("# a.insert( calc.oid(5), 15 );\n");
	mil.line("# a.select( 94, 110 ).print;\n");
	mil.line("# #output\n");
	mil.line("# #-----------------#\n");
	mil.line("# # oid   | tmp_27  #\n");
	mil.line("# #-----------------#\n");
	mil.line("# [ 1@0,    100     ]\n");
	mil.line("# [ 2@0,    1000    ]\n");
	mil.line("var a := new (oid,int);");
	a := bat.new(nil:oid,nil:int);
	mil.line("a.insert( calc.oid(1), 100 );");
	aa_a := calc.oid(1);
	ba_a := bat.insert(a,aa_a,100);
	mil.line("a.insert( calc.oid(2), 1000 );");
	ca_a := calc.oid(2);
	da_a := bat.insert(a,ca_a,1000);
	mil.line("a.insert( calc.oid(4), 10 );");
	ea_a := calc.oid(4);
	fa_a := bat.insert(a,ea_a,10);
	mil.line("a.insert( calc.oid(5), 15 );");
	ga_a := calc.oid(5);
	ha_a := bat.insert(a,ga_a,15);
	mil.line("a.print();");
	ia_a := io.print(a);
	ja_a := bat.reverse(a);
	mil.line("a.print();");
	la_a := io.print(a);
	mil.line("a.select( 94, 110 ).print();");
	ma_a := algebra.select(a,94,110);
	na_a := io.print(ma_a);
	mil.line("quit();");
	oa_a := clients.quit();
