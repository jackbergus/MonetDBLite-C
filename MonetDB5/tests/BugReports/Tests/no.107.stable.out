stdout of test 'no.107` in directory 'monetdb5/tests/BugReports` itself:

#> Mtest:	milS no.107 milS -prelude no.107.prelude
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single -prelude no.107.prelude no.107.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.107.milS
#prelude:no.107.prelude


#You are system administrator (adm)!
#---------------------------------#
# BAT:	  tmp_27		  #
# (oid)	  (str)			  #
#---------------------------------#
[ 0@0,	  "test"		  ]
[ 0@0,	  "this"		  ]
[ 0@0,	  "database"		  ]
[ 0@0,	  "this"		  ]
[ 0@0,	  "and"			  ]
[ 0@0,	  "test"		  ]
[ 0@0,	  "its"			  ]
[ 0@0,	  "export"		  ]
[ 0@0,	  "functionality"	  ]
[ 1@0,	  "test"		  ]
[ 1@0,	  "it"			  ]
[ 1@0,	  "thoroughly"		  ]
[ 2@0,	  "test"		  ]
[ 2@0,	  "this"		  ]
[ 2@0,	  "database"		  ]
setoid(oid(20000000));

# [t_i, n_i]
w.histogram().print();
#---------------------------------#
# BAT:			  tmp_28  #
# (str)			  (int)	  #
#---------------------------------#
[ "test",		  4	  ]
[ "this",		  3	  ]
[ "database",		  2	  ]
[ "and",		  1	  ]
[ "its",		  1	  ]
[ "export",		  1	  ]
[ "functionality",	  1	  ]
[ "it",			  1	  ]
[ "thoroughly",		  1	  ]

#split w in twee tabellen
var docid := new( void, oid );
var tid := new( void, str );
docid.insert( w.mark(nil).reverse() );
docid.print();
#-----------------#
# BAT:	  tmp_28  #
# (void)  (oid)	  #
#-----------------#
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  0@0	  ]
[ nil,	  1@0	  ]
[ nil,	  1@0	  ]
[ nil,	  1@0	  ]
[ nil,	  2@0	  ]
[ nil,	  2@0	  ]
[ nil,	  2@0	  ]
tid.insert( w.reverse().mark(nil).reverse() );
tid.print();
#---------------------------------#
# BAT:	  tmp_29		  #
# (void)  (str)			  #
#---------------------------------#
[ nil,	  "test"		  ]
[ nil,	  "this"		  ]
[ nil,	  "database"		  ]
[ nil,	  "this"		  ]
[ nil,	  "and"			  ]
[ nil,	  "test"		  ]
[ nil,	  "its"			  ]
[ nil,	  "export"		  ]
[ nil,	  "functionality"	  ]
[ nil,	  "test"		  ]
[ nil,	  "it"			  ]
[ nil,	  "thoroughly"		  ]
[ nil,	  "test"		  ]
[ nil,	  "this"		  ]
[ nil,	  "database"		  ]

docid.seqbase( 1000@0 );
docid.print();
#-----------------#
# BAT:	  tmp_28  #
# (void)  (oid)	  #
#-----------------#
[ 1000@0, 0@0	  ]
[ 1001@0, 0@0	  ]
[ 1002@0, 0@0	  ]
[ 1003@0, 0@0	  ]
[ 1004@0, 0@0	  ]
[ 1005@0, 0@0	  ]
[ 1006@0, 0@0	  ]
[ 1007@0, 0@0	  ]
[ 1008@0, 0@0	  ]
[ 1009@0, 1@0	  ]
[ 1010@0, 1@0	  ]
[ 1011@0, 1@0	  ]
[ 1012@0, 2@0	  ]
[ 1013@0, 2@0	  ]
[ 1014@0, 2@0	  ]
tid.seqbase( 1000@0 );
tid.print();
#---------------------------------#
# BAT:	  tmp_29		  #
# (void)  (str)			  #
#---------------------------------#
[ 1000@0, "test"		  ]
[ 1001@0, "this"		  ]
[ 1002@0, "database"		  ]
[ 1003@0, "this"		  ]
[ 1004@0, "and"			  ]
[ 1005@0, "test"		  ]
[ 1006@0, "its"			  ]
[ 1007@0, "export"		  ]
[ 1008@0, "functionality"	  ]
[ 1009@0, "test"		  ]
[ 1010@0, "it"			  ]
[ 1011@0, "thoroughly"		  ]
[ 1012@0, "test"		  ]
[ 1013@0, "this"		  ]
[ 1014@0, "database"		  ]
tid.reverse().print();
#---------------------------------#
# BAT:			  tmp_29  #
# (str)			  (void)  #
#---------------------------------#
[ "test",		  1000@0  ]
[ "this",		  1001@0  ]
[ "database",		  1002@0  ]
[ "this",		  1003@0  ]
[ "and",		  1004@0  ]
[ "test",		  1005@0  ]
[ "its",		  1006@0  ]
[ "export",		  1007@0  ]
[ "functionality",	  1008@0  ]
[ "test",		  1009@0  ]
[ "it",			  1010@0  ]
[ "thoroughly",		  1011@0  ]
[ "test",		  1012@0  ]
[ "this",		  1013@0  ]
[ "database",		  1014@0  ]
var tidx:=tid.copy();
tidx.print();
#---------------------------------#
# BAT:	  tmp_30		  #
# (void)  (str)			  #
#---------------------------------#
[ 1000@0, "test"		  ]
[ 1001@0, "this"		  ]
[ 1002@0, "database"		  ]
[ 1003@0, "this"		  ]
[ 1004@0, "and"			  ]
[ 1005@0, "test"		  ]
[ 1006@0, "its"			  ]
[ 1007@0, "export"		  ]
[ 1008@0, "functionality"	  ]
[ 1009@0, "test"		  ]
[ 1010@0, "it"			  ]
[ 1011@0, "thoroughly"		  ]
[ 1012@0, "test"		  ]
[ 1013@0, "this"		  ]
[ 1014@0, "database"		  ]
var tidy:=([oid](tid)).copy();
tidy.print();
#-----------------#
# BAT:	  tmp_32  #
# (void)  (oid)	  #
#-----------------#
[ 1000@0, nil	  ]
[ 1001@0, nil	  ]
[ 1002@0, nil	  ]
[ 1003@0, nil	  ]
[ 1004@0, nil	  ]
[ 1005@0, nil	  ]
[ 1006@0, nil	  ]
[ 1007@0, nil	  ]
[ 1008@0, nil	  ]
[ 1009@0, nil	  ]
[ 1010@0, nil	  ]
[ 1011@0, nil	  ]
[ 1012@0, nil	  ]
[ 1013@0, nil	  ]
[ 1014@0, nil	  ]
print( docid, tid );
#-----------------------------------------#
# BAT:	  tmp_28| tmp_29		  #
# (void)  (oid)	| (str)			  #
#-----------------------------------------#
[ 1000@0, 0@0,	  "test"		  ]
[ 1001@0, 0@0,	  "this"		  ]
[ 1002@0, 0@0,	  "database"		  ]
[ 1003@0, 0@0,	  "this"		  ]
[ 1004@0, 0@0,	  "and"			  ]
[ 1005@0, 0@0,	  "test"		  ]
[ 1006@0, 0@0,	  "its"			  ]
[ 1007@0, 0@0,	  "export"		  ]
[ 1008@0, 0@0,	  "functionality"	  ]
[ 1009@0, 1@0,	  "test"		  ]
[ 1010@0, 1@0,	  "it"			  ]
[ 1011@0, 1@0,	  "thoroughly"		  ]
[ 1012@0, 2@0,	  "test"		  ]
[ 1013@0, 2@0,	  "this"		  ]
[ 1014@0, 2@0,	  "database"		  ]

module( "xtables" );
CTgroup( docid, tid ).print();
#-----------------#
# BAT:	  tmp_31  #
# (void)  (oid)	  #
#-----------------#
[ 1000@0, 1000@0  ]
[ 1001@0, 1001@0  ]
[ 1002@0, 1002@0  ]
[ 1003@0, 1001@0  ]
[ 1004@0, 1004@0  ]
[ 1005@0, 1000@0  ]
[ 1006@0, 1006@0  ]
[ 1007@0, 1007@0  ]
[ 1008@0, 1008@0  ]
[ 1009@0, 1009@0  ]
[ 1010@0, 1010@0  ]
[ 1011@0, 1011@0  ]
[ 1012@0, 1012@0  ]
[ 1013@0, 1013@0  ]
[ 1014@0, 1014@0  ]

# t_i, tf_ij
join( tidx.reverse(), CTgroup( docid, tid ).histogram()).print();
#---------------------------------#
# BAT:			  tmp_35  #
# (str)			  (int)	  #
#---------------------------------#
[ "test",		  2	  ]
[ "this",		  2	  ]
[ "database",		  1	  ]
[ "and",		  1	  ]
[ "its",		  1	  ]
[ "export",		  1	  ]
[ "functionality",	  1	  ]
[ "test",		  1	  ]
[ "it",			  1	  ]
[ "thoroughly",		  1	  ]
[ "test",		  1	  ]
[ "this",		  1	  ]
[ "database",		  1	  ]
join( tidy.reverse(), CTgroup( docid, tid ).histogram()).print();
#-----------------#
# BAT:	  tmp_31  #
# (oid)	  (int)	  #
#-----------------#
[ nil,	  2	  ]
[ nil,	  2	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
[ nil,	  1	  ]
join( tid.reverse(), CTgroup( docid, tid ).histogram()).print();
#---------------------------------#
# BAT:			  tmp_35  #
# (str)			  (int)	  #
#---------------------------------#
[ "test",		  2	  ]
[ "this",		  2	  ]
[ "database",		  1	  ]
[ "and",		  1	  ]
[ "its",		  1	  ]
[ "export",		  1	  ]
[ "functionality",	  1	  ]
[ "test",		  1	  ]
[ "it",			  1	  ]
[ "thoroughly",		  1	  ]
[ "test",		  1	  ]
[ "this",		  1	  ]
[ "database",		  1	  ]
# d_j, max tf_j
var djtfij := new( oid, int );
djtfij.insert( join( docid.reverse(), CTgroup( docid, tid ).histogram() ) );

{max}(djtfij).print();
#-----------------#
# BAT:	  tmp_31  #
# (oid)	  (int)	  #
#-----------------#
[ 0@0,	  2	  ]
[ 1@0,	  1	  ]
[ 2@0,	  1	  ]

# This way it works. However, if I do not do an explicit new and insert,
# then the server crashes as follows:

var djtfijx :=join( docid.reverse(), CTgroup( docid, tid ).histogram() );
{max}(djtfijx).print();
#-----------------#
# BAT:	  tmp_36  #
# (oid)	  (int)	  #
#-----------------#
[ 0@0,	  2	  ]
[ 1@0,	  1	  ]
[ 2@0,	  1	  ]

# 17:06:56 >  
# 17:06:56 >  Done.
# 17:06:56 >  

