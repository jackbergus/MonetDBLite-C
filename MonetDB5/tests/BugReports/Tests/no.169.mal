# Monet Mil to Mal compiler
#include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	mil.line("# \n");
#	mil.line("#>Number:         169\n");
#	mil.line("#>Category:       Mserver\n");
#	mil.line("#>Synopsis:       calc.str(nil).print hangs\n");
#	mil.line("#>Confidential:   no\n");
#	mil.line("#>Severity:       critical\n");
#	mil.line("#>Priority:       high\n");
#	mil.line("#>Responsible:    boncz (Peter Boncz)\n");
#	mil.line("#>State:          open\n");
#	mil.line("#>Class:          sw-bug\n");
#	mil.line("#>Submitter-Id:   unknown\n");
#	mil.line("#>Arrival-Date:   Thu Sep  3 15:30:20 1998\n");
#	mil.line("#>Originator:     windhouw@cwi.nl\n");
#	mil.line("#>Organization:\n");
#	mil.line("#CWI\n");
#	mil.line("#>Release:        980101\n");
#	mil.line("#>Environment:\n");
#	mil.line("#IRIX646.5\n");
#	mil.line("#>Description:\n");
#	mil.line("#On the medusa (IRIX646.5 64bit) the following\n");
#	mil.line("#script hangs Mserver:\n");
#	mil.line("#> calc.str(nil).print;\n");
#	mil.line("#[ nil ]\n");
#	mil.line("#>How-To-Repeat:\n");
#	mil.line("#>Fix:\n");
#	mil.line("#>Audit-Trail:\n");
#	mil.line("#>Unformatted:\n");
#	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	mil.line("str(nil).print();");
	ca_a := calc.str(nil);
	da_a := io.print(ca_a);
#	mil.line("quit();");
	ea_a := clients.quit();
