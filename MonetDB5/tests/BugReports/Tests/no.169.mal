# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("# \n");
#	io.print("#>Number:         169\n");
#	io.print("#>Category:       Mserver\n");
#	io.print("#>Synopsis:       calc.str(nil).print hangs\n");
#	io.print("#>Confidential:   no\n");
#	io.print("#>Severity:       critical\n");
#	io.print("#>Priority:       high\n");
#	io.print("#>Responsible:    boncz (Peter Boncz)\n");
#	io.print("#>State:          open\n");
#	io.print("#>Class:          sw-bug\n");
#	io.print("#>Submitter-Id:   unknown\n");
#	io.print("#>Arrival-Date:   Thu Sep  3 15:30:20 1998\n");
#	io.print("#>Originator:     windhouw@cwi.nl\n");
#	io.print("#>Organization:\n");
#	io.print("#CWI\n");
#	io.print("#>Release:        980101\n");
#	io.print("#>Environment:\n");
#	io.print("#IRIX646.5\n");
#	io.print("#>Description:\n");
#	io.print("#On the medusa (IRIX646.5 64bit) the following\n");
#	io.print("#script hangs Mserver:\n");
#	io.print("#> calc.str(nil).print;\n");
#	io.print("#[ nil ]\n");
#	io.print("#>How-To-Repeat:\n");
#	io.print("#>Fix:\n");
#	io.print("#>Audit-Trail:\n");
#	io.print("#>Unformatted:\n");
#	io.print("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := calc.setoid(aa_a);
#	io.print("str(nil).print();");
	ca_a := calc.str(nil);
	da_a := io.print(ca_a);
#	io.print("quit();");
	ea_a := clients.quit();
