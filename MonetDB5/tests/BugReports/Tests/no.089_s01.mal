# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("bat(\"Server\").print();");
	aa_a := bbp.new("Server");
	ba_a := bat.print(aa_a);
#	io.print("bat(\"Server2\").print();");
	ca_a := bbp.new("Server2");
	da_a := bat.print(ca_a);
#	io.print("bat(\"Clients\").print();");
	ea_a := bbp.new("Clients");
	fa_a := bat.print(ea_a);
#	io.print("bat(\"Clients2\").print();");
	ga_a := bbp.new("Clients2");
	ha_a := bat.print(ga_a);
#	io.print("quit();");
	ia_a := clients.quit();
