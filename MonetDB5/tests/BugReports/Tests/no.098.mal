# Monet Mil to Mal compiler
include mil;
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
	mil.line("# >Number:         98\n");
	mil.line("# >Category:       Mserver\n");
	mil.line("# >Synopsis:       wrong select when a BAT contains one BUN\n");
	mil.line("# >Confidential:   no\n");
	mil.line("# >Severity:       critical\n");
	mil.line("# >Priority:       high\n");
	mil.line("# >Responsible:    boncz\n");
	mil.line("# >State:          open\n");
	mil.line("# >Class:          sw-bug\n");
	mil.line("# >Submitter-Id:   unknown\n");
	mil.line("# >Arrival-Date:   Fri Dec 12 19:56:04 1997\n");
	mil.line("# >Originator:     windhouw\n");
	mil.line("# >Organization:\n");
	mil.line("# UvA\n");
	mil.line("# >Release:        971007\n");
	mil.line("# >Environment:\n");
	mil.line("# \n");
	mil.line("# >Description:\n");
	mil.line("# When a BAT contains only one BUN a select returns this BUN,\n");
	mil.line("# even when it's not in the selection range:\n");
	mil.line("# \n");
	mil.line("# #You are system administrator (adm)!\n");
	mil.line("# >b:=new(oid,oid);\n");
	mil.line("# >b.insert(oid(1),oid(2));\n");
	mil.line("# >b.select(oid(3)).print;\n");
	mil.line("# #-----------------#\n");
	mil.line("# # oid   | tmp_25  #\n");
	mil.line("# #-----------------#\n");
	mil.line("# [ 1@0,    2@0     ]\n");
	mil.line("# >b.select(oid(3)).print;\n");
	mil.line("# #-----------------#\n");
	mil.line("# # oid   | tmp_25  #\n");
	mil.line("# #-----------------#\n");
	mil.line("setoid(oid(20000000));");
	aa_a := calc.oid(20000000);
	ba_a := setoid(aa_a);
	mil.line("var b:=new(oid,oid);");
	b := bat.new(nil:oid,nil:oid);
	mil.line("b.insert(oid(1),oid(2));");
	ca_a := calc.oid(1);
	da_a := calc.oid(2);
	ea_a := bat.insert(b,ca_a,da_a);
	mil.line("b.select(oid(3)).print();");
	fa_a := calc.oid(3);
	ga_a := algebra.select(b,fa_a);
	ha_a := io.print(ga_a);
	mil.line("b.select(oid(3)).print();");
	ia_a := calc.oid(3);
	ja_a := algebra.select(b,ia_a);
	ka_a := io.print(ja_a);
	mil.line("quit();");
	la_a := clients.quit();
