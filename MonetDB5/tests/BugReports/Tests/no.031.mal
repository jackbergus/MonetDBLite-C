# Monet Mil to Mal compiler
# Copyright (c) 2001-2004, CWI. All rights reserved.

#Predefined code segment
#The compiler can not guarantee an accurate compilation,
#because MIL unlike MAL is a dynamically typed language.
#A few guidelines to maximize usefullness.
#- make the type of variables explicit, in particular 'nil'
#- upon advice of M2m to remap identifiers, change it in your program directly
#use the "mil_schema" for additional support routines
#	io.print("# >Number:         31\n");
#	io.print("# >Category:       Mserver\n");
#	io.print("# >Synopsis:       Import does not work.\n");
#	io.print("# >Confidential:   no\n");
#	io.print("# >Severity:       serious\n");
#	io.print("# >Priority:       medium\n");
#	io.print("# >Responsible:    quak\n");
#	io.print("# >State:          closed\n");
#	io.print("# >Class:          sw-bug\n");
#	io.print("# >Submitter-Id:   unknown\n");
#	io.print("# >Arrival-Date:   Fri Sep 19 16:00:42 1997\n");
#	io.print("# >Originator:     quak\n");
#	io.print("# >Organization:\n");
#	io.print("# >Release:        970101\n");
#	io.print("# >Environment:\n");
#	io.print("# ALL\n");
#	io.print("# >Description:\n");
#	io.print("# The following script, which creates a bat exports\n");
#	io.print("# it and then tries to import it again fails:\n");
#	io.print("# \n");
#	io.print("# > a := bat.new(int,int);\n");
#	io.print("# > a.insert(1,1);\n");
#	io.print("# > a.export(\"/home/quak/tmp/testt\");\n");
#	io.print("# > b := bat.new(int,int);\n");
#	io.print("# > b.import(\"/home/quak/tmp/testt\");\n");
#	io.print("var a := bat.new(int,int);");
	a := bat.new(nil:oid,nil:int);
#	io.print("a.insert(1,1);");
	aa_a := bat.append(a,1);
#	io.print("a.print();");
	ba_a := io.print(a);
#	io.print("a.export(\"testt\");");
	ca_a := io.export(a,"testt");
#	io.print("var b := bat.new(int,int);");
	b := bat.new(nil:oid,nil:int);
#	io.print("b.import(\"testt\");");
	da_a := io.import(b,"testt");
#	io.print("b.print();");
	ea_a := io.print(b);
#	io.print("quit();");
	fa_a := clients.quit();
