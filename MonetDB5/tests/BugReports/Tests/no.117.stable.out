stdout of test 'no.117` in directory 'monetdb5/tests/BugReports` itself:

#> Mtest:	milS no.117 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.117.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.117.milS


# Monet Database Server V4.3.5
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit; dynamically linked.
# >Number:         117
# >Category:       Mserver
# >Synopsis:       multiplex fails in a loop
# >Confidential:   no
# >Severity:       critical
# >Priority:       high
# >Responsible:    boncz
# >State:          open
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Thu Feb  5 13:46:05 1998
# >Originator:     windhouw
# >Organization:
# UvA
# >Release:        971007
# >Environment:
# 
# >Description:
# The following script fails:
# 
# =====
# 
# test := new(oid,int);
# test.insert(oid(1),1);
# test.insert(oid(2),2);
# test.insert(oid(3),3);
# 
# PROC addNr(theNrs,theNr) := {
#         printf("add Nr: %d\n",theNr);
#         VAR r := [+](theNrs,theNr);
#         r.print;
#         return r;
# }
# 
# PROC loopTest(theBAT,theMax) := {
#         VAR i := 0;
#         WHILE (i < theMax) {
#                 addNr(theBAT,i);
#                 i := i + 1;
#         }
# }
# 
# =====
# 
# >loopTest(test,1);
# add Nr: 0
# #-----------------#
# # oid   | tmp_25  #
# #-----------------#
# [ 1@0,    1       ]
# [ 2@0,    2       ]
# [ 3@0,    3       ]
# >loopTest(test,2);
# add Nr: 0
# #-----------------#
# # oid   | tmp_47  #
# #-----------------#
# [ 1@0,    1       ]
# [ 2@0,    2       ]
# [ 3@0,    3       ]
# add Nr: 1
# !WARNING: BATdescriptor: range error
# ... segmentation fault
# 
# =====
# 

setoid(oid(20000000));
var test := new(oid,int);
test.insert(oid(1),1);
test.insert(oid(2),2);
test.insert(oid(3),3);

PROC addNr(any theNrs, any theNr) : any {
        printf("add Nr: %d\n",theNr);
        VAR r := [+](theNrs,theNr);
        r.print();
        return r;
}

PROC loopTest(any theBAT,any theMax) : void {
        VAR i := 0;
        WHILE (i < theMax) {
                addNr(theBAT,i);
                i := i + 1;
        }
}
loopTest(test,1);
add Nr: 0
#-----------------#
# BAT:	  tmp_28  #
# (void)  (int)	  #
#-----------------#
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
loopTest(test,2);
add Nr: 0
#-----------------#
# BAT:	  tmp_28  #
# (void)  (int)	  #
#-----------------#
[ 1@0,	  1	  ]
[ 2@0,	  2	  ]
[ 3@0,	  3	  ]
add Nr: 1
#-----------------#
# BAT:	  tmp_28  #
# (void)  (int)	  #
#-----------------#
[ 1@0,	  2	  ]
[ 2@0,	  3	  ]
[ 3@0,	  4	  ]

# 17:06:57 >  
# 17:06:57 >  Done.
# 17:06:57 >  

