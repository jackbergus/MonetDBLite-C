
 -- The Pathfinder compiler does not allow nested XQuery comments.
    A query like

      (: a (: nested :) comment :)
      (1, 2)

    thus produces a parsing error.

    [For developers:
      Within grouped tokens this is hard to implement. Between
      tokens, however, we could support this by introducing an
      additional lexical state, similar to the proposal in older
      W3C drafts.]

 -- Pathfinder does support XQuery library modules. There are just
    few limitations where we deviate from the standard:

     o You _must_ give a location hint in the "import module" statement.
       Each file hinted there will be loaded as a module. It has to
       match the namespace given in the "import module" statement,
       though.

     o Modules cannot see variables declared in other modules,
       regardless if they imported the module theirselves or not.
       A module is not allowed, though, to override variable
       declarations of other modules (conforming to the specs).

     o Modules will see functions defined in other modules. They are
       not allowed to override them, though.

     o All modules and the main query share the same type definitions.
       So modules will see XML Schema definitions imported by the main
       query. (see also below for XML Schema import)

     o Pathfinder does allow cyclic importing of modules, regardless
       of their namespace.

 -- The sequence types `schema-element (...)' and schema-attribute (...)'
    are not supported by the Pathfinder compiler. There are also issues
    with the processing-instruction() and document-node() tests.

 -- Features not supported by the Pathfinder compiler: `castable',
    Collations, base-uri declaration, construction mode declaration.

 -- Pathfinder does provide XML Schema import. That code, however, is
    not currently maintained. Use it at your own risk.

 -- We do not (yet) support validation.

 -- We do not (yet) support external variables and functions.

    [For developers: We'd only need a proper way to do this with MonetDB.]

