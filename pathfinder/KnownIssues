
 -- Pathfinder does support XQuery library modules. There are a
    few deviations from the standard, though:

     o You _must_ give a location hint in the "import module" statement.
       Each file hinted there will be loaded as a module. It has to
       match the namespace given in the "import module" statement,
       though.

     o Modules cannot see variables declared in other modules,
       regardless if they imported the module theirselves or not.
       A module is not allowed, though, to override variable
       declarations of other modules (conforming to the specs).

     o Modules will see functions defined in other modules. They are
       not allowed to override them, though.

     o All modules and the main query share the same type definitions.
       So modules will see XML Schema definitions imported by the main
       query. (see also below for XML Schema import)

     o Pathfinder does allow cyclic importing of modules, regardless
       of their namespace.

     o The XQuery specifications state that two module import 
       statements that use the same target namespace should produce an 
       error. This is not the case in MonetDB/XQuery: the module will be  
       loaded once, but its functions and variables will be available 
       under both namespace identifiers.

 -- The sequence types `schema-element (...)' and schema-attribute (...)'
    are not supported by the Pathfinder compiler. There are also issues
    with the processing-instruction() and document-node() tests.

 -- Features not supported by the Pathfinder compiler: `castable',
    Collations, base-uri declaration, construction mode declaration.

 -- Pathfinder does provide XML Schema import. That code, however, is
    not currently maintained. Use it at your own risk.

 -- We do not (yet) support validation.

 -- We do not (yet) support external variables and functions.

    [For developers: We'd only need a proper way to do this with MonetDB.]


 -- Pathfinder implements a single fs:item-sequence-to-untypedAtomic()
    function, while the W3C drafts since June 2005 describes variants
    for each node kind.  This affects the handling of empty sequence
    arguments (particularly for text node construction).
