stdout of test 'sigs` in directory 'modules/pftijah` itself:


# 14:49:43 >  
# 14:49:43 >  Mtimeout -timeout 60 Mserver "--config=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/net/corona.ins.cwi.nl/export/scratch0/manegold/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./PATHFINDER/lib64/MonetDB:/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/lib64/MonetDB" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/dbfarm" --set "sql_logdir=/ufs/manegold/_/scratch0/Monet/Testing/Current/.GNU.64.64.d.--enable-debug.PREFIX./MONETDB/var/MonetDB/log" --set mapi_port=30721 --set monet_prompt= --trace --dbname=mTests_modules_pftijah  < sigs.milS
# 14:49:43 >  

# Monet Database Server V4.13.1
# Copyright (c) 1993-2006, CWI. All rights reserved.
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module("pathfinder");
var mods := new(void,str);
mods.insert(nil,"pftijah");

mods@batloop(){
	printf("module '%s'\n",$t);
	module($t);
	sigs($t);
	drop($t);
}
module 'pftijah'
#---------------------------------------------------------------------------------#
# signature	  # name
# str		  # type
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "_run_tijah_query(BAT[str,str], bit, BAT[void,oid], str) : BAT[oid,dbl]"												  ]
[ "_tj_throw2collection(BAT[str,BAT], BAT[oid,BAT], str, str) : void"													  ]
[ "_tj_throw2collection_index(BAT[str,BAT], str) : void"														  ]
[ "indexfetchjoin(BAT[any,oid], BAT[void,oid], BAT[void,oid]) : BAT[void,oid]"												  ]
[ "left_add(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"															  ]
[ "left_div(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"															  ]
[ "left_div(BAT[oid,dbl], BAT[oid,int]) : BAT[oid,dbl]"															  ]
[ "left_log(BAT[oid,dbl]) : BAT[oid,dbl]"																  ]
[ "left_mul(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"															  ]
[ "left_sub(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"															  ]
[ "mergeindex(BAT[oid,oid], BAT[void,oid], BAT[void,oid], int) : BAT[void,BAT]"												  ]
[ "offsetindex(BAT[void,oid], int) : BAT[void,oid]"															  ]
[ "pf2tijah_node(BAT[oid,str], BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,int], BAT[oid,str]) : BAT[void,oid]"							  ]
[ "score_NLLR(BAT[oid,oid], BAT[void,int], BAT[oid,int], BAT[oid,int], BAT[oid,any], dbl, int) : BAT[oid,dbl]"								  ]
[ "serialize_tijah_opt(BAT[void,BAT], int, BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,str]) : BAT[str,str]"	  ]
[ "tijah_tokenize(str) : str"																		  ]
[ "tj_add2collection(str, BAT[str,str], bit) : void"															  ]
[ "tj_add2collection(str, str, str, bit) : void"															  ]
[ "tj_chk_dict_hash(BAT[void,str], BAT[void,str]) : void"														  ]
[ "tj_create_termdb(int, oid) : void"																	  ]
[ "tj_delete_collection(str) : void"																	  ]
[ "tj_delete_global() : void"																		  ]
[ "tj_dispose_termdb() : void"																		  ]
[ "tj_init_collection(str, BAT[str,str], BAT[void,str]) : void"														  ]
[ "tj_init_global(BAT[str,str]) : void"																	  ]
[ "tj_log(str, int) : void"																		  ]
[ "tj_normalizeTerm(str, str) : str"																	  ]
[ "tj_ping() : void"																			  ]
[ "tj_setlog(str) : void"																		  ]
[ "treemergejoin_sort(BAT[void,oid], BAT[void,int], BAT[void,oid]) : BAT[oid,oid]"											  ]
[ "treemergejoin_sort_unnested(BAT[void,oid], BAT[void,int], BAT[void,oid]) : BAT[oid,oid]"										  ]
[ "union_add(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"														  ]
[ "union_div(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"														  ]
[ "union_mul(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"														  ]
[ "union_sub(BAT[oid,dbl], BAT[oid,dbl]) : BAT[oid,dbl]"														  ]

quit();

# 14:49:43 >  
# 14:49:43 >  Done.
# 14:49:43 >  

