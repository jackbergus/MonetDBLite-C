How To Start with MonetDB/XQuery on Windows
===========================================

.. This document is written in reStructuredText (see
   http://docutils.sourceforge.net/ for more information).
   Use ``rst2html.py`` to convert this file to HTML.

In order to compile Pathfinder on Windows, we currently need the
MinGW__ (Minimalist GNU for Windows) suite, and before Pathfinder can
be compiled, MonetDB needs to be compiled and installed using this
suite.  To compile MonetDB using MinGW, please see the file
HowToStart-MinGW.txt in the MonetDB folder.

Pathfinder needs the libxml2__ library.  This library needs to be
compiled and installed before proceeding with Pathfinder.  See below
for the details on how to do this.

As with MonetDB, the Pathfinder compilation with MinGW depends on a
Cygwin__ installation.  Apart from all the usual Cygwin packages and
the packages specifically required for building MonetDB, no additional
packages are required.

__ http://www.mingw.org/
__ http://www.xmlsoft.org/
__ http://www.cygwin.com/

Note: when compiling MonetDB/XQuery from CVS source using MinGW, you
will need Mx, mel, and burg compiled without MinGW.  These tools are
available as a separate package.  You can check the sources of these
tools out from CVS (modulename is ``buildtools``).  It comes with a
README file in which the steps towards a successful compilation are
explained.

Building libxml2
----------------

The libxml2 library sources can be found at
http://xmlsoft.org/downloads.html.  Choose one of the mirrors, and
download ``libxml2-2.6.20.tar.gz``.  Unpack this file (Cygwin command
``tar xzf libxml2-2.6.20.tar.gz``).  Then inside the newly created
folder libxml2-2.6.20, execute the configure script and then build and
install::

 cd libxml2-2.6.20
 ./configure CC='gcc -g -mwin32 -mno-cygwin' \
	     LDFLAGS=-L/usr/lib/w32api \
	     --host=i386-pc-mingw32 \
	     --without-iconv \
	     --without-python \
	     --without-readline \
	     --prefix="$HOME/MinGW"
 make
 make install

If the Cygwin package mingw-zlib is not installed (or not wanted), you
can add the option ``--without-zlib`` to the configure command.

This will install the library and include files in ``$HOME/MinGW``
which we also use in the configuration of MonetDB and Pathfinder.

Building Pathfinder
-------------------

In order to compile and install Pathfinder, I use the following
commands::

 export MONETDB_PREFIX="$HOME/MinGW" # location where MonetDB was installed
 ./bootstrap
 mkdir MinGW
 cd MinGW
 ../configure --host=i386-pc-mingw32 \
	      --with-monet="$MONETDB_PREFIX" \
	      --with-mel=.../mel.exe \
	      --with-mx=.../Mx.exe \
	      --with-burg=.../burg.exe \
	      --with-gcc='gcc -mwin32 -mno-cygwin' \
	      --with-translatepath='cygpath -w' \
	      --with-libxml2="$HOME/MinGW" \
	      --with-pthread=C:/Pthreads \
	      --without-iconv \
	      --without-pcre \
	      --prefix="$HOME/MinGW"
 make
 make install

The values for the ``--with-mel``, ``--with-mx``, and ``--with-burg``
options should be the full (Cygwin) paths to the respective binaries,
which should be compiled for Cygwin (i.e. not using the MinGW tools).
Note that ``Mx``, ``mel``, and ``burg`` are not used (and hence the
options are not needed) if compiling from a source distribution
(i.e. a ``.tar.gz`` file from SourceForge).

The ``--with-monet`` flag is not needed if ``MONETDB_PREFIX`` is set
and ``monetdb-config`` can be found in ``$MONETDB_PREFIX/bin``.

In order to use the resulting binaries and MonetDB module, you need to
add a number of folders to the Windows ``PATH``.  They are the same as
the ones that are needed for MonetDB itself::

 rem as an abbreviation, set MONETDB_PREFIX to the Windows version of
 rem the folder where MonetDB was installed
 set MONETDB_PREFIX=...\MinGW
 set PATH=C:\Pthreads\lib;%PATH%
 set PATH=%MONETDB_PREFIX%\lib\MonetDB;%PATH%
 set PATH=%MONETDB_PREFIX%\lib\bin;%PATH%
 set PATH=%MONETDB_PREFIX%\lib;%PATH%
 set PATH=%MONETDB_PREFIX%\bin;%PATH%

If bz2 and z are included in the compilation (i.e. the libraries were
found in the configure step), the Cygwin bin directory also needs to
be added.  Only the ``mgwbz2-1.dll`` and ``mgwz.dll`` are used from
that folder.  We add the folder at the end of the Windows search path::

 set PATH=%PATH%;C:\cygwin\bin

You can now test the Pathfinder installation using the following
command::

 rem as an abbreviation, set PFSRC to the (Windows name of) the
 rem Pathfinder source folder, also note that per the above,
 rem %PFSRC%\MinGW is (the Windows name of) the folder in which
 rem Pathfinder was built.
 set PFSRC=...\pathfinder
 rem the following command should be on a single line
 cd "%PFSRC%"
 Mtest.py --TSTSRCBASE="%PFSRC%" --TSTBLDBASE="%PFSRC%\MinGW" --TSTTRGBASE="%MONETDB_PREFIX%" -r
