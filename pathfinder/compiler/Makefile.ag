# The contents of this file are subject to the Pathfinder Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://monetdb.cwi.nl/Legal/PathfinderLicense-1.1.html
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the Pathfinder system.
#
# The Original Code has initially been developed by the Database &
# Information Systems Group at the University of Konstanz, Germany and
# the Database Group at the Technische Universitaet Muenchen, Germany.
# It is now maintained by the Database Systems Group at the Eberhard
# Karls Universitaet Tuebingen, Germany.  Portions created by the
# University of Konstanz, the Technische Universitaet Muenchen, and the
# Universitaet Tuebingen are Copyright (C) 2000-2005 University of
# Konstanz, (C) 2005-2008 Technische Universitaet Muenchen, and (C)
# 2008-2010 Eberhard Karls Universitaet Tuebingen, respectively.  All
# Rights Reserved.

SUBDIRS = utils schema debug mem parser semantics core algebra mil include sql algebra-m5sql xmlimport 

EXTRA_DIST_DIR = Tests

INCLUDES = include $(MONETDB_INCS) $(LIBXML2_CFLAGS)


lib_compiler1 = {
        NOINST
        DIR = libdir
        SOURCES = \
             compile.c
}
lib_compiler2 = {
        NOINST
        DIR = libdir
        SOURCES = \
             env.c \
             oops.c \
             pfstrings.c \
             plan_bundle.c \
             qname.c \
             scope.c \
             timer.c \
             variable.c
}
lib_compiler3 = {
        NOINST
        DIR = libdir
        SOURCES = \
             env.c \
             oops.c \
             pfstrings.c \
             plan_bundle.c \
             qname.c \
             timer.c
}

bin_pf = {
        LIBS = \
                libcompiler1 \
                schema/libschema \
                debug/libdebug \
                parser/libparser \
                semantics/libsemantics \
                core/libcore \
                algebra/libalgebra \
                algebra/map/libmap \
                algebra/opt/libopt \
                algebra/prop/libprop \
                mil/libmil \
                libcompiler2 \
                mem/libmem \
                algebra-m5sql/libmsa \
                sql/libsql \
                #
                xmlimport/libxmlimport \
                utils/libstringutils \
                # 
                $(LIBGC_LDADD) $(LIBGC_LIBS) \
                $(LIBXML2_LDADD) $(LIBXML2_LIBS) \
                $(SOCKET_LIBS) $(DL_LIBS)
                
        SOURCES = \
             main.c
}

# stand-alone binary that reads in a Logical Algbra plan in XML format,
# optimizes it and returns it again in XML format.
#
# (Note that the linker requires all used symbols to be listed
#  before their definition, which makes e.g., libmem a good candidate
#  for the last item of the list.)
bin_pfopt = {
        LIBS = \
                algebra/liblogopt \
                algebra/map/libmap \
                algebra/opt/libopt \
                algebra/prop/libprop \
                xmlimport/libxmlimport \
                algebra/liblogical \
                debug/liblogdebug \
                libcompiler3 \
                utils/libstringutils \
                semantics/libns \
                semantics/liboptions \
                mem/libmem \
                $(LIBGC_LDADD) $(LIBGC_LIBS) \
                $(LIBXML2_LDADD) $(LIBXML2_LIBS) \
                $(SOCKET_LIBS) $(DL_LIBS)
                
        SOURCES = \
             main_opt.c
}

# stand-alone binary that reads in a Logical Algbra plan in XML format
# and generates SQL Code.
#
# (Note that the linker requires all used symbols to be listed
#  before their definition, which makes e.g., libmem a good candidate
#  for the last item of the list.)
bin_pfsql = {
        LIBS = \
                algebra/liblogopt \
                algebra/map/libmap \
                algebra/opt/libopt \
                algebra/prop/libprop \
                xmlimport/libxmlimport \
                algebra/liblogical \
                sql/libsql \
                debug/libprettyp \
                libcompiler3 \
                utils/libstringutils \
                semantics/libns \
                semantics/liboptions \
                mem/libmem \
                $(LIBGC_LDADD) $(LIBGC_LIBS) \
                $(LIBXML2_LDADD) $(LIBXML2_LIBS) \
                $(SOCKET_LIBS) $(DL_LIBS)
                
        SOURCES = \
             main_sql.c
}

# PF/Ferry library that reads in a Logical Algbra plan in XML format,
# optimizes it, and provides various output formats (DOT, XML, SQL).
#
# (Note that the linker requires all used symbols to be listed
#  before their definition, which makes e.g., libmem a good candidate
#  for the last item of the list.)
lib_pf_ferry = {
        LIBS = \
                ./algebra/liblogopt \
                ./algebra/map/libmap \
                ./algebra/opt/libopt \
                ./algebra/prop/libprop \
                ./xmlimport/libxmlimport \
                ./algebra/liblogical \
                ./sql/libsql \
                ./debug/libprettyp \
                ./debug/liblogdebug \
                ./libcompiler3 \
                ./utils/libstringutils \
                ./semantics/libns \
                ./semantics/liboptions \
                ./mem/libmem_embedded \
                $(LIBGC_LDADD) $(LIBGC_LIBS) \
                $(LIBXML2_LDADD) $(LIBXML2_LIBS) \
                $(SOCKET_LIBS) $(DL_LIBS)
                
        SOURCES = \
             pf_ferry.c
}

EXTRA_DIST = win32_getopt.c
