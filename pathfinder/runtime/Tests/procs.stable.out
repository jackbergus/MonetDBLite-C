stdout of test 'procs` in directory 'runtime` itself:


# 02:59:56 >  
# 02:59:56 >  Mtimeout -timeout 60 Mserver "--config=/var/tmp/_Stable_PREFIX__GNU_32_d_--enable-debug_/etc/MonetDB.conf" --debug=10 --set "monet_mod_path=/var/tmp/_Stable_PREFIX__GNU_32_d_--enable-debug_/lib/MonetDB:/var/tmp/_Stable_PREFIX__GNU_32_d_--enable-debug_/lib/bin" --set "gdk_dbfarm=/var/tmp/_Stable_PREFIX__GNU_32_d_--enable-debug_/var/MonetDB/dbfarm" --set "sql_logdir=/var/tmp/_Stable_PREFIX__GNU_32_d_--enable-debug_/var/MonetDB/log" --set mapi_port=37488 --set sql_port=45466 --set xquery_port=52692 --set monet_prompt= --trace --dbname=mTests_runtime  < procs.milS
# 02:59:56 >  

# Monet Database Server V4.8.0
# Copyright (c) 1993-2005, CWI. All rights reserved.
# Compiled for i686-redhat-linux-gnu/32bit with 32bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module(pathfinder);
module(pf_standoff);
module(xrpc);
procs();
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
# MIL Procedure																		  # name
# str																			  # type
#---------------------------------------------------------------------------------------------------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"														  ]
[ "CTderive(BAT[oid,any], BAT[oid,any]) : grp"																				  ]
[ "CTgroup(BAT[oid,any], BAT[oid,any]) : grp"																				  ]
[ "CTgroup(oid, BAT[oid,any]) : BAT[oid,oid]"														  ]
[ "CTorderby(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"												  ]
[ "CTorderby_rev(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"												  ]
[ "CTrefine(oid, BAT[oid,any]) : BAT[oid,oid]"														  ]
[ "CTrefine(oid, any) : oid"																  ]
[ "CTsubgroup(BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"											  ]
[ "TIMEZONE(str) : tzone"																  ]
[ "[date](BAT[any::1,timestamp]) : BAT[any::1,date]"													  ]
[ "[daytime](BAT[any::1,int]) : BAT[any::1,daytime]"													  ]
[ "[daytime](BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,daytime]"											  ]
[ "[daytime](BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,daytime]"									  ]
[ "[daytime](BAT[any::1,timestamp]) : BAT[any::1,daytime]"												  ]
[ "[epoch](BAT[any::1,timestamp]) : BAT[any::1,int]"													  ]
[ "[rule](BAT[any::1,int], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]"					  ]
[ "[rule](BAT[any::1,int], BAT[any::1,str], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]"							  ]
[ "[rule](BAT[any::1,int], BAT[any::1,str], BAT[any::1,int], BAT[any::1,int], BAT[any::1,int]) : BAT[any::1,rule]"					  ]
[ "[timestamp](BAT[any::1,date], BAT[any::1,daytime]) : BAT[any::1,timestamp]"										  ]
[ "[timestamp](BAT[any::1,int]) : BAT[any::1,timestamp]"												  ]
[ "__fetch_region_index(BAT[void,BAT], BAT[lock,BAT], oid) : BAT[void,BAT]"									  ]
[ "__region_extract(BAT[oid,BAT], BAT[lock,BAT], oid, str) : void"										  ]
[ "__runtime_addchunk(lng, str, BAT[lock,BAT], BAT[void,oid], BAT[void,chr], BAT[void,oid], oid, bit) : void"						  ]
[ "__runtime_index(BAT[void,oid], BAT[void,chr], BAT[void,oid], BAT[oid,void], oid, bit) : BAT[oid,oid]"					  ]
[ "__runtime_lookup(BAT[lock,BAT], BAT[oid,oid]) : BAT[void,oid]"										  ]
[ "__runtime_maintain(lng, str, BAT[lock,BAT], BAT[oid,oid], BAT[oid,oid], BAT[void,oid]) : void"							  ]
[ "__runtime_newnids(BAT[lock,BAT], int) : BAT[oid,void]"											  ]
[ "__runtime_newpage(BAT[lock,BAT]) : oid"													  ]
[ "__shred_into_docBAT(BAT[str,BAT], str, oid, BAT[lock,BAT], oid, bit, lng) : void"									  ]
[ "__ws_opencoll(BAT[void,BAT], BAT[lock,BAT], BAT[str,BAT], str, oid) : oid"										  ]
[ "_collection_cleanup() : BAT[str,str]"													  ]
[ "_del_doc(bit, BAT[any,str], BAT[oid,str], BAT[oid,str]) : void"											  ]
[ "_del_doc_replace(BAT[oid,str], BAT[oid,str]) : void"												  ]
[ "_runtime_get(str) : BAT[lock,BAT]"														  ]
[ "_shred_doc_base(BAT[oid,str], BAT[void,str], BAT[void,str], lng) : BAT[oid,BAT]"									  ]
[ "_shred_doc_cleanup(lng, bit) : BAT[any,any]"													  ]
[ "_shred_into_docBAT(BAT[str,BAT], BAT[void,str], BAT[void,str], str, oid, timestamp, lng) : oid"							  ]
[ "_shredlock_set(str, lng) : void"															  ]
[ "_shredlock_unset(str, lng) : void"															  ]
[ "_ws_coll_isolate(BAT[void,BAT], str, BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void"						  ]
[ "_ws_create(int) : bit"															  ]
[ "_ws_free(lng) : BAT[void,any]"														  ]
[ "_ws_open(lng, BAT[void,str], BAT[void,str], BAT[void,timestamp], BAT[void,str], BAT[void,oid], BAT[void,oid]) : void"				  ]
[ "_ws_opencoll(lng, oid) : BAT[lock,BAT]"														  ]
[ "_ws_pinnedcoll(lng, str) : BAT[lng,lng]"														  ]
[ "acos(flt) : flt"																	  ]
[ "addValues(BAT[void,any::1], BAT[oid,any::1]) : BAT[oid,oid]"												  ]
[ "addValues(BAT[void,any::1], any::1) : oid"														  ]
[ "add_pi_bulk(BAT[void,BAT], oid, BAT[oid,str], BAT[oid,str]) : BAT[oid,oid]"										  ]
[ "add_qname(str, str, str, BAT[void,BAT]) : oid"													  ]
[ "add_qnames(BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,BAT]) : BAT[void,oid]"								  ]
[ "add_string_bulk(BAT[void,BAT], oid, int, int, BAT[oid,str]) : BAT[oid,oid]"									  ]
[ "addmonths(timestamp, int) : timestamp"														  ]
[ "ancestor(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"									  ]
[ "ancestor_or_self(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"								  ]
[ "antiswizzle(oid, BAT[oid,oid]) : oid"													  ]
[ "ascii(str) : int"																	  ]
[ "asin(flt) : flt"																	  ]
[ "atan(flt) : flt"																	  ]
[ "atoms() : void"																	  ]
[ "attr_constr(BAT[void,oid], BAT[void,str], BAT[void,BAT]) : BAT[void,BAT]"										  ]
[ "avg(BAT[any,bte]) : dbl"																  ]
[ "avg(BAT[any,dbl]) : dbl"																  ]
[ "avg(BAT[any,flt]) : dbl"																  ]
[ "avg(BAT[any,int]) : dbl"																  ]
[ "avg(BAT[any,lng]) : dbl"																  ]
[ "avg(BAT[any,sht]) : dbl"																  ]
[ "avg(BAT[any,wrd]) : dbl"																  ]
[ "bbp() : BAT[str,int]"																  ]
[ "capacity(BAT[any,any]) : lng"															  ]
[ "card(BAT[any,any]) : wrd"																  ]
[ "ceil(flt) : flt"																	  ]
[ "child(BAT[oid,oid], BAT[oid,oid], oid, BAT[oid,BAT], int, BAT[void,any], chr) : BAT[void,BAT]"							  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"													  ]
[ "clients() : void"																	  ]
[ "cold(BAT[any::1,any::2]) : void"															  ]
[ "coll_lock_set(BAT[void,BAT], oid) : void"														  ]
[ "coll_lock_unset(BAT[void,BAT], oid) : void"														  ]
[ "collection_cleanup(BAT[str,str]) : void"													  ]
[ "correct_sizes(oid, BAT[void,oid], BAT[void,int]) : BAT[void,int]"											  ]
[ "cos(flt) : flt"																	  ]
[ "cosh(flt) : flt"																	  ]
[ "count_no_nil(BAT[any,any]) : int"															  ]
[ "cpu() : BAT[str,int]"																  ]
[ "current_date() : date"																  ]
[ "current_time() : daytime"																  ]
[ "current_timestamp() : timestamp"															  ]
[ "date_add_sec_interval(date, lng) : date"														  ]
[ "date_sub_sec_interval(date, lng) : date"														  ]
[ "day(lng) : lng"																	  ]
[ "day(timestamp) : int"																  ]
[ "daytime(int) : daytime"																  ]
[ "daytime(int, int) : daytime"																  ]
[ "daytime(int, int, int) : daytime"															  ]
[ "del_doc(bit, BAT[any,str], bit) : BAT[void,str]"												  ]
[ "del_doc_base(bit, BAT[any,str], bit) : void"														  ]
[ "delete_all_docs(bit) : void"																  ]
[ "delete_doc(BAT[void,str]) : void"														  ]
[ "delete_doc(str) : void"																  ]
[ "descendant(BAT[oid,oid], BAT[oid,oid], oid, BAT[oid,BAT], int, BAT[void,any], chr) : BAT[void,BAT]"							  ]
[ "descendant_or_self(BAT[oid,oid], BAT[oid,oid], oid, BAT[oid,BAT], int, BAT[void,any], chr) : BAT[void,BAT]"						  ]
[ "destroy(BAT[any,any]) : bit"																  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"											  ]
[ "dir() : void"																	  ]
[ "dir(BAT[int,str]) : void"																  ]
[ "dir(str) : void"																	  ]
[ "dir_leaks() : void"																	  ]
[ "doLoopLiftedRPC(str, str, str, str, lng, int, BAT[void,BAT], BAT[oid,str], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]"  ]
[ "do_update_delete(BAT[void,BAT], BAT[void,oid], BAT[void,int]) : void"									  ]
[ "do_update_insert(BAT[void,BAT], BAT[void,lng], BAT[void,oid], BAT[void,int], BAT[void,oid], BAT[void,int]) : void"				  ]
[ "do_update_rename(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,str]) : void"								  ]
[ "do_update_replace(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,str]) : void"							  ]
[ "doc_tbl(BAT[void,BAT], BAT[void,str]) : BAT[void,BAT]"												  ]
[ "elem_constr(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[oid,oid], BAT[oid,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"	  ]
[ "elem_constr_empty(BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"											  ]
[ "env() : void"																	  ]
[ "environment() : BAT[str,str]"															  ]
[ "epoch(timestamp) : int"																  ]
[ "exit() : void"																	  ]
[ "exp(flt) : flt"																	  ]
[ "extend(grp) : BAT[any,int]"																  ]
[ "fclose(Stream) : void"																  ]
[ "fetch_region_index(BAT[void,BAT], oid) : BAT[void,BAT]"											  ]
[ "fflush(Stream) : void"																  ]
[ "find_qn_bulk(BAT[void,BAT], oid, BAT[oid,str], bit) : BAT[oid,oid]"											  ]
[ "find_unescaped_occurrence(str, str, str) : int"													  ]
[ "findupdate(BAT[any::1,any::2], BAT[any::1,any::2], any::1) : any::2"										  ]
[ "fix_consecutive_texts(BAT[void,BAT], BAT[oid,oid]) : void"											  ]
[ "floor(flt) : flt"																	  ]
[ "following(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"									  ]
[ "following_sibling(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"								  ]
[ "fopen(str, str) : Stream"																  ]
[ "fputs(str, Stream) : void"																  ]
[ "get_container(BAT[oid,int]) : BAT[oid,oid]"														  ]
[ "get_container(BAT[void,int]) : BAT[void,oid]"													  ]
[ "get_container(int) : oid"																  ]
[ "get_mapi_port() : int"																  ]
[ "get_root(BAT[oid,BAT], BAT[void,oid], BAT[void,int], BAT[void,oid]) : BAT[void,oid]"								  ]
[ "get_root(BAT[oid,BAT], BAT[void,oid], int, oid) : BAT[void,oid]"										  ]
[ "get_root(BAT[oid,BAT], oid, int, oid) : oid"													  ]
[ "get_rpc_res(oid, str, BAT[void,BAT], BAT[void,lng], BAT[void,dbl], BAT[void,str]) : BAT[void,BAT]"															  ]
[ "get_type(BAT[void,int], int) : BAT[oid,void]"													  ]
[ "get_type_atomic(BAT[void,int]) : BAT[oid,void]"													  ]
[ "get_type_node(BAT[void,int]) : BAT[oid,void]"													  ]
[ "get_types(BAT[void,int]) : BAT[void,int]"														  ]
[ "help() : void"																	  ]
[ "help(str) : void"																	  ]
[ "help_sig(oid) : void"																  ]
[ "help_tpe(int) : str"																	  ]
[ "histogram(grp) : BAT[any,int]"															  ]
[ "hot(BAT[any::1,any::2]) : void"															  ]
[ "hours(lng) : int"																	  ]
[ "hours(timestamp) : int"																  ]
[ "htordered_unique_thetajoin(int, BAT[oid,any::1], BAT[oid,any::1], any, any) : BAT[any,any]"								  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"										  ]
[ "io() : BAT[str,int]"																	  ]
[ "is_type(int, int) : bit"																								  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"											  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], lng, str, ..any..) : BAT[any::1,any::3]"								  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"									  ]
[ "like(str, str) : bit"																  ]
[ "like(str, str, str) : bit"																  ]
[ "like_uselect(BAT[any::1,str], str, str) : BAT[any::1,void]"												  ]
[ "like_uselect_pcre(BAT[any::1,str], str, str) : BAT[any::1,void]"											  ]
[ "listen() : void"																	  ]
[ "listen(bit) : void"																	  ]
[ "listen(int) : void"																	  ]
[ "listen(int, bit) : void"																  ]
[ "listen(int, int) : void"																  ]
[ "listen(int, int) : void"																  ]
[ "listen(int, int, bit) : void"															  ]
[ "listen(int, int, bit) : void"															  ]
[ "listen(int, str, int) : void"															  ]
[ "ll_htordered_unique_thetajoin(int, BAT[oid,any::2], BAT[oid,any::2], BAT[void,oid], BAT[void,oid], any, any) : BAT[any,any]"				  ]
[ "ll_standoff_select_narrow(BAT[void,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"									  ]
[ "ll_standoff_select_wide(BAT[void,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"										  ]
[ "load(str) : BAT[any,any]"																  ]
[ "loaded() : void"																	  ]
[ "local_timezone() : lng"																  ]
[ "locate(str, str) : int"																  ]
[ "locate(str, str, int) : int"																  ]
[ "log(flt) : flt"																	  ]
[ "log10(flt) : flt"																	  ]
[ "log2(lng) : int"																	  ]
[ "logger_start() : void"															  ]
[ "loop_lifted_ancestor_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"					  ]
[ "loop_lifted_ancestor_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"					  ]
[ "loop_lifted_ancestor_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"	  ]
[ "loop_lifted_ancestor_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"						  ]
[ "loop_lifted_ancestor_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"						  ]
[ "loop_lifted_ancestor_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_ancestor_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_ancestor_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_ancestor_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_ancestor_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_ancestor_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"							  ]
[ "loop_lifted_child_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"						  ]
[ "loop_lifted_child_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_child_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_child_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_child_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_child_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_descendant_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"					  ]
[ "loop_lifted_descendant_or_self_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"				  ]
[ "loop_lifted_descendant_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_or_self_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_or_self_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_or_self_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"	  ]
[ "loop_lifted_descendant_or_self_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_or_self_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"						  ]
[ "loop_lifted_descendant_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"					  ]
[ "loop_lifted_descendant_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_descendant_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_descendant_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_descendant_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_descendant_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_descendant_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"					  ]
[ "loop_lifted_following_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"					  ]
[ "loop_lifted_following_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"	  ]
[ "loop_lifted_following_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"						  ]
[ "loop_lifted_following_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"						  ]
[ "loop_lifted_following_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_following_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_following_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_following_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_following_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_following_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_parent_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"							  ]
[ "loop_lifted_parent_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"						  ]
[ "loop_lifted_parent_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_parent_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_parent_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"				  ]
[ "loop_lifted_parent_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_parent_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"				  ]
[ "loop_lifted_parent_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_parent_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_parent_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_parent_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_parent_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_preceding_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"					  ]
[ "loop_lifted_preceding_sibling_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"					  ]
[ "loop_lifted_preceding_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_sibling_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_sibling_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_sibling_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"	  ]
[ "loop_lifted_preceding_sibling_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_sibling_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"						  ]
[ "loop_lifted_preceding_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"						  ]
[ "loop_lifted_preceding_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"				  ]
[ "loop_lifted_preceding_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_preceding_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"				  ]
[ "loop_lifted_preceding_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"		  ]
[ "loop_lifted_preceding_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"			  ]
[ "loop_lifted_preceding_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"			  ]
[ "loop_lifted_select_narrow_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"												  ]
[ "loop_lifted_select_narrow_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"											  ]
[ "loop_lifted_select_narrow_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_narrow_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"								  ]
[ "loop_lifted_select_narrow_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"								  ]
[ "loop_lifted_select_narrow_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"								  ]
[ "loop_lifted_select_narrow_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,BAT]"												  ]
[ "loop_lifted_select_wide_step(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int) : BAT[void,BAT]"											  ]
[ "loop_lifted_select_wide_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], chr) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_kind_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, chr) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_loc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"										  ]
[ "loop_lifted_select_wide_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_ns_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"										  ]
[ "loop_lifted_select_wide_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str, str) : BAT[void,BAT]"								  ]
[ "loop_lifted_select_wide_step_with_nsloc_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], int, str) : BAT[void,BAT]"									  ]
[ "loop_lifted_select_wide_step_with_target_test(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT], str) : BAT[void,BAT]"									  ]
[ "ls() : void"																		  ]
[ "ls(str) : void"																	  ]
[ "madvise(BAT[any::1,any::2], int) : BAT[any::1,any::2]"												  ]
[ "map(grp) : BAT[oid,oid]"																  ]
[ "mapi_server(int, int) : void"															  ]
[ "mapi_start() : void"																	  ]
[ "mapi_start(bit) : void"																  ]
[ "mapi_stream_read(Stream) : str"															  ]
[ "mem_usage() : BAT[str,lng]"																  ]
[ "mem_usage(int) : BAT[str,lng]"															  ]
[ "memory() : BAT[str,int]"																  ]
[ "merge_adjacent_text_nodes(BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,BAT]) : BAT[void,oid]"						  ]
[ "mil_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"											  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"										  ]
[ "milliseconds(timestamp) : int"															  ]
[ "minutes(lng) : int"																	  ]
[ "minutes(timestamp) : int"																  ]
[ "mmap(BAT[any::1,any::2], int) : BAT[any::1,any::2]"													  ]
[ "modules() : void"																	  ]
[ "month(int) : int"																	  ]
[ "month(timestamp) : int"																  ]
[ "movedata(BAT[void,BAT], oid, oid, int, int) : void"												  ]
[ "mposjoin(any, oid, BAT[oid,BAT]) : BAT[void,any]"												  ]
[ "msecs(int, int, int, int, int) : lng"														  ]
[ "mvaljoin(any, oid, BAT[oid,BAT]) : BAT[oid,oid]"												  ]
[ "myupdate(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"									  ]
[ "myupdate(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]"										  ]
[ "neg_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"											  ]
[ "new(BAT[any,any], BAT[any,any], int) : BAT[any,any]"													  ]
[ "orderby_table(str, str, ..BAT[any::1,any]..) : void"													  ]
[ "outerjoin(BAT[any::1,any::2], BAT[any::2,any::3]) : BAT[any::1,any::3]"										  ]
[ "pagesample(BAT[oid,any]) : BAT[oid,void]"														  ]
[ "parent(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"									  ]
[ "pf_checkpoint(BAT[void,str]) : bit"														  ]
[ "pfstart() : void"																	  ]
[ "pfstart(bit, lng) : void"																  ]
[ "pi() : dbl"																								  ]
[ "play_doc_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : void"							  ]
[ "play_update_tape(BAT[void,BAT], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,str]) : void"							  ]
[ "preceding(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"									  ]
[ "preceding_sibling(BAT[void,oid], BAT[void,oid], oid, BAT[void,BAT], int) : BAT[void,BAT]"								  ]
[ "print(str, BAT[any::1,any], ..BAT[any::1,any]..) : void"												  ]
[ "procs() : void"																	  ]
[ "prod(BAT[any,bte]) : bte"																  ]
[ "prod(BAT[any,dbl]) : dbl"																  ]
[ "prod(BAT[any,flt]) : flt"																  ]
[ "prod(BAT[any,int]) : int"																  ]
[ "prod(BAT[any,lng]) : lng"																  ]
[ "prod(BAT[any,sht]) : sht"																  ]
[ "prod(BAT[any,wrd]) : wrd"																  ]
[ "project(BAT[any::1,any]) : BAT[any::1,void]"														  ]
[ "readonly(BAT[any::1,any::2]) : int"															  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"												  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"												  ]
[ "repeat(str, int) : str"																  ]
[ "replace_root(BAT[void,oid], BAT[oid,oid], BAT[oid,oid]) : void"										  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"											  ]
[ "rpc_client(str, str, str, str, str, str, lng, int, BAT[void,BAT], BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,int], BAT[void,lng], BAT[void,dbl], BAT[void,dbl], BAT[void,str]) : oid"  ]
[ "rpcd_start() : void"                                                               ]
[ "rpcd_start(int) : void"                                                            ]
[ "rpcd_start(int, str) : void"                                                           ]
[ "rule(int, int, int, int, int) : rule"														  ]
[ "rule(int, str, int, int) : rule"															  ]
[ "rule(int, str, int, int, int) : rule"														  ]
[ "save(BAT[any::1,any::2]) : BAT[any::1,any::2]"													  ]
[ "seconds(lng) : int"																	  ]
[ "seconds(timestamp) : int"																  ]
[ "select_narrow(BAT[oid,oid], BAT[oid,oid], oid, BAT[void,BAT], int, BAT[void,oid], chr) : BAT[void,BAT]"					  ]
[ "select_wide(BAT[oid,oid], BAT[oid,oid], oid, BAT[void,BAT], int, BAT[void,oid], chr) : BAT[void,BAT]"					  ]
[ "semijoin(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"											  ]
[ "set_kind(BAT[void,oid], int) : BAT[void,int]"													  ]
[ "set_kind(oid, int) : int"																  ]
[ "shred_doc(BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng]) : void"								  ]
[ "shred_doc(str, str) : void"																  ]
[ "shred_doc(str, str, str, lng) : void"													  ]
[ "shred_doc_base(BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,str], BAT[void,lng], Stream, lng) : void"				  ]
[ "shred_into_docBAT(BAT[str,BAT], BAT[void,str], BAT[void,str], str, oid, BAT[lock,BAT], oid, lng, timestamp, Stream, lng) : oid"		  ]
[ "shred_stream(Stream, str, str, lng) : void"													  ]
[ "sigs(str) : void"																	  ]
[ "sin(flt) : flt"																	  ]
[ "sinh(flt) : flt"																	  ]
[ "size(BAT[any,bit]) : wrd"																  ]
[ "sort_ht(BAT[any::1,any::2]) : BAT[any::1,any::2]"													  ]
[ "space(int) : str"																	  ]
[ "sqrt(flt) : flt"																	  ]
[ "standoff_reject_narrow(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]"											  ]
[ "standoff_reject_wide(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]"											  ]
[ "standoff_select_narrow(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]"											  ]
[ "standoff_select_wide(BAT[void,oid], BAT[oid,void], BAT[oid,oid], BAT[oid,any], BAT[oid,any]) : BAT[void,oid]"											  ]
[ "strconcat(BAT[void,str], BAT[void,str]) : BAT[void,str]"												  ]
[ "strconcat(BAT[void,str], str) : BAT[void,str]"													  ]
[ "strconcat(str, BAT[void,str]) : BAT[void,str]"													  ]
[ "strconcat(str, str) : str"																  ]
[ "stream_line(Stream) : str"																  ]
[ "stream_strip(Stream, str) : str"															  ]
[ "string(str, int) : str"																								  ]
[ "string(str, int, int) : str"																								  ]
[ "stringinsert(str, int, int, str) : str"														  ]
[ "stringleft(str, int) : str"																  ]
[ "stringleft(str, wrd) : str"																								  ]
[ "stringlength(str) : int"																  ]
[ "stringreplace(str, str, str) : str"															  ]
[ "stringright(str, int) : str"																  ]
[ "stringright(str, wrd) : str"																								  ]
[ "substring(str, int) : str"																  ]
[ "substring(str, int, int) : str"															  ]
[ "substring(str, wrd) : str"																								  ]
[ "substring(str, wrd, wrd) : str"																							  ]
[ "sum(BAT[any,bte]) : bte"																  ]
[ "sum(BAT[any,dbl]) : dbl"																  ]
[ "sum(BAT[any,flt]) : flt"																  ]
[ "sum(BAT[any,int]) : int"																  ]
[ "sum(BAT[any,lng]) : lng"																  ]
[ "sum(BAT[any,sht]) : sht"																  ]
[ "sum(BAT[any,wrd]) : wrd"																  ]
[ "swizzle(oid, BAT[void,oid]) : oid"															  ]
[ "table(str, BAT[any::1,any], ..BAT[any::1,any]..) : void"												  ]
[ "tan(flt) : flt"																	  ]
[ "tanh(flt) : flt"																	  ]
[ "test_malalgebra() : void"																  ]
[ "text_constr(BAT[void,str], BAT[void,BAT]) : BAT[void,BAT]"												  ]
[ "threads() : void"																	  ]
[ "time_add_sec_interval(daytime, lng) : daytime"													  ]
[ "time_sub_sec_interval(daytime, lng) : daytime"													  ]
[ "timestamp(date) : timestamp"																						  ]
[ "timestamp(int) : timestamp"																  ]
[ "timestamp(lng) : timestamp"																  ]
[ "timestamp_add_sec_interval(timestamp, lng) : timestamp"												  ]
[ "timestamp_sub_month_interval(timestamp, int) : timestamp"												  ]
[ "timestamp_sub_sec_interval(timestamp, lng) : timestamp"												  ]
[ "tmark_grp_unique(BAT[any,any], BAT[oid,any]) : BAT[oid,oid]"												  ]
[ "tmark_grp_unique(any, BAT[oid,any]) : BAT[oid,oid]"													  ]
[ "tmark_unique(BAT[oid,any], BAT[oid,any]) : BAT[oid,oid]"												  ]
[ "tmark_unique(any::1, BAT[void,any]) : BAT[oid,oid]"													  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"											  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"													  ]
[ "vars() : void"																	  ]
[ "vars(str) : void"																	  ]
[ "vm_usage() : BAT[str,lng]"																  ]
[ "vm_usage(int) : BAT[str,lng]"															  ]
[ "ws_bat(lng) : BAT[void,BAT]"																  ]
[ "ws_create() : BAT[void,BAT]"															  ]
[ "ws_create(int) : BAT[void,BAT]"														  ]
[ "ws_destroy(BAT[void,BAT]) : void"															  ]
[ "ws_findnodes(BAT[void,BAT], int, BAT[void,oid], any, any, any, any) : BAT[oid,oid]"								  ]
[ "ws_free(lng) : void"																	  ]
[ "ws_id(BAT[void,BAT]) : lng"																  ]
[ "ws_lookup(BAT[void,BAT], oid, BAT[oid,oid]) : BAT[void,oid]"											  ]
[ "ws_new(oid, int, int, int, oid) : BAT[void,any]"													  ]
[ "ws_newnids(BAT[void,BAT], oid, int) : BAT[oid,void]"													  ]
[ "ws_newpage(BAT[void,BAT], oid) : oid"														  ]
[ "ws_open(BAT[void,BAT], BAT[void,str]) : BAT[void,oid]"												  ]
[ "ws_opencoll(BAT[void,BAT], BAT[str,BAT], str, oid) : oid"												  ]
[ "ws_opendoc(BAT[void,BAT], BAT[void,str]) : BAT[oid,int]"												  ]
[ "ws_postcommit(BAT[void,BAT], oid, BAT[oid,oid], BAT[oid,oid], BAT[void,oid]) : void"									  ]
[ "ws_precommit(BAT[void,BAT], oid, BAT[void,oid], BAT[void,oid], BAT[void,oid], BAT[void,oid]) : void"						  ]
[ "xmlcache_add_rule(str, any) : void"															  ]
[ "xmlcache_add_rule(str, lng) : void"															  ]
[ "xmlcache_del_rule(str) : void"															  ]
[ "xmlcache_print() : void"																  ]
[ "xmlcache_print_rules() : void"															  ]
[ "xmldb_print() : void"																  ]
[ "xquery_server_start() : void"															  ]
[ "xquery_server_start(bit) : void"															  ]
[ "year(int) : int"																	  ]
[ "year(timestamp) : int"																  ]
[ "{avg}(any::1, BAT[oid,oid], BAT[oid,any]) : BAT[oid,dbl]"												  ]
[ "{card}(BAT[oid,any], BAT[oid,any]) : BAT[oid,wrd]"													  ]
[ "{card}(BAT[oid,any], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]"											  ]
[ "{count_no_nil}(BAT[oid,any], BAT[oid,any]) : BAT[oid,int]"												  ]
[ "{count_no_nil}(BAT[oid,any], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]"										  ]
[ "{count}(BAT[oid,any], BAT[oid,any]) : BAT[oid,int]"													  ]
[ "{count}(BAT[oid,any], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]"											  ]
[ "{count}(BAT[oid,bit], BAT[oid,oid], BAT[oid,int]) : BAT[oid,int]"											  ]
[ "{count}(BAT[void,bit], BAT[void,oid], BAT[oid,int]) : BAT[oid,int]"											  ]
[ "{csum}(BAT[oid,bte]) : BAT[oid,bte]"															  ]
[ "{csum}(BAT[oid,dbl]) : BAT[oid,dbl]"															  ]
[ "{csum}(BAT[oid,flt]) : BAT[oid,flt]"															  ]
[ "{csum}(BAT[oid,int]) : BAT[oid,int]"															  ]
[ "{csum}(BAT[oid,lng]) : BAT[oid,lng]"															  ]
[ "{csum}(BAT[oid,sht]) : BAT[oid,sht]"															  ]
[ "{csum}(BAT[oid,wrd]) : BAT[oid,wrd]"															  ]
[ "{max}(any::1, BAT[oid,oid], BAT[oid,any]) : BAT[oid,any::1]"												  ]
[ "{min}(any::1, BAT[oid,oid], BAT[oid,any]) : BAT[oid,any::1]"												  ]
[ "{prod}(BAT[oid,bte], BAT[oid,any]) : BAT[oid,bte]"													  ]
[ "{prod}(BAT[oid,bte], BAT[oid,oid], BAT[oid,any]) : BAT[oid,bte]"											  ]
[ "{prod}(BAT[oid,dbl], BAT[oid,any]) : BAT[oid,dbl]"													  ]
[ "{prod}(BAT[oid,dbl], BAT[oid,oid], BAT[oid,any]) : BAT[oid,dbl]"											  ]
[ "{prod}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"													  ]
[ "{prod}(BAT[oid,flt], BAT[oid,oid], BAT[oid,any]) : BAT[oid,flt]"											  ]
[ "{prod}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"													  ]
[ "{prod}(BAT[oid,int], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]"											  ]
[ "{prod}(BAT[oid,lng], BAT[oid,any]) : BAT[oid,lng]"													  ]
[ "{prod}(BAT[oid,lng], BAT[oid,oid], BAT[oid,any]) : BAT[oid,lng]"											  ]
[ "{prod}(BAT[oid,sht], BAT[oid,any]) : BAT[oid,sht]"													  ]
[ "{prod}(BAT[oid,sht], BAT[oid,oid], BAT[oid,any]) : BAT[oid,sht]"											  ]
[ "{prod}(BAT[oid,wrd], BAT[oid,any]) : BAT[oid,wrd]"													  ]
[ "{prod}(BAT[oid,wrd], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]"											  ]
[ "{sum}(BAT[oid,bte], BAT[oid,any]) : BAT[oid,bte]"													  ]
[ "{sum}(BAT[oid,bte], BAT[oid,oid], BAT[oid,any]) : BAT[oid,bte]"											  ]
[ "{sum}(BAT[oid,dbl], BAT[oid,any]) : BAT[oid,dbl]"													  ]
[ "{sum}(BAT[oid,dbl], BAT[oid,oid], BAT[oid,any]) : BAT[oid,dbl]"											  ]
[ "{sum}(BAT[oid,flt], BAT[oid,any]) : BAT[oid,flt]"													  ]
[ "{sum}(BAT[oid,flt], BAT[oid,oid], BAT[oid,any]) : BAT[oid,flt]"											  ]
[ "{sum}(BAT[oid,int], BAT[oid,any]) : BAT[oid,int]"													  ]
[ "{sum}(BAT[oid,int], BAT[oid,oid], BAT[oid,any]) : BAT[oid,int]"											  ]
[ "{sum}(BAT[oid,lng], BAT[oid,any]) : BAT[oid,lng]"													  ]
[ "{sum}(BAT[oid,lng], BAT[oid,oid], BAT[oid,any]) : BAT[oid,lng]"											  ]
[ "{sum}(BAT[oid,sht], BAT[oid,any]) : BAT[oid,sht]"													  ]
[ "{sum}(BAT[oid,sht], BAT[oid,oid], BAT[oid,any]) : BAT[oid,sht]"											  ]
[ "{sum}(BAT[oid,wrd], BAT[oid,any]) : BAT[oid,wrd]"													  ]
[ "{sum}(BAT[oid,wrd], BAT[oid,oid], BAT[oid,any]) : BAT[oid,wrd]"											  ]
[ "{sum}(any::1, BAT[oid,oid], BAT[oid,any]) : BAT[oid,any::1]"												  ]
quit();

# 02:59:57 >  
# 02:59:57 >  Done.
# 02:59:57 >  

