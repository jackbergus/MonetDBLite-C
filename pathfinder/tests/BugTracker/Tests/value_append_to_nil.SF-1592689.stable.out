stdout of test 'value_append_to_nil.SF-1592689` in directory 'tests/BugTracker` itself:


# 14:22:38 >  
# 14:22:38 >   Mserver "--config=/ufs/sjoerd/Monet-virgin-stable/etc/MonetDB.conf" --debug=10 --set gdk_nr_threads=1 --set "monet_mod_path=/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/x86_64-unknown-linux-gnu/runtime/.libs:/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/x86_64-unknown-linux-gnu/runtime:/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/x86_64-unknown-linux-gnu/modules/pftijah/.libs:/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/x86_64-unknown-linux-gnu/modules/pftijah:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB4:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB4/lib:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB4/bin" --set "gdk_dbfarm=/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/x86_64-unknown-linux-gnu/dbfarm"   --set "xrpc_docroot=/ufs/sjoerd/src/MonetDB/virgin-stable/pathfinder/runtime/xrpc" --set mapi_open=true --set xrpc_open=true --set mapi_port=32829 --set xrpc_port=48543 --set monet_prompt= --trace  --dbname=mTests_tests_BugTracker  
# 14:22:38 >  

# MonetDB Server v4.30.4
# based on GDK   v1.30.4
# Copyright (c) 1993-July 2008, CWI. All rights reserved.
# Copyright (c) August 2008-2009, MonetDB B.V.. All rights reserved.
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs; dynamically linked.
# Visit http://monetdb.cwi.nl/ for further information.
module(pathfinder);
# PF/Tijah module v0.13.0 loaded. http://dbappl.cs.utwente.nl/pftijah
# MonetDB/XQuery module v0.28.3 loaded (default back-end is 'algebra')
# XRPC administrative console at http://127.0.0.1:48543/admin
var a0000;
var a0001;
var a0002;
var a0003;
var a0004;
var a0005;
var a0006;
var a0007;
var a0008;
var a0009;
var a0010;
var a0011;
var a0012;
var a0013;
var a0014;
var a0015;
var a0016;
var a0017;
var a0018;
var a0019;
var a0020;
var a0021;
var a0022;
var a0023;
var a0024;
var a0025;
var a0026;
var a0027;
var unused;
var ws;
unused := nil;
a0000 := CATCH ({
    ws := ws_create (0);
    a0000 := new (void, oid).seqbase (0@0);
    a0000.append (1@0);
    a0000.access (BAT_READ);
    a0001 := a0000.project (add_qname ("", "", "a", ws));
    a0002 := elem_constr_empty (a0001, ws);
    ws := a0002.fetch (0);
    a0003 := a0002.fetch (1);
    a0004 := a0002.fetch (2);
    a0002 := unused;
    a0001 := unused;
    a0001 := a0000;
    a0002 := a0003;
    a0005 := a0004;
    a0006 := a0000;
    a0003 := unused;
    a0004 := unused;
    a0004 := new (void, oid).seqbase (0@0);
    a0004.append (1@0);
    a0004.access (BAT_READ);
    a0008 := new (void, str).seqbase (0@0);
    a0008.append ("auctionG.xml");
    a0008.access (BAT_READ);
    a0010 := doc_tbl (ws, a0008);
    ws := a0010.fetch (0);
    a0012 := a0010.fetch (1);
    a0011 := a0010.fetch (2);
    a0010 := unused;
    a0009 := unused;
    a0008 := unused;
    a0008 := loop_lifted_child_step_with_nsloc_test (a0004, a0012, a0011, ws, 2, "", "site");
    a0009 := a0008.fetch (1);
    a0010 := a0008.fetch (2).materialize (a0009);
    a0013 := a0008.fetch (0).materialize (a0008.fetch (1));
    a0008 := unused;
    a0004 := unused;
    a0012 := unused;
    a0011 := unused;
    a0004 := loop_lifted_child_step_with_nsloc_test (a0013, a0009, a0010, ws, 3, "", "people");
    a0008 := a0004.fetch (1);
    a0011 := a0004.fetch (2).materialize (a0008);
    a0004 := unused;
    a0009 := unused;
    a0010 := unused;
    a0013 := unused;
    a0012 := unused;
    a0004 := a0011.mark (1@0);
    a0009 := loop_lifted_child_step_with_nsloc_test (a0004, a0008, a0011, ws, 3, "", "person");
    a0010 := a0009.fetch (1);
    a0012 := a0009.fetch (2).materialize (a0010);
    a0009 := unused;
    a0011 := unused;
    a0008 := unused;
    a0004 := unused;
    a0013 := unused;
    a0004 := a0012.mark (1@0);
    a0008 := mvaljoin (a0010, a0012, ws.fetch (ATTR_OWN));
    a0011 := a0008.reverse ().mark (0@0).reverse ();
    a0013 := a0008.mark (0@0).reverse ().leftjoin (a0012);
    a0009 := a0008.mark (0@0).reverse ().leftjoin (a0004);
    a0008 := mposjoin (mposjoin (a0011, a0013, ws.fetch (ATTR_QN)), mposjoin (a0011, a0013, ws.fetch (ATTR_CONT)), ws.fetch (QN_LOC));
    a0008 := a0008.ord_uselect ("id");
    a0008 := a0008.mark (0@0).reverse ();
    a0011 := a0008.leftjoin (a0011);
    a0013 := a0008.leftjoin (a0013);
    a0009 := a0008.leftjoin (a0009);
    a0008 := mposjoin (mposjoin (a0011, a0013, ws.fetch (ATTR_QN)), mposjoin (a0011, a0013, ws.fetch (ATTR_CONT)), ws.fetch (QN_URI));
    a0008 := a0008.ord_uselect ("");
    a0008 := a0008.mark (0@0).reverse ();
    a0011 := a0008.leftjoin (a0011);
    a0013 := a0008.leftjoin (a0013);
    a0009 := a0008.leftjoin (a0009);
    a0011 := a0011.reverse ().mark (0@0).reverse ();
    a0013 := a0013.reverse ().mark (0@0).reverse ();
    a0009 := a0009.reverse ().mark (0@0).reverse ();
    a0008 := unused;
    a0008 := a0004.leftjoin (a0009.reverse ());
    a0014 := a0008.mark (0@0).reverse ();
    a0015 := a0008.reverse ().mark (0@0).reverse ();
    a0008 := unused;
    a0008 := a0014.leftjoin (a0012);
    a0008 := a0008.reverse ().mark (0@0).reverse ();
    a0016 := a0014.leftjoin (a0010);
    a0016 := a0016.reverse ().mark (0@0).reverse ();
    a0019 := a0015.leftjoin (a0011);
    a0019 := a0019.reverse ().mark (0@0).reverse ();
    a0020 := a0015.leftjoin (a0013);
    a0020 := a0020.reverse ().mark (0@0).reverse ();
    a0014 := unused;
    a0015 := unused;
    a0012 := unused;
    a0010 := unused;
    a0004 := unused;
    a0009 := unused;
    a0011 := unused;
    a0013 := unused;
    a0017 := unused;
    a0018 := unused;
    a0004 := mposjoin (mposjoin (a0019, a0020, ws.fetch (ATTR_PROP)), mposjoin (a0019, a0020, ws.fetch (ATTR_CONT)), ws.fetch (PROP_VAL));
    a0020 := unused;
    a0019 := unused;
    a0010 := [=](a0004, "person0");
    a0004 := unused;
    a0009 := unused;
    a0004 := a0010.select (true).mark (0@0).reverse ();
    a0009 := a0004.leftjoin (a0008);
    a0009 := a0009.reverse ().mark (0@0).reverse ();
    a0011 := a0004.leftjoin (a0016);
    a0011 := a0011.reverse ().mark (0@0).reverse ();
    a0004 := unused;
    a0008 := unused;
    a0016 := unused;
    a0010 := unused;
    a0012 := unused;
    a0004 := a0009.reverse ().sort ().reverse ();
    a0004 := a0004.CTrefine (a0011);
    a0004 := a0004.reverse ().kunique ().reverse ().mark (0@0).reverse ();
    a0008 := a0004.leftjoin (a0009);
    a0008 := a0008.assert_order ();
    a0008 := a0008.reverse ().mark (0@0).reverse ();
    a0010 := a0004.leftjoin (a0011);
    a0010 := a0010.reverse ().mark (0@0).reverse ();
    a0004 := unused;
    a0009 := unused;
    a0011 := unused;
    a0004 := a0008.mark (1@0);
    a0009 := -1;
    a0011 := 0;
    while (>(a0011, a0009)) {
        a0012 := {count} (a0006.reverse (), a0000.reverse ());
        a0012 := [lng](a0012);
        a0013 := a0012.reverse ().mark (0@0).reverse ();
        a0014 := a0012.mark (0@0).reverse ();
        a0012 := unused;
        a0015 := [=](a0014, 1@0);
        a0016 := a0015.select (true).mark (0@0).reverse ();
        a0018 := a0016.leftjoin (a0013);
        a0018 := a0018.reverse ().mark (0@0).reverse ();
        a0019 := a0016.leftjoin (a0014);
        a0019 := a0019.reverse ().mark (0@0).reverse ();
        a0016 := unused;
        a0015 := unused;
        a0013 := unused;
        a0014 := unused;
        a0012 := unused;
        a0017 := unused;
        a0020 := unused;
        a0013 := [=](a0018, 2LL);
        a0018 := unused;
        a0012 := unused;
        a0012 := [not](a0013);
        a0014 := a0012.select (true).mark (0@0).reverse ();
        a0016 := a0014.leftjoin (a0019);
        a0016 := a0016.reverse ().mark (0@0).reverse ();
        a0014 := unused;
        a0012 := unused;
        a0019 := unused;
        a0013 := unused;
        a0015 := unused;
        a0017 := unused;
        a0012 := a0008.project (nil).cross (a0016.project (nil).reverse ());
        a0013 := a0012.mark (0@0).reverse ();
        a0014 := a0012.reverse ().mark (0@0).reverse ();
        a0015 := a0013.leftjoin (a0008);
        a0015 := a0015.reverse ().mark (0@0).reverse ();
        a0017 := a0013.leftjoin (a0010);
        a0017 := a0017.reverse ().mark (0@0).reverse ();
        a0018 := a0013.leftjoin (a0004);
        a0018 := a0018.reverse ().mark (0@0).reverse ();
        a0019 := a0014.leftjoin (a0016);
        a0019 := a0019.reverse ().mark (0@0).reverse ();
        a0012 := unused;
        a0013 := unused;
        a0014 := unused;
        a0012 := a0015.mark (1@0);
        a0013 := a0012;
        a0013 := a0013.CTrefine (a0015);
        a0013 := a0013.CTrefine (a0017);
        a0013 := a0013.mark (0@0).reverse ();
        a0014 := a0013.leftjoin (a0015);
        a0014 := a0014.reverse ().mark (0@0).reverse ();
        a0020 := a0013.leftjoin (a0017);
        a0020 := a0020.reverse ().mark (0@0).reverse ();
        a0021 := a0013.leftjoin (a0012);
        a0021 := a0021.reverse ().mark (0@0).reverse ();
        a0013 := unused;
        a0013 := loop_lifted_child_step_with_nsloc_test (a0021, a0020, a0014, ws, 2, "", "name");
        a0022 := a0013.fetch (1);
        a0023 := a0013.fetch (2).materialize (a0022);
        a0024 := a0013.fetch (0).materialize (a0013.fetch (1));
        a0013 := unused;
        a0014 := unused;
        a0020 := unused;
        a0021 := unused;
        a0013 := loop_lifted_child_step_with_kind_test (a0024, a0022, a0023, ws, 3, TEXT);
        a0014 := a0013.fetch (1);
        a0020 := a0013.fetch (2).materialize (a0014);
        a0021 := a0013.fetch (0).materialize (a0013.fetch (1));
        a0013 := unused;
        a0022 := unused;
        a0023 := unused;
        a0024 := unused;
        a0015 := unused;
        a0017 := unused;
        a0013 := a0012.leftjoin (a0021.reverse ());
        a0015 := a0013.mark (0@0).reverse ();
        a0017 := a0013.reverse ().mark (0@0).reverse ();
        a0013 := unused;
        a0013 := a0015.leftjoin (a0019);
        a0013 := a0013.reverse ().mark (0@0).reverse ();
        a0022 := a0015.leftjoin (a0018);
        a0022 := a0022.reverse ().mark (0@0).reverse ();
        a0023 := a0015.leftjoin (a0012);
        a0023 := a0023.reverse ().mark (0@0).reverse ();
        a0026 := a0017.leftjoin (a0020);
        a0026 := a0026.reverse ().mark (0@0).reverse ();
        a0027 := a0017.leftjoin (a0014);
        a0027 := a0027.reverse ().mark (0@0).reverse ();
        a0015 := unused;
        a0017 := unused;
        a0019 := unused;
        a0018 := unused;
        a0012 := unused;
        a0021 := unused;
        a0020 := unused;
        a0014 := unused;
        a0024 := unused;
        a0025 := unused;
        a0012 := a0023;
        a0012 := a0012.CTrefine (a0026);
        a0012 := a0012.CTrefine (a0027);
        a0012 := a0012.mark (0@0).reverse ();
        a0014 := a0012.leftjoin (a0026);
        a0014 := a0014.reverse ().mark (0@0).reverse ();
        a0015 := a0012.leftjoin (a0027);
        a0015 := a0015.reverse ().mark (0@0).reverse ();
        a0017 := a0012.leftjoin (a0013);
        a0017 := a0017.reverse ().mark (0@0).reverse ();
        a0018 := a0012.leftjoin (a0022);
        a0018 := a0018.reverse ().mark (0@0).reverse ();
        a0019 := a0012.leftjoin (a0023);
        a0019 := a0019.reverse ().mark (0@0).reverse ();
        a0012 := unused;
        a0026 := unused;
        a0027 := unused;
        a0013 := unused;
        a0022 := unused;
        a0023 := unused;
        a0012 := a0019.mark_grp (a0019.reverse ().kunique ().project (1@0));
        a0019 := unused;
        a0013 := a0017.reverse ().sort ().reverse ();
        a0013 := a0013.CTrefine (a0018);
        a0013 := a0013.CTrefine (a0012);
        a0013 := a0013.mark (0@0).reverse ();
        a0019 := a0013.leftjoin (a0014);
        a0019 := a0019.reverse ().mark (0@0).reverse ();
        a0020 := a0013.leftjoin (a0015);
        a0020 := a0020.reverse ().mark (0@0).reverse ();
        a0021 := a0013.leftjoin (a0017);
        a0021 := a0021.reverse ().mark (0@0).reverse ();
        a0013 := unused;
        a0014 := unused;
        a0015 := unused;
        a0017 := unused;
        a0018 := unused;
        a0012 := unused;
        a0022 := unused;
        a0023 := unused;
        a0013 := merge_adjacent_text_nodes (a0021, a0020, a0019, ws);
        ws := a0013.fetch (0@0);
        a0014 := a0013.fetch (1@0);
        a0015 := a0013.fetch (2@0);
        a0013 := unused;
        a0019 := unused;
        a0020 := unused;
        a0013 := a0016.project (add_qname ("", "", "a", ws));
        a0017 := a0016.reverse ().sort ().reverse ();
        a0017 := a0017.mark (0@0).reverse ();
        a0018 := a0017.leftjoin (a0016);
        a0018 := a0018.reverse ().mark (0@0).reverse ();
        a0019 := a0017.leftjoin (a0013);
        a0019 := a0019.reverse ().mark (0@0).reverse ();
        a0017 := unused;
        a0016 := unused;
        a0013 := unused;
        a0013 := elem_constr (a0018, a0019, a0021, a0014, a0015, new (void, oid).seqbase (0@0), new (void, oid).seqbase (0@0), ws);
        ws := a0013.fetch (0);
        a0016 := a0013.fetch (1);
        a0017 := a0013.fetch (2);
        a0013 := unused;
        a0019 := unused;
        a0021 := unused;
        a0012 := unused;
        a0014 := unused;
        a0015 := unused;
        a0012 := a0018.join (a0001.reverse ());
        a0013 := a0016.join (a0002.reverse ());
        a0014 := a0017.join (a0005.reverse ());
        a0015 := a0012.sintersect (a0013).sintersect (a0014);
        a0012 := a0018.kdiff (a0015).reverse ().mark (0@0).reverse ();
        a0013 := a0016.kdiff (a0015).reverse ().mark (0@0).reverse ();
        a0014 := a0017.kdiff (a0015).reverse ().mark (0@0).reverse ();
        a0015 := unused;
        a0015 := a0012.copy ().access (BAT_APPEND);
        a0015.append (a0001).access (BAT_READ);
        a0019 := a0014.copy ().access (BAT_APPEND);
        a0019.append (a0005).access (BAT_READ);
print("a0002");
print(a0002);
        a0020 := a0013.copy ().access (BAT_APPEND);
print("a0020");
print(a0020);
#print(a0020.info());
        a0020.append (a0002).access (BAT_READ);
print(a0020);
        a0012 := unused;
        a0013 := unused;
        a0014 := unused;
        a0006 := a0015;
        a0001 := a0015;
        a0002 := a0020;
        a0005 := a0019;
        a0009 := a0011;
        a0011 := a0015.count ();
    }
});
[ "a0002" ]
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 0@0,	  2@0	  ]
[ "a0020" ]
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
[ 0@0,	  3@0	  ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  3@0	  ]
[ 1@0,	  2@0	  ]
[ "a0002" ]
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  3@0	  ]
[ 1@0,	  2@0	  ]
[ "a0020" ]
#-----------------#
# h	t	  # name
# void	void	  # type
#-----------------#
#-----------------#
# h	t	  # name
# void	oid	  # type
#-----------------#
[ 0@0,	  3@0	  ]
[ 1@0,	  2@0	  ]
if (not(isnil(ws))) {
    ws_destroy (ws);
} else {
}
if (not(isnil(a0000))) {
    ERROR (a0000);
} else {
}
quit();

# 14:22:38 >  
# 14:22:38 >  Done.
# 14:22:38 >  

