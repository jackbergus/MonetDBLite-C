pf:add-doc("$TSTSRCDIR/compilation_error.SF-2860037.xml","eprints-export.xml")
<>
doc("eprints-export.xml")
<>

declare function processISBN($fields as element()*) as element()*
{
   let $isbn10 := $fields[@name eq "isbn"]/string()
   let $isbn13 := $fields[@name eq "isbn_13"]/string()
   let $i := if (empty($isbn13) or $isbn13="") then $isbn10 else $isbn13
   let $ii := if ($i = "not assigned") then () else $i
   return
      (<isbn>{$ii}</isbn>
      ,<isbn_10>{$isbn10}</isbn_10>
      ,<isbn_13>{$isbn13}</isbn_13>
      )
};

declare function processNames($en as xs:string, $fields as element()*) as element()*
{
   let $allnm := concat(concat("all",$en),"s")
   let $givennm := concat($en,"s_given")
   let $familynm := concat($en,"s_family")
   let $idnm := concat($en,"s_id")
   let $fullnm := concat($en,"s_fullname")
   let $allnames :=
      for $f in $fields
      let $given := $f/*:part[@name eq "given"]/string()
      let $family := $f/*:part[@name eq "family"]/string()
      return concat($given,$family)
   let $conv := 
      for $f in $fields
      let $given := $f/*:part[@name eq "given"]/string()
      let $family := $f/*:part[@name eq "family"]/string()
      let $id := $f/@id/string()
      return
         element {$en}{
            if (empty($given)) then ()
            else element {$givennm}{$given}
           ,if (empty($family)) then ()
            else element {$familynm}{$family}
           ,if (empty($id)) then ()
            else element {$idnm}{$id}
           ,if (empty($given) and empty($family)) then ()
            else element {$fullnm}{$given,$family}
           }
   return
      (element {$allnm} { string-join($allnames," and ") }
      ,$conv
      )
};

let $doc := doc("eprints-export.xml")
let $skip := ("creators","editors", "supervisors","assistant_supervisors","isbn","isbn_13")
let $result :=
   for $rec in $doc//*:record
   let $flds := $rec/*:field
   let $cr := processNames("creator",$flds[@name eq "creators"])
   let $ed := processNames("editor",$flds[@name eq "editors"])
   let $sup := processNames("supervisor",$flds[@name eq "supervisors"])
   let $asup := processNames("assistant_supervisor",$flds[@name eq "assistant_supervisors"])
   let $isbn :=             ($flds[@name eq "isbn" or @name eq "isbn_13"]) 
   let $ep :=
    <eprint>{
      $cr,$ed,$sup,$asup,$isbn,
      for $f in $flds
      let $fn := if ($f/@name) then exactly-one($f/@name/string()) else "unnamed-field"
      return
         if ($fn = $skip) then ()
         else if ($fn eq "date_effective")
         then let $value := exactly-one($f/string())
              return (<date_effective>{$value}</date_effective>
                     ,<year>{substring($value,1,4)}</year>
                     )
         else element {$fn} {string($f)}
   }</eprint>
  return
     $ep

return
   <repository>{ $result }</repository>

<>
pf:del-doc("eprints-export.xml")
