module("pathfinder");

delete_all_docs(false);
delete_all_docs(true);
commit();

module("unix");
var TSTSRCDIR := getenv("TSTSRCBASE") + "/tests/XMark/Tests";
shred_doc(TSTSRCDIR + "/" + "auctionG.xml", "auctionG.xml");
commit();

var a0045;
var a0044;
var a0043;
var a0042;
var a0041;
var a0040;
var a0039;
var a0038;
var a0037;
var a0036;
var a0035;
var a0034;
var a0033;
var a0032;
var a0031;
var a0030;
var a0029;
var a0028;
var a0027;
var a0026;
var a0025;
var a0024;
var a0023;
var a0022;
var a0021;
var a0020;
var a0019;
var a0018;
var a0017;
var a0016;
var a0015;
var a0014;
var a0013;
var a0012;
var a0011;
var a0010;
var a0009;
var a0008;
var a0007;
var a0006;
var a0005;
var a0004;
var a0003;
var a0002;
var a0001;
var a0000;
var unused;
var ws;
unused := nil;
ws := create_ws ();
a0000 := new (void, oid).seqbase (0@0);
a0000.insert (nil, 1@0);
a0000.access (BAT_READ);
a0001 := new (void, str).seqbase (0@0);
a0001.insert (nil, "auctionG.xml");
a0001.access (BAT_READ);
a0002 := a0000.project (1@0);
a0000 := unused;
a0000 := doc_tbl (ws, a0001);
ws := a0000.fetch (0);
a0003 := a0000.fetch (1);
a0004 := a0000.fetch (2);
a0001 := unused;
a0001 := a0003.project (1@0);
a0005 := a0004.reverse ().sort ().reverse ();
a0005 := a0005.CTrefine (a0003);
a0005 := a0005.CTrefine (a0002);
a0005 := a0005.mark (0@0).reverse ();
a0006 := a0005.leftjoin (a0002);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0007 := a0005.leftjoin (a0004);
a0007 := a0007.reverse ().mark (0@0).reverse ();
a0008 := a0005.leftjoin (a0003);
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0006, a0008, a0007, ws, 3, "", "site");
a0009 := a0005.fetch (0);
a0010 := a0005.fetch (1);
a0011 := a0005.fetch (2);
if (a0009.is_constant_bat ()) {
    a0009 := a0010.project (a0009.fetch (0));
} else {
}
if (a0011.is_constant_bat ()) {
    a0011 := a0010.project (a0011.fetch (0));
} else {
}
a0005 := unused;
a0006 := unused;
a0007 := unused;
a0008 := unused;
a0005 := a0009.reverse ().sort ().reverse ();
a0005 := a0005.CTrefine (a0011);
a0005 := a0005.CTrefine (a0010);
a0005 := a0005.mark (0@0).reverse ();
a0006 := a0005.leftjoin (a0009);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0007 := a0005.leftjoin (a0010);
a0007 := a0007.reverse ().mark (0@0).reverse ();
a0008 := a0005.leftjoin (a0011);
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0009, a0011, a0010, ws, 0, "", "people");
a0006 := a0005.fetch (0);
a0007 := a0005.fetch (1);
a0008 := a0005.fetch (2);
if (a0006.is_constant_bat ()) {
    a0006 := a0007.project (a0006.fetch (0));
} else {
}
if (a0008.is_constant_bat ()) {
    a0008 := a0007.project (a0008.fetch (0));
} else {
}
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0009, a0011, a0010, ws, 0, "", "person");
a0006 := a0005.fetch (0);
a0007 := a0005.fetch (1);
a0008 := a0005.fetch (2);
if (a0006.is_constant_bat ()) {
    a0006 := a0007.project (a0006.fetch (0));
} else {
}
if (a0008.is_constant_bat ()) {
    a0008 := a0007.project (a0008.fetch (0));
} else {
}
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0006 := a0009.mark (1@0);
a0007 := a0006.project (1@0);
a0008 := a0006.project (1@0);
a0012 := a0006.project (add_qname ("", "", "name", ws));
a0013 := a0006.CTgroup ();
a0013 := a0013.CTmap ();
a0013 := a0013.CTrefine (a0010);
a0013 := a0013.CTrefine (a0011);
a0013 := a0013.mark (0@0).reverse ();
a0014 := a0013.leftjoin (a0006);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0015 := a0013.leftjoin (a0010);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0016 := a0013.leftjoin (a0011);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0013 := loop_lifted_child_step_with_nsloc_test (a0014, a0016, a0015, ws, 0, "", "name");
a0017 := a0013.fetch (0);
a0018 := a0013.fetch (1);
a0019 := a0013.fetch (2);
if (a0017.is_constant_bat ()) {
    a0017 := a0018.project (a0017.fetch (0));
} else {
}
if (a0019.is_constant_bat ()) {
    a0019 := a0018.project (a0019.fetch (0));
} else {
}
a0013 := unused;
a0014 := unused;
a0015 := unused;
a0016 := unused;
a0013 := a0017.mark_grp (a0017.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := a0017.CTgroup ();
a0013 := a0013.CTmap ().CTderive (a0019);
a0013 := a0013.CTmap ().CTderive (a0018);
a0013 := a0013.CTextend ().mark (0@0).reverse ();
a0014 := a0013.leftjoin (a0017);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0015 := a0013.leftjoin (a0019);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0016 := a0013.leftjoin (a0018);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0017 := unused;
a0019 := unused;
a0018 := unused;
a0013 := a0014.mark_grp (a0014.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := loop_lifted_child_step_with_kind_test (a0014, a0016, a0015, ws, 0, TEXT);
a0017 := a0013.fetch (0);
a0018 := a0013.fetch (1);
a0019 := a0013.fetch (2);
if (a0017.is_constant_bat ()) {
    a0017 := a0018.project (a0017.fetch (0));
} else {
}
if (a0019.is_constant_bat ()) {
    a0019 := a0018.project (a0019.fetch (0));
} else {
}
a0013 := unused;
a0014 := unused;
a0015 := unused;
a0016 := unused;
a0013 := a0017.mark_grp (a0017.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := a0017.CTgroup ();
a0013 := a0013.CTmap ().CTderive (a0019);
a0013 := a0013.CTmap ().CTderive (a0018);
a0013 := a0013.CTextend ().mark (0@0).reverse ();
a0014 := a0013.leftjoin (a0017);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0015 := a0013.leftjoin (a0019);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0016 := a0013.leftjoin (a0018);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0017 := unused;
a0019 := unused;
a0018 := unused;
a0013 := a0014.mark_grp (a0014.reverse ().kunique ().project (1@0));
a0017 := a0014.mark (1@0);
a0013 := unused;
a0013 := a0017.project (1@0);
a0018 := mposjoin (mposjoin (a0016, a0015, ws.fetch (PRE_PROP)), mposjoin (a0016, a0015, ws.fetch (PRE_FRAG)), ws.fetch (PROP_TEXT));
a0015 := unused;
a0016 := unused;
a0015 := a0017.leftjoin (a0017.reverse ());
a0016 := a0015.mark (0@0).reverse ();
a0019 := a0015.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0015 := a0016.leftjoin (a0014);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0020 := a0016.leftjoin (a0017);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0021 := a0019.leftjoin (a0017);
a0021 := a0021.reverse ().mark (0@0).reverse ();
a0022 := a0019.leftjoin (a0013);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0023 := a0019.leftjoin (a0018);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0016 := unused;
a0014 := unused;
a0017 := unused;
a0013 := unused;
a0018 := unused;
a0013 := a0015.CTgroup ();
a0013 := a0013.CTmap ();
a0013 := a0013.CTrefine (a0021);
a0013 := a0013.CTrefine (a0022);
a0013 := a0013.mark (0@0).reverse ();
a0014 := a0013.leftjoin (a0015);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0016 := a0013.leftjoin (a0020);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0017 := a0013.leftjoin (a0021);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0018 := a0013.leftjoin (a0022);
a0018 := a0018.reverse ().mark (0@0).reverse ();
a0024 := a0013.leftjoin (a0023);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0015 := unused;
a0020 := unused;
a0021 := unused;
a0022 := unused;
a0023 := unused;
a0013 := a0014.mark_grp (a0014.reverse ().kunique ().project (1@0));
a0016 := unused;
a0017 := unused;
a0018 := unused;
a0015 := a0006.project (1@0);
a0016 := a0006.project (" ");
a0015 := unused;
a0015 := string_join(a0014.reverse ().leftjoin (a0024), a0006.reverse ().leftjoin (a0016));
a0017 := a0015.mark (0@0).reverse ();
a0018 := a0015.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0014 := unused;
a0013 := unused;
a0024 := unused;
a0016 := unused;
a0013 := a0017.project (1@0);
a0014 := attr_constr (a0012, a0018, ws);
ws := a0014.fetch (0);
a0015 := a0014.fetch (1);
a0016 := a0014.fetch (2);
a0008 := unused;
a0012 := unused;
a0017 := unused;
a0018 := unused;
a0013 := unused;
a0008 := new (void, oid).seqbase (0@0);
a0008.insert (nil, 1@0);
a0008.access (BAT_READ);
a0005 := unused;
a0005 := a0009.leftjoin (a0002.reverse ());
a0012 := a0005.mark (0@0).reverse ();
a0013 := a0005.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0005 := a0012.leftjoin (a0009);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0017 := a0012.leftjoin (a0006);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0018 := a0013.leftjoin (a0003);
a0018 := a0018.reverse ().mark (0@0).reverse ();
a0020 := a0013.leftjoin (a0004);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0021 := a0013.leftjoin (a0002);
a0021 := a0021.reverse ().mark (0@0).reverse ();
a0022 := a0013.leftjoin (a0001);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0012 := unused;
a0003 := unused;
a0004 := unused;
a0002 := unused;
a0001 := unused;
a0005 := unused;
a0021 := unused;
a0022 := unused;
a0001 := a0017.CTgroup ();
a0001 := a0001.CTmap ();
a0001 := a0001.CTrefine (a0020);
a0001 := a0001.CTrefine (a0018);
a0001 := a0001.mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0017);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0020);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0018);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0017 := unused;
a0020 := unused;
a0018 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "site");
a0005 := a0001.fetch (0);
a0012 := a0001.fetch (1);
a0017 := a0001.fetch (2);
if (a0005.is_constant_bat ()) {
    a0005 := a0012.project (a0005.fetch (0));
} else {
}
if (a0017.is_constant_bat ()) {
    a0017 := a0012.project (a0017.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0017);
a0001 := a0001.CTmap ().CTderive (a0012);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0017);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0012);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0017 := unused;
a0012 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "open_auctions");
a0005 := a0001.fetch (0);
a0012 := a0001.fetch (1);
a0017 := a0001.fetch (2);
if (a0005.is_constant_bat ()) {
    a0005 := a0012.project (a0005.fetch (0));
} else {
}
if (a0017.is_constant_bat ()) {
    a0017 := a0012.project (a0017.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0017);
a0001 := a0001.CTmap ().CTderive (a0012);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0017);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0012);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0017 := unused;
a0012 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "open_auction");
a0005 := a0001.fetch (0);
a0012 := a0001.fetch (1);
a0017 := a0001.fetch (2);
if (a0005.is_constant_bat ()) {
    a0005 := a0012.project (a0005.fetch (0));
} else {
}
if (a0017.is_constant_bat ()) {
    a0017 := a0012.project (a0017.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0017);
a0001 := a0001.CTmap ().CTderive (a0012);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0017);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0012);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0017 := unused;
a0012 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "initial");
a0005 := a0001.fetch (0);
a0012 := a0001.fetch (1);
a0017 := a0001.fetch (2);
if (a0005.is_constant_bat ()) {
    a0005 := a0012.project (a0005.fetch (0));
} else {
}
if (a0017.is_constant_bat ()) {
    a0017 := a0012.project (a0017.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0017);
a0001 := a0001.CTmap ().CTderive (a0012);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0017);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0012);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0017 := unused;
a0012 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0005 := a0002.mark (1@0);
a0001 := unused;
a0001 := a0005.project (1@0);
a0012 := a0002.leftjoin (a0006.reverse ());
a0017 := a0012.mark (0@0).reverse ();
a0018 := a0012.reverse ().mark (0@0).reverse ();
a0012 := unused;
a0012 := a0017.leftjoin (a0002);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0020 := a0017.leftjoin (a0005);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0021 := a0018.leftjoin (a0006);
a0021 := a0021.reverse ().mark (0@0).reverse ();
a0022 := a0018.leftjoin (a0010);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0023 := a0018.leftjoin (a0011);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0024 := a0018.leftjoin (a0007);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0017 := unused;
a0010 := unused;
a0011 := unused;
a0007 := unused;
a0012 := unused;
a0021 := unused;
a0024 := unused;
a0007 := a0020.CTgroup ();
a0007 := a0007.CTmap ();
a0007 := a0007.CTrefine (a0022);
a0007 := a0007.CTrefine (a0023);
a0007 := a0007.mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0020);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0022);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0012 := a0007.leftjoin (a0023);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0020 := unused;
a0022 := unused;
a0023 := unused;
a0007 := loop_lifted_child_step_with_nsloc_test (a0010, a0012, a0011, ws, 0, "", "profile");
a0017 := a0007.fetch (0);
a0020 := a0007.fetch (1);
a0021 := a0007.fetch (2);
if (a0017.is_constant_bat ()) {
    a0017 := a0020.project (a0017.fetch (0));
} else {
}
if (a0021.is_constant_bat ()) {
    a0021 := a0020.project (a0021.fetch (0));
} else {
}
a0007 := unused;
a0010 := unused;
a0011 := unused;
a0012 := unused;
a0007 := a0017.mark_grp (a0017.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := a0017.CTgroup ();
a0007 := a0007.CTmap ().CTderive (a0021);
a0007 := a0007.CTmap ().CTderive (a0020);
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0017);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0021);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0012 := a0007.leftjoin (a0020);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0017 := unused;
a0021 := unused;
a0020 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := mvaljoin (a0012, a0011, ws.fetch (ATTR_OWN));
a0020 := a0007.reverse ().mark (0@0).reverse ();
a0021 := a0007.mark (0@0).reverse ().leftjoin (a0011);
a0017 := a0007.mark (0@0).reverse ().leftjoin (a0010);
a0007 := mposjoin (mposjoin (a0020, a0021, ws.fetch (ATTR_QN)), mposjoin (a0020, a0021, ws.fetch (ATTR_FRAG)), ws.fetch (QN_LOC));
a0007 := a0007.ord_uselect ("income");
a0007 := a0007.mark (0@0).reverse ();
a0020 := a0007.leftjoin (a0020);
a0021 := a0007.leftjoin (a0021);
a0017 := a0007.leftjoin (a0017);
a0007 := mposjoin (mposjoin (a0020, a0021, ws.fetch (ATTR_QN)), mposjoin (a0020, a0021, ws.fetch (ATTR_FRAG)), ws.fetch (QN_URI));
a0007 := a0007.ord_uselect ("");
a0007 := a0007.mark (0@0).reverse ();
a0020 := a0007.leftjoin (a0020);
a0021 := a0007.leftjoin (a0021);
a0017 := a0007.leftjoin (a0017);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0021 := a0021.reverse ().mark (0@0).reverse ();
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0010 := unused;
a0011 := unused;
a0012 := unused;
a0007 := a0017.mark_grp (a0017.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := a0017.CTgroup ();
a0007 := a0007.CTmap ().CTderive (a0021);
a0007 := a0007.CTmap ().CTderive (a0020);
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0017);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0021);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0012 := a0007.leftjoin (a0020);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0017 := unused;
a0021 := unused;
a0020 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0017 := a0010.mark (1@0);
a0007 := unused;
a0007 := a0017.project (1@0);
a0020 := mposjoin (mposjoin (a0012, a0011, ws.fetch (ATTR_PROP)), mposjoin (a0012, a0011, ws.fetch (ATTR_FRAG)), ws.fetch (PROP_VAL));
a0011 := unused;
a0012 := unused;
a0011 := a0017.leftjoin (a0017.reverse ());
a0012 := a0011.mark (0@0).reverse ();
a0021 := a0011.reverse ().mark (0@0).reverse ();
a0011 := unused;
a0011 := a0012.leftjoin (a0010);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0022 := a0012.leftjoin (a0017);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0023 := a0021.leftjoin (a0017);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0024 := a0021.leftjoin (a0007);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0025 := a0021.leftjoin (a0020);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0012 := unused;
a0010 := unused;
a0017 := unused;
a0007 := unused;
a0020 := unused;
a0007 := a0011.CTgroup ();
a0007 := a0007.CTmap ();
a0007 := a0007.CTrefine (a0023);
a0007 := a0007.CTrefine (a0024);
a0007 := a0007.mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0011);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0012 := a0007.leftjoin (a0022);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0017 := a0007.leftjoin (a0023);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0020 := a0007.leftjoin (a0024);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0026 := a0007.leftjoin (a0025);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0011 := unused;
a0022 := unused;
a0023 := unused;
a0024 := unused;
a0025 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0012 := unused;
a0017 := unused;
a0020 := unused;
a0011 := a0010.mark (1@0);
a0012 := new (void, oid).seqbase (0@0);
a0012.insert (nil, 1@0);
a0012.access (BAT_READ);
a0017 := new (void, lng).seqbase (0@0);
a0017.insert (nil, 1LL);
a0017.access (BAT_READ);
a0007 := unused;
a0007 := a0011.project (1@0);
a0022 := [dbl](a0026);
a0024 := a0010.leftjoin (a0005.reverse ());
a0025 := a0024.mark (0@0).reverse ();
a0027 := a0024.reverse ().mark (0@0).reverse ();
a0024 := unused;
a0024 := a0025.leftjoin (a0010);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0028 := a0025.leftjoin (a0011);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0029 := a0027.leftjoin (a0005);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0030 := a0027.leftjoin (a0003);
a0030 := a0030.reverse ().mark (0@0).reverse ();
a0031 := a0027.leftjoin (a0004);
a0031 := a0031.reverse ().mark (0@0).reverse ();
a0032 := a0027.leftjoin (a0001);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0024 := unused;
a0029 := unused;
a0032 := unused;
a0024 := a0030.reverse ().sort ().reverse ();
a0024 := a0024.CTrefine (a0031);
a0024 := a0024.CTrefine (a0028);
a0024 := a0024.mark (0@0).reverse ();
a0025 := a0024.leftjoin (a0028);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0029 := a0024.leftjoin (a0030);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0032 := a0024.leftjoin (a0031);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0024 := unused;
a0028 := unused;
a0030 := unused;
a0031 := unused;
a0024 := loop_lifted_child_step_with_kind_test (a0025, a0032, a0029, ws, 1, TEXT);
a0028 := a0024.fetch (0);
a0030 := a0024.fetch (1);
a0031 := a0024.fetch (2);
if (a0028.is_constant_bat ()) {
    a0028 := a0030.project (a0028.fetch (0));
} else {
}
if (a0031.is_constant_bat ()) {
    a0031 := a0030.project (a0031.fetch (0));
} else {
}
a0024 := unused;
a0025 := unused;
a0029 := unused;
a0032 := unused;
a0024 := a0028.mark_grp (a0028.reverse ().kunique ().project (1@0));
a0024 := unused;
a0024 := a0028.CTgroup ();
a0024 := a0024.CTmap ().CTderive (a0031);
a0024 := a0024.CTmap ().CTderive (a0030);
a0024 := a0024.CTextend ().mark (0@0).reverse ();
a0025 := a0024.leftjoin (a0028);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0029 := a0024.leftjoin (a0031);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0032 := a0024.leftjoin (a0030);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0024 := unused;
a0028 := unused;
a0031 := unused;
a0030 := unused;
a0024 := a0025.mark_grp (a0025.reverse ().kunique ().project (1@0));
a0028 := {count}(a0025.reverse ());
a0028 := [lng](a0028);
a0030 := a0028.reverse ().mark (0@0).reverse ();
a0031 := a0028.mark (0@0).reverse ();
a0028 := unused;
a0026 := unused;
a0026 := a0011.reverse ().kdiff (a0025.reverse ()).mark (0@0).reverse ();
a0028 := a0026.project (0LL);
a0033 := a0031.copy ().access (BAT_APPEND);
a0033.append (a0026).access (BAT_READ);
a0034 := a0030.copy ().access (BAT_APPEND);
a0034.append (a0028).access (BAT_READ);
a0030 := unused;
a0031 := unused;
a0026 := unused;
a0028 := unused;
a0026 := a0033.project (1LL);
a0028 := [=](a0034, 1LL);
if (a0028.reverse ().exist (false)) {
    ERROR ("err:FORG0005, fn:exactly-one called with a sequence containing zero or more than one item.");
} else {
}
a0028 := unused;
a0033 := unused;
a0034 := unused;
a0026 := unused;
a0026 := mposjoin (mposjoin (a0032, a0029, ws.fetch (PRE_PROP)), mposjoin (a0032, a0029, ws.fetch (PRE_FRAG)), ws.fetch (PROP_TEXT));
a0029 := unused;
a0032 := unused;
a0030 := [dbl](a0026);
a0024 := unused;
a0026 := unused;
a0024 := a0011.project (1@0);
a0026 := a0011.project (5000LL);
a0033 := [dbl](a0026);
a0026 := unused;
a0026 := a0025.leftjoin (a0011.reverse ());
a0034 := a0026.mark (0@0).reverse ();
a0035 := a0026.reverse ().mark (0@0).reverse ();
a0026 := unused;
a0026 := a0034.leftjoin (a0025);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0036 := a0034.leftjoin (a0030);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0037 := a0035.leftjoin (a0011);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0035.leftjoin (a0024);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0039 := a0035.leftjoin (a0033);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0034 := unused;
a0025 := unused;
a0030 := unused;
a0024 := unused;
a0033 := unused;
a0024 := [*](a0039, a0036);
a0026 := unused;
a0036 := unused;
a0038 := unused;
a0039 := unused;
a0025 := a0011.leftjoin (a0037.reverse ());
a0026 := a0025.mark (0@0).reverse ();
a0030 := a0025.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0025 := a0026.leftjoin (a0011);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0033 := a0026.leftjoin (a0007);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0026.leftjoin (a0022);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0036 := a0030.leftjoin (a0037);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0038 := a0030.leftjoin (a0024);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0026 := unused;
a0007 := unused;
a0022 := unused;
a0037 := unused;
a0024 := unused;
a0007 := [>](a0034, a0038);
a0034 := unused;
a0036 := unused;
a0038 := unused;
a0022 := a0007.select (true).mark (0@0).reverse ();
a0024 := a0022.leftjoin (a0025);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0026 := a0022.leftjoin (a0033);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0034 := a0022.leftjoin (a0007);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0022 := unused;
a0025 := unused;
a0033 := unused;
a0007 := unused;
a0026 := unused;
a0034 := unused;
a0007 := a0012.mark (nil).cross (a0024.mark (nil).reverse ());
a0022 := a0007.mark (0@0).reverse ();
a0025 := a0007.reverse ().mark (0@0).reverse ();
a0026 := a0022.leftjoin (a0012);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0033 := a0022.leftjoin (a0017);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0025.leftjoin (a0024);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0022 := unused;
a0025 := unused;
a0012 := unused;
a0017 := unused;
a0024 := unused;
a0026 := unused;
a0033 := unused;
a0007 := a0034.reverse ().sort ().reverse ();
a0007 := a0007.mark (0@0).reverse ();
a0012 := a0007.leftjoin (a0034);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0007 := a0012.CTgroup ();
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0017 := a0007.leftjoin (a0012);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0012 := unused;
a0007 := a0017.project (false);
a0012 := new (void, bit).seqbase (0@0);
a0012.insert (nil, true);
a0012.access (BAT_READ);
a0022 := a0011.reverse ().kdiff (a0034.reverse ()).mark (0@0).reverse ();
a0034 := unused;
a0024 := a0012.mark (nil).cross (a0022.mark (nil).reverse ());
a0025 := a0024.mark (0@0).reverse ();
a0026 := a0024.reverse ().mark (0@0).reverse ();
a0033 := a0025.leftjoin (a0012);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0026.leftjoin (a0022);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0024 := unused;
a0025 := unused;
a0026 := unused;
a0022 := unused;
a0022 := a0017.copy ().access (BAT_APPEND);
a0022.append (a0034).access (BAT_READ);
a0024 := a0007.copy ().access (BAT_APPEND);
a0024.append (a0033).access (BAT_READ);
a0017 := unused;
a0007 := unused;
a0033 := unused;
a0034 := unused;
a0007 := a0022.project (1@0);
a0017 := [not](a0024);
a0025 := a0017.select (true).mark (0@0).reverse ();
a0026 := a0025.leftjoin (a0022);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0033 := a0025.leftjoin (a0007);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0025.leftjoin (a0017);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0017 := unused;
a0033 := unused;
a0034 := unused;
a0017 := a0026.project (1@0);
a0025 := a0026.project (1LL);
a0033 := a0011.leftjoin (a0026.reverse ());
a0034 := a0033.mark (0@0).reverse ();
a0036 := a0033.reverse ().mark (0@0).reverse ();
a0033 := unused;
a0033 := a0034.leftjoin (a0010);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0037 := a0034.leftjoin (a0011);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0036.leftjoin (a0026);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0039 := a0036.leftjoin (a0017);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0040 := a0036.leftjoin (a0025);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0034 := unused;
a0010 := unused;
a0011 := unused;
a0026 := unused;
a0017 := unused;
a0025 := unused;
a0010 := a0033.reverse ().sort ().reverse ();
a0010 := a0010.CTrefine (a0038);
a0010 := a0010.CTrefine (a0039);
a0010 := a0010.mark (0@0).reverse ();
a0011 := a0010.leftjoin (a0033);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0017 := a0010.leftjoin (a0037);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0025 := a0010.leftjoin (a0038);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0026 := a0010.leftjoin (a0039);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0034 := a0010.leftjoin (a0040);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0033 := unused;
a0037 := unused;
a0038 := unused;
a0039 := unused;
a0040 := unused;
a0010 := a0011.mark_grp (a0011.reverse ().kunique ().project (1@0));
a0017 := unused;
a0025 := unused;
a0026 := unused;
a0034 := unused;
a0010 := unused;
a0010 := a0011.CTgroup ();
a0010 := a0010.CTmap ();
a0010 := a0010.mark (0@0).reverse ();
a0017 := a0010.leftjoin (a0011);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0010 := a0017.CTgroup ();
a0010 := a0010.CTextend ().mark (0@0).reverse ();
a0025 := a0010.leftjoin (a0017);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0017 := unused;
a0010 := a0025.project (false);
a0017 := a0005.reverse ().kdiff (a0011.reverse ()).mark (0@0).reverse ();
a0011 := unused;
a0011 := a0012.mark (nil).cross (a0017.mark (nil).reverse ());
a0026 := a0011.mark (0@0).reverse ();
a0033 := a0011.reverse ().mark (0@0).reverse ();
a0034 := a0026.leftjoin (a0012);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0037 := a0033.leftjoin (a0017);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0011 := unused;
a0026 := unused;
a0033 := unused;
a0012 := unused;
a0017 := unused;
a0011 := a0025.copy ().access (BAT_APPEND);
a0011.append (a0037).access (BAT_READ);
a0012 := a0010.copy ().access (BAT_APPEND);
a0012.append (a0034).access (BAT_READ);
a0025 := unused;
a0010 := unused;
a0034 := unused;
a0037 := unused;
a0010 := a0011.project (1@0);
a0017 := [not](a0012);
a0025 := a0017.select (true).mark (0@0).reverse ();
a0026 := a0025.leftjoin (a0011);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0033 := a0025.leftjoin (a0010);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0025.leftjoin (a0017);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0017 := unused;
a0033 := unused;
a0034 := unused;
a0017 := a0005.leftjoin (a0026.reverse ());
a0025 := a0017.mark (0@0).reverse ();
a0033 := a0017.reverse ().mark (0@0).reverse ();
a0017 := unused;
a0017 := a0025.leftjoin (a0005);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0034 := a0025.leftjoin (a0003);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0037 := a0025.leftjoin (a0004);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0025.leftjoin (a0001);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0039 := a0033.leftjoin (a0026);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0003 := unused;
a0004 := unused;
a0001 := unused;
a0026 := unused;
a0039 := unused;
a0001 := a0005.leftjoin (a0017.reverse ());
a0003 := a0001.mark (0@0).reverse ();
a0004 := a0001.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0001 := a0003.leftjoin (a0002);
a0001 := a0001.reverse ().mark (0@0).reverse ();
a0025 := a0003.leftjoin (a0005);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0026 := a0004.leftjoin (a0017);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0039 := a0004.leftjoin (a0038);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0040 := a0004.leftjoin (a0034);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0041 := a0004.leftjoin (a0037);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0003 := unused;
a0002 := unused;
a0005 := unused;
a0017 := unused;
a0038 := unused;
a0034 := unused;
a0037 := unused;
a0002 := a0001.CTgroup ();
a0002 := a0002.CTmap ();
a0002 := a0002.CTrefine (a0026);
a0002 := a0002.CTrefine (a0039);
a0002 := a0002.mark (0@0).reverse ();
a0003 := a0002.leftjoin (a0001);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0005 := a0002.leftjoin (a0025);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0017 := a0002.leftjoin (a0026);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0034 := a0002.leftjoin (a0039);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0037 := a0002.leftjoin (a0040);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0002.leftjoin (a0041);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0002 := unused;
a0001 := unused;
a0025 := unused;
a0026 := unused;
a0039 := unused;
a0040 := unused;
a0041 := unused;
a0001 := a0003.mark_grp (a0003.reverse ().kunique ().project (1@0));
a0005 := unused;
a0017 := unused;
a0034 := unused;
a0037 := unused;
a0038 := unused;
a0001 := unused;
a0001 := {count}(a0003.reverse ());
a0001 := [lng](a0001);
a0002 := a0001.reverse ().mark (0@0).reverse ();
a0005 := a0001.mark (0@0).reverse ();
a0001 := unused;
a0001 := a0006.reverse ().kdiff (a0003.reverse ()).mark (0@0).reverse ();
a0003 := unused;
a0003 := a0001.project (0LL);
a0017 := a0005.copy ().access (BAT_APPEND);
a0017.append (a0001).access (BAT_READ);
a0025 := a0002.copy ().access (BAT_APPEND);
a0025.append (a0003).access (BAT_READ);
a0002 := unused;
a0005 := unused;
a0001 := unused;
a0003 := unused;
a0001 := a0008.mark (nil).cross (a0017.mark (nil).reverse ());
a0002 := a0001.mark (0@0).reverse ();
a0003 := a0001.reverse ().mark (0@0).reverse ();
a0005 := a0002.leftjoin (a0008);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0026 := a0003.leftjoin (a0017);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0034 := a0003.leftjoin (a0025);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0008 := unused;
a0017 := unused;
a0025 := unused;
a0003 := [str](a0034);
a0008 := text_constr (a0003, ws);
ws := a0008.fetch (0);
a0017 := a0008.fetch (1);
a0025 := a0008.fetch (2);
a0008 := unused;
a0008 := a0006.project (1@0);
a0037 := a0006.project (add_qname ("", "", "items", ws));
a0038 := a0015.project (1@0);
a0039 := a0015.project (1@0);
a0005 := unused;
a0003 := unused;
a0034 := unused;
a0003 := a0026.project (1@0);
a0005 := a0026.project (2@0);
a0034 := a0006.copy ().access (BAT_APPEND);
a0034.append (a0026).access (BAT_READ);
print(a0015);
a0040 := a0015.project (oid(nil));
print(a0040);
print("does not work");
a0040.access (BAT_APPEND);
print("in between");
a0040.append (a0025).access (BAT_READ);
a0041 := a0015.project (oid(nil)).access (BAT_APPEND);
a0041.append (a0017).access (BAT_READ);
a0042 := a0016.copy ().access (BAT_APPEND);
a0042.append (a0026.project (oid(nil))).access (BAT_APPEND);
a0043 := a0015.copy ().access (BAT_APPEND);
a0043.append (a0026.project (oid(nil))).access (BAT_APPEND);
a0044 := a0038.copy ().access (BAT_APPEND);
a0044.append (a0003).access (BAT_READ);
a0045 := a0039.copy ().access (BAT_APPEND);
a0045.append (a0005).access (BAT_READ);
a0015 := unused;
a0016 := unused;
a0038 := unused;
a0039 := unused;
a0026 := unused;
a0025 := unused;
a0017 := unused;
a0003 := unused;
a0005 := unused;
a0003 := a0034.reverse ().sort ().reverse ();
a0003 := a0003.CTrefine (a0045);
a0003 := a0003.CTrefine (a0044);
a0003 := a0003.mark (0@0).reverse ();
a0005 := a0003.leftjoin (a0034);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0015 := a0003.leftjoin (a0040);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0016 := a0003.leftjoin (a0041);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0017 := a0003.leftjoin (a0042);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0025 := a0003.leftjoin (a0043);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0026 := a0003.leftjoin (a0044);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0038 := a0003.leftjoin (a0045);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0003 := unused;
a0034 := unused;
a0040 := unused;
a0041 := unused;
a0042 := unused;
a0043 := unused;
a0044 := unused;
a0045 := unused;
a0003 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0026 := unused;
a0038 := unused;
a0026 := elem_constr (a0006, a0037, a0005, a0016, a0015, a0025, a0017, ws);
ws := a0026.fetch (0);
a0034 := a0026.fetch (1);
a0038 := a0026.fetch (2);
a0008 := unused;
a0037 := unused;
a0005 := unused;
a0003 := unused;
a0015 := unused;
a0016 := unused;
a0017 := unused;
a0025 := unused;
a0003 := a0034.project (1@0);
a0005 := a0006.leftjoin (a0006.reverse ());
a0008 := a0005.mark (0@0).reverse ();
a0015 := a0005.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0005 := a0008.leftjoin (a0009);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0016 := a0008.leftjoin (a0006);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0017 := a0015.leftjoin (a0034);
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0025 := a0015.leftjoin (a0038);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0037 := a0015.leftjoin (a0006);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0039 := a0015.leftjoin (a0003);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0009 := unused;
a0034 := unused;
a0038 := unused;
a0006 := unused;
a0003 := unused;
a0003 := a0005.CTgroup ();
a0003 := a0003.CTmap ();
a0003 := a0003.CTrefine (a0037);
a0003 := a0003.CTrefine (a0039);
a0003 := a0003.mark (0@0).reverse ();
a0006 := a0003.leftjoin (a0005);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0008 := a0003.leftjoin (a0016);
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0009 := a0003.leftjoin (a0017);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0034 := a0003.leftjoin (a0025);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0038 := a0003.leftjoin (a0037);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0040 := a0003.leftjoin (a0039);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0003 := unused;
a0005 := unused;
a0016 := unused;
a0017 := unused;
a0025 := unused;
a0037 := unused;
a0039 := unused;
a0003 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0008 := unused;
a0038 := unused;
a0040 := unused;
a0005 := new (lng, void).key (true).reverse ().seqbase (0@0);
a0008 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0016 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0017 := new (str, void).key (true).reverse ().seqbase (0@0);
a0025 := new (void, oid).seqbase (0@0);
a0037 := new (void, int).seqbase (0@0);
a0025 := a0009;
a0037 := a0034.set_kind (ELEM);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0037 := a0037.reverse ().mark (0@0).reverse ();
print_result ("xml", ws, a0025, a0037, a0005, a0008, a0016, a0017);
a0006 := unused;
a0003 := unused;
a0034 := unused;
a0009 := unused;
quit();
