module("pathfinder");

## shredding document "auctionG.xml" is now done the first test
## ("auctionG_xml") in this directory

#delete_all_docs(false);
#delete_all_docs(true);
#commit();

#module("unix");
#var TSTSRCDIR := getenv("TSTSRCBASE") + "/tests/XMark/Tests";
#shred_doc(TSTSRCDIR + "/" + "auctionG.xml", "auctionG.xml");
#commit();

var a0061;
var a0060;
var a0059;
var a0058;
var a0057;
var a0056;
var a0055;
var a0054;
var a0053;
var a0052;
var a0051;
var a0050;
var a0049;
var a0048;
var a0047;
var a0046;
var a0045;
var a0044;
var a0043;
var a0042;
var a0041;
var a0040;
var a0039;
var a0038;
var a0037;
var a0036;
var a0035;
var a0034;
var a0033;
var a0032;
var a0031;
var a0030;
var a0029;
var a0028;
var a0027;
var a0026;
var a0025;
var a0024;
var a0023;
var a0022;
var a0021;
var a0020;
var a0019;
var a0018;
var a0017;
var a0016;
var a0015;
var a0014;
var a0013;
var a0012;
var a0011;
var a0010;
var a0009;
var a0008;
var a0007;
var a0006;
var a0005;
var a0004;
var a0003;
var a0002;
var a0001;
var a0000;
var unused;
var ws;
unused := nil;
ws := ws_create ();
a0000 := new (void, oid).seqbase (0@0);
a0000.append (1@0);
a0000.access (BAT_READ);
a0001 := new (void, str).seqbase (0@0);
a0001.append ("auctionG.xml");
a0001.access (BAT_READ);
a0002 := a0000.project (1@0);
a0000 := unused;
a0000 := doc_tbl (ws, a0001);
ws := a0000.fetch (0);
a0003 := a0000.fetch (1);
a0004 := a0000.fetch (2);
a0001 := unused;
a0001 := a0003.project (1@0);
a0005 := a0004.reverse ().sort ().reverse ();
a0005 := a0005.CTrefine (a0003);
a0005 := a0005.CTrefine (a0002);
a0005 := a0005.mark (0@0).reverse ();
a0006 := a0005.leftjoin (a0002);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0007 := a0005.leftjoin (a0004);
a0007 := a0007.reverse ().mark (0@0).reverse ();
a0008 := a0005.leftjoin (a0003);
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0006, a0008, a0007, ws, 3, "", "site");
a0009 := a0005.fetch (0);
a0010 := a0005.fetch (1);
a0011 := a0005.fetch (2);
if (a0009.is_constant ()) {
    a0009 := a0010.project (a0009.fetch (0));
} else {
}
if (a0011.is_constant ()) {
    a0011 := a0010.project (a0011.fetch (0));
} else {
}
a0005 := unused;
a0006 := unused;
a0007 := unused;
a0008 := unused;
a0005 := a0009.reverse ().sort ().reverse ();
a0005 := a0005.CTrefine (a0011);
a0005 := a0005.CTrefine (a0010);
a0005 := a0005.mark (0@0).reverse ();
a0006 := a0005.leftjoin (a0009);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0007 := a0005.leftjoin (a0010);
a0007 := a0007.reverse ().mark (0@0).reverse ();
a0008 := a0005.leftjoin (a0011);
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0009, a0011, a0010, ws, 0, "", "people");
a0006 := a0005.fetch (0);
a0007 := a0005.fetch (1);
a0008 := a0005.fetch (2);
if (a0006.is_constant ()) {
    a0006 := a0007.project (a0006.fetch (0));
} else {
}
if (a0008.is_constant ()) {
    a0008 := a0007.project (a0008.fetch (0));
} else {
}
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := loop_lifted_child_step_with_nsloc_test (a0009, a0011, a0010, ws, 0, "", "person");
a0006 := a0005.fetch (0);
a0007 := a0005.fetch (1);
a0008 := a0005.fetch (2);
if (a0006.is_constant ()) {
    a0006 := a0007.project (a0006.fetch (0));
} else {
}
if (a0008.is_constant ()) {
    a0008 := a0007.project (a0008.fetch (0));
} else {
}
a0005 := unused;
a0009 := unused;
a0010 := unused;
a0011 := unused;
a0005 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0005 := unused;
a0005 := a0006.CTgroup ();
a0005 := a0005.CTmap ().CTderive (a0008);
a0005 := a0005.CTmap ().CTderive (a0007);
a0005 := a0005.CTextend ().mark (0@0).reverse ();
a0009 := a0005.leftjoin (a0006);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0010 := a0005.leftjoin (a0008);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0005.leftjoin (a0007);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0006 := unused;
a0008 := unused;
a0007 := unused;
a0005 := a0009.mark_grp (a0009.reverse ().kunique ().project (1@0));
a0006 := a0009.mark (1@0);
a0007 := a0006.project (1@0);
a0008 := a0006.CTgroup ();
a0008 := a0008.CTmap ();
a0008 := a0008.CTrefine (a0010);
a0008 := a0008.CTrefine (a0011);
a0008 := a0008.mark (0@0).reverse ();
a0012 := a0008.leftjoin (a0006);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0013 := a0008.leftjoin (a0010);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0014 := a0008.leftjoin (a0011);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0008 := loop_lifted_child_step_with_nsloc_test (a0012, a0014, a0013, ws, 0, "", "profile");
a0015 := a0008.fetch (0);
a0016 := a0008.fetch (1);
a0017 := a0008.fetch (2);
if (a0015.is_constant ()) {
    a0015 := a0016.project (a0015.fetch (0));
} else {
}
if (a0017.is_constant ()) {
    a0017 := a0016.project (a0017.fetch (0));
} else {
}
a0008 := unused;
a0012 := unused;
a0013 := unused;
a0014 := unused;
a0008 := a0015.mark_grp (a0015.reverse ().kunique ().project (1@0));
a0008 := unused;
a0008 := a0015.CTgroup ();
a0008 := a0008.CTmap ().CTderive (a0017);
a0008 := a0008.CTmap ().CTderive (a0016);
a0008 := a0008.CTextend ().mark (0@0).reverse ();
a0012 := a0008.leftjoin (a0015);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0013 := a0008.leftjoin (a0017);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0014 := a0008.leftjoin (a0016);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0015 := unused;
a0017 := unused;
a0016 := unused;
a0008 := a0012.mark_grp (a0012.reverse ().kunique ().project (1@0));
a0008 := unused;
a0008 := mvaljoin (a0014, a0013, ws.fetch (ATTR_OWN));
a0016 := a0008.reverse ().mark (0@0).reverse ();
a0017 := a0008.mark (0@0).reverse ().leftjoin (a0013);
a0015 := a0008.mark (0@0).reverse ().leftjoin (a0012);
a0008 := mposjoin (mposjoin (a0016, a0017, ws.fetch (ATTR_QN)), mposjoin (a0016, a0017, ws.fetch (ATTR_CONT)), ws.fetch (QN_LOC));
a0008 := a0008.ord_uselect ("income");
a0008 := a0008.mark (0@0).reverse ();
a0016 := a0008.leftjoin (a0016);
a0017 := a0008.leftjoin (a0017);
a0015 := a0008.leftjoin (a0015);
a0008 := mposjoin (mposjoin (a0016, a0017, ws.fetch (ATTR_QN)), mposjoin (a0016, a0017, ws.fetch (ATTR_CONT)), ws.fetch (QN_URI));
a0008 := a0008.ord_uselect ("");
a0008 := a0008.mark (0@0).reverse ();
a0016 := a0008.leftjoin (a0016);
a0017 := a0008.leftjoin (a0017);
a0015 := a0008.leftjoin (a0015);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0017 := a0017.reverse ().mark (0@0).reverse ();
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0012 := unused;
a0013 := unused;
a0014 := unused;
a0008 := a0015.mark_grp (a0015.reverse ().kunique ().project (1@0));
a0008 := unused;
a0008 := a0015.CTgroup ();
a0008 := a0008.CTmap ().CTderive (a0017);
a0008 := a0008.CTmap ().CTderive (a0016);
a0008 := a0008.CTextend ().mark (0@0).reverse ();
a0012 := a0008.leftjoin (a0015);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0013 := a0008.leftjoin (a0017);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0014 := a0008.leftjoin (a0016);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0015 := unused;
a0017 := unused;
a0016 := unused;
a0008 := a0012.mark_grp (a0012.reverse ().kunique ().project (1@0));
a0015 := a0012.mark (1@0);
a0008 := unused;
a0008 := a0015.project (1@0);
a0016 := mposjoin (mposjoin (a0014, a0013, ws.fetch (ATTR_PROP)), mposjoin (a0014, a0013, ws.fetch (ATTR_CONT)), ws.fetch (PROP_VAL));
a0013 := unused;
a0014 := unused;
a0013 := a0015.leftjoin (a0015.reverse ());
a0014 := a0013.mark (0@0).reverse ();
a0017 := a0013.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0013 := a0014.leftjoin (a0012);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0018 := a0014.leftjoin (a0015);
a0018 := a0018.reverse ().mark (0@0).reverse ();
a0019 := a0017.leftjoin (a0015);
a0019 := a0019.reverse ().mark (0@0).reverse ();
a0020 := a0017.leftjoin (a0008);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0021 := a0017.leftjoin (a0016);
a0021 := a0021.reverse ().mark (0@0).reverse ();
a0014 := unused;
a0012 := unused;
a0015 := unused;
a0008 := unused;
a0016 := unused;
a0008 := a0013.CTgroup ();
a0008 := a0008.CTmap ();
a0008 := a0008.CTrefine (a0019);
a0008 := a0008.CTrefine (a0020);
a0008 := a0008.mark (0@0).reverse ();
a0012 := a0008.leftjoin (a0013);
a0012 := a0012.reverse ().mark (0@0).reverse ();
a0014 := a0008.leftjoin (a0018);
a0014 := a0014.reverse ().mark (0@0).reverse ();
a0015 := a0008.leftjoin (a0019);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0016 := a0008.leftjoin (a0020);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0022 := a0008.leftjoin (a0021);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0008 := unused;
a0013 := unused;
a0018 := unused;
a0019 := unused;
a0020 := unused;
a0021 := unused;
a0008 := a0012.mark_grp (a0012.reverse ().kunique ().project (1@0));
a0014 := unused;
a0015 := unused;
a0016 := unused;
a0013 := a0012.mark (1@0);
a0008 := unused;
a0008 := a0013.project (1@0);
a0014 := a0013.project (1@0);
a0015 := a0013.project (50000LL);
a0014 := unused;
a0016 := [lng](a0022);
a0022 := unused;
a0019 := a0013.leftjoin (a0013.reverse ());
a0020 := a0019.mark (0@0).reverse ();
a0021 := a0019.reverse ().mark (0@0).reverse ();
a0019 := unused;
a0019 := a0020.leftjoin (a0013);
a0019 := a0019.reverse ().mark (0@0).reverse ();
a0022 := a0020.leftjoin (a0015);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0023 := a0021.leftjoin (a0013);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0024 := a0021.leftjoin (a0008);
a0024 := a0024.reverse ().mark (0@0).reverse ();
a0025 := a0021.leftjoin (a0016);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0020 := unused;
a0020 := [>](a0025, a0022);
a0019 := unused;
a0022 := unused;
a0025 := unused;
a0019 := a0020.select (true).mark (0@0).reverse ();
a0022 := a0019.leftjoin (a0023);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0025 := a0019.leftjoin (a0024);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0026 := a0019.leftjoin (a0020);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0019 := unused;
a0023 := unused;
a0024 := unused;
a0020 := unused;
a0025 := unused;
a0026 := unused;
a0019 := a0022.project (1@0);
a0020 := a0022.project (1LL);
a0019 := unused;
a0020 := unused;
a0019 := a0022.CTgroup ();
a0019 := a0019.CTextend ().mark (0@0).reverse ();
a0020 := a0019.leftjoin (a0022);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0019 := unused;
a0022 := unused;
a0019 := a0020.project (false);
a0022 := a0013.leftjoin (a0013.reverse ());
a0023 := a0022.mark (0@0).reverse ();
a0024 := a0022.reverse ().mark (0@0).reverse ();
a0022 := unused;
a0022 := a0023.leftjoin (a0013);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0025 := a0023.leftjoin (a0015);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0026 := a0024.leftjoin (a0013);
a0026 := a0026.reverse ().mark (0@0).reverse ();
a0027 := a0024.leftjoin (a0008);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0028 := a0024.leftjoin (a0016);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0023 := unused;
a0015 := unused;
a0008 := unused;
a0016 := unused;
a0008 := [>](a0028, a0025);
a0022 := unused;
a0025 := unused;
a0028 := unused;
a0015 := a0008.select (true).mark (0@0).reverse ();
a0016 := a0015.leftjoin (a0026);
a0016 := a0016.reverse ().mark (0@0).reverse ();
a0022 := a0015.leftjoin (a0027);
a0022 := a0022.reverse ().mark (0@0).reverse ();
a0023 := a0015.leftjoin (a0008);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0026 := unused;
a0027 := unused;
a0008 := unused;
a0022 := unused;
a0023 := unused;
a0008 := a0016.project (1@0);
a0015 := a0016.project (1LL);
a0008 := unused;
a0015 := unused;
a0008 := a0013.reverse ().kdiff (a0016.reverse ()).mark (0@0).reverse ();
a0016 := unused;
a0015 := a0008.project (true);
a0016 := a0020.copy ().access (BAT_APPEND);
a0016.append (a0008).access (BAT_READ);
a0022 := a0019.copy ().access (BAT_APPEND);
a0022.append (a0015).access (BAT_READ);
a0020 := unused;
a0019 := unused;
a0008 := unused;
a0015 := unused;
a0008 := a0016.project (1@0);
a0015 := [not](a0022);
a0019 := a0015.select (true).mark (0@0).reverse ();
a0020 := a0019.leftjoin (a0016);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0023 := a0019.leftjoin (a0008);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0025 := a0019.leftjoin (a0015);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0019 := unused;
a0015 := unused;
a0023 := unused;
a0025 := unused;
a0015 := a0020.project (1@0);
a0019 := a0020.project (1LL);
a0023 := a0013.leftjoin (a0020.reverse ());
a0025 := a0023.mark (0@0).reverse ();
a0026 := a0023.reverse ().mark (0@0).reverse ();
a0023 := unused;
a0023 := a0025.leftjoin (a0012);
a0023 := a0023.reverse ().mark (0@0).reverse ();
a0027 := a0025.leftjoin (a0013);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0028 := a0026.leftjoin (a0020);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0029 := a0026.leftjoin (a0015);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0030 := a0026.leftjoin (a0019);
a0030 := a0030.reverse ().mark (0@0).reverse ();
a0025 := unused;
a0012 := unused;
a0013 := unused;
a0020 := unused;
a0015 := unused;
a0019 := unused;
a0012 := a0023.CTgroup ();
a0012 := a0012.CTmap ();
a0012 := a0012.CTrefine (a0028);
a0012 := a0012.CTrefine (a0029);
a0012 := a0012.mark (0@0).reverse ();
a0013 := a0012.leftjoin (a0023);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0015 := a0012.leftjoin (a0027);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0019 := a0012.leftjoin (a0028);
a0019 := a0019.reverse ().mark (0@0).reverse ();
a0020 := a0012.leftjoin (a0029);
a0020 := a0020.reverse ().mark (0@0).reverse ();
a0025 := a0012.leftjoin (a0030);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0012 := unused;
a0023 := unused;
a0027 := unused;
a0028 := unused;
a0029 := unused;
a0030 := unused;
a0012 := a0013.mark_grp (a0013.reverse ().kunique ().project (1@0));
a0015 := unused;
a0019 := unused;
a0020 := unused;
a0025 := unused;
a0012 := unused;
a0012 := a0013.CTgroup ();
a0012 := a0012.CTextend ().mark (0@0).reverse ();
a0015 := a0012.leftjoin (a0013);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0012 := unused;
a0012 := a0015.project (false);
a0019 := a0006.reverse ().kdiff (a0013.reverse ()).mark (0@0).reverse ();
a0013 := unused;
a0013 := a0019.project (true);
a0020 := a0015.copy ().access (BAT_APPEND);
a0020.append (a0019).access (BAT_READ);
a0023 := a0012.copy ().access (BAT_APPEND);
a0023.append (a0013).access (BAT_READ);
a0015 := unused;
a0012 := unused;
a0019 := unused;
a0013 := unused;
a0012 := a0020.project (1@0);
a0013 := [not](a0023);
a0015 := a0013.select (true).mark (0@0).reverse ();
a0019 := a0015.leftjoin (a0020);
a0019 := a0019.reverse ().mark (0@0).reverse ();
a0025 := a0015.leftjoin (a0012);
a0025 := a0025.reverse ().mark (0@0).reverse ();
a0027 := a0015.leftjoin (a0013);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0013 := unused;
a0013 := a0019.project (1@0);
a0015 := a0019.project (add_qname ("", "", "person", ws));
a0028 := a0019.reverse ().sort ().reverse ();
a0028 := a0028.mark (0@0).reverse ();
a0029 := a0028.leftjoin (a0019);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0030 := a0028.leftjoin (a0013);
a0030 := a0030.reverse ().mark (0@0).reverse ();
a0031 := a0028.leftjoin (a0015);
a0031 := a0031.reverse ().mark (0@0).reverse ();
a0028 := unused;
a0013 := unused;
a0015 := unused;
a0025 := unused;
a0027 := unused;
a0013 := a0006.leftjoin (a0019.reverse ());
a0015 := a0013.mark (0@0).reverse ();
a0025 := a0013.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0013 := a0015.leftjoin (a0006);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0027 := a0015.leftjoin (a0010);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0028 := a0015.leftjoin (a0011);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0032 := a0015.leftjoin (a0007);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0025.leftjoin (a0019);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0032 := unused;
a0033 := unused;
a0015 := a0013.reverse ().sort ().reverse ();
a0015 := a0015.CTrefine (a0027);
a0015 := a0015.CTrefine (a0028);
a0015 := a0015.mark (0@0).reverse ();
a0032 := a0015.leftjoin (a0013);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0015.leftjoin (a0027);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0015.leftjoin (a0028);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0015 := unused;
a0013 := unused;
a0027 := unused;
a0028 := unused;
a0013 := loop_lifted_child_step_with_nsloc_test (a0032, a0034, a0033, ws, 0, "", "profile");
a0015 := a0013.fetch (0);
a0027 := a0013.fetch (1);
a0028 := a0013.fetch (2);
if (a0015.is_constant ()) {
    a0015 := a0027.project (a0015.fetch (0));
} else {
}
if (a0028.is_constant ()) {
    a0028 := a0027.project (a0028.fetch (0));
} else {
}
a0013 := unused;
a0032 := unused;
a0033 := unused;
a0034 := unused;
a0013 := a0015.mark_grp (a0015.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := a0015.CTgroup ();
a0013 := a0013.CTmap ().CTderive (a0028);
a0013 := a0013.CTmap ().CTderive (a0027);
a0013 := a0013.CTextend ().mark (0@0).reverse ();
a0032 := a0013.leftjoin (a0015);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0013.leftjoin (a0028);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0013.leftjoin (a0027);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0015 := unused;
a0028 := unused;
a0027 := unused;
a0013 := a0032.mark_grp (a0032.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := mvaljoin (a0034, a0033, ws.fetch (ATTR_OWN));
a0027 := a0013.reverse ().mark (0@0).reverse ();
a0028 := a0013.mark (0@0).reverse ().leftjoin (a0033);
a0015 := a0013.mark (0@0).reverse ().leftjoin (a0032);
a0013 := mposjoin (mposjoin (a0027, a0028, ws.fetch (ATTR_QN)), mposjoin (a0027, a0028, ws.fetch (ATTR_CONT)), ws.fetch (QN_LOC));
a0013 := a0013.ord_uselect ("income");
a0013 := a0013.mark (0@0).reverse ();
a0027 := a0013.leftjoin (a0027);
a0028 := a0013.leftjoin (a0028);
a0015 := a0013.leftjoin (a0015);
a0013 := mposjoin (mposjoin (a0027, a0028, ws.fetch (ATTR_QN)), mposjoin (a0027, a0028, ws.fetch (ATTR_CONT)), ws.fetch (QN_URI));
a0013 := a0013.ord_uselect ("");
a0013 := a0013.mark (0@0).reverse ();
a0027 := a0013.leftjoin (a0027);
a0028 := a0013.leftjoin (a0028);
a0015 := a0013.leftjoin (a0015);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0032 := unused;
a0033 := unused;
a0034 := unused;
a0013 := a0015.mark_grp (a0015.reverse ().kunique ().project (1@0));
a0013 := unused;
a0013 := a0015.CTgroup ();
a0013 := a0013.CTmap ().CTderive (a0028);
a0013 := a0013.CTmap ().CTderive (a0027);
a0013 := a0013.CTextend ().mark (0@0).reverse ();
a0032 := a0013.leftjoin (a0015);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0013.leftjoin (a0028);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0034 := a0013.leftjoin (a0027);
a0034 := a0034.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0015 := unused;
a0028 := unused;
a0027 := unused;
a0013 := a0032.mark_grp (a0032.reverse ().kunique ().project (1@0));
a0015 := a0032.mark (1@0);
a0013 := unused;
a0013 := a0015.project (1@0);
a0027 := mposjoin (mposjoin (a0034, a0033, ws.fetch (ATTR_PROP)), mposjoin (a0034, a0033, ws.fetch (ATTR_CONT)), ws.fetch (PROP_VAL));
a0033 := unused;
a0034 := unused;
a0028 := a0015.leftjoin (a0015.reverse ());
a0033 := a0028.mark (0@0).reverse ();
a0034 := a0028.reverse ().mark (0@0).reverse ();
a0028 := unused;
a0028 := a0033.leftjoin (a0032);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0035 := a0033.leftjoin (a0015);
a0035 := a0035.reverse ().mark (0@0).reverse ();
a0036 := a0034.leftjoin (a0015);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0037 := a0034.leftjoin (a0013);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0034.leftjoin (a0027);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0033 := unused;
a0032 := unused;
a0015 := unused;
a0013 := unused;
a0027 := unused;
a0013 := a0028.CTgroup ();
a0013 := a0013.CTmap ();
a0013 := a0013.CTrefine (a0036);
a0013 := a0013.CTrefine (a0037);
a0013 := a0013.mark (0@0).reverse ();
a0015 := a0013.leftjoin (a0028);
a0015 := a0015.reverse ().mark (0@0).reverse ();
a0027 := a0013.leftjoin (a0035);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0032 := a0013.leftjoin (a0036);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0013.leftjoin (a0037);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0039 := a0013.leftjoin (a0038);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0028 := unused;
a0035 := unused;
a0036 := unused;
a0037 := unused;
a0038 := unused;
a0013 := a0015.mark_grp (a0015.reverse ().kunique ().project (1@0));
a0027 := unused;
a0032 := unused;
a0033 := unused;
a0027 := a0015.reverse ().sort ().reverse ();
a0027 := a0027.CTrefine (a0013);
a0027 := a0027.mark (0@0).reverse ();
a0028 := a0027.leftjoin (a0015);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0032 := a0027.leftjoin (a0013);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0033 := a0027.leftjoin (a0039);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0027 := unused;
a0015 := unused;
a0013 := unused;
a0039 := unused;
a0013 := a0019.project (1@0);
a0015 := a0019.project (" ");
a0013 := unused;
a0013 := a0019.reverse ().sort ().reverse ();
a0013 := a0013.mark (0@0).reverse ();
a0027 := a0013.leftjoin (a0019);
a0027 := a0027.reverse ().mark (0@0).reverse ();
a0035 := a0013.leftjoin (a0015);
a0035 := a0035.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0015 := unused;
a0013 := string_join(a0028.reverse ().leftjoin (a0033), a0027.reverse ().leftjoin (a0035));
a0015 := a0013.mark (0@0).reverse ();
a0036 := a0013.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0028 := unused;
a0032 := unused;
a0033 := unused;
a0027 := unused;
a0035 := unused;
a0013 := a0015.project (1@0);
a0027 := attr_constr (a0031, a0036, ws);
ws := a0027.fetch (0);
a0028 := a0027.fetch (1);
a0032 := a0027.fetch (2);
a0015 := unused;
a0013 := unused;
a0036 := unused;
a0005 := unused;
a0005 := a0009.leftjoin (a0002.reverse ());
a0013 := a0005.mark (0@0).reverse ();
a0015 := a0005.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0005 := a0013.leftjoin (a0009);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0033 := a0013.leftjoin (a0006);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0035 := a0015.leftjoin (a0003);
a0035 := a0035.reverse ().mark (0@0).reverse ();
a0036 := a0015.leftjoin (a0004);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0037 := a0015.leftjoin (a0002);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0015.leftjoin (a0001);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0003 := unused;
a0004 := unused;
a0002 := unused;
a0001 := unused;
a0005 := unused;
a0037 := unused;
a0038 := unused;
a0001 := a0033.CTgroup ();
a0001 := a0001.CTmap ();
a0001 := a0001.CTrefine (a0036);
a0001 := a0001.CTrefine (a0035);
a0001 := a0001.mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0033);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0036);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0035);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0033 := unused;
a0036 := unused;
a0035 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "site");
a0005 := a0001.fetch (0);
a0013 := a0001.fetch (1);
a0033 := a0001.fetch (2);
if (a0005.is_constant ()) {
    a0005 := a0013.project (a0005.fetch (0));
} else {
}
if (a0033.is_constant ()) {
    a0033 := a0013.project (a0033.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0033);
a0001 := a0001.CTmap ().CTderive (a0013);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0033);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0013);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0033 := unused;
a0013 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "open_auctions");
a0005 := a0001.fetch (0);
a0013 := a0001.fetch (1);
a0033 := a0001.fetch (2);
if (a0005.is_constant ()) {
    a0005 := a0013.project (a0005.fetch (0));
} else {
}
if (a0033.is_constant ()) {
    a0033 := a0013.project (a0033.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0033);
a0001 := a0001.CTmap ().CTderive (a0013);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0033);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0013);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0033 := unused;
a0013 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "open_auction");
a0005 := a0001.fetch (0);
a0013 := a0001.fetch (1);
a0033 := a0001.fetch (2);
if (a0005.is_constant ()) {
    a0005 := a0013.project (a0005.fetch (0));
} else {
}
if (a0033.is_constant ()) {
    a0033 := a0013.project (a0033.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0033);
a0001 := a0001.CTmap ().CTderive (a0013);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0033);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0013);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0033 := unused;
a0013 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := loop_lifted_child_step_with_nsloc_test (a0002, a0004, a0003, ws, 0, "", "initial");
a0005 := a0001.fetch (0);
a0013 := a0001.fetch (1);
a0033 := a0001.fetch (2);
if (a0005.is_constant ()) {
    a0005 := a0013.project (a0005.fetch (0));
} else {
}
if (a0033.is_constant ()) {
    a0033 := a0013.project (a0033.fetch (0));
} else {
}
a0001 := unused;
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0001 := a0005.mark_grp (a0005.reverse ().kunique ().project (1@0));
a0001 := unused;
a0001 := a0005.CTgroup ();
a0001 := a0001.CTmap ().CTderive (a0033);
a0001 := a0001.CTmap ().CTderive (a0013);
a0001 := a0001.CTextend ().mark (0@0).reverse ();
a0002 := a0001.leftjoin (a0005);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0033);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0004 := a0001.leftjoin (a0013);
a0004 := a0004.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0005 := unused;
a0033 := unused;
a0013 := unused;
a0001 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0005 := a0002.mark (1@0);
a0001 := unused;
a0001 := a0005.project (1@0);
a0013 := a0002.leftjoin (a0006.reverse ());
a0033 := a0013.mark (0@0).reverse ();
a0035 := a0013.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0013 := a0033.leftjoin (a0002);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0036 := a0033.leftjoin (a0005);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0037 := a0035.leftjoin (a0006);
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0038 := a0035.leftjoin (a0010);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0039 := a0035.leftjoin (a0011);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0040 := a0035.leftjoin (a0007);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0033 := unused;
a0010 := unused;
a0011 := unused;
a0007 := unused;
a0013 := unused;
a0037 := unused;
a0040 := unused;
a0007 := a0036.CTgroup ();
a0007 := a0007.CTmap ();
a0007 := a0007.CTrefine (a0038);
a0007 := a0007.CTrefine (a0039);
a0007 := a0007.mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0036);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0038);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0013 := a0007.leftjoin (a0039);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0036 := unused;
a0038 := unused;
a0039 := unused;
a0007 := loop_lifted_child_step_with_nsloc_test (a0010, a0013, a0011, ws, 0, "", "profile");
a0033 := a0007.fetch (0);
a0036 := a0007.fetch (1);
a0037 := a0007.fetch (2);
if (a0033.is_constant ()) {
    a0033 := a0036.project (a0033.fetch (0));
} else {
}
if (a0037.is_constant ()) {
    a0037 := a0036.project (a0037.fetch (0));
} else {
}
a0007 := unused;
a0010 := unused;
a0011 := unused;
a0013 := unused;
a0007 := a0033.mark_grp (a0033.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := a0033.CTgroup ();
a0007 := a0007.CTmap ().CTderive (a0037);
a0007 := a0007.CTmap ().CTderive (a0036);
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0033);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0037);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0013 := a0007.leftjoin (a0036);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0033 := unused;
a0037 := unused;
a0036 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := mvaljoin (a0013, a0011, ws.fetch (ATTR_OWN));
a0036 := a0007.reverse ().mark (0@0).reverse ();
a0037 := a0007.mark (0@0).reverse ().leftjoin (a0011);
a0033 := a0007.mark (0@0).reverse ().leftjoin (a0010);
a0007 := mposjoin (mposjoin (a0036, a0037, ws.fetch (ATTR_QN)), mposjoin (a0036, a0037, ws.fetch (ATTR_CONT)), ws.fetch (QN_LOC));
a0007 := a0007.ord_uselect ("income");
a0007 := a0007.mark (0@0).reverse ();
a0036 := a0007.leftjoin (a0036);
a0037 := a0007.leftjoin (a0037);
a0033 := a0007.leftjoin (a0033);
a0007 := mposjoin (mposjoin (a0036, a0037, ws.fetch (ATTR_QN)), mposjoin (a0036, a0037, ws.fetch (ATTR_CONT)), ws.fetch (QN_URI));
a0007 := a0007.ord_uselect ("");
a0007 := a0007.mark (0@0).reverse ();
a0036 := a0007.leftjoin (a0036);
a0037 := a0007.leftjoin (a0037);
a0033 := a0007.leftjoin (a0033);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0037 := a0037.reverse ().mark (0@0).reverse ();
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0010 := unused;
a0011 := unused;
a0013 := unused;
a0007 := a0033.mark_grp (a0033.reverse ().kunique ().project (1@0));
a0007 := unused;
a0007 := a0033.CTgroup ();
a0007 := a0007.CTmap ().CTderive (a0037);
a0007 := a0007.CTmap ().CTderive (a0036);
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0033);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0011 := a0007.leftjoin (a0037);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0013 := a0007.leftjoin (a0036);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0033 := unused;
a0037 := unused;
a0036 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0033 := a0010.mark (1@0);
a0007 := unused;
a0007 := a0033.project (1@0);
a0036 := mposjoin (mposjoin (a0013, a0011, ws.fetch (ATTR_PROP)), mposjoin (a0013, a0011, ws.fetch (ATTR_CONT)), ws.fetch (PROP_VAL));
a0011 := unused;
a0013 := unused;
a0011 := a0033.leftjoin (a0033.reverse ());
a0013 := a0011.mark (0@0).reverse ();
a0037 := a0011.reverse ().mark (0@0).reverse ();
a0011 := unused;
a0011 := a0013.leftjoin (a0010);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0038 := a0013.leftjoin (a0033);
a0038 := a0038.reverse ().mark (0@0).reverse ();
a0039 := a0037.leftjoin (a0033);
a0039 := a0039.reverse ().mark (0@0).reverse ();
a0040 := a0037.leftjoin (a0007);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0041 := a0037.leftjoin (a0036);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0013 := unused;
a0010 := unused;
a0033 := unused;
a0007 := unused;
a0036 := unused;
a0007 := a0011.CTgroup ();
a0007 := a0007.CTmap ();
a0007 := a0007.CTrefine (a0039);
a0007 := a0007.CTrefine (a0040);
a0007 := a0007.mark (0@0).reverse ();
a0010 := a0007.leftjoin (a0011);
a0010 := a0010.reverse ().mark (0@0).reverse ();
a0013 := a0007.leftjoin (a0038);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0033 := a0007.leftjoin (a0039);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0036 := a0007.leftjoin (a0040);
a0036 := a0036.reverse ().mark (0@0).reverse ();
a0042 := a0007.leftjoin (a0041);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0011 := unused;
a0038 := unused;
a0039 := unused;
a0040 := unused;
a0041 := unused;
a0007 := a0010.mark_grp (a0010.reverse ().kunique ().project (1@0));
a0013 := unused;
a0033 := unused;
a0036 := unused;
a0011 := a0010.mark (1@0);
a0013 := new (void, oid).seqbase (0@0);
a0013.append (1@0);
a0013.access (BAT_READ);
a0033 := new (void, lng).seqbase (0@0);
a0033.append (1LL);
a0033.access (BAT_READ);
a0007 := unused;
a0007 := a0011.project (1@0);
a0038 := [dbl](a0042);
a0040 := a0010.leftjoin (a0005.reverse ());
a0041 := a0040.mark (0@0).reverse ();
a0043 := a0040.reverse ().mark (0@0).reverse ();
a0040 := unused;
a0040 := a0041.leftjoin (a0010);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0044 := a0041.leftjoin (a0011);
a0044 := a0044.reverse ().mark (0@0).reverse ();
a0045 := a0043.leftjoin (a0005);
a0045 := a0045.reverse ().mark (0@0).reverse ();
a0046 := a0043.leftjoin (a0003);
a0046 := a0046.reverse ().mark (0@0).reverse ();
a0047 := a0043.leftjoin (a0004);
a0047 := a0047.reverse ().mark (0@0).reverse ();
a0048 := a0043.leftjoin (a0001);
a0048 := a0048.reverse ().mark (0@0).reverse ();
a0041 := unused;
a0040 := unused;
a0045 := unused;
a0048 := unused;
a0040 := a0046.reverse ().sort ().reverse ();
a0040 := a0040.CTrefine (a0047);
a0040 := a0040.CTrefine (a0044);
a0040 := a0040.mark (0@0).reverse ();
a0041 := a0040.leftjoin (a0044);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0045 := a0040.leftjoin (a0046);
a0045 := a0045.reverse ().mark (0@0).reverse ();
a0048 := a0040.leftjoin (a0047);
a0048 := a0048.reverse ().mark (0@0).reverse ();
a0040 := unused;
a0044 := unused;
a0046 := unused;
a0047 := unused;
a0040 := loop_lifted_child_step_with_kind_test (a0041, a0048, a0045, ws, 1, TEXT);
a0044 := a0040.fetch (0);
a0046 := a0040.fetch (1);
a0047 := a0040.fetch (2);
if (a0044.is_constant ()) {
    a0044 := a0046.project (a0044.fetch (0));
} else {
}
if (a0047.is_constant ()) {
    a0047 := a0046.project (a0047.fetch (0));
} else {
}
a0040 := unused;
a0041 := unused;
a0045 := unused;
a0048 := unused;
a0040 := a0044.mark_grp (a0044.reverse ().kunique ().project (1@0));
a0040 := unused;
a0040 := a0044.CTgroup ();
a0040 := a0040.CTmap ().CTderive (a0047);
a0040 := a0040.CTmap ().CTderive (a0046);
a0040 := a0040.CTextend ().mark (0@0).reverse ();
a0041 := a0040.leftjoin (a0044);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0045 := a0040.leftjoin (a0047);
a0045 := a0045.reverse ().mark (0@0).reverse ();
a0048 := a0040.leftjoin (a0046);
a0048 := a0048.reverse ().mark (0@0).reverse ();
a0040 := unused;
a0044 := unused;
a0047 := unused;
a0046 := unused;
a0040 := a0041.mark_grp (a0041.reverse ().kunique ().project (1@0));
a0044 := {count}(a0041.reverse ());
a0044 := [lng](a0044);
a0046 := a0044.reverse ().mark (0@0).reverse ();
a0047 := a0044.mark (0@0).reverse ();
a0044 := unused;
a0042 := unused;
a0042 := a0011.reverse ().kdiff (a0041.reverse ()).mark (0@0).reverse ();
a0044 := a0042.project (0LL);
a0049 := a0047.copy ().access (BAT_APPEND);
a0049.append (a0042).access (BAT_READ);
a0050 := a0046.copy ().access (BAT_APPEND);
a0050.append (a0044).access (BAT_READ);
a0046 := unused;
a0047 := unused;
a0042 := unused;
a0044 := unused;
a0042 := a0049.project (1LL);
a0044 := [=](a0050, 1LL);
if (a0044.reverse ().exist (false)) {
    ERROR ("err:FORG0005, fn:exactly-one called with a sequence containing zero or more than one item.");
} else {
}
a0044 := unused;
a0049 := unused;
a0050 := unused;
a0042 := unused;
a0042 := mposjoin (mposjoin (a0048, a0045, ws.fetch (PRE_PROP)), mposjoin (a0048, a0045, ws.fetch (PRE_CONT)), ws.fetch (PROP_TEXT));
a0045 := unused;
a0048 := unused;
a0046 := [dbl](a0042);
a0040 := unused;
a0042 := unused;
a0040 := a0011.project (1@0);
a0042 := a0011.project (5000LL);
a0049 := [dbl](a0042);
a0042 := unused;
a0042 := a0041.leftjoin (a0011.reverse ());
a0050 := a0042.mark (0@0).reverse ();
a0051 := a0042.reverse ().mark (0@0).reverse ();
a0042 := unused;
a0042 := a0050.leftjoin (a0041);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0052 := a0050.leftjoin (a0046);
a0052 := a0052.reverse ().mark (0@0).reverse ();
a0053 := a0051.leftjoin (a0011);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0054 := a0051.leftjoin (a0040);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0055 := a0051.leftjoin (a0049);
a0055 := a0055.reverse ().mark (0@0).reverse ();
a0050 := unused;
a0041 := unused;
a0046 := unused;
a0040 := unused;
a0049 := unused;
a0040 := [*](a0055, a0052);
a0042 := unused;
a0052 := unused;
a0054 := unused;
a0055 := unused;
a0041 := a0011.leftjoin (a0053.reverse ());
a0042 := a0041.mark (0@0).reverse ();
a0046 := a0041.reverse ().mark (0@0).reverse ();
a0041 := unused;
a0041 := a0042.leftjoin (a0011);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0049 := a0042.leftjoin (a0007);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0050 := a0042.leftjoin (a0038);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0052 := a0046.leftjoin (a0053);
a0052 := a0052.reverse ().mark (0@0).reverse ();
a0054 := a0046.leftjoin (a0040);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0042 := unused;
a0007 := unused;
a0038 := unused;
a0053 := unused;
a0040 := unused;
a0007 := [>](a0050, a0054);
a0050 := unused;
a0052 := unused;
a0054 := unused;
a0038 := a0007.select (true).mark (0@0).reverse ();
a0040 := a0038.leftjoin (a0041);
a0040 := a0040.reverse ().mark (0@0).reverse ();
a0042 := a0038.leftjoin (a0049);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0050 := a0038.leftjoin (a0007);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0038 := unused;
a0041 := unused;
a0049 := unused;
a0007 := unused;
a0042 := unused;
a0050 := unused;
a0007 := a0013.project (nil).cross (a0040.project (nil).reverse ());
a0038 := a0007.mark (0@0).reverse ();
a0041 := a0007.reverse ().mark (0@0).reverse ();
a0042 := a0038.leftjoin (a0013);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0049 := a0038.leftjoin (a0033);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0050 := a0041.leftjoin (a0040);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0038 := unused;
a0041 := unused;
a0013 := unused;
a0033 := unused;
a0040 := unused;
a0042 := unused;
a0049 := unused;
a0007 := a0050.reverse ().sort ().reverse ();
a0007 := a0007.mark (0@0).reverse ();
a0013 := a0007.leftjoin (a0050);
a0013 := a0013.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0007 := a0013.CTgroup ();
a0007 := a0007.CTextend ().mark (0@0).reverse ();
a0033 := a0007.leftjoin (a0013);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0007 := unused;
a0013 := unused;
a0007 := a0033.project (false);
a0013 := new (void, bit).seqbase (0@0);
a0013.append (true);
a0013.access (BAT_READ);
a0038 := a0011.reverse ().kdiff (a0050.reverse ()).mark (0@0).reverse ();
a0050 := unused;
a0040 := a0013.project (nil).cross (a0038.project (nil).reverse ());
a0041 := a0040.mark (0@0).reverse ();
a0042 := a0040.reverse ().mark (0@0).reverse ();
a0049 := a0041.leftjoin (a0013);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0050 := a0042.leftjoin (a0038);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0040 := unused;
a0041 := unused;
a0042 := unused;
a0038 := unused;
a0038 := a0033.copy ().access (BAT_APPEND);
a0038.append (a0050).access (BAT_READ);
a0040 := a0007.copy ().access (BAT_APPEND);
a0040.append (a0049).access (BAT_READ);
a0033 := unused;
a0007 := unused;
a0049 := unused;
a0050 := unused;
a0007 := a0038.project (1@0);
a0033 := [not](a0040);
a0041 := a0033.select (true).mark (0@0).reverse ();
a0042 := a0041.leftjoin (a0038);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0049 := a0041.leftjoin (a0007);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0050 := a0041.leftjoin (a0033);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0041 := unused;
a0033 := unused;
a0049 := unused;
a0050 := unused;
a0033 := a0042.project (1@0);
a0041 := a0042.project (1LL);
a0049 := a0011.leftjoin (a0042.reverse ());
a0050 := a0049.mark (0@0).reverse ();
a0052 := a0049.reverse ().mark (0@0).reverse ();
a0049 := unused;
a0049 := a0050.leftjoin (a0010);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0053 := a0050.leftjoin (a0011);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0054 := a0052.leftjoin (a0042);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0055 := a0052.leftjoin (a0033);
a0055 := a0055.reverse ().mark (0@0).reverse ();
a0056 := a0052.leftjoin (a0041);
a0056 := a0056.reverse ().mark (0@0).reverse ();
a0050 := unused;
a0010 := unused;
a0011 := unused;
a0042 := unused;
a0033 := unused;
a0041 := unused;
a0010 := a0049.reverse ().sort ().reverse ();
a0010 := a0010.CTrefine (a0054);
a0010 := a0010.CTrefine (a0055);
a0010 := a0010.mark (0@0).reverse ();
a0011 := a0010.leftjoin (a0049);
a0011 := a0011.reverse ().mark (0@0).reverse ();
a0033 := a0010.leftjoin (a0053);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0041 := a0010.leftjoin (a0054);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0042 := a0010.leftjoin (a0055);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0050 := a0010.leftjoin (a0056);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0049 := unused;
a0053 := unused;
a0054 := unused;
a0055 := unused;
a0056 := unused;
a0010 := a0011.mark_grp (a0011.reverse ().kunique ().project (1@0));
a0033 := unused;
a0041 := unused;
a0042 := unused;
a0050 := unused;
a0010 := unused;
a0010 := a0011.CTgroup ();
a0010 := a0010.CTmap ();
a0010 := a0010.mark (0@0).reverse ();
a0033 := a0010.leftjoin (a0011);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0010 := a0033.CTgroup ();
a0010 := a0010.CTextend ().mark (0@0).reverse ();
a0041 := a0010.leftjoin (a0033);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0010 := unused;
a0033 := unused;
a0010 := a0041.project (false);
a0033 := a0005.reverse ().kdiff (a0011.reverse ()).mark (0@0).reverse ();
a0011 := unused;
a0011 := a0013.project (nil).cross (a0033.project (nil).reverse ());
a0042 := a0011.mark (0@0).reverse ();
a0049 := a0011.reverse ().mark (0@0).reverse ();
a0050 := a0042.leftjoin (a0013);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0053 := a0049.leftjoin (a0033);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0011 := unused;
a0042 := unused;
a0049 := unused;
a0013 := unused;
a0033 := unused;
a0011 := a0041.copy ().access (BAT_APPEND);
a0011.append (a0053).access (BAT_READ);
a0013 := a0010.copy ().access (BAT_APPEND);
a0013.append (a0050).access (BAT_READ);
a0041 := unused;
a0010 := unused;
a0050 := unused;
a0053 := unused;
a0010 := a0011.project (1@0);
a0033 := [not](a0013);
a0041 := a0033.select (true).mark (0@0).reverse ();
a0042 := a0041.leftjoin (a0011);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0049 := a0041.leftjoin (a0010);
a0049 := a0049.reverse ().mark (0@0).reverse ();
a0050 := a0041.leftjoin (a0033);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0041 := unused;
a0033 := unused;
a0049 := unused;
a0050 := unused;
a0033 := a0005.leftjoin (a0042.reverse ());
a0041 := a0033.mark (0@0).reverse ();
a0049 := a0033.reverse ().mark (0@0).reverse ();
a0033 := unused;
a0033 := a0041.leftjoin (a0005);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0050 := a0041.leftjoin (a0003);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0053 := a0041.leftjoin (a0004);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0054 := a0041.leftjoin (a0001);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0055 := a0049.leftjoin (a0042);
a0055 := a0055.reverse ().mark (0@0).reverse ();
a0041 := unused;
a0003 := unused;
a0004 := unused;
a0001 := unused;
a0042 := unused;
a0055 := unused;
a0001 := a0005.leftjoin (a0033.reverse ());
a0003 := a0001.mark (0@0).reverse ();
a0004 := a0001.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0001 := a0003.leftjoin (a0002);
a0001 := a0001.reverse ().mark (0@0).reverse ();
a0041 := a0003.leftjoin (a0005);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0042 := a0004.leftjoin (a0033);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0055 := a0004.leftjoin (a0054);
a0055 := a0055.reverse ().mark (0@0).reverse ();
a0056 := a0004.leftjoin (a0050);
a0056 := a0056.reverse ().mark (0@0).reverse ();
a0057 := a0004.leftjoin (a0053);
a0057 := a0057.reverse ().mark (0@0).reverse ();
a0003 := unused;
a0002 := unused;
a0005 := unused;
a0033 := unused;
a0054 := unused;
a0050 := unused;
a0053 := unused;
a0002 := a0001.CTgroup ();
a0002 := a0002.CTmap ();
a0002 := a0002.CTrefine (a0042);
a0002 := a0002.CTrefine (a0055);
a0002 := a0002.mark (0@0).reverse ();
a0003 := a0002.leftjoin (a0001);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0005 := a0002.leftjoin (a0041);
a0005 := a0005.reverse ().mark (0@0).reverse ();
a0033 := a0002.leftjoin (a0042);
a0033 := a0033.reverse ().mark (0@0).reverse ();
a0050 := a0002.leftjoin (a0055);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0053 := a0002.leftjoin (a0056);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0054 := a0002.leftjoin (a0057);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0002 := unused;
a0001 := unused;
a0041 := unused;
a0042 := unused;
a0055 := unused;
a0056 := unused;
a0057 := unused;
a0001 := a0003.mark_grp (a0003.reverse ().kunique ().project (1@0));
a0005 := unused;
a0033 := unused;
a0050 := unused;
a0002 := a0003.leftjoin (a0019.reverse ());
a0005 := a0002.mark (0@0).reverse ();
a0033 := a0002.reverse ().mark (0@0).reverse ();
a0002 := unused;
a0002 := a0005.leftjoin (a0003);
a0002 := a0002.reverse ().mark (0@0).reverse ();
a0041 := a0005.leftjoin (a0001);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0042 := a0005.leftjoin (a0053);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0050 := a0005.leftjoin (a0054);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0055 := a0033.leftjoin (a0019);
a0055 := a0055.reverse ().mark (0@0).reverse ();
a0005 := unused;
a0003 := unused;
a0001 := unused;
a0053 := unused;
a0054 := unused;
a0041 := unused;
a0042 := unused;
a0050 := unused;
a0055 := unused;
a0001 := {count}(a0002.reverse ());
a0001 := [lng](a0001);
a0003 := a0001.reverse ().mark (0@0).reverse ();
a0005 := a0001.mark (0@0).reverse ();
a0001 := unused;
a0002 := unused;
a0001 := a0019.reverse ().kdiff (a0005.reverse ()).mark (0@0).reverse ();
a0002 := a0001.project (0LL);
a0041 := a0005.copy ().access (BAT_APPEND);
a0041.append (a0001).access (BAT_READ);
a0042 := a0003.copy ().access (BAT_APPEND);
a0042.append (a0002).access (BAT_READ);
a0003 := unused;
a0005 := unused;
a0001 := unused;
a0002 := unused;
a0001 := a0041.project (1@0);
a0003 := [str](a0042);
a0050 := text_constr (a0003, ws);
ws := a0050.fetch (0);
a0053 := a0050.fetch (1);
print(a0053);
a0053.access(BAT_WRITE);
print(a0053);
a0054 := a0050.fetch (2);
a0050 := unused;
a0050 := a0019.project (1@0);
a0055 := a0019.project (add_qname ("", "", "items", ws));
a0056 := a0019.reverse ().sort ().reverse ();
a0056 := a0056.mark (0@0).reverse ();
a0057 := a0056.leftjoin (a0019);
a0057 := a0057.reverse ().mark (0@0).reverse ();
a0058 := a0056.leftjoin (a0050);
a0058 := a0058.reverse ().mark (0@0).reverse ();
a0059 := a0056.leftjoin (a0055);
a0059 := a0059.reverse ().mark (0@0).reverse ();
a0056 := unused;
a0019 := unused;
a0050 := unused;
a0055 := unused;
a0031 := unused;
a0019 := a0029.project (1@0);
a0003 := unused;
a0042 := unused;
a0001 := unused;
a0001 := a0041.project (1@0);
a0003 := a0041.project (2@0);
# iter
a0031 := a0029.copy ().access (BAT_APPEND);
a0031.append (a0041).access (BAT_READ);
print (a0031);
# ord
a0042 := a0030.copy ().access (BAT_APPEND);
a0042.append (a0001).access (BAT_READ);
# pos
a0050 := a0029.project (oid(nil)).access (BAT_APPEND);
a0050.append (a0054).access (BAT_READ);
# pre
print(a0029);
a0055 := a0029.project (oid(nil)).access (BAT_APPEND);
print(a0055);
a0055.append (a0053).access (BAT_READ);
print(a0055);

a0056 := a0032.copy ().access (BAT_APPEND);
a0056.append (a0041.project (oid(nil))).access (BAT_APPEND);

a0060 := a0028.copy ().access (BAT_APPEND);
a0060.append (a0041.project (oid(nil))).access (BAT_APPEND);

a0061 := a0019.copy ().access (BAT_APPEND);
a0061.append (a0003).access (BAT_READ);
a0029 := unused;
a0030 := unused;
a0032 := unused;
a0028 := unused;
a0019 := unused;
a0041 := unused;
a0054 := unused;
a0053 := unused;
a0001 := unused;
a0003 := unused;
a0001 := a0031.reverse ().sort ().reverse ();
a0001 := a0001.CTrefine (a0061);
a0001 := a0001.CTrefine (a0042);
a0001 := a0001.mark (0@0).reverse ();
a0003 := a0001.leftjoin (a0031);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0019 := a0001.leftjoin (a0042);
a0019 := a0019.reverse ().mark (0@0).reverse ();
a0028 := a0001.leftjoin (a0050);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0029 := a0001.leftjoin (a0055);
a0029 := a0029.reverse ().mark (0@0).reverse ();
a0030 := a0001.leftjoin (a0056);
a0030 := a0030.reverse ().mark (0@0).reverse ();
a0032 := a0001.leftjoin (a0060);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0041 := a0001.leftjoin (a0061);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0031 := unused;
a0042 := unused;
a0050 := unused;
a0055 := unused;
a0056 := unused;
a0060 := unused;
a0061 := unused;
a0001 := a0003.mark_grp (a0003.reverse ().kunique ().project (1@0));
a0019 := unused;
a0041 := unused;
a0019 := elem_constr (a0057, a0059, a0003, a0029, a0028, a0032, a0030, ws);
ws := a0019.fetch (0);
a0031 := a0019.fetch (1);
a0041 := a0019.fetch (2);
a0058 := unused;
a0059 := unused;
a0003 := unused;
a0001 := unused;
a0028 := unused;
a0029 := unused;
a0030 := unused;
a0032 := unused;
a0001 := a0031.project (1@0);
a0003 := a0006.leftjoin (a0057.reverse ());
a0028 := a0003.mark (0@0).reverse ();
a0029 := a0003.reverse ().mark (0@0).reverse ();
a0003 := unused;
a0003 := a0028.leftjoin (a0009);
a0003 := a0003.reverse ().mark (0@0).reverse ();
a0030 := a0028.leftjoin (a0006);
a0030 := a0030.reverse ().mark (0@0).reverse ();
a0032 := a0029.leftjoin (a0031);
a0032 := a0032.reverse ().mark (0@0).reverse ();
a0042 := a0029.leftjoin (a0041);
a0042 := a0042.reverse ().mark (0@0).reverse ();
a0050 := a0029.leftjoin (a0057);
a0050 := a0050.reverse ().mark (0@0).reverse ();
a0053 := a0029.leftjoin (a0001);
a0053 := a0053.reverse ().mark (0@0).reverse ();
a0028 := unused;
a0009 := unused;
a0006 := unused;
a0031 := unused;
a0041 := unused;
a0057 := unused;
a0001 := unused;
a0001 := a0003.CTgroup ();
a0001 := a0001.CTmap ();
a0001 := a0001.CTrefine (a0050);
a0001 := a0001.CTrefine (a0053);
a0001 := a0001.mark (0@0).reverse ();
a0006 := a0001.leftjoin (a0003);
a0006 := a0006.reverse ().mark (0@0).reverse ();
a0009 := a0001.leftjoin (a0030);
a0009 := a0009.reverse ().mark (0@0).reverse ();
a0028 := a0001.leftjoin (a0032);
a0028 := a0028.reverse ().mark (0@0).reverse ();
a0031 := a0001.leftjoin (a0042);
a0031 := a0031.reverse ().mark (0@0).reverse ();
a0041 := a0001.leftjoin (a0050);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0054 := a0001.leftjoin (a0053);
a0054 := a0054.reverse ().mark (0@0).reverse ();
a0001 := unused;
a0003 := unused;
a0030 := unused;
a0032 := unused;
a0042 := unused;
a0050 := unused;
a0053 := unused;
a0001 := a0006.mark_grp (a0006.reverse ().kunique ().project (1@0));
a0009 := unused;
a0041 := unused;
a0054 := unused;
a0003 := new (lng, void).key (true).reverse ().seqbase (0@0);
a0009 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0030 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0032 := new (str, void).key (true).reverse ().seqbase (0@0);
a0041 := new (void, oid).seqbase (0@0);
a0042 := new (void, int).seqbase (0@0);
a0041 := a0028;
a0042 := a0031.set_kind (ELEM);
a0041 := a0041.reverse ().mark (0@0).reverse ();
a0042 := a0042.reverse ().mark (0@0).reverse ();
print_result ("xml", ws, a0041, a0042, a0003, a0009, a0030, a0032);
a0006 := unused;
a0001 := unused;
a0031 := unused;
a0028 := unused;
quit();
