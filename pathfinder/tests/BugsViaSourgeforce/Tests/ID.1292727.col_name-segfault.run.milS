module(pathfinder);
var a0009;
var a0008;
var a0007;
var a0006;
var a0005;
var a0004;
var a0003;
var a0002;
var a0001;
var a0000;
var unused;
var ws;
unused := nil;
ws := create_ws ();
a0000 := new (void, oid).seqbase (0@0);
a0000.insert (nil, 1@0);
a0000.access (BAT_READ);
a0001 := new (void, str).seqbase (0@0);
a0001.insert (nil, "auctionG.xml");
a0001.access (BAT_READ);
a0000.col_name ("pos");
a0001.col_name ("item");
a0002 := a0000.project (1@0);
a0000.col_name ("pos");
a0001.col_name ("item");
a0002.col_name ("iter");
a0000 := unused;
a0002.col_name ("iter");
a0001.col_name ("item");
a0000 := doc_tbl (ws, a0001);
ws := a0000.fetch (0);
a0003 := a0000.fetch (1);
a0004 := a0000.fetch (2);
a0000 := unused;
a0001 := unused;
a0003.col_name ("item");
a0004.col_name ("item");
a0002.col_name ("iter");
a0003.col_name ("item");
a0004.col_name ("item");
a0002.col_name ("iter");
a0000 := a0003.project (1@0);
a0003.col_name ("item");
a0004.col_name ("item");
a0002.col_name ("iter");
a0000.col_name ("pos");
a0000 := unused;
a0002.col_name ("iter");
a0004.col_name ("item");
a0003.col_name ("item");
a0000 := loop_lifted_child_step_with_nsloc_test (a0002, a0003, a0004, ws, 0, "", "site");
a0001 := a0000.fetch (0);
a0005 := a0000.fetch (1);
a0006 := a0000.fetch (2);
if (a0006.is_constant_bat ()) {
    a0006 := a0001.project (a0006.fetch (0));
} else {
}
a0000 := unused;
a0002 := unused;
a0004 := unused;
a0003 := unused;
a0001.col_name ("iter");
a0005.col_name ("item");
a0006.col_name ("item");
a0000 := a0001.mark_grp (a0001.reverse ().kunique ().project (1@0));
a0001.col_name ("iter");
a0005.col_name ("item");
a0006.col_name ("item");
a0000.col_name ("pos");
a0000 := unused;
a0001.col_name ("iter"); # this lines crashes the Mserver
a0006.col_name ("item");
a0005.col_name ("item");
a0000 := a0001.CTgroup ();
a0000 := a0000.CTmap ().CTderive (a0006);
a0000 := a0000.CTmap ().CTderive (a0005);
a0000 := a0000.CTextend ().mark (0@0).reverse ();
a0002 := a0000.leftjoin (a0001);
a0003 := a0000.leftjoin (a0006);
a0004 := a0000.leftjoin (a0005);
a0000 := unused;
a0001 := unused;
a0006 := unused;
a0005 := unused;
a0002.col_name ("iter");
a0003.col_name ("item");
a0004.col_name ("item");
a0000 := a0002.mark_grp (a0002.reverse ().kunique ().project (1@0));
a0002.col_name ("iter");
a0003.col_name ("item");
a0004.col_name ("item");
a0000.col_name ("pos");
a0001 := new (int, void).key (true).reverse ().seqbase (0@0);
a0005 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0006 := new (dbl, void).key (true).reverse ().seqbase (0@0);
a0007 := new (str, void).key (true).reverse ().seqbase (0@0);
a0008 := new (void, oid).seqbase (0@0);
a0009 := new (void, int).seqbase (0@0);
a0008 := a0004;
a0009 := a0003;
a0008 := a0008.reverse ().mark (0@0).reverse ();
a0009 := a0009.reverse ().mark (0@0).reverse ();
print_result ("xml", ws, a0008, a0009.set_kind (ELEM), a0001.[lng](), a0005, a0006, a0007);
a0002 := unused;
a0003 := unused;
a0004 := unused;
a0000 := unused;
quit();
